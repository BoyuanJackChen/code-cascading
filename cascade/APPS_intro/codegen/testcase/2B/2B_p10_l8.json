[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2 3\"\nassert solution(\"1 2 3 4 5 6\") == \"2 3\"\nassert solution(\"1 2 3 4 5 6 7\") == \"2 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == \"5\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1 8 6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('1 2') == '1'\nassert solution('2 3') == '1'\nassert solution('3 4') == '1'\nassert solution('4 5') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2\\n2 3') == '5'\nassert solution('10\\n1 3 6 8 5 2 4 7 9 6 5') == '8'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n9\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n7 9\n''') == '9'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n\") == \"5 1 8 6\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n5\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n7\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '8'\n\nprint(solution(input()))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4 2 1 2\n''') == '1 4'\nassert solution('''10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\nprint('All tests passed!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 1'\nassert solution('5') == '1 1 2 2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 1 5\n''') == '2 5 1'\nassert solution('''\n8\n8 1 3 2 4 5 6 7\n''') == '8 1 3 5 6 7 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 1\n''') == '2 1'\nassert solution('''\n6\n2 5 2 1 3 3\n''') == '2 5'\nassert solution('''\n8\n1 1 1 1 1 1 2\n''') == '1 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 2 1 5') == '3 3 1'\nassert solution('10 3 2 5') == '2 4 1'\nassert solution('10 3 4 2 1') == '4 3 2'\nassert solution('10 3 4 2 5') == '4 3 2'\nassert solution('10 5 2 1 4') == '5 2 1'\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1\\n'\n    '1 2 3 4 5 6'\n    ) == '1\\n'\nassert solution(\n    '1\\n'\n    '4 5 6'\n    ) == '4\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n10 2 8 1 2 4 1 20 4 5\n''') == '20 8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 40
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3\n    1 2 3\n    ''') == '2 3 1'\n\nassert solution('''\n    5\n    1 1 1 2 2\n    ''') == '2 1 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\\n\") == \"24\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 3\n1 2 3\n5 2 2 2\n7 1 1 4\n''') == \"24\"\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == \"56\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == \"24\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '24'\nassert solution('5 5 4') == '56'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4'''\n) == \"24\"\nassert solution(\n'''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6'''\n) == \"56\"\nassert solution(\n'''4 4 2\n1 2 3 4\n1 1 1 2\n3 1 1 3\n1 3 1 4'''\n) == \"5\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 4\") == \"56\"\nassert solution(\"3 4 3\") == \"24\"\nassert solution(\"1 2 3 4\") == \"24\"\nassert solution(\"5 5 4\") == \"24\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"56\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '24'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"24\"\nassert solution(\"3 5 3\") == \"56\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution(\"1 2 4 3 2\") == \"LRRR\"\nassert solution(\"3\") == \"R\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test_case_0) == \"4\"\nassert solution(test_case_1) == \"LLRR\"\nassert solution(test_case_2) == \"1\"\nassert solution(test_case_3) == \"R\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n1 2 4 3 2\\n\"\n) == \"4\\nLLRR\"\nassert solution(\n    \"7\\n1 3 5 6 5 4 2\\n\"\n) == \"6\\nR\"\nassert solution(\n    \"3\\n2 2 2\\n\"\n) == \"1\\nR\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_1) == output_1, 'WRONG!'\nassert solution(input_2) == output_2, 'WRONG!'\nassert solution(input_3) == output_3, 'WRONG!'\nassert solution(input_4) == output_4, 'WRONG!'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('1') == 'L'\n\n'''\n\nimport math\nfrom sys import stdin\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 4 3 2\") == \"4\\nRRRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\") == \"6\\nRLRRR\"\nassert solution(\"3\\n2 2 2\") == \"1\\nR\"\n\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 45,
        "num_ids_4": 63
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 4 3 2\\n\") == \"4\\nRRLRR\"\nassert solution(\"7\\n1 3 5 6 5 4 2\\n\") == \"6\\nRRRLLLL\"\nassert solution(\"3\\n2 2 2\\n\") == \"1\\nRR\"\n\nprint(solution(input()))",
        "num_ids_2": 51,
        "num_ids_4": 71
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '6'\nassert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string\n\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 4 3 2''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2''') == '6'\nassert solution('''3\n2 2 2''') == '1'\nassert solution('''4\n1 2 4 3''') == '4'''')\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 4 4 7 4 1\n''') == '3'\nassert solution('''5 2 2 5 2 5\n''') == '3'\nassert solution('''5\n1\n''') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 31
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 4 5 8 3\n''') == \"3\"\nassert solution('''\n2\n2 4\n''') == \"3\"\nassert solution('''\n4\n2 4 5 7\n''') == \"3\"\nassert solution('''\n4\n1 2 4 7\n''') == \"3\"\nassert solution('''\n5\n1 3 5 7 6\n''') == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('2 2 5 2 5') == '3'\nassert solution('1 3 3 7') == '-1'",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\nassert solution(input) == \"3\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '-1'\nassert solution('1 4 4 7 4 1') == '3'\nassert solution('2 2 5 2 5') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4 4 7 4 1\\n') == '3\\n'\nassert solution('5 2 2 5 2 5\\n') == '3\\n'\nassert solution('3\\n') == '-1\\n'\nassert solution('2\\n') == '3\\n'\n\n\"\"\"\n\nfrom itertools import permutations\n\nn = int(input())\n\na = list(map(int, input().split()))\n\nd = 0\n\nfor i in range(1, n):\n    # \u043f\u043e\u043b\u0443\u0447\u0438\u043c \u0432\u0441\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0431\u0430\u0432\u0438\u0442\u044c D\n    results = list(permutations(a[:i]))\n    # \u0438\u0437 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0431\u0443\u0434\u0435\u043c \u0438\u0441\u043a\u0430\u0442\u044c \u0441\u0430\u043c\u044b\u0439 \u043c\u0430\u043b\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u043f\u043e\u0441\u043b\u0435 D\n    result = results[0]\n    # \u0438 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u0437\u0438\u0446\u0438\u0439 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u043c, \u043e\u043d \u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 \u0441\u0443\u043c\u043c\u044b\n    for j in range(1, i):\n        if result[j - 1] < result[j] + d:\n            result = results[j]\n\n    # \u0438 \u043e\u0431\u043d\u043e\u0432\u0438\u043c D\n    d = result[j] - result[j - 1]\n\nprint(d)\n",
        "num_ids_2": 38,
        "num_ids_4": 67
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution(input_data='''2\n4 5''') == \"3\"\nassert solution(input_data='''5\n2 5''') == \"3\"\nassert solution(input_data='''2\n6 4''') == \"3\"\nassert solution(input_data='''4\n1 3 5''') == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4 4 7 4 1') == '3'\nassert solution('5 2 2 5 2 5') == '3'\nassert solution('1 3 3 7') == '-1'\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '-1'\nassert solution('1 2 3') == '2'\nassert solution('4 6 8') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('2') == '-1'\nassert solution('4') == '-1'\nprint('\"Run\" is good. How is \"Check\"?')\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1 2 2\n1 2 1 2\n2 1 1 2\n''') == 'NO'\nassert solution('''\n0 0 4 4\n0 0 7 4\n4 0 4 4\n''') == 'NO'\nassert solution('''\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'YES'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3 7 5') == 'YES'\nassert solution('2 2 4 4') == 'NO'\nassert solution('5 2 10 5') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'NO'\nassert solution('3 1 5 5') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\nassert solution(\"0 0 499999 1000000\") == \"NO\"",
        "num_ids_2": 21,
        "num_ids_4": 51
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\n\nassert solution('5 2 10 5') == 'YES'\n\nassert solution('0 0 1000000 1000000') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'NO'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 4 4\") == \"NO\"\nassert solution(\"1 1 3 5\") == \"YES\"\nassert solution(\"3 1 5 5\") == \"YES\"\nassert solution(\"5 2 10 5\") == \"YES\"\nassert solution(\"0 0 1000000 1000000\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1098\") == \"20\"\nassert solution(\"10\") == \"19\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1098') == '20'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(0) == 0\nassert solution(1) == 1\nassert solution(2) == 2\nassert solution(10) == 20\nassert solution(99) == 19\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"1098\"]) == \"20\"\nassert solution([\"10\"]) == \"19\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('99') == '19'\nassert solution('98') == '19'\nassert solution('97') == '19'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n''') == '20'\nassert solution('''10\n''') == '19'\nassert solution('''1098\n''') == '20'",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n1098\n1099''') == '20'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1 3 2 1 4 5 6'\nassert solution() == '2 1 4 3 5 6 7'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5 3 1 2 4 5 6'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\\n\"\n    \"5 0 0 2 4\\n\"\n) == \"5 3 1 2 4\"\nassert solution(\n    \"7\\n\"\n    \"7 0 0 1 4 0 6\\n\"\n) == \"7 3 2 1 4 5 6\"\nassert solution(\n    \"7\\n\"\n    \"7 4 0 3 0 5 1\\n\"\n) == \"7 4 2 3 6 5 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == '5 3 1 2 4', 'First example'\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6', 'Second example'\nassert solution('''\n5\n2 1 0 0 0\n''') == '2 1 4 5 3', 'Third example'\nassert solution('''\n7\n7 4 0 3 0 5 1\n''') == '7 4 2 3 6 5 1', 'Fourth example'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 4 2 3 6 5 1'\nassert solution('7') == '7 4 2 3 6 5 1'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n5 0 0 2 4\n''') == \"5 3 1 2 4\"\nassert solution('''\n7\n7 0 0 1 4 0 6\n''') == \"7 3 2 1 4 5 6\"\nassert solution('''\n5\n2 1 0 0 0\n''') == \"2 1 4 5 3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '2 3 4 5 6 7'\nassert solution('5') == '2 3 4 5 6 7'\nassert solution('6') == '2 3 4 5 6 7'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n0 0 0 2 4\n''') == '5 3 1 2 4'\n\nassert solution('''\n7\n0 0 1 4 0 6\n''') == '7 3 2 1 4 5 6'\n\nassert solution('''\n5\n4 0 0 2 4\n''') == '4 3 1 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2 3 1\"\nassert solution(\"5\") == \"3 2 1 4 5\"\nassert solution(\"7\") == \"7 4 2 3 6 5 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 2 3') == 'YES\\n1 1 2 2'\nassert solution('5 2\\n3 2 1 2 3') == 'YES\\n2 1 1 2 1'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"YES\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 2\n1 2 2 3\n''') == \"YES\"\n\nassert solution('''5 2\n3 2 1 2 3\n''') == \"YES\"\n\nassert solution('''5 2\n2 1 1 2 1\n''') == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n4 2\n1 2 2 3\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n5 2\n3 2 1 2 3\n\"\"\"\n) == \"YES\"\n\nassert solution(\n\"\"\"\n5 2\n2 1 1 2 1\n\"\"\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\n1 2 2 3\n''') == 'YES'\nassert solution('''5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1\n''') == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == 'YES', 'test 1 failed'\nassert solution('5 2') == 'YES', 'test 2 failed'\nassert solution('5 2') == 'NO', 'test 3 failed'\n\n'''\n\nimport sys",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n\") == \"YES\\n2 1 1 2 1\"\nassert solution(\"5 2\\n\") == \"NO\"\n\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"2 2\") == \"NO\"\nassert solution(\"5 2\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 1\\n11010100101') == '1'\nassert solution('5 5 1\\n11010100010') == '3'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n\"\"\"\n\nfrom functools import lru_cache",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''11 5 2\n11010100101\n''') == '1'\nassert solution('''11 5 1\n11010100101\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2''') == 'YES'\nassert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''1\n1\n1''') == 'NO'\nassert solution('''2\n1\n1''') == 'NO'\nassert solution('''3\n1\n1\n1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"10\") == \"NO\"\nassert solution(\"10\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nNO'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1\\n3\\n1 2 1'\n) == 'YES'\nassert solution(\n    '2\\n5\\n1 2 1 2 3 2'\n) == 'YES'\nassert solution(\n    '3\\n4\\n1 2 1'\n) == 'NO'\nassert solution(\n    '4\\n3\\n1 1 2'\n) == 'NO'\nassert solution(\n    '5\\n5\\n1 2 1 2 3 2'\n) == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == 'YES'\n\nassert solution(\n\"\"\"\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == 'YES'\n\nassert solution(\n\"\"\"\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == 'NO'\n\nassert solution(\n\"\"\"\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\"\n) == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nNO\\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2\n1 2 1\n5\n1 2 2 3 2''') == 'YES'\nassert solution('''3\n2\n1 2 1\n5\n1 2 2 3 2''') == 'NO'\nassert solution('''3\n2\n1 2 1\n5\n1 2 2 3 2''') == 'NO'\nassert solution('''3\n2\n1 2 1\n5\n1 2 2 3 2''') == 'NO'\nassert solution('''3\n2\n1 2 1\n5\n1 2 2 3 2''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3\n2\n1\n1\n4\n2\n3\n1\n2\n1\n1\n4\n2\n1\n1\n1\n1\n4\n2\n3\n1\n3\n1\n1\n''') == \"YES\"\nassert solution('''3\n3\n3\n3\n2\n1\n1\n3\n1\n3\n1\n3\n1\n1\n4\n1\n3\n1\n2\n1\n3\n1\n1\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES\\nYES\\nYES\\nYES\\nNO'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_01) == example_output_01\nassert solution(example_input_02) == example_output_02\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"99999\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"99999\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 5 4 6 6 3 1 9\n    1 2 5 4 6 6 3 1 9''') == '99999'\nassert solution('''4\n    1 2 5 4 6 6 3 1 9\n    1 2 5 4 6 6 3 1 9''') == '99999'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n\n''') == '1557', 'First'\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n\n''') == '99999', 'Second'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1557\"\nassert solution(\"5\") == \"99999\"\nassert solution(\"2\") == \"99999\"\n\nstdin = '4\\n' + '1337'\nprint(solution(stdin))\n\nstdin = '5\\n' + '11111'\nprint(solution(stdin))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n\nassert solution('''\n2\n3\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n\nassert solution('''\n4\n1337\n1 2 5 4 6 6 3 1 9\n''') == '1553'\n\nassert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"99999\"\nprint(solution())\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '333'\nassert solution('4') == '4'\nassert solution('5') == '5555'\nassert solution('6') == '6'\nassert solution('7') == '7777'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '1 1 1'\nassert solution('5 10 15') == '1 2 3'\nassert solution('15 18 21') == '1 3 1'\nassert solution('100 100 101') == '7 1 1'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 15') == '114 228 456'\nassert solution('1 22 29') == '1'\nassert solution('3 19 38') == '8'",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '102'\nassert solution('''\n3\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '4'\nassert solution('''\n1\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 3\n123 321 456''') == \"1 1 3\"\nassert solution('''5 10 15\n15 18 21\n100 100 101''') == \"4\"\nassert solution('''6 30 46\n1 22 29\n3 19 38\n6''') == \"1 1 2 3 4 5 6\"\nassert solution('''3 19 38\n6 30 46\n1 22 29\n3''') == \"2 1 1 1 2\"",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"4 8 16\"\nassert solution(\"15 18 21\") == \"18 18 18\"\nassert solution(\"100 100 101\") == \"114 228 456\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1 1 3\"\nassert solution(input()) == \"102\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\nassert solution('''\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '624 48'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '1 1 3'\n\nassert solution('''\n3\n2 4\n1 4\n''') == '1 1 4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('3') == '1'\nassert solution('7') == '2'\nassert solution('100000') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2') == '0'\n\n\"\"\"\n\nfrom typing import List\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n1 3 3 7\") == \"2\"\nassert solution(\"2\\n1 100000\") == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 3 7') == \"2\"\nassert solution('2 5 3 8 1') == \"2\"\nassert solution('1 100000') == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 3 3 7\n''') == '2'\nassert solution('''2\n1 100000\n''') == '0'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 3 3 7\n\n''') == '2'\nassert solution('''\n2\n1 100000\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'\nassert solution('100000') == '100000'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 3 7') == '2'\nassert solution('2 5 2 9') == '0'\nassert solution('1 100000') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 3 3 7') == \"2\"\nassert solution('2\\n1 100000') == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\nassert solution('100 100') == '6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "num_ids_2": 27,
        "num_ids_4": 1077
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('3 2') == '-1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 2 2 1 1 0 4 3 4 4\"\nassert solution(stdin=\"5 2\") == \"1 2 3 0 3\"\nassert solution(stdin=\"3 2\") == \"-1\"\n",
        "num_ids_2": 35,
        "num_ids_4": 49
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == '1 2 2 1 1 0 4 3 4 4'\nassert solution(s) == '1 2 2 1 1 0 4 3 4'\nassert solution(s) == '1 2 2 1 1 0 4 3 4'",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3', f'''Expected {1 2 3 0 3} but got {solution('''5 2\n1 3 1\n1 5 1\n''')}'''\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4', f'''Expected {2 2 2 1 1 0 4 3 4 4} but got {solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''')}'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '1 2 3 0 3'\nassert solution('10 3') == '2 2 2 1 1 0 4 3 4 4'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"1 2 3 0 3\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1 2 3 0 3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\", \"Wrong result\"\nassert solution(\"10 2\") == \"2 2 2 1 1 0 4 3 4 4\", \"Wrong result\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n120 51840\n''') == '7'\n\nassert solution('''\n42 42\n''') == '0'\n\nassert solution('''\n48 72\n''') == '-1'\n\nassert solution('''\n50 81\n''') == '3'\n\nassert solution('''\n100 300\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '0'\nassert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nqwer') == 'qwerqwerqwer'\n\nassert solution('2\\na') == 'aaa'\n\nassert solution('3\\nab') == 'ababab'\n\nassert solution('4\\ncat') == 'catcatcat'",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\naba\n''') == 'ababababa'\nassert solution('''3 2\ncat\n''') == 'catcat'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\na') == 'a'\nassert solution('2\\nab') == 'ababababa'\nassert solution('3\\nabc') == 'abcabcabcabc'\nassert solution('4\\nabcd') == 'abcdabcdabcd'\nassert solution('5\\nabcdabc') == 'abcdabcabcabcabc'\n",
        "num_ids_2": 28,
        "num_ids_4": 63
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'ababababa'\nassert solution('a') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abc') == 'abc'\nassert solution('abcdefg') == 'abcdefg'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'catcatcat'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\nababa') == 'ababababa', 'ERROR'\nassert solution('2 2\\nabc') == 'abc', 'ERROR'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'catcat'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"12\"\nassert solution(\"1\") == \"11\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\naba') == 'ababababa'\nassert solution('3 2\\ncat') == 'catcat'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\naba\n''') == 'ababababa'\n\nassert solution('''\n3 2\ncat\n''') == 'catcat'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5 1 2 2\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 5 1 2 2\n''') == '3'\n\nassert solution('''4\n8 3 5 2\n''') == '2'\n\nassert solution('''5\n2 1 2 4 3\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n2 5 1 2 2\n\"\"\") == \"3\n4\n1 4\n\"\"\")\nassert solution(\"\"\"\n5\n8 3 5 2\n\"\"\") == \"2\n2\n1 4\n\"\"\")\nassert solution(\"\"\"\n5\n2 1 2 4 3\n\"\"\") == \"0\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('1') == '0'\nassert solution('3') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3\n5\n7\n6''') == '3'\nassert solution('''2\n3\n2\n6\n4''') == '0'\nassert solution('''3\n5\n8\n2\n1''') == '2'\nassert solution('''2\n1\n2\n2''') == '3'\nassert solution('''5\n3\n3\n2\n1''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3\\n1 2 4\\n'\nassert solution() == '2\\n1 4\\n'\nassert solution() == '0\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4 ",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"12\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 5 1 2 2\n''') == '3'\nassert solution('''\n5\n2 1 2 4 3\n''') == '2'\nassert solution('''\n5\n8 3 5 2\n''') == '1'\nassert solution('''\n4\n8 3 5 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n4 1 5\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\n",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == 4\nassert solution(\"5 7\") == -1\nassert solution(\"10 100\") == 233\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '4'\nassert solution('10 10') == '233'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\nassert solution('10 1') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5\\nabc') == '2'\nassert solution('1 2\\nabc') == '2'\nassert solution('2 1\\nabc') == '2'\nassert solution('3 5\\nabca') == '2'\nassert solution('1 2\\nabca') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"10 100\") == \"233\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"233\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['4', '5', '6']) == '4'\nassert solution(['5', '6', '7']) == '-1'\nassert solution(['10', '100', '101']) == '233'\nassert solution(['4', '5', '6', '7']) == '15'\nassert solution(['5', '6', '7', '8', '9']) == '16'\n",
        "num_ids_2": 37,
        "num_ids_4": 76
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('10 100') == '233'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\naaaaa\n''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n\") == \"4\"\nassert solution(\"5 7\\n\") == \"-1\"\nassert solution(\"10 100\\n\") == \"233\"\nassert solution(\"4 10\\n\") == \"15\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == 'YES'\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4''') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4''') == \"YES\"\nassert solution('''4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4''') == \"YES\"\nassert solution('''4 4 3\n1 2\n1 4\n2 3\n3 4''') == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == \"YES\"\nassert solution('''\n4 5 2\n1 2\n1 4\n2 3\n3 4\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n5 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n5 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''\n5 5 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''\n5 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n0:00\n0:00\n''') == '0:00:00'\nassert solution('''\n1:00\n1:00\n''') == '1:00:00'\nassert solution('''\n0:00\n2:00\n''') == '0:00:00'\nassert solution('''\n1:00\n2:00\n''') == '1:00:00'\nassert solution('''\n1:01\n1:02\n''') == '1:01:01'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10:00\n11:00''') == '10:30'\nassert solution('''11:10\n11:12''') == '11:11'\nassert solution('''01:02\n03:02''') == '02:02'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(5) == \"1\"\nassert solution(10) == \"2\"\nassert solution(42) == \"5\"\nassert solution(17) == \"6\"\nassert solution(27) == \"7\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1) == 1\nassert solution(2) == 1\nassert solution(3) == 2\nassert solution(4) == 2\nassert solution(5) == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\nprint(\"You're all set!\")\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n\n'''\n\n'''\n    Find more solutions here:\n    https://edabit.com/challenge/P3eK2B6zFLW3_ej2\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('1') == '1'\nassert solution('33') == '1'\nassert solution('23') == '2'\nassert solution('43') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('37') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n\n''') == '1'\n\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '7'\n\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\n\nassert solution('''\n2\n3 10\n1 5\n\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 6\n1 3\n0 4\n3 3\n''') == '1'\nassert solution('''3\n4 5\n1 2\n9 20\n\n''') == '2'\nassert solution('''2\n3 10\n1 5\n\n''') == '7'\nassert solution('''2\n4 5\n1 2\n0 4\n\n''') == '4'\nassert solution('''3\n2 5\n1 2\n0 4\n\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20''') == '7'\n\nassert solution('''2\n3 10\n1 5''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 6\\n1 3\\n') == '1'\nassert solution('5\\n2 6\\n1 3\\n0 4\\n3 3\\n') == '2'\nassert solution('3\\n4 5\\n1 2\\n9 20\\n') == '0'\nassert solution('4\\n5 6\\n1 3\\n0 4\\n3 3\\n') == '7'",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 3\n2 6\n0 4\n3 3\n\n''') == '1'\nassert solution('''\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n''') == '2'\nassert solution('''\n3\n4 5\n1 2\n9 20\n\n''') == '0'\nassert solution('''\n2\n3 10\n1 5\n\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 3\n2 6\n0 4\n3 3''') == '1'\n\nassert solution('''5\n2 6\n1 3\n0 4\n1 20\n0 4\n''') == '2'\n\nassert solution('''3\n4 5\n1 2\n9 20\n''') == '0'\n\nassert solution('''2\n3 10\n1 5\n''') == '7'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n1 3\\n2 6\\n0 4\\n3 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\\n0 4\\n1 20\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\\n9 20\") == \"0\"\nprint(\"all tests passed\")",
        "num_ids_2": 52,
        "num_ids_4": 74
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 1\nassert solution('3') == 1\nassert solution('5') == 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 6\n1 3\n0 4\n3 3\n\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_stack.append(val)\n        \n        while front_stack and end_stack:\n            front = front_stack.popleft()\n            end = end_stack.pop()\n            \n            if front > end:\n                return \"NO\"\n        \n        return \"YES\"\n\nfrom collections import deque\n\nclass Solution:\n    def solution(self, a):\n        \n        front = 0\n        end = len(a) - 1\n        \n        front_stack = deque()\n        end_stack = deque()\n        \n        for i, val in enumerate(a):\n            if val > front:\n                front_stack.append(val)\n            elif val < end:\n                end_",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5\n4 5 3\n3 2''') == 'YES'\nassert solution('''5\n5\n4 5 3\n3 2''') == 'NO'\nassert solution('''5\n3\n4 5 2\n3 2''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n2 1 1 2 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n4 5 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2\n10 10\n\"\"\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 1 2 5\n\n5\n4 5 3\n\n5\n4 5 3''') == 'YES'\nassert solution('''3\n4 5 3\n\n5\n4 5 3''') == 'NO'\nassert solution('''2\n10 10\n\n5\n4 5 3''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 1 2 5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"15\"\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"233\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 7') == '15'\nassert solution('10 100') == '233'\n\n\n---Solution---\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\nabcd\") == \"4\"\nassert solution(\"4 6\\nabcd\") == \"-1\"\nassert solution(\"5 7\\nabcd\") == \"233\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5\nasdf\n\n''') == '4'\nassert solution('''5 6\naaaaa\n\n''') == '15'\nassert solution('''5 7\naaaaa\n\n''') == -1\nassert solution('''10 100\najihiushda\n\n''') == 233\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 5\nasdf\n''') == \"4\"\nassert solution('''5 6\naaaaa\n''') == \"15\"\nassert solution('''5 7\naaaaa\n''') == -1\nassert solution('''10 100\najihiushda\n''') == 233",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 5\\n\"\n    \"aaaaa\"\n) == \"4\"\n\nassert solution(\n    \"5 6\\n\"\n    \"aaaaa\"\n) == \"15\"\n\nassert solution(\n    \"5 7\\n\"\n    \"aaaaa\"\n) == \"-1\"\n\nassert solution(\n    \"10 100\\n\"\n    \"ajihiushda\"\n) == \"233\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('1 1000 10') == '3520'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 1\\n\") == '4'\nassert solution(\"3 2 2\\n\") == '7'\nassert solution(\"1 100 1\\n\") == '3'\nassert solution(\"30 20 10\\n\") == '39'\nassert solution(\"1 1 1\\n\") == '3'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nassert solution('123') == '456'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 1 1\n''') == '4'\nassert solution('''3 2 2\n''') == '7'\nassert solution('''1 100 1\n''') == '3'\nassert solution('''30 20 10\n''') == '39'\nassert solution('''30 30 30\n''') == '54'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"15 20 30\") == \"36\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\nassert solution(\"30 100 10\") == \"39\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('2 1 1') == '7'\nassert solution('3 2 2') == '39'\nassert solution('30 20 10') == '39'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n1 2\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n1 2\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n1 2\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 2\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n1 2\") == \"NO\"\n",
        "num_ids_2": 146,
        "num_ids_4": 300
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'YES\\nYES\\nNO\\nNO\\nYES\\nNO\\n'\nassert solution('2') == 'NO\\nYES\\nYES\\nNO\\nNO\\nNO\\n'\nassert solution('3') == 'YES\\nYES\\nNO\\nYES\\nNO\\nNO\\n'\nassert solution('4') == 'NO\\nYES\\nYES\\nNO\\nYES\\nNO\\n'\nassert solution('5') == 'YES\\nYES\\nYES\\nYES\\nYES\\nYES\\n'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n2 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"5 6\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100''') == 'YES'\nassert solution('''5 5\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 1\n2 2\n1 100''') == 'NO'\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2') == 'NO'\nassert solution('2\\n1\\n1') == 'YES'\n",
        "num_ids_2": 146,
        "num_ids_4": 162
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"YES\", \"SOLUTION\"\nassert solution(\"2 2\") == \"NO\", \"SOLUTION\"\nassert solution(\"1 2\") == \"NO\", \"SOLUTION\"\nassert solution(\"10 10\") == \"YES\", \"SOLUTION\"\nassert solution(\"10 10\") == \"YES\", \"SOLUTION\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n5 5\n2 2\n1 1\n1 1\n1 1\n1 1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\n3 3\n1 2\n2 3\n3 1\n\"\"\") == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n\n''') == '0\n\nassert solution('''5\n\n''') == '1\n\nassert solution('''6\n\n''') == '1\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n2\n2\n''') == '1'\nassert solution('''3\n3\n3\n''') == '1'\nassert solution('''5\n5\n4\n3\n2\n''') == '1'\nassert solution('''6\n5\n4\n3\n2\n1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3]) == '0'\nassert solution([5]) == '1'\nassert solution([6]) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '0'\nassert solution('6') == '1'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n\nOutput\n\n0\n\n''') == '0'\n\nassert solution('''5\n\nOutput\n\n1\n\n''') == '1'\n\nassert solution('''6\n\nOutput\n\n1\n\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == 1\nassert solution(\"3\") == 0\nassert solution(\"4\") == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n()))\n\n2\n(()\n\n''') == '1'\nassert solution('''4\n()()\n\n''') == '2'\nassert solution('''5\n(()\n\n''') == '4'\nassert solution('''15\n(()(((()()(())))())))\n\n''') == '2'\nassert solution('''15\n
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n((()))''') == \"6\"\nassert solution('''3\n(()())\n''') == \"4\"\nassert solution('''2\n(((\n\n''') == \"0\"\nassert solution('''5\n()))(((\n\n''') == \"0\"\nassert solution('''5\n(()))(\n\n''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '0'\nassert solution('5') == '4'\nassert solution('6') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 5\nassert solution('3') == 4\nassert solution('2') == 0\nassert solution('1') == 0\nassert solution('0') == 0",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"1\"\nassert solution(\"65\") == \"1\"\nassert solution(\"234\") == \"3\"\nassert solution(\"123534\") == \"3\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5071') == 4\nassert solution('705') == 1\nassert solution('1241367') == -1",
        "num_ids_2": 17,
        "num_ids_4": 28
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n\n3\n\n5\n\n7\n\n9\n\n''') == '1', 'Wrong answer in first example'\nassert solution('''\n1\n\n2\n\n10\n\n''') == '2', 'Wrong answer in second example'\nassert solution('''\n12\n\n13\n\n16\n\n''') == '-1', 'Wrong answer in third example'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\\\n5071\n''') == '4'\nassert solution('''\\\n705\n''') == '1'\nassert solution('''\\\n1241367\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '2'\nassert solution('9') == '1'\nassert solution('7') == '1'\nassert solution('5') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\nabacbecfd''') == '2'\nassert solution('''8\naaabbcbb''') == '2'\nassert solution('''7\nabcdedc''') == '3'\nassert solution('''5\nabcde''') == '1'\nassert solution('''7\ncdeabc''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\n\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '3\\n1 2 1 2 1 2 1 2\\n'\nassert solution('9') == '2\\n1 1 1 2 2 1\\n'\nassert solution('7') == '3\\n1 1 1 1 1\\n'\nassert solution('5') == '1\\n'",
        "num_ids_2": 42,
        "num_ids_4": 73
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"abac\") == \"1\"\nassert solution(\"abacabc\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10\\naaabbbcc') == '1 1 2 2 2 2 2 1 1 1'\nassert solution('9\\nabacbecfd') == '2 1 1 2 1 2 1 2 1 2'\nassert solution('7\\nabcdedc') == '3 1 1 1 1 2 3'\nassert solution('5\\nabcd') == '1 1 1 1 1'\nassert solution('4\\nabcc') == '1 1 1 2 2'\n",
        "num_ids_2": 50,
        "num_ids_4": 89
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"9\") == \"2\"\nassert solution(\"8\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\naaaa') == '2'\nassert solution('11\\naaaaaaa') == '3'\nassert solution('13\\nabcdefghij') == '1'\nassert solution('3\\nab') == '1'\nassert solution('6\\nabc') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'NO'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n\n''') == 'YES'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n\n''') == 'NO'\nassert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'NO'\nassert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '5\\n'\n    'a\\n'\n    'aba\\n'\n    'abacaba\\n'\n    'ba\\n'\n    'aba\\n'\n) == 'YES'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('2') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n\n''') == 'YES'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\na\\na\\na\\naba\\n\") == \"YES\"\nassert solution(\"5\\na\\na\\na\\naba\\n\") == \"NO\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == 'YES', \"A\"\nassert solution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == 'NO', \"B\"\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n\n''') == 'YES', \"C\"\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n\n''') == 'NO', \"D\"\n\n'''\n\n\n\nsolution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == 'YES', \"A\"\nassert solution('''\n5\na\naba\nabacaba\nba\naba\n\n''') == 'NO', \"B\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"3\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 4\\n2 3 1 5 1 6 4\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 100') == '5'\nassert solution('8 4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '5'\nassert solution(input2) == '5'\nassert solution(input3) == '0'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"5\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == str(len(input_string) - 1)\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('100 4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n3 1 2 1 3\") == \"5\"\nassert solution(\"5 100\\n12 34 55 43 21\") == \"5\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '5'\nassert solution(input(True)) == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\n\n\"\"\"\n\nfrom math import ceil\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 9\") == \"14\"\nassert solution(\"4 4\") == \"12\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4 4\n\"\"\"\n) == \"12\"\nassert solution(\n\"\"\"\n3 9\n\"\"\"\n) == \"14\"\nassert solution(\n\"\"\"\n3 6\n\"\"\"\n) == \"12\"\nassert solution(\n\"\"\"\n506 2708\n\"\"\"\n) == \"3218\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"3 9\") == \"14\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '12'\nassert solution('3 9') == '14'\nassert solution('5 6') == '12'\nassert solution('506 2708') == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\n''') == '12'\n\nassert solution('''\n3 9\n''') == '14'\n\nassert solution('''\n3 6\n''') == '12'\n\nassert solution('''\n506 2708\n''') == '3218'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('3 6') == '12'\nassert solution('506 2708') == '3218'",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '2'\nassert solution('4 4') == '12'\nassert solution('3 9') == '14'\nassert solution('9 3') == '14'\nassert solution('3 6') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n''') == '12'\nassert solution('''3 9\n''') == '14'\nassert solution('''9 3\n''') == '14'\nassert solution('''3 6\n''') == '12'\nassert solution('''506 2708\n''') == '3218'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 4\n''') == '12'\nassert solution('''\n3 9\n''') == '14'\nassert solution('''\n3 6\n''') == '12'\nassert solution('''\n506 2708\n''') == '3218'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'NO'\nassert solution('5') == 'NO'\nassert solution('4') == 'YES'\nassert solution('3') == 'YES'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"3\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES', 'First'\nassert solution('10') == 'NO', 'Second'\nassert solution('8') == 'YES', 'Third'\nassert solution('9') == 'YES', 'Fourth'\nassert solution('12') == 'NO', 'Fifth'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"00000\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == 'NO'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"aaabbcc\") == \"YES\"\nassert solution(\"aaabbcbb\") == \"YES\"\nassert solution(\"aabccba\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\na\n''') == 'NO'\n\nassert solution('''\n6\nbac\n''') == 'NO'\n\nassert solution('''\n8\naaabb\n''') == 'YES'\n\nassert solution('''\n5\nabcde\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"9\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"7\") == \"NO\"\nassert solution(\"5\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"5 5\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '25'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 5\n''') == '1'\nassert solution('''1 4\n2 5\n''') == '1'\nassert solution('''10 10\n100 100\n''') == '100'\nassert solution('''0 0\n2 2\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"2 3\") == \"-1\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1.1\") == \"1\"\nassert solution(\"1.1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '25'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"25\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"25\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"6 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '25'\nassert solution('2 1') == '-1'\nassert solution('1 2') == '-1'\nassert solution('2 1') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"25\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"4 5\\n\") == \"YES\"\nassert solution(\"8 6\\n\") == \"YES\"\nassert solution(\"1 1\\n\") == \"NO\"\nassert solution(\"9 4\\n\") == \"NO\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('26 6') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"13 5\") == \"YES\"\nassert solution(\"13 5\") == \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 6\\n\") == \"NO\\n\"\nassert solution(\"1 1\\n\") == \"YES\\n1\\n\"\nassert solution(\"8 3\\n\") == \"NO\\n\"\nassert solution(\"9 4\\n\") == \"YES\\n1\\n\"\nassert solution(\"18 8\\n\") == \"YES\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n\\n\"",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('26 6') == 'YES'\nassert solution('6 5') == 'NO'\nassert solution('3 5') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"9 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('26 6') == 'YES\\n1 2 4 5 6 8'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES\\n1 \n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"3\"\nassert solution(input, True) == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\nprint(solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n'''))\nassert solution('''\n5 10\n10 -2\n8 -1\n''') == '1'\nprint(solution('''\n5 10\n10 -2\n8 -1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '5'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3'\nassert solution('5 20') == '5'\nassert solution('3 2') == '3'\n\n\nInput\n\n1 2\n1 2\n\nOutput\n\n2\n\nInput\n3 4\n1 2\n1 2\n1 3\n1 4\n2 1\n2 3\n\nOutput\n\n4\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 10 1\") == \"0\"\nassert solution(\"2 10 2\") == \"1\"\nassert solution(\"3 10 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4\n4 6\n10 -2\n8 -1\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n3 2\n300 -300\n1 299\n1 123\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == \"YES\"\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == \"NO\"\nassert solution('''\n4\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\nassert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\\n\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\"\n",
        "num_ids_2": 108,
        "num_ids_4": 162
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''3\n1 2 3 4 5 6 7\n8 9 10 11 12 13 14 15\n16 17 18 19 20 21 22 23 24\n
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 2 1\") == \"YES\"\nassert solution(\"1 2 3 1\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"NO\"\nassert solution(\"1 2 3 1\") == \"YES\"\nassert solution(\"1 2 1 1\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\\n\"\n) == \"YES\"\nassert solution(\n    \"3\\n1 1 1 1 1 3 3 3 3\\n\"\n) == \"YES\"\nassert solution(\n    \"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\\n\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'YES'\nassert solution('4') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"10\") == \"YES\"\nprint(solution(input()))\n\n\n\nsolution(input())",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('3 10') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'NO'\nassert solution('5 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"3 10\\n10 0\\n10 -10\\n30 0\\n\") == \"NO\"\n",
        "num_ids_2": 54,
        "num_ids_4": 80
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1''') == 'YES'\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3''') == 'YES'\n\nassert solution('''3 10\n10 0\n10 -10\n30 0''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 4\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('4 5') == 'YES'\nassert solution('5 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n4 6') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3') == 'YES'\nassert solution('3 10\\n10 0\\n10 -10\\n30 0') == 'NO'\n\n'''\n\nn, r = map(int, input().split())\n\nproject = []\nfor i in range(n):\n    a, b = map(int, input().split())\n    project.append((a,b))\n\nres = []",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'YES'\nassert solution('3 5') == 'YES'\nassert solution('4 4') == 'YES'\nassert solution('5 10') == 'NO'\nassert solution('10 0') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == 'YES'\n\nassert solution('''3 5\n4 -5\n4 -2\n1 3\n''') == 'YES'\n\nassert solution('''4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == 'YES'\n\nassert solution('''3 10\n10 0\n10 -10\n30 0\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == \"YES\"\n\nassert solution('''\n7 1 11\n1\n''') == \"YES\"\n\nassert solution('''\n7 1 5\n2\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3 1\n1 2 1\n3\n2 2 3\n''') == 'YES'\nassert solution('''4 1 3\n2\n2\n4\n3\n''') == 'YES'\nassert solution('''7 3 2\n1 2 1\n4\n3\n2\n''') == 'YES'\nassert solution('''10 1 11\n1\n''') == 'YES'\nassert solution('''10 1 5\n2\n''') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 3 2\n1 2 1''') == 'YES'\nassert solution('''10 1 11\n1''') == 'YES'\nassert solution('''10 1 5\n2''') == 'YES'\nassert solution('''10 1 3\n3''') == 'NO'\nassert solution('''8 1 3\n3''') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution(input_) == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution(input_) == 'NO\\n'",
        "num_ids_2": 47,
        "num_ids_4": 60
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 1 11\") == 'YES'\nassert solution(\"7 3 2\") == 'YES'\nassert solution(\"7 1 3\") == 'YES'\nassert solution(\"7 2\") == 'NO'\nassert solution(\"5 1\") == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 2') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('10 1 11') == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n0 0 0 0 1 1 0 0 0 0'\nassert solution('10 1 5') == 'YES\\n0 0 0 0 0 1 1 0 0 0 0\\n0 0 0 0 0 0 0 0 0 0 1'",
        "num_ids_2": 57,
        "num_ids_4": 95
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 0 1') == 'YES'\nassert solution('5 5 3 1') == 'YES'\nassert solution('10 1 5 3') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\\n1 2 1\\n\") == \"YES\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\"\nassert solution(\"10 1 5\\n5\\n\") == \"YES\"\nassert solution(\"10 1 5\\n7\\n\") == \"YES\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 3 2\n1 2 1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1''') == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution('''10 1 11\n1\n\n10 1 5\n2\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1''') == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution('''10 1 5\n2\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1''') == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution('''10 1 5\n2\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1''') == 'YES\\n0 0 0 0 0 0 0 0 0 1\\n'\nassert solution('''10 1 5\n2\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n\n7 3 2\n1\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"test\") == \"et\"\nassert solution(\"tst\") == \"t\"\nassert solution(\"tt\") == \"tt\"\nassert solution(\"et\") == \"\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"baaba\") == \"2\"\nassert solution(\"abcde\") == \"0\"\nassert solution(\"asdfasdf\") == \"3\"\nassert solution(\"abcabcabcabc\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\na\na\na\n\n\"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\na\na\nb\n\n\"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\na\na\na\na\n\n\"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\na\nb\n\n\"\"\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('ba') == 2\nassert solution('asdfasdf') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('asdfasdf') == 'asdfasdf', solution('asdfasdf')\nassert solution('bbaba') == '3', solution('bbaba')\nassert solution('baaba') == '2', solution('baaba')\nassert solution('abcde') == '0', solution('abcde')\nassert solution('fasd') == '3', solution('fasd')\n",
        "num_ids_2": 39,
        "num_ids_4": 71
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aa', 'aa') == 0\nassert solution('abcde', 'abcde') == 0\nassert solution('bbaba', 'bb') == 3\nassert solution('bbaba', 'bbb') == 2\nassert solution('baaba', 'ab') == 2\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('asdfasdf') == 3\nassert solution('fasd') == 2\nassert solution('baabab') == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('asdfasdf') == 3",
        "num_ids_2": 17,
        "num_ids_4": 28
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 0\nassert solution('ab') == 2\nassert solution('abcde') == 3\nassert solution('abcde') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('asdfasdf') == '', 'invalid'\nassert solution('asdfasdfa') == '', 'invalid'\nassert solution('test') == '', 'invalid'\nassert solution('bacac') == '', 'invalid'\nassert solution('bac') == '', 'invalid'\n",
        "num_ids_2": 33,
        "num_ids_4": 61
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\nassert solution(\"8.734895\") == \"9 9\"\nassert solution(\"7.898975\") == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\nassert solution(\"1.200000\") == \"3 2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.200000\") == \"3 2\"\nassert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('2.678999') == '6 6'\nassert solution('1.567899') == '6 6'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.0\") == \"3 2\"\nassert solution(\"1.9\") == \"3 2\"\nassert solution(\"-4.0\") == \"3 2\"\nassert solution(\"0.0\") == \"1 1\"\nassert solution(\"-0.0\") == \"1 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nprint(f\"Solutions: {solution(input())}\")",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"3 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'",
        "num_ids_2": 28,
        "num_ids_4": 124
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 2 3') == 'NO'\nassert solution('8 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 3 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\nassert solution('''10 4 3''') == 'YES'\nassert solution('''6 2 3''') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 2 3') == 'NO'\nassert solution('20 2 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 2 3') == 'NO'\nassert solution('8 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'YES'\nassert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 5 3') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 2 3') == 'NO'\nassert solution('8 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1100\"\nassert solution(input()) == \"0011\"\nassert solution(input()) == \"011001\"\nassert solution(input()) == \"100110\"\nassert solution(input()) == \"101100\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2 1') == \"1100\"\nassert solution('3 3 3') == \"101100\"\nassert solution('5 3 6') == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input().split()) == \"1100\"\nassert solution(input().split()) == \"0011\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1') == '1100', solution('1 2 1')\nassert solution('3 3 3') == '101100', solution('3 3 3')\nassert solution('5 3 6') == '01010100', solution('5 3 6')\n",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"2\\n\"\n    \"ab\\n\"\n    \"bc\\n\"\n    ) == \"YES\"\n\nassert solution(\n    \"1\\n\"\n    \"cb\\n\"\n    \"ac\\n\"\n    ) == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\nab\\nbc') == 'YES'\nassert solution('2\\nab\\nbc') == 'NO'\nassert solution('3\\nab\\nbc') == 'YES'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"0\") == \"YES\"\nassert solution(\"5\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\naa\nbc\n\n\"\"\") == \"cacbacbab\"\nassert solution(\"\"\"\n1\ncb\nac\n\n\"\"\") == \"abc\"\nassert solution(\"\"\"\n2\nab\nbc\n\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1''') == \"YES\"\nassert solution('''2\nab\nbc\n''') == \"YES\"\nassert solution('''3\naa\nbc\n''') == \"YES\"\nassert solution('''4\naa\nab\n''') == \"NO\"\nassert solution('''5\naa\nab\nac\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nab\\nbc') == 'NO'\nassert solution('2\\nab\\nbc') == 'YES'\nassert solution('3\\naa\\nbc') == 'YES'\nassert solution('4\\nab\\nbc') == 'NO'\nassert solution('5\\nab\\nbc') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('1') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n-2 1\n\"\"\") == \"3 1 2\"\nassert solution(\"\"\"\n5\n1 1 1 1\n\"\"\") == \"1 2 3 4 5\"\nassert solution(\"\"\"\n4\n-1 2 2\n\"\"\") == \"1 2\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 2 3 4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3 1 2\"\nassert solution(\"5\") == \"1 1 1 1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n-2 1\n\"\"\") == \"3 1 2 \nassert solution(\"\"\"\n5\n1 1 1 1\n\"\"\") == \"1 2 3 4 5 \nassert solution(\"\"\"\n4\n-1 2 2\n\"\"\") == \"-1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1 2\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 2 3 4 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n-1 1''') == '1 2'\nassert solution('''3\n1 1 1''') == '1 2 3'\nassert solution('''4\n-1 2 2''') == '-1'\nassert solution('''5\n1 1 1 1''') == '1 2 3 4 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == \"3 1 2\"\nassert solution('5') == \"1 2 3 4 5\"\nassert solution('4') == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('4') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2 2 3''') == '1'\nassert solution('''5\n2 2 2 3 3''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\nprint(solution(__import__('sys').stdin.read()))\n\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\\n\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3'\n    ) == '1'\n\nassert solution(\n    '5'\n    ) == '2'\n\nassert solution(\n    '2'\n    ) == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n5\n2 2 2 3 3\n''') == '2'\nassert solution('''\n15\n910 920 930 950 960 970 980 980 990 990 980 990 990 990 990 990 990 970 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950 950",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n    3\n    1 2 3\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    5\n    2 2 2 3 3\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    10\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"9\"\n\nassert solution(\n    \"\"\"\n    50\n    1 2 3 4 5 6 7 8 9 10\n    \"\"\"\n) == \"51\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution(\"5\\n1 2 3 4 5\") == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\nassert solution() == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"4\") == \"5\"\nassert solution(\"10\") == \"10\"\nassert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"10\"\nassert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"4\"\nassert solution(\"12\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"5\"\nprint(solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"5\"\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 1807
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '5'\nassert solution('100') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"6\") == \"6\"\nassert solution(\"11\") == \"11\"\nassert solution(\"21\") == \"21\"\nassert solution(\"100\") == \"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('686') == '22 334'\nassert solution('3') == '3 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n15\n5 5 5\n5 5 5\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n''') == '119 226'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''\n15\n5 5 5\n5 5 5\n''') == '0 15'\nassert solution('''\n319\n10 53 256\n182 103 34\n''') == '119 226'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('3') == '3 3'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15') == '0 15'\nassert solution('319') == '119 226'\nassert solution('686') == '22 334'\nassert solution('103') == '119 226'\nassert solution('0 0 3') == '3 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 1 1\n1 1 0\n''') == '0 1'\nassert solution('''15 5 5\n5 5 5\n''') == '0 15'\nassert solution('''3\n0 0 3\n3 0 0\n''') == '3 3'\nassert solution('''319\n10 53 256\n182 103 34\n''') == '119 226'",
        "num_ids_2": 18,
        "num_ids_4": 32
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"3\") == \"3 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '0 1'\nassert solution(\"15\") == '0 15'\nassert solution(\"3\") == '3 3'\nassert solution(\"319\") == '119 226'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0 1'\nassert solution('6') == '0 1'\nassert solution('7') == '0 1'\nassert solution('8') == '0 1'\nassert solution('9') == '0 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n4 1 2 2 1 5 3') == '3\\n7 7\\n2 3'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4 4 4 4 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '3 4 4 4 4 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n-1 -2 -3 -4 -5 -6\n\n''') == '2 4'\nassert solution('''\n8\n3 5 -3 -1 -1 -1 -1 -2 -2\n\n''') == '2 4'\nassert solution('''\n9\n3 4 -5 2 2 -1 -1 -1 -1 -1 -1 -2\n\n''') == '2 4'\nassert solution('''\n7\n-1 -2 -3 -4 -5 -6 -7\n\n''') == '4 4'\nassert solution('''\n1\n1\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n7 6 3 1 5 6 4\") == \"3 4\"\nassert solution(\"5\\n7 2 3 1 5 6 4\") == \"3 4\"\nassert solution(\"5\\n7 2 4 3 1 5 6 4\") == \"1 2 4\"\nassert solution(\"5\\n7 2 3 4 5 1 6 4\") == \"2 3 4\"\nassert solution(\"5\\n7 2 4 3 1 5 6 4\") == \"1 2 3 4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4 4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2 3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n4 1 2 2 1 5 3\"\"\") == \"3\"\n\nassert solution(\"\"\"\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1 1\n2 2\n3 3\"\"\") == \"4\"\n\nprint(solution(*(stdin().split())))\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4 1 2 2 1 5 3\") == \"3\"\nassert solution(\"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"4 4 4 4 4 4\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 4 4 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == 'YES'\nassert solution('''\n2\n1 2\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n') == 'YES'\nassert solution('1\\n2 3\\n') == 'NO'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 1 2''') == 'YES'\nassert solution('''3\n3 2 1''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2 3\n1 2 3''') == 'YES'\nassert solution('''2\n1 2''') == 'NO'\nassert solution('''2\n2 2''') == 'NO'\nassert solution('''3\n1 2 3\n1 2 3''') == 'YES'",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('3 1 2') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"NO\"\nassert solution() == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n''') == 'YES'\n\nassert solution('''\n3\n3 1 2\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n4 1 5\n''') == \"YES\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example1) == \"4\", \"Wrong result for example 1\"\nassert solution(example2) == \"-1\", \"Wrong result for example 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nabcdef\\nabdfec') == '4 3 5 4 5', \"First\"\nassert solution('4\\nabcd\\naccd') == '-1', \"Second\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '-1'\n\nassert solution(input) == '4 3 5 5 5'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcd\\n\") == \"4\"\nassert solution(\"4\\nabcd\\n\") == \"-1\"\n\n\n\"\"\"\n\nimport math\nimport itertools",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '-1'\n\nassert solution('''\n4\nabcd\naccd\n''') == '4 3 5 4 5'\n\nassert solution('''\n2\nabcd\naccd\n''') == '0'\n\nassert solution('''\n5\nabcdef\nabdfec\n''') == '4 3 5 4 5'\n\nassert solution('''\n6\nabcdef\nabdfec\n''') == '4 3 5 4 5'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\\n3 5 4 5\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\nabcd\naccd\n\n\"\"\") == \"-\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '-1'\n\nassert solution('''\n4\nabcd\naccd\n''') == '4'\n\nassert solution('''\n4\nabcd\nabcde\n''') == '5'\n\nassert solution('''\n4\nabcd\ncdee\n''') == '-1'\n\nassert solution('''\n10\n123456789012345678\n123456789012345678\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n\n''') == '-1', \"First\"\nassert solution('''\n4\nabcd\naccd\n\n''') == '4', \"Second\"\nassert solution('''\n1\nabc\nacb\n\n''') == '0', \"Third\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\nabcdef\\nabdfec\") == \"4\"\nassert solution(\"3\\nabcdef\\naccd\") == \"-1\"\nassert solution(\"6\\nabcdef\\nabdfec\") == \"4\"\nassert solution(\"4\\nabcdef\\naccd\") == \"-1\"\n",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"SPPSPSPS\"\nassert solution(\"3\") == \"PS\"\nassert solution(\"2\") == \"PS\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\nabc\na\nab\na\na\nabc\n\"\"\") == \"PPSP\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nba\\na\\nabab\\na\\naba\\nbaba\\na\\naba\\nab') == 'SPPSPS'\nassert solution('5\\nba\\na\\nabab\\na\\naba\\nbaba\\na\\naba\\nab') == 'SPPSPS'\nassert solution('2\\nab\\nab') == 'PS'\nassert solution('2\\nac') == 'SP'\nassert solution('3\\nca') == 'PS'\n",
        "num_ids_2": 74,
        "num_ids_4": 103
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == \"SPPSPSPS\"\nassert solution('2') == \"PS\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nba') == 'SPPSPSPS'\nassert solution('3\\na') == 'PS'\nassert solution('2\\na') == 'PS'",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == 'PS'\nassert solution('''\n2\na\nc\n''') == 'SP'\nassert solution('''\n1\na\n''') == 'P'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nba\na\nabab\na\naba\nbaba\nab\naba\n''') == 'SPPSPSPS'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10\n15\n19\n20\n25\n26\n30\n35\n37\n40\n45\n47\n50\n''') == '1'\n\nassert solution('''\n1\n1\n1\n''') == '1'\n\nassert solution('''\n0\n5\n10\n''') == '1'\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"2 4 6 10 8\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n3\n2\n''') == '1'\nassert solution('''\n1\n3\n2\n''') == '2'\nassert solution('''\n3\n1\n4\n''') == '4'\nassert solution('''\n2\n1\n5\n''') == '5'\nassert solution('''\n1\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 6 8 10\") == \"1\"\nassert solution(\"15 16 17 18 19\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 1 1\n1 2 2\n1 3 3\n''') == '1'\n\nassert solution('''1 1 1\n1 2 3\n1 3 4\n''') == '1'\n\nassert solution('''2 5\n10 100\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    5\n    2 1 3 1\n\"\"\") == '1'\nassert solution(\"\"\"\n    4\n    3 2 1\n\"\"\") == '3'\nassert solution(\"\"\"\n    3\n    2 1 1\n\"\"\") == '3'\nassert solution(\"\"\"\n    1\n    2 1\n\"\"\") == '1'\nassert solution(\"\"\"\n    3\n    5 1 1\n\"\"\") == '4'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 4, 6, 8, 10]) == '1'\n\"\"\"\nimport collections\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1', \"First\"\nassert solution('2') == '2', \"Second\"\nassert solution('3') == '3', \"Third\"\nassert solution('4') == '4', \"Fourth\"\nassert solution('5') == '5', \"Fifth\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 6 8 10') == '1', 'First'\nassert solution('2 4 6 8 10') == '0', 'Second'\nassert solution('0 0 0 0') == '0', 'Third'\nprint('Almost done! Go ahead and check some more tests')\n",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 6 8 10') == '1'\nassert solution('3 10 8 7 2') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'\n",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0'\nassert solution('10') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'\nprint(\"You're a smart cookie!\")\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '2'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"\nassert solution(\"3\\n1 1 0\") == \"0\"\nassert solution(\"4\\n1 1 1\") == \"0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 75
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '0'\nassert solution('10') == '2'\nassert solution('1 1 0 1 1 0 1 0 1 0') == '0'\nassert solution('5') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"\nassert solution(stdin='''\n1 1 0 1 1 0 1 0 1 0\n''') == \"0\"\nassert solution(stdin='''\n5\n1 1 1 1\n''') == \"0\"\n'''\n",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n0''') == '2'\nassert solution('''4\n1\n1\n1\n1''') == '0'\nassert solution('''10\n1 1 0 1 1 0 1 0 1 0\n\n''') == '2'\nassert solution('''5\n1 1 1 1\n\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"6 90 12 18 30 18\") == \"4\"\n\nassert solution(input()) == stdout.readline()\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n3\n1 2 3\n\n2\n1 2\n\n4\n10 20 40 10\n\"\"\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 4 5') == '1'\nassert solution('6\\n6 90 12 18 30 18') == '4'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2 5\n''') == '1'\n\nassert solution('''\n4\n1 2 5 6\n''') == '2'\n\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''\n6\n6 90 12 18 30 18\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n4\\n6') == '1'\nassert solution('5\\n1 2 3 4 5') == '1'\nassert solution('6\\n90 12 18 30 18') == '4'\n",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('6 90 12 18 30 18') == '4'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"100\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\\n1\"\n) == \"1\"\nassert solution(\n    \"4\\n2 2 2\"\n) == \"2\"\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n100\n''') == '2'\n\nassert solution('''4\n1 2 3 2 3\n''') == '2'\n\nassert solution('''3\n1 2 3\n''') == '1'\n\nassert solution('''4\n100\n''') == '1'\n\nassert solution('''10\n10000\n10000\n10001\n10001\n10000\n10000\n10000\n10001\n10000\n10000\n10001\n10000\n10001\n10000\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n10001\n100",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"100\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(s) == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('1') == '1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n\n''') == '3'\n\nassert solution('''5 3\n1 0 0 0 1\n\n''') == '2'\n\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n\n''') == '3'\n\nassert solution('''10 10\n1 1 1 1 1 1 1 1 1 1\n\n''') == '11'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input_1) == example_output_1, (solution(example_input_1), example_output_1)\nassert solution(example_input_2) == example_output_2, (solution(example_input_2), example_output_2)\nassert solution(example_input_3) == example_output_3, (solution(example_input_3), example_output_3)\nassert solution(example_input_4) == example_output_4, (solution(example_input_4), example_output_4)\nassert solution(example_input_5) == example_output_5, (solution(example_input_5), example_output_5)\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n0 0 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"\n",
        "num_ids_2": 40,
        "num_ids_4": 65
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution('''5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nassert solution('''50 10\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solutions.sample_input) == '3'\nassert solution(solutions.real_input) == '2'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n0 0 1 1 0 1 0 0 0 1\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\nassert solution('''\n10 5\n1 0 0 0 0 1\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"\nassert solution(\"12 4\") == \"-1\"\nassert solution(\"15 6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\nassert solution('''\n5 3\n0 0 1 1 0 1 0 0 0 1\n''') == '2'\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"3\", \"First example\"\nassert solution(\"10 3\") == \"2\", \"Second example\"\nassert solution(\"15 5\") == \"-1\", \"Third example\"\nassert solution(\"15 10\") == \"3\", \"Fourth example\"\nassert solution(\"100 5\") == \"4\", \"Fifth example\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '6'\nassert solution('10') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n') == '3'\nassert solution('6\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n') == '1'\nassert solution('3\\n') == '3'\n\n---OR\n\nfrom math import floor,ceil\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('10') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"5\n\"\"\") == \"3\"\n\nassert solution(\"\"\"5\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"7\"\nassert solution(\"20\") == \"29\"\n\n\"\"\"\n\n####################################################################\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nprint(\"Congratulations, this is the end of our test!\")",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''(((()\n\n''') == \"3\")\n\nassert solution('''(()\n\n''') == \"0\"\n\nassert solution(''')(()\n\n''') == \"0\"\n\nassert solution('''())\n\n''') == \"0\"\n\nassert solution('''()()()\n\n''') == \"4\"",
        "num_ids_2": 17,
        "num_ids_4": 32
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"((((())))\") == \"0\"\nassert solution(\"()()\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"(())\") == \"3\"\nassert solution(\"((()))\") == \"6\"\nassert solution(\"(())()()\") == \"3\"\nassert solution(\"(((((())()))())())\") == \"19\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(inp) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n((((\n''') == '')\nassert solution('''\n))\n''') == '')\nassert solution('''\n(())\n''') == '1'\nassert solution('''\n)\n''') == '1'\nassert solution('''\n()))\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(inp_1) == \"3\"\nassert solution(inp_2) == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(open(\"input.txt\").read()) == \"0\"\nprint(solution(open(\"input.txt\").read()))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n(((())\n''') == 3\n\nassert solution('''\n(()\n''') == 0\n\nassert solution('''\n))\n''') == 0\n\nassert solution('''\n)(\n''') == 0\n\nassert solution('''\n(((\n''') == 3\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"ba\") == 1\nassert solution(\"bc\") == 0\nassert solution(\"ac\") == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 1\nassert solution(\"asdfasdf\") == 3\nassert solution(\"bb\") == 0\nassert solution(\"ab\") == 2",
        "num_ids_2": 17,
        "num_ids_4": 36
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bbaba\") == \"3\"\nassert solution(\"bb\") == \"1\"\nassert solution(\"ba\") == \"1\"\nassert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 40
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 2\nassert solution(\"bba\") == 2\nassert solution(\"asdfasdf\") == 3\nassert solution(\"fasd\") == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 4",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''bbaba\nbb''') == 3\n\nassert solution('''baaba\nab\n''') == 2\n\nassert solution('''abcde\nabcde\n''') == 0\n\nassert solution('''asdfasdf\nfasd\n''') == 3",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"bbaba\") == 3, \"test_1\"\nassert solution(\"bb\") == 2, \"test_2\"\nassert solution(\"asdfasdf\") == 3, \"test_3\"\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 0\nassert solution('asdfasdf') == 3\nassert solution('asdf') == 2\nassert solution('abcde') == 0\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 3 1') == '3'\nassert solution('5 5 5 5') == '5'\n\"\"\"\n\nx, y, z, k = map(int, input().split())\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 1 1\n''') == '2'\nassert solution('''\n1 1 1 1\n''') == '2'\nassert solution('''\n1 2 2 1\n''') == '3'\nassert solution('''\n10 4 5 2\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 4 2 1') == '3'\nassert solution('8 3 2 1') == '4'\nassert solution('8 4 1 1') == '8'\nassert solution('3 4 3 1') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1,2,1,1]) == \"2\"\nassert solution([1,1,1,1]) == \"4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 2 2') == '4'\nassert solution('1 3 6 4') == '12'\nassert solution('2 2 2 2') == '4'\nassert solution('1 2 4 2') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 2 1 2') == '1'\nassert solution('1 2 3 4') == '2'\nassert solution('1 2 3 4 5') == '1'\n\n\"\"\"\nimport math\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 10 1 1\") == \"10\"\nassert solution(\"10 10 1 1\") == \"10\"\nassert solution(\"10 20 1 1\") == \"10\"\nassert solution(\"10 20 2 1\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"5 3 2 1\") == \"5\"\nassert solution(\"5 7 2 2\") == \"10\"\nassert solution(\"-10 5 -2 -2\") == \"5\"\nassert solution(\"10 5 -2 -2\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n9 1 4 4 6 7\n''') == '2'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n8 4 9 7 6') == '2'\nassert solution('6\\n8 5 7 4 3') == '1'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"5\\n9 1 4 4 6 7\") == \"2\"\nassert solution(\"6\\n9 1 4 4 6 7\") == \"2\"\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n7\") == \"2\"\nassert solution(\"8\\n3\") == \"1\"\nassert solution(\"6\\n7\") == \"3\"\nassert solution(\"2\\n8\") == \"0\"\nprint(\"Congratulations, you passed all tests!\")\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"9\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\nassert solution('1\\n4 4 4 4 4') == '2'\nassert solution('7\\n1 1 1 1 1 1 1 1 1') == '1'\nassert solution('3\\n4 6 4 5') == '2'\nassert solution('5\\n4 4 4 4') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\"\nassert solution(\"5\\n7\\n4\") == \"2\"\nassert solution(\"6\\n4\\n7\") == \"1\"\nassert solution(\"1\\n3\\n5\") == \"1\"\nassert solution(\"6\\n4\\n7\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22''') == '3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7 24 21 23\n16 17 14 20 20 11 22\"\"\") == \"3\"\nassert solution(\"\"\"\n9 21 23\n18 18 18 18 18 18\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == \"3\"\n\nassert solution('''10 20 11 22 33 44 55 66 67\n19 20 21 21 20''') == \"8\"\n\nassert solution('''30 20 11 22 33 44 55 66 67\n19 20 21 21 20''') == \"7\"\n\nassert solution('''1 10 1 9\n1 10 10\n1 10 1\n1 11 1\n1 11 10\n1 11 1\n1 11 1\n1 11 1\n1 11 1\n1 11 1\n1 11 1''') == \"1\"\n\nassert solution('''1 10 1 9\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1\n2 11 10\n2 11 1",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"12 10 20 30 50\") == \"2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"15 24 21 23\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 5 6 7\n5 8 9 10 1\n''') == '3'\n\nassert solution('''\n7\n20 20 10 20 10 1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"10 20 30 40 50 60 70 80 90 100\") == \"8\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 24 21 23') == '3'\nassert solution('6 24 2 2 2') == '1'\nassert solution('5 20 18 20 10') == '3'",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"10 16 19 12 5 17 3 20 10 17 3 20\") == \"6\"\nassert solution(\"7 2 1 5 2 3 1 1 1 1 4\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\nprint(solution('''7 24 21 23\n16 17 14 20 20 11 22\n'''))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\n\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\n\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\n\nassert solution('''\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'\n\n\"\"\"\n\nn = int(input())\ndiffs = list(map(int, input().split()))\ndiffs.sort(reverse=True)\nres = 1\ni = 1\nwhile i < len(diffs):\n    if diffs[i] <= 2 * diffs[i - 1]:\n        res += 1\n        i += 1\n    else:\n        i += 2\nprint(res)\n\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"\nassert solution(\"20\") == \"16\"\nassert solution(\"30\") == \"19\"\nassert solution(\"40\") == \"18\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''\n10\n10 20 10 20 40 50 50 60 70 80 80 90 100\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == \"4\"\nprint(solution(input_data))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\nassert solution('''\n7\n1 2 3 4 5 6 7 8\n''') == '1'\nprint(\"check completed\")\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 10 50 110 250\") == \"4\"\nassert solution(\"5\\n1 2 5 6 7 10 21 23 24 49\") == \"4\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n2 10 50 110 250\") == \"4\"\nassert solution(\"6\\n4 7 12 100 150 199\") == \"3\"\nassert solution(\"5\\n2 10 50 110 250\") == \"1\"\nassert solution(\"5\\n3 4 5 8\") == \"2\"\nprint(\"All tests passed.\")\n",
        "num_ids_2": 35,
        "num_ids_4": 68
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''\n5\n5 2 11 3 7\n''') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 2'\nassert solution('4') == '1 2'\nassert solution('5') == '1 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1 2'\nassert solution('5') == '1 2'\nassert solution('6') == '1 4'\nassert solution('5 2 4 8 3 6') == '1 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5 2 8 3 6''') == '1 2'\nassert solution('''5\n2 5 8 3 7''') == '1 4'\nassert solution('''6\n2 5 10 1 10 2''') == '1 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1 2\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 4'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 8 3 6\\n') == '1 2'\nassert solution('5\\n5 2 11 3 7\\n') == '2 4'\nassert solution('6\\n2 5 10 1 10 2\\n') == '1 4'",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2 4 8 3 6\n''') == '1 2'\nassert solution('''\n5\n5 2 11 3 7\n''') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n5 2 8 3 6\n''') == '1 2'\nassert solution('''\n5\n5 2 11 3 7\n''') == '2 4'\nassert solution('''\n6\n2 5 10 1 10 2\n''') == '1 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1 4\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211220'\nassert solution('10') == '1010'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n121\n\n\"\"\") == \"021\"\nassert solution(\n\"\"\"\n6\n000000\n\n\"\"\") == \"001122\"\nassert solution(\n\"\"\"\n6\n211200\n\n\"\"\") == \"211200\"\nassert solution(\n\"\"\"\n6\n120110\n\n\"\"\") == \"120120\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n121\n''') == '021'\nassert solution('''\n6\n000000\n''') == '001122'\nassert solution('''\n6\n211200\n''') == '211200'\nassert solution('''\n6\n120110\n''') == '120120'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '001122'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n121\n''') == '021'\n\nassert solution('''6\n000000\n''') == '001122'\n\nassert solution('''6\n211200\n''') == '211220'\n\nassert solution('''6\n120110\n''') == '120120'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n121\") == \"021\"\nassert solution(\"6\\n000000\") == \"001122\"\nassert solution(\"6\\n211200\") == \"211200\"\nassert solution(\"6\\n120110\") == \"120120\"\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '211200'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"021\"\nassert solution(input()) == \"21122\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"10 1\") == \"21\"\nassert solution(\"30 1\") == \"2483\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"6 2\") == \"4\"\nassert solution(\"6 3\") == \"4\"\nassert solution(\"6 4\") == \"4\"\nassert solution(\"6 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 1\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == '4'\nassert solution('4 2') == '2'\nassert solution('6 2') == '4'\nassert solution('6 3') == '5'\nassert solution('6 4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '4'\nassert solution('6 1') == '4'\nassert solution('5 1') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1') == '4'\nassert solution('5 1') == '4'\nassert solution('4 1') == '4'\nassert solution('3 1') == '0'\nassert solution('4 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 1\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 3 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 2 4\\n') == '2'\nassert solution('8 7 1\\n') == '1'\n\"\"\"\n\nx, k, d = stdin.split()\nx = int(x)\nk = int(k)\nd = int(d)\nx_min = abs(x - d)\n\nfor i in range(1,k+1):\n    x_min = min(x_min, abs(x - (x - d*i)))\nprint(x_min)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 4') == '2'\nassert solution('7 2 5') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 5\") == \"2\"\nassert solution(\"3 2 4\") == \"2\"\nassert solution(\"1 1 5\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 4\") == \"2\"\nassert solution(\"5 5 6\") == \"0\"\nassert solution(\"5 5 1\") == \"1\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"10 10 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 4\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 4\") == \"3\"\nassert solution(\"2 4 6\") == \"2\"\nassert solution(\"5 8 5\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '1'\nassert solution('-1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 2 4\n''') == '2'\nassert solution('''3 2 2\n''') == '-1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 4') == '2'\nassert solution('5 2 4') == '1'\nassert solution('10 2 4') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('2128506') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(11) == \"2\"\nassert solution(14) == \"0\"\nassert solution(61441) == \"2\"\nassert solution(571576) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"14\") == \"0\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '4'\nassert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(11) == 2\nassert solution(14) == 0\nassert solution(61441) == 2\nassert solution(571576) == 10\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"571576\") == \"10\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"2\"\nassert solution(\"12\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\nassert solution('11') == '2'\n\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1 4'\nassert solution('1') == '1 1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '24'\nassert solution('5') == '120'\nassert solution('6') == '624'\nassert solution('7') == '1456'\nassert solution('8') == '3528'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '27'\nassert solution('10') == '10100'\nassert solution('100') == '10000'\n\n\n'''\nimport math\n\nimport sys",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"27\"\nprint(solution(input()))\n\"\"\"\nimport sys\nsys.stdin = open('input.txt')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'Correct!', 'Test 1 failed.'\nassert solution('4') == 'Correct!', 'Test 2 failed.'\nassert solution('10') == 'Correct!', 'Test 3 failed.'\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"27\"\n\"\"\"\n\na = int(input())\nprint(a ** (1/2))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"27\", \"Should be 27\"\n\n\"\"\",\"\"\"def solution(stdin: str) -> str:\n    pass\n\nassert solution(\"3\") == \"27\", \"Should be 27\"\n\"\"\",\"\"\"def solution(stdin: str) -> str:\n    pass\n\nassert solution(\"3\") == \"27\", \"Should be 27\"\n\"\"\",\"\"\"def solution(stdin: str) -> str:\n    pass\n\nassert solution(\"3\") == \"27\", \"Should be 27\"\n\"\"\",\"\"\"def solution(stdin: str) -> str:\n    pass\n\nassert solution(\"3\") == \"27\", \"Should be 27\"\n\"\"\",\"\"\"def solution(stdin: str) -> str:\n    pass",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"1\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(**locals()) == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '0'\nassert solution('3') == '1'\nassert solution('6') == '1'\nassert solution('10') == '0'\nassert solution('888') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\nassert solution(__import__('sys').stdin.read()) == '0'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"0\"\n\"\"\"\n\na = int(input())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''13''') == '1'\nassert solution('''927''') == '1'\nassert solution('''48''') == '0'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\nprint(solution(__import__('sys').stdin.read()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 0\nassert solution('0') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n7 8 9 10\n''') == '1', \"You have the correct answer\"\n\n'''\nExplanation:\n\n6 (n = 4) is too big. Let's do 5.\n\n2 = 3 + 1 (out of the biggest 5)\n3 = 3 + 1 (out of the biggest 5)\n4 = 3 + 1 (out of the biggest 5)\n\nSo, we have the answer 4.\n\n'''\nassert solution('''\n6\n3 5 4 7 2\n''') == '4', \"You have the correct answer\"\n\n'''\nExplanation:\n\n6 (n = 4) is too big. Let's do 5.\n\n2 = 3 + 2 (out of the biggest 5)\n3 = 3 + 2 (out of the biggest 5)\n4 = 3 + 2 (out of the biggest 5)\n5 = 3 + 2 (out of the biggest 5)\n6 = 3 + 2 (out of the biggest 5)\n\nSo, we have the answer 5.\n'''\n\n'''\nEXAMPLE:\n\nInput:\n4\n2 5 3 1\nOutput:\n4\n'''\n\n'''\nWe cannot do 5.\n\nSo, we can do 4.\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5 3 1') == '4', \"Wrong answer\"\nassert solution('2 1 2 1') == '2', \"Wrong answer\"\nassert solution('2 3 2 2 2 2 2 2') == '2', \"Wrong answer\"\n",
        "num_ids_2": 36,
        "num_ids_4": 58
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2 1 1\") == \"1\"\n\"\"\"\n\nimport sys\n\nn = int(sys.stdin.readline())\na = sys.stdin.readline().split()\n\na = sorted(list(map(int, a)))\n\nans = 0\n\nfor i in range(1, len(a)):\n    ans += a[i] * (10 ** (len(a) - i))\n\nprint(ans)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '0'\nassert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('7') == '1'\nassert solution('8') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5 3 1') == '4', \"3 + 2 + 1 + 1 + 1 = 4\"\nassert solution('7 4 3 2') == '5', \"3 + 7 = 5\"\nassert solution('1 2 3 4') == '7', \"5 + 1 = 6\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 46,
        "num_ids_4": 66
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == '4'\n\nassert solution('5 6 7 8') == '5 6 7 8'\n\nassert solution('1 2 3 4 5') == '4 5 6 7 8'\n\nassert solution('2 4 5 5 6') == '4 5 6 7 8'\n\nassert solution('1 2 3 4 5 6') == '4 5 6 7 8'",
        "num_ids_2": 29,
        "num_ids_4": 65
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5 3 1') == \"4\"\nassert solution('3 4 2 5') == \"0\"\nassert solution('5 6 5 4') == \"1\"\nassert solution('9 8 7 5') == \"2\"\nassert solution('4 5 8 7') == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n5 3 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3\n5 3 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7\n1 2 5 4 5 4 5 4\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n10\n7 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1 4 5 2 8 1",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5 3 1') == \"4\"\nassert solution('4 2 3 1') == \"3\"\nassert solution('5 1 2 3 4') == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10') == '2'\nassert solution('5\\n999999733 999999732\\n999999733 999999733\\n') == '1'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 1\n2 5\n6 6\n7 6\n''') == '2'\n\nassert solution('''\n10\n1 1\n1 2\n1 3\n1 4\n1 5\n2 2\n2 3\n2 4\n2 5\n3 3\n3 4\n3 5\n4 4\n4 5\n5 5\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 4\n8 6\n9 100\n''') == '2'\nassert solution('''\n2\n1 2\n4 1\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '8'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '1'\n\"\"\"",
        "num_ids_2": 48,
        "num_ids_4": 88
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('''8 7\n8 1\n6 10''') == '8'\nassert solution('''999999733 999999732\n999999733 999999733\n999999733 999999733''') == '999999733'\n\n\n\n-----Explanation-----\n\nIn the first test case, you need to buy all of the $8$ packages, but you only have $8$ shovels. You can choose one package of each type, and you have $1$ shovel of each type.\n\nIn the second test case, you need to buy $8$ packages of $1$ shovel.\n\nIn the third test case, you can buy $1$ package of $6$ shovels.\n\nIn this case, there are two possible solutions: you can buy $8$ packages of one $1$ shovel and $6$ packages of $1$ shovel, or you can buy $6$ packages of $1$ shovel and $8$ packages of $1$ shovel.\n'''",
        "num_ids_2": 16,
        "num_ids_4": 29
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 7') == '2'\nassert solution('8 1') == '8'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\nassert solution('999999733 999999733') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 51
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n5 7\n1 2\n9999999 12\n9999999 99\n''') == '2'\nassert solution('''\n1 2\n10 15\n1 3\n999999 1\n999999 9\n''') == '1'\nassert solution('''\n1 100\n10 100\n1 3\n99999999 1\n99999999 9\n''') == '99999999'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n1 2\\n1 2\\n0 1\\n') == '1'\nassert solution('2 2\\n1 2\\n0 1\\n') == '0'\nassert solution('3 3\\n1 2 3\\n0 1 2\\n') == '1'\n\"\"\"\n\nfrom itertools import permutations",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"4 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'\nassert solution('0 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\", \"Test failed\"\nassert solution(\"2 1 2\") == \"0\", \"Test failed\"\nassert solution(\"1 2\") == \"1\", \"Test failed\"\nassert solution(\"0 1\") == \"4\", \"Test failed\"",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '5.00000000000000000000'\nassert solution('5 3 0') == '5.00000000000000000000'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 9 0\") == \"5.0\"\nassert solution(\"1 1 1 0\") == \"1.0\"\n\n------\n\nH, M = map(int, input().split())\nH %= 24\nM %= 60",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"3 4 9 0\") == \"5.00000000000000000000\"\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 4 1') == '5.00000000000000000000'\nassert solution('1 1 1 1') == '1.00000000000000000000'\nassert solution('0 1 1 1') == '1.00000000000000000000'\nassert solution('0 0 0 0') == '0.00000000000000000000'\nassert solution('0 0 0 0') == '0.00000000000000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5 3 1\") == \"5.000000000000\"\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 9 0''') == '5.0'\nassert solution('''1 10 1 0''') == '10.0'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 0\") == \"5.00000000000000000000\"\nassert solution(\"1 2 1\") == \"2.00000000000000000000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 1 9 0') == '1.00000000000000000000'\nassert solution('0 0 9 0') == '0.00000000000000000000'\nassert solution('0 0 0 9') == '0.00000000000000000000'\nassert solution('4 4 9 0') == '4.00000000000000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n5 3 5 7\n\"\"\"\n) == \"5.00000000000000000000\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '8'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n1 4 5 60 4') == '8'\nassert solution('3 1\\n1 1 1') == '6'\nassert solution('15 2\\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3') == '97'\n",
        "num_ids_2": 34,
        "num_ids_4": 65
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\n\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n\") == \"8\"\nassert solution(\"3 1\\n\") == \"6\"\nassert solution(\"15 2\\n\") == \"97\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data='''5 4\n1 4 5 60 4\n''') == '8'\n\nassert solution(input_data='''3 1\n1 1 1\n''') == '6'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n') == '8'\nassert solution('3 1\\n') == '6'\nassert solution('15 2\\n') == '97'\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'\nassert solution('15 2') == '97'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 1\n1 1 1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n\"\"\") == \"97\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n\"\n\"2 -2 3 1 2\\n\"\n\"1 3\\n\"\n\"4 5\\n\"\n\"2 5\\n\"\n\"1 3\") == \"6\"\n\nassert solution(\"5 4\\n\"\n\"2 -2 3 1 4\\n\"\n\"3 5\\n\"\n\"3 4\\n\"\n\"2 4\\n\"\n\"2 5\\n\"\n\"1 3\") == \"7\"\n\nassert solution(\"1 0\\n\"\n\"1000000\") == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"2 -2 3 1 2\") == \"2\"\nassert solution(\"1 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n\n''') == '7'\nassert solution('''1 0\n1000000\n\n''') == '0'\nassert solution('''2 0\n1000000\n\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\nassert solution('''3\n2 1\n1 2\n''') == '7'\nassert solution('''0\n0\n''') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\") == \"6\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\"\nassert solution(\"1 0\\n1000000\") == \"0\"\n",
        "num_ids_2": 60,
        "num_ids_4": 75
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"1000000\") == \"7\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_line) == str(solution_check(input_line))\ninput_line = sys.stdin.read()\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('4\\nh\\ndb\\nh\\nf') == 'Yes\\nYes\\nYes\\nYes'\nassert solution('1\\nf') == 'Yes'\n",
        "num_ids_2": 89,
        "num_ids_4": 102
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\"\"\") == \"Yes\"\nassert solution(\"\"\"\nabc\n123\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\"\"\") == \"No\"\nassert solution(\"\"\"\nyaz\nbad\nabc\n123\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\"\"\") == \"No\"\nassert solution(\"\"\"\nabc\n123\nxyz\nr\ndabcef\naz\naa\nbad\nbad\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbad\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nfced\\nxyz\\nr\") == \"Yes\"\nassert solution(\"3\\nfced\\nxyz\\nr\") == \"Yes\"\nassert solution(\"3\\nfced\\nxyz\\nr\") == \"Yes\"\nassert solution(\"3\\nfced\\nxyz\\nr\") == \"Yes\"\nassert solution(\"3\\nfced\\nxyz\\nr\") == \"No\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"fced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\"\n) == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\n    \"dsfdsfdsfsfsafd\\nafdaf\\nafaf\\nafaf\\nafaf\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\nafas\\",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n\nassert solution(\"\"\"\naz\naz\nbad\nbabc\n\"\"\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\n\"\"\") == \"No\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n    x\n    y\n    z\n    \"\"\") == \"No\"\nassert solution(\"\"\"\n    a\n    b\n    c\n    \"\"\") == \"No\"\nassert solution(\"\"\"\n    x\n    y\n    z\n    \"\"\") == \"Yes\"\nassert solution(\"\"\"\n    abcdefghijklmnopqrstuvwxyz\n    \"\"\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n4 1'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2'\nassert solution('1 0\\n1000000\\n') == '0\\n0'\n",
        "num_ids_2": 86,
        "num_ids_4": 106
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 5\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n1 0\n1000000\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"2 -2 3 1 2\") == \"4\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\nassert solution('5 4') == '7'\nassert solution('1 0') == '0'\nassert solution('1 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''1 0\n1000000\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6\\n2\\n4 1 \\n'''\nassert solution('''5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7\\n2\\n3 2 \\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"1000000\") == \"7\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 4\\n\"\n    \"2 -2 3 1 2\\n\"\n    \"1 3\\n\"\n    \"4 5\\n\"\n    \"2 5\\n\"\n) == \"6\"\n\nassert solution(\n    \"5 4\\n\"\n    \"2 -2 3 1 4\\n\"\n    \"3 5\\n\"\n    \"3 4\\n\"\n    \"2 4\\n\"\n) == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '6\\n1\\n'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4\") == \"6\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1000000\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\n\nThe second example is described in the problem statement.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\".\\n2 1 5 4 3\") == \"4\"\nassert solution(\".\\n1 2 3\") == \"3\"\nassert solution(\".\\n1 2 4 3\") == \"3\"\nassert solution(\".\\n1 2 3 4\") == \"3\"\nassert solution(\".\\n1 2 3 4 5\") == \"3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4\\nRRRLL'\nassert solution('7\\n1 3 5 6 7 4 2') == '7\\nLLRL'\n\n\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'\n\nassert solution('''7\n1 3 5 6 7 4 2\n''') == '7'\n\nassert solution('''3\n1 2 3\n''') == 'LLL'\n\nassert solution('''4\n1 2 4 3\n''') == 'LLRL'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == 'LLRL'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == '4'\n\"\"\"\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\", \"Wrong solution for 4\"\nassert solution(\"7\") == \"7\", \"Wrong solution for 7\"\nassert solution(\"3\") == \"LLL\", \"Wrong solution for 3\"",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(t1) == \"4\"\nassert solution(t2) == \"LLRL\"\nassert solution(t3) == \"7\"\n\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 5 3 4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''5\n1 2 5 3 4\n''') == '4'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"4\"\nassert solution(input) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 5 3 4''') == '4'\nassert solution('''2\n1 2''') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 2''') == '2'\nassert solution('''5\n1 2 5 3 4''') == '4'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''10\n5 9 8 7 6 2 1 3 4''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n6 5 4 3 2 4 3''') == '2'\nassert solution('''1\n2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3''') == '2'\nassert solution('''6\n5 4 3 2 4 3''') == '3'\nassert solution('''7\n6 5 4 3 2 4 3''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n''') == '4'\nassert solution('''\n2\n1 2\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution() == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(inp) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\\n1 2\") == \"1\"\nassert solution(\"5 3\\n1 2 3 4 5\") == \"2\"\nassert solution(\"5 3\\n1 2 3 3 3\") == \"0\"\n",
        "num_ids_2": 33,
        "num_ids_4": 51
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 3 3') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == \"1\"\nassert solution('''\n5 3\n1 2 3 4 5\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n5 3\n1 2 2 4 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 3\n1 2 3 4 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 3\n1 2 3 3 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 3\n1 2 3 4 5\n\"\"\") == \"0\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3 4') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"1 1 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"20 30 20\") == \"20\"\nassert solution(\"30 30 20\") == \"20\"\nassert solution(\"30 30 30\") == \"30\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"2 10 5\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('2 2 2') == '2'\nassert solution('1 1 3') == '1'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('0 0 1') == '1'\n\n\"\"\"\n\nn, a, b = stdin.strip().split()\n\na, b = int(a), int(b)\n\nn = int(n)\n\nans = 0\ni = 0\nwhile i < n:\n    ans += 1\n    if ans >= a:\n        ans = 1\n    i += 1\n\nans += b\n\nprint(ans)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"1 3 4\n\"\"\") == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n2 3 5') == '4'\nassert solution('2\\n8\\n6 4 8') == '16'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n8 2 12 6 4 24 16 3\n1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n3\n2\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n8 2 12 6 4 24 16 3\n1\n2\n4\n6\n7\n\"\"\") == \"4\", \"First example\"\nassert solution(\"\"\"\n1\n3\n4\n10\n\"\"\") == \"10\", \"Second example\"\nassert solution(\"\"\"\n3\n4 4 2\n2\n1\n\"\"\") == \"2\", \"Third example\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n5\n5 2 4 1\n''') == '4'\n\n'''\n--- Part Two ---\n\nAfter testing the code above, we find that it is correct. However, this data set is contradictory and it is impossible to find any integer $x$ that can be the guessed number, or say that the input data is contradictory and it is impossible to find such number.\n\nYou can count on this, and find a way to solve the puzzle. There are a lot of possible solutions.\n\n1) If you provide correct data, the second and third answers should be the same.\n2) The first answer should be the one that is closest in value to the guessed number.\n3) In the second case, the number of the divisors that are closer to the guessed number should be the smallest.\n\nYou are provided with a random list of almost all its divisors. You need to find the minimum possible integer $x$ that can be the guessed number, or say that the input data is contradictory and it is impossible to find such number.\n\nYou have to answer $t$ independent queries.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 25$) \u2014 the number of queries. Then $t$ queries follow.\n\nThe first line of the query contains one integer $n$ ($1 \\le n \\le 300$) \u2014 the number of divisors in the list.\n\nThe second line of the query contains $n$ integers $d_1, d_2, \\dots, d_n$ ($2 \\le d_i \\le 10^6$), where $d_i$ is the $i$-th divisor of the guessed number. It is guaranteed that all values $d_i$ are distinct.\n\nThe third line of the query contains $m$ integers $m_1, m_2, \\dots, m_m$ ($1 \\le m_i \\le 100$), where $m_i$ is the $i$-th prime factor of the given number.\n\nThe fourth line of the query contains an integer $p$ ($1 \\le p \\le 100$), which is the common prime factor of the given number.\n\n4\n8\n5\n2\n6\n\n10\n2\n3\n5\n\n13\n2\n3\n5\n\n16\n2\n3\n5\n\n25\n2\n3\n5\n\n26\n2\n3\n5\n\n32\n2\n3\n5\n\n38\n2\n3\n5\n\n40\n2\n3\n5\n\n42\n2\n3\n5\n\n44\n2\n3\n5\n\n50\n2\n3\n5\n\n56\n2\n3\n5\n\n72\n2\n3\n5\n\n80\n2\n3\n5\n\n85\n2\n3\n5\n\n86\n2\n3\n5\n\n93\n2\n3\n5\n\n100\n2\n3\n5\n\n\n-----Output-----\n\nFor each query print the answer to it.\n\nIf the input data in the query is contradictory and it is impossible to find such number $x$ that the given list of divisors is the list of almost all its divisors, print -1. Otherwise print the minimum possible $x$.\n\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2 3\n4\n2 1 2 3\n''') == \"4\"\n\nassert solution('''\n5\n1 2 3 4 5\n4\n1 3 2 4\n''') == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"8\") == \"8\"\nassert solution(\"12\") == \"12\"\nassert solution(\"6\") == \"6\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"7\") == \"7\"\nassert solution(\"4\") == \"1\"\nassert solution(\"8\") == \"1\"\nassert solution(\"9\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1', \"Wrong answer\"\nassert solution('2') == '-1', \"Wrong answer\"\nassert solution('3') == '1', \"Wrong answer\"\nassert solution('4') == '1', \"Wrong answer\"\nassert solution('5') == '-1', \"Wrong answer\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"-1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"3\\n5 6 1?\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n6 7 8 9\"\nassert solution() == \"2\\n6 7 8 9\"\nassert solution() == \"1\\n6 7 8 9\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '3\\n5 6 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '6'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '6'\nassert solution('6 5 6 5 6') == '2'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 5 5 1 6 1''') == '3'\nassert solution('''5\n2 4 2 4 4''') == '2'\nassert solution('''5\n6 6 6 6 6''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"6 6 6 6 6\"\nassert solution(\"10\") == \"9 9 9 9 9\"\nassert solution(\"11\") == \"10 10 10 10 10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '435'\nassert solution(input) == '103'\nassert solution(input) == '99'\nassert solution(input) == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == '1'\n\nassert solution('''9\n9\n8\n7\n6\n5''') == '8'\n\nassert solution('''3\n6\n9\n10\n12\n14''') == '14'\n\nassert solution('''3\n4\n5\n7\n9\n11\n13''') == '11'\n\nassert solution('''5\n9\n8\n7\n6\n5''') == '9'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n40\n''') == '40'\nassert solution('''\n30\n''') == '33'\nassert solution('''\n50\n''') == '50'\nassert solution('''\n60\n''') == '59'\nassert solution('''\n67\n''') == '69'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4\n''') == '3'\nassert solution('''\n6\n7\n''') == '7'\nassert solution('''\n12\n13\n''') == '13'\nassert solution('''\n204\n206\n''') == '204'\nassert solution('''\n1876\n1877\n''') == '1877'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1\\n3\\n12\\n4\\n5\\n27\\n6\\n7\\n8\\n9\\n12\\n13\\n14\\n15\\n19\\n20\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n31\\n32\\n33\\n34\\n35\\n37\\n38\\n39\\n40\\n41\\n43\\n44\\n45\\n47\\n48\\n49\\n50\\n51\\n52\\n53\\n54\\n55\\n56\\n57\\n58\\n59\\n60\\n61\\n62\\n63\\n64\\n65\\n66\\n67\\n68\\n69\\n70\\n71\\n72\\n73\\n74\\n75\\n76\\n77\\n78\\n79\\n80\\n81\\n82\\n83\\n84\\n85\\n86\\n87\\n88\\n89\\n90\\n91\\n92\\n93\\n94\\n95\\n96\\n97\\n98\\n99\\n100\\n101\\n102\\n103\\n104\\n105\\n106\\n107\\n108\\n109\\n110\\n111\\n112\\n113\\n114\\n115\\n116\\n117\\n118\\n119\\n120\\n121\\n122\\n123\\n124\\n125\\n126\\n127\\n128\\n129\\n130\\n131\\n132\\n133\\n134\\n135\\n136\\n137\\n138\\n139\\n140\\n141\\n142\\n143\\n144\\n145\\n146\\n147\\n148\\n149\\n150\\n151\\n152\\n153\\n154\\n155\\n156\\n157\\n158\\n159\\n160\\n161\\n162\\n163\\n164\\n165\\n166\\n167\\n168\\n169\\n170\\n171\\n172\\n173\\n174\\n175\\n176\\n177\\n178\\n179\\n180\\n181\\n182\\n183\\n184\\n185\\n186\\n187\\n188\\n189\\n190\\n191\\n192\\n193\\n194\\n195\\n196\\n197\\n198\\n199\\n200\\n201\\n202\\n203\\n204\\n205\\n206\\n207\\n208\\n209\\n210\\n211\\n212\\n213\\n214\\n215\\n216\\n217\\n218\\n219\\n220\\n221\\n222\\n223\\n224\\n225\\n226\\n227\\n228\\n229\\n230\\n231\\n232\\n233\\n234\\n235\\n236\\n237\\n238\\n239\\n240\\n241\\n242\\n243\\n244\\n245\\n246\\n247\\n248\\n249\\n250\\n251\\n252\\n253\\n254\\n255\\n256\\n257\\n258\\n259\\n260\\n261\\n262\\n263\\n264\\n265\\n266\\n267\\n268\\n269\\n270\\n271\\n272\\n273\\n274\\n275\\n276\\n277\\n278\\n279\\n280\\n281\\n282\\n283\\n284\\n285\\n286\\n287\\n288\\n289\\n290\\n291\\n292\\n293\\n294\\n295\\n296\\n297\\n298\\n299\\n300\\n301\\n302\\n303\\n304\\n305\\n306\\n307\\n308\\n309\\n310\\n311\\n312\\n313\\n314\\n315\\n316\\n317\\n318\\n319\\n320\\n321\\n322\\n323\\n324\\n325\\n326\\n327\\n328\\n329\\n330\\n331\\n332\\n333\\n334\\n335\\n336\\n337\\n338\\n339\\n340\\n341\\n342\\n343\\n344\\n345\\n346\\n347\\n348\\n349\\n350\\n351\\n352\\n353\\n354\\n355\\n356\\n357\\n358\\n359\\n360\\n361\\n362\\n363\\n364\\n365\\n366\\n367\\n368\\n369\\n370\\n371\\n372\\n373\\n374\\n375\\n376\\n377\\n378\\n379\\n380\\n381\\n382\\n383\\n384\\n385\\n386\\n387\\n388\\n389\\n390\\n391\\n392\\n393\\n394\\n395\\n396\\n397\\n398\\n399\\n400\\n401\\n402\\n403\\n404\\n405\\n406\\n407\\n408\\n409\\n410\\n411\\n412\\n413\\n414\\n415\\n416\\n417\\n418\\n419\\n420\\n421\\n422\\n423\\n424\\n425\\n426\\n427\\n428\\n429\\n430\\n431\\n432\\n433\\n434\\n435\\n436\\n437\\n438\\n439\\n440\\n441\\n442\\n443\\n444\\n445\\n446\\n447\\n448\\n449\\n450\\n451\\n452\\n453\\n454\\n455\\n456\\n457\\n458\\n459\\n460\\n461\\n462\\n463\\n464\\n465\\n466\\n467\\n468\\n469\\n470\\n471\\n472\\n473\\n474\\n475\\n476\\n477\\n478\\n479\\n480\\n481\\n482\\n483\\n484\\n485\\n486\\n487\\n488\\n489\\n490\\n491\\n492\\n493\\n494\\n495\\n496\\n497\\n498\\n499\\n500\\n501\\n502\\n503\\n504\\n505\\n506\\n507\\n508\\n509\\n510\\n511\\n512\\n513\\n514\\n515\\n516\\n517\\n518\\n519\\n520\\n521\\n522\\n523\\n524\\n525\\n526\\n527\\n528\\n529\\n530\\n531\\n532\\n533\\n534\\n535\\n536\\n537\\n538\\n539\\n540\\n541\\n542\\n543\\n544\\n545\\n546\\n547\\n548\\n549\\n550\\n551\\n552\\n553\\n554\\n555\\n556\\n557\\n558\\n559\\n560\\n561\\n562\\n563\\n564\\n565\\n566\\n567\\n568\\n569\\n570\\n571\\n572\\n573\\n574\\n575\\n576\\n577\\n578\\n579\\n580\\n581\\n582\\n583\\n584\\n585\\n586\\n587\\n588\\n589\\n590\\n591\\n592\\n593\\n594\\",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\nprint('ALL TEST CASES PASSED')",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    432\n''') == '435'\nassert solution('''\n    99\n''') == '103'\nassert solution('''\n    237\n''') == '237'\nassert solution('''\n    42\n''') == '44'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"ecos\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"abac\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"0\"\nassert solution(\"abac\") == \"aac\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"b\"\nassert solution(\"c\") == \"c\"",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abac\\n3\\n2 1 0\\necoosdcefr\\n10\") == \"aac\"\nassert solution(\"abc\\n1\\n0\\necoosdcefr\\n10\") == \"aba\"\nassert solution(\"abac\\n3\\n1 0 1\\necoosdcefr\\n10\") == \"aba\"\n\"\"\"",
        "num_ids_2": 56,
        "num_ids_4": 85
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == \"aba\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abac\") == \"aac\", \"First\"\nassert solution(\"abc\") == \"aab\", \"Second\"\nassert solution(\"aba\") == \"aba\", \"Third\"\nassert solution(\"acb\") == \"a\", \"Fourth\"\nassert solution(\"aba\") == \"aba\", \"Fifth\"\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"abab\"\nassert solution(\"2\") == \"ba\"\nassert solution(\"0\") == \"b\"\nassert solution(\"3\") == \"aba\"\nassert solution(\"4\") == \"aaaa\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"ab\"\nassert solution(\"2\") == \"aba\"\nassert solution(\"3\") == \"c\"\nassert solution(\"4\") == \"aac\"\nassert solution(\"5\") == \"aba\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n    ''') == \"aac\"\nassert solution('''\na\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n    ''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n    ''') == \"aac\"\n\nassert solution('''\n1\n2\n0\nabac\n3\n1 0 1\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n    ''') == \"abac\"\n\nassert solution('''\n2\n3\n1 0 1\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n    ''') == \"abc\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\na\nb\nc\n''') == 'aac'\nassert solution('''\na\n''') == 'a'\nassert solution('''\na\na\nb\n''') == 'b'\nassert solution('''\nababac\n3\n1 0 1\nabc\n0\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\na\n1\n0\naa\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aaa'\nassert solution('''\naba\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'a'\nassert solution('''\nabc\n3\n2 1 0\nabac\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aa'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'b'\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"aa\"\nassert solution(\"3\") == \"aaa\"\nassert solution(\"4\") == \"aaaa\"\nassert solution(\"5\") == \"aaaaa\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline().rstrip()\nprint(solution(sys.stdin.read()))\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'b'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"b\"\nassert solution(\"1000000000000001\") == \"a\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"abc\"\nassert solution(\"10\") == \"zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz",
        "num_ids_2": 1578,
        "num_ids_4": 1578
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'b'\nassert solution('3') == 'c'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"b\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == 'a'\nassert solution(\"2\") == 'aa'\nassert solution(\"3\") == 'ba'\nassert solution(\"4\") == 'ca'\nassert solution(\"5\") == 'da'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '1'\nassert solution('6') == '1'\nassert solution('20') == '1'\nassert solution('20') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nto be or not to be\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\") == \"11\"",
        "num_ids_2": 39,
        "num_ids_4": 62
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"10\") == \"11\"\nassert solution(\"6\") == \"11\"\nassert solution(\"10\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"12\"\nassert solution(\"a ab a a b ab a a b c\") == \"13\"\nassert solution(\"a aa aa aa bb bb\") == \"11\"",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6\\n\"\n    \"to be or not to be\\n\"\n) == \"12\"\n\nassert solution(\n    \"6\\n\"\n    \"aa bb aa aa bb bb\\n\"\n) == \"13\"\n\nassert solution(\n    \"6\\n\"\n    \"AB aa AB bb\"\n) == \"11\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\nto be or not to be\n''') == '12'\nassert solution('''10\na ab a a b ab a a b c\n''') == '13'\nassert solution('''6\naa bb aa aa bb bb\n''') == '11'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\nto be or not to be\n'''\n) == '12'\nassert solution(\n'''\naa bb aa aa bb bb\n'''\n) == '13'\nassert solution(\n'''\nAB aa AB bb\n'''\n) == '11'\nassert solution(\n'''\nAaaa bbb bbb\n'''\n) == '10'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''to be or not to be''') == '12'\nassert solution('''aa bb aa aa bb bb''') == '11'\nassert solution('''ab aa ab ab ab ab ab''') == '10'",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"10\") == \"13\"\nassert solution(\"6\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('10') == '10'\nassert solution('6') == '6'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n5 4 2 6 5 1 9 2\n''') == \"20\"\nassert solution('''\n5 1\n1 1 1 1 1\n''') == \"1\"\nassert solution('''\n4 2\n1 2000 2000 2\n''') == \"4000\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '4000'\nassert solution(input_simple) == '2000'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\n1 4 2\n\"\"\") == \"4000\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"20\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"4 2\") == \"4000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''5 1\n1 1 1 1 1''') == '5'\nassert solution('''5 3\n1 2 3 4 5''') == '3 2 3'\nassert solution('''5 3\n1 2 3 4 5''') == '5 2 3'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == \"20 3 2 3\"\nprint(solution(input_string))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_string) == example_output\nassert solution(input_string) == output\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"1\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"5 1\") == \"3\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"5 1\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 -5 3 2\\n') == '1'\nassert solution('6\\n16 -5 -11 -15 10 5 4 -4\\n') == '0'\nassert solution('10\\n-1 1 -1 1 -1 1 1 -1 -1\\n') == '6'\nassert solution('13\\n-4 -3 -2 -1 1 0\\n') == '3'\n",
        "num_ids_2": 45,
        "num_ids_4": 97
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n\n\u041f\u0440\u0438\u043c\u0435\u0440 1\n\u0412\u0445\u043e\u0434\n1\n-5 3 2\n\n\u0412\u044b\u0445\u043e\u0434\n1\n\n\u041f\u0440\u0438\u043c\u0435\u0440 2\n5\n4 -2 3 2\n\n\u0412\u044b\u0445\u043e\u0434\n0\n\n\u041f\u0440\u0438\u043c\u0435\u0440 3\n9\n-1 1 -1 1 -1 1 1 -1 -1\n\n\u0412\u044b\u0445\u043e\u0434\n6\n\n\u041f\u0440\u0438\u043c\u0435\u0440 4\n8\n16 -5 -11 -15 10 5 4 -4\n\n\u0412\u044b\u0445\u043e\u0434\n3\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\nassert solution('5\\n1 -5 3 2') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\"",
        "num_ids_2": 40,
        "num_ids_4": 94
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\n\nassert solution('5\\n4 -2 3 -9 2') == '0'\n\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\n\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"1 -5 3 2\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"5\n4 -2 3 -9 2\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"9\n-1 1 -1 1 -1 1 1 -1 -1\n\"\"\") == \"6\"\n\nassert solution(\n\"\"\"8\n16 -5 -11 -15 10 5 4 -4\n\"\"\") == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('5 4 -2 3 2') == '0'\nassert solution('9 -1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8 -16 -5 -11 -15 10 5 4 -4') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 76
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000\\n'\nassert solution('''\n2\n1 100\n1 1000000000\n1000000000 1000000000\n''') == '1000000000\\n2000000000\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n2 100') == '0'\nassert solution('1\\n100\\n2 100') == '2'\nassert solution('1\\n100\\n2 100000000000') == '1000000000'",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\n\nassert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\n\nassert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"0\\n2\\n10\\n1000000000\\n2000000000\"\nassert solution(\"\"\"\n2\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n\"\"\") == \"0\\n2\\n10\\n1000000000\\n2000000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n5\\n2\\n100') == '0'\nassert solution('1\\n2\\n5\\n2\\n100') == '2'\nassert solution('1\\n100\\n2\\n100') == '100'\nassert solution('1\\n2\\n100\\n2\\n100') == '100'\nassert solution('1\\n2\\n100\\n2\\n100') == '200'\n",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\\n2\\n10\\n1000000000\\n2000000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1') == '0'\nassert solution('2\\n2\\n1') == '2'\nassert solution('3\\n3\\n2') == '1'\nassert solution('4\\n4\\n3') == '2'\nassert solution('5\\n5\\n4') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0\n2\n10\n1000000000\n2000000000\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n\") == \"0\"\nassert solution(\"1\\n100\\n\") == \"200\"\nassert solution(\"2\\n2\\n\") == \"1\"\nassert solution(\"5\\n2\\n\") == \"1000000000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n5\n6\n10''') == '0'\nassert solution('''1\n2\n5\n6\n10''') == '2'\nassert solution('''1\n2\n3\n4\n5''') == '10'\nassert solution('''1\n2\n3\n4\n5''') == '9'\nassert solution('''5\n3\n2\n1\n4\n5''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"7\") == \"-1\"\nassert solution(\"7777\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"17\") == \"none\"\nassert solution(\"10\") == \"none\"\nassert solution(\"1\") == \"none\"\nassert solution(\"11\") == \"none\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"101\") == \"4\"\nassert solution(\"5\") == \"None\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"-1\") == -1\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"-1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"200\") == \"None\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"111\") == \"None\"\n\n---Explanation---\nThe first occurrence of the first 7 in the sequence 7,77,777,777,777,777,777,777,777,777 is at index 4.\n\n\"\"\"\n\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"101\") == \"4\"\nassert solution(\"333\") == \"None\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"None\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == 'None'\nassert solution('100') == 'None'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\n\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 4 5 3 1''') == '4'\nassert solution('''5 5\n1 2 3 4 5''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"15 8\") == \"48\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == str(sol_test.solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635,",
        "num_ids_2": 1452,
        "num_ids_4": 1452
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''\n5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\nassert solution('''10 10\n1 2 5 3 5 7 8 9 9 9 9\n''') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"4 5\\n\"\n    \"1 2 3 4 5\"\n    ) == \"4\"\n\nassert solution(\n    \"3 3\\n\"\n    \"1 2 3\"\n    ) == \"0\"\n\nassert solution(\n    \"15 8\\n\"\n    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\"\n    ) == \"48\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 4 5 3 1\\n') == '4'\nassert solution('5 5\\n1 2 3 4 5\\n') == '1'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\n\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\n\nassert solution('''5 16\n5 5 5 5 5\n''') == '1'\n\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '1'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"5 8\n2 3 1 1 2\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"5 16\n5 5 5 5 5\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"5 26\n5 5 5 5 5\n\"\"\") == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 8\\n2 3 1 1 2\\n') == '4'\nassert solution(\n    '5 10\\n5 5 5 5 5\\n') == '2'\nassert solution(\n    '5 16\\n5 5 5 5 5\\n') == '1'\nassert solution(\n    '5 26\\n5 5 5 5 5\\n') == '-1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5 8\n2 3 1 1 2\n''') == \"4\"\n\nassert solution(\n'''\n5 16\n5 5 5 5 5\n''') == \"2\"\n\nassert solution(\n'''\n5 26\n5 5 5 5 5\n''') == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '2'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''\n5 30\n5 5 5 5 5\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 15') == '1'\nassert solution('5 26') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 15') == '1'\nassert solution('5 26') == '-1'\nprint('all tests passed')\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 7\") == \"1\"\nassert solution(\"5 6\") == \"2\"\nassert solution(\"5 26\") == \"2\"\nassert solution(\"5 16\") == \"1\"\nassert solution(\"5 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('2') == '0'\nassert solution('3') == '-1'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 3 2\n''') == '1'\nassert solution('''4\n24 21 14 10\n''') == '3'\nassert solution('''5\n1 3 5 2\n''') == '-1'\nassert solution('''6\n1 3 1 4 5\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution(input_string = '2') == '0'\nassert solution(input_string = '5') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 3 6 9 12\n\nInput\n4\n24 21 14 10\n\nOutput\n3\n\nInput\n2\n500 500\n\nOutput\n0\n\nInput\n3\n14 5 1\n\nOutput\n1\n\nInput\n5\n1 3 6 9 12\n\nOutput\n1\n''') == '1'\nprint(solution('''4\n24 21 14 10\n\nInput\n4\n24 21 14 10\n\nOutput\n3\n\nInput\n2\n500 500\n\nOutput\n0\n\nInput\n3\n14 5 1\n\nOutput\n1\n\nInput\n5\n1 3 6 9 12\n\nOutput\n1''') == '1')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 3 6 9 12\n''') == \"1\"\n\nassert solution('''\n2\n500 500\n''') == \"0\"\n\nassert solution('''\n3\n14 5 1\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(samples[0]) == \"3\"\nassert solution(samples[1]) == \"0\"\nassert solution(samples[2]) == \"1\"\nassert solution(samples[3]) == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4\\n\"\n    \"24 21 14 10\"\n) == \"3\"\n\nassert solution(\n    \"2\\n\"\n    \"500 500\"\n) == \"0\"\n\nassert solution(\n    \"3\\n\"\n    \"14 5 1\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 2 15 15 15') == '5'\nassert solution('6 1\\n36 4 1 25 9 16') == '2'\n\n'''\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n1 2 5\n''') == '1'\nassert solution('''\n2 5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n4 3\n1 3 5 7\n''') == '2'\nassert solution('''\n6 2\n1 2 4 8 10 9\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\\n5 4 9 8\\n\") == \"2\"\nassert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"4\"\nassert solution(\"7 1\\n100 500 100 500\\n\") == \"7\"\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n\n''') == '4'\nassert solution('''4 4\n1 10 100 1000\n\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''6 1\n36 4 1 25 9 16\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n1 2 15 15 15\\n') == '5'\nassert solution('6 1\\n36 4 1 25 9 16\\n') == '2'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"5 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"4 4\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('5 10 10 10\\n8 10 3 6') == '-1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('10 10 5 3 6 8 3 4\\n5 9 8 3 2 3') == '5'",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nassert solution('5 10 7\\n8 10 3 6\\n') == '-1'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '8'\nassert solution(input()) == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('2 10 7') == '-1'\nassert solution('3 2 7') == '3'\nassert solution('4 2 7') == '-1'\nassert solution('5 2 7') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('2 2 2') == '2'\nassert solution('1 1 1') == '-1'\nassert solution('4 4 4') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"4\"\nassert solution(\"1 10\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"4 10 9\") == \"4\"\nassert solution(\"100 100 100\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 10 7\\n\"\n    \"8 10 3 6\"\n    ) == \"8\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 10 7\") == \"8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 4\n1\n3\n2\n\n''') == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution('''6 3 4\n1\n3\n3\n2\n3\n2\n\n''') == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"\nassert solution('''6 3 4\n1\n1\n3\n2\n3\n2\n\n''') == \"Yes\\nYes\\nYes\\nYes\\nYes\\nYes\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 4\") == \"No\\nNo\"\nassert solution(\"1\") == \"Yes\\nYes\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('4 5 7') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\nassert solution('5 5 3') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes'\n",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'No\\nYes\\nNo\\nYes\\nYes\\nYes\\nYes'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3 4\\n3\\n1\\n3\\n2\") == \"No\\nNo\\nYes\"\n\"\"\"\n\nimport math\n\nN, K, Q = list(map(int, stdin.readline().strip().split()))",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 3 4\n3\n1\n3\n2\n\n''') == 'No\\nNo\\nYes'\nassert solution('''6 3 4\n1\n2\n3\n2\n1\n1\n\n''') == 'No\\nNo\\nNo'\nassert solution('''6 3 4\n1\n2\n3\n2\n1\n1\n\n''') == 'Yes\\nYes\\nYes'\nassert solution('''6 3 4\n1\n2\n3\n2\n1\n1\n\n''') == 'Yes\\nYes\\nYes'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == 'YES\\n00\\n10'\nassert solution('3 3') == 'YES\\n010\\n0000'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution) == \"YES\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"0 0 0 1\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"0 0 0 0\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''3 3\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\\n1 1\\n0 1\") == \"YES\\n00\\n10\"\nassert solution(\"3 4\\n0 0 0 1\\n0 0 0 0\\n1 1 1 1\\n\") == \"YES\\n010\\n0000\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"2 2\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 1\n0 1\n''') == 'YES'\nassert solution('''3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'YES'\nassert solution('''1 1\n1 0\n''') == 'NO'\nassert solution('''2 2\n1 1\n0 1\n''') == 'NO'\nassert solution('''2 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'YES'\n\nassert solution('''\n2 2\n1 1\n0 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('123') == 'Yes'\nassert solution('372') == 'No'\nassert solution('123456') == 'No'\nassert solution('12345678910') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n373\n''') == 'Yes'\nassert solution('''\n121\n''') == 'No'\nassert solution('''\n436\n''') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234\") == \"Yes\"\nassert solution(\"12345\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''12345678901234567890\n''') == \"Yes\"\nassert solution('''8765432101234567890\n''') == \"Yes\"\nassert solution('''432112345678901234567890\n''') == \"Yes\"\nassert solution('''9784175284784968798749874986\n''') == \"Yes\"\nassert solution('''118902813578655791389063720167\n''') == \"No\"\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'Yes'\n\n'''\n\nx = input()\nlength = len(x)\nn = int(length)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'\nassert solution('12') == 'No'\nassert solution('4') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1011\") == \"Yes\", \"Wrong!\"\nassert solution(\"1111\") == \"Yes\", \"Wrong!\"\nassert solution(\"1110\") == \"No\", \"Wrong!\"\nassert solution(\"1111\") == \"No\", \"Wrong!\"\nassert solution(\"1111\") == \"Yes\", \"Wrong!\"",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''\n6 2 1\n1 0 0 1 0 1\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == '5'\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == '3'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\n\n'''\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 2 1\n1 0 0 1 0 1''') == '3'\nassert solution('''6 2 1\n0 0 1 0 1 0''') == '6'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\n\n\"\"\"\n\n\nn, b, a = map(int, input().split())\ns = list(map(int, input().split()))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 1\\n0 1 0 1 0\") == '5'\nassert solution(\"6 2 1\\n1 0 0 1 0 1\") == '3'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\nassert solution(\"5 2 1\") == \"5\"\nassert solution(\"6 2 1\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\n\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"112-37\") == \"375\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\", solution(\"8-7+6-5+4-3+2-1-0\")\nassert solution(\"2+2\") == \"-46\", solution(\"2+2\")\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2+2') == '-46'\nassert solution('2+2') == '-46'\nassert solution('2+2') == '-46'\n\nprint('all tests passed')\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\n",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\n\n\n'''\nimport sys\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 3\") == \"YES\"\nassert solution(\"13 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"12 3\") == \"NO\"\nassert solution(\"13 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4') == 'YES\\n1 1\\n1 2\\n2 2\\n2 3\\n3 3'\nassert solution('13 4') == 'NO'\nassert solution('9 3') == 'YES\\n1 1\\n1 2\\n2 1\\n2 2'\nassert solution('15 5') == 'YES\\n3 1\\n1 3\\n2 3\\n3 1\\n4 3\\n2 2\\n3 3\\n3 2\\n3 1\\n3 2\\n4 2\\n4 1'\nassert solution('20 8') == 'NO'\n",
        "num_ids_2": 42,
        "num_ids_4": 128
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == 'YES'\nassert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('13 4') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\n\") == \"NO\"\nassert solution(\"10 4\\n\") == \"YES\"\nassert solution(\"13 4\\n\") == \"YES\"\nassert solution(\"20 4\\n\") == \"NO\"\nassert solution(\"4 3\\n\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3\\n1 2') == 'NO'\nassert solution('2 2\\n1 2') == 'NO'\nassert solution('2 2\\n1 2') == 'NO'\nassert solution('2 3\\n2 3\\n3 2') == 'YES'\nassert solution('4 3\\n3 2\\n1 4') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('10') == 'YES'\nassert solution('11') == 'NO'\nassert solution('13') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'\nassert solution('5 1\\n') == 'YES'\nassert solution('10 1\\n') == 'YES'\nassert solution('12 1\\n') == 'NO'",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n\n''') == \"18\"\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n\n''') == \"100\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\nassert solution('4 3 1') == '-1'\nassert solution('10 10 10 10 10 10') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18', solution.__doc__\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100', solution.__doc__\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == '-1'\nassert solution(\"5 2 3\") == '18'\nassert solution(\"6 1 5\") == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\nassert solution('4 3 1') == '100'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"4 3 1\") == \"4\"\nassert solution(\"3 1 2 3\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 1\") == \"100\"\nassert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s1) == '3'\nassert solution(s2) == '21'\nassert solution(s3) == '15'\nassert solution(s4) == '21'\nassert solution(s5) == '15'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('4 1') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('4 1') == '4'\nassert solution('12 6') == '15'\nassert solution('15') == '15'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n00100') == '3'\nassert solution('6 1\\n000000') == '4'\nassert solution('4 1\\n0011') == '4'\nassert solution('12 6\\n000010000100') == '15'\nassert solution('4 1\\n00101') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"21\"\nassert solution(input_) == \"21\"\nprint(solution(input_))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"5 2\"\n) == \"3\"\nassert solution(\n    \"6 1\"\n) == \"4\"\nassert solution(\n    \"12 6\"\n) == \"15\"\nassert solution(\n    \"4 1\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 2\\n00100\"\n) == \"3\"\nassert solution(\n    \"6 1\\n000000\"\n) == \"1\"\nassert solution(\n    \"4 1\\n0011\"\n) == \"4\"\nassert solution(\n    \"12 6\\n000010000100\"\n) == \"15\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"\nassert solution(\"13\") == \"14\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2\n00100''') == '3'\n\nassert solution('''6 1\n000000''') == '4'\n\nassert solution('''12 6\n000010000100''') == '15'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 1') == '4'\nassert solution('12 6') == '15'\nassert solution('6 1') == '4'\nassert solution('4 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('azzel') == 'apple'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'apple', \"Example\"\nassert solution('apple') == 'azzel', \"Example\"\n\n\"\"\"\n\ns = stdin.strip()\nt = stdin.strip()\n\nfor e, l in zip(s, t):\n    if e!= l:\n        t = t.replace(e, l)",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"Yes\"\nassert solution(\"bubble\") == \"No\"\nassert solution(\"watermelon\") == \"Yes\"\nassert solution(\"bubble\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"azzel\") == \"apple\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"azzel\\napple\") == \"Yes\"\nassert solution(\"azzel\\napple\") == \"No\"\nassert solution(\"wally\\nkirby\") == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('azzel') == 'apple'\n\"\"\"\nfrom collections import Counter\nfrom collections import defaultdict\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"azzel\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\nassert solution(\"\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 30
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\nprint(solution(__import__('sys').stdin.read()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n10\\n1\") == \"1\"\nassert solution(\"2\\n10\\n3\") == \"0\"\nassert solution(\"3\\n10\\n3\") == \"0\"\nassert solution(\"4\\n10\\n5\") == \"0\"\nassert solution(\"5\\n10\\n7\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n3 3 4\n1 1 1 2\n1 1 1 3\n2 2 2 3\n3 3 3 4\n3 3 3 4\n4 4 4 5\n3 3 3 4\n3 3 3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n4 4 4 4 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n4 4 4 4 4\n3 3 3 3 4\n3 3 3 3 4\n3 3 3 3 4\n3 3 3 3 4\n3 3 3 3 4\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3 1 2 3\") == \"4\\n1 2 3\\n1 2 3\\n1 2 3\\n\"\nassert solution(\"10\\n5 3 1 2 4 5\\n4 6 2 4 3\") == \"6\\n1 2 3\\n4 6 2 4 3\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"4\"\nassert solution(\"4 5\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '4'\nassert solution('5 2 4') == '-1'\nassert solution('5 3 4') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 1\\n2 4 0\") == \"4\"\nassert solution(\"5 5 2\\n2 4 1\") == \"3\"\nassert solution(\"5 5 3\\n2 4 2\") == \"2\"\nassert solution(\"5 5 4\\n2 4 3\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"5 1 1\") == \"7\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n4 3 1 1\\n5 3 2 1\\n3 4 1 1\") == \"1\"\nassert solution(\"3\\n1 2 1 1\\n2 2 1 1\\n1 1 1 1\") == \"0\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1\\n2 5 1\\n2 1 1') == 'Yes'\nassert solution('2 1 2\\n2 3 2\\n3 4 1\\n4 5 2\\n2 2 2\\n2 2 2\\n5 5 2\\n6 4 2\\n2 1 1') == 'No'\nassert solution('5 1 3\\n1 4 3\\n3 5 1\\n2 5 1\\n4 5 2\\n5 5 2\\n6 4 2\\n3 5 1\\n5 4 2\\n5 4 2') == 'Yes'\n\n'''\n",
        "num_ids_2": 74,
        "num_ids_4": 131
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 7\") == \"3\"\nassert solution(\"3 1\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_str()) == \"3\"\n\nimport math",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"20 50\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 200') == '3'\nassert solution('3 200') == '3'\nassert solution('5 800') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"4 200\") == \"2\"\nassert solution(\"5 300\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 200\") == \"3\"\nassert solution(\"5 800\") == \"2\"\nassert solution(\"2 700\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 500\") == \"5\"\nassert solution(\"5 800\") == \"1\"\nassert solution(\"3 100\") == \"3\"\nassert solution(\"2 200\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 700') == '3'\nassert solution('2 999') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n5 5 4 5 5 5 6\") == \"2\"\nassert solution(\"8\\n4 8 8 7 8 4 4 5\") == \"3\"\nassert solution(\"9\\n2 3 4 2 2 3 2 2 4\") == \"3\"\n",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5''') == '3'\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution(\"9 2 3 4 5 8 7 6\") == \"3\"\nassert solution(\"5 5 4 5 5 6\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n2 3 4 2 2 3 2 2 4''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '2'\nassert solution('8') == '3'\nassert solution('9') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18', 'first example'\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100','second example'\nassert solution('''4 3 1\n1 100 1 1\n''') == '100', 'third example'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '18'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n5') == '18'\nassert solution('6\\n1 5') == '100'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1 5') == '-1', f\"result was {solution('')}! Should be -1\"\nassert solution('5 2 3') == '18', f\"result was {solution('')}! Should be 18\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"18\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4 1 2\n1 3 2 1\n\n\"\"\") == \"3\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '18'\nassert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('10') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('5 1 3') == '18'\nassert solution('6 1 5') == '-1'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 1\") == \"100\"\nassert solution(\"6 1 5\") == \"18\"\nassert solution(\"4 2 1\") == \"100\"\nassert solution(\"5 1 3\") == \"18\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'No'\nassert solution('5') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n11\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n7\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n9\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n10\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n8\n\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '1'\n    ) == 'Yes'\n\nassert solution(\n    '2'\n    ) == 'No'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Yes'\nassert solution('1') == 'No'\nassert solution('0') == 'No'\nassert solution('100') == 'Yes'\nassert solution('101') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"No\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"11\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"No\"\nassert solution(\"12\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == 'Yes'\nassert solution('12') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('9') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n2 3 5\n2 1 5\n1 2 5\n3 2 5''') == '2 2 6'\nprint(solution('''3\n2 3 5\n2 1 5\n1 2 5\n3 2 5'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"8\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n6 6 6\\n7 7 7\") == \"1 1 1\"\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"4\\n2 3 4\\n2 1 3\\n1 2 2\\n3 2 1\") == \"2 1 3\"\nassert solution(\"4\\n1 2 3\\n1 1 2\\n2 1 2\\n3 2 1\") == \"1 1 3\"\nassert solution(\"4\\n2 2 4\\n2 1 4\\n1 2 4\\n3 2 2\") == \"2 1 4\"\n",
        "num_ids_2": 64,
        "num_ids_4": 128
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n    5\n    2 3 5\n    2 1 5\n    1 2 5\n    3 2 5\n    \"\"\"\n) == \"2 2 6\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3 4 5\\n3 2 5') == '2 2 6'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'\nassert solution('7\\n9 9 8 8 5 5 9\\n8 8 7 6 5 7\\n5 7 5 5 7 8\\n5 6 6 6 6 8\\n6 7 7 7 7 5\\n6 5 6 6 6 7\\n7 5 7 5 7 6') == '5 7 6 7 5 6 6'\nassert solution('8\\n-4 -2 -1 1 5 5 8\\n-4 -2 2 1 5 5 8\\n-4 2 2 1 5 5 8\\n-4 2 -1 1 5 5 8\\n-4 1 -1 5 5 5 8\\n-4 1 1 5 5 5 8\\n-4 1 5 5 5 5 8\\n-4 1 5 5 5 5 5 8') == '-4 5 7 7 6 6 5 5 5 7'\n",
        "num_ids_2": 105,
        "num_ids_4": 211
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3 3 0\"\nassert solution(\"5\") == \"5 5 0\"\nassert solution(\"10\") == \"10 10 0\"\nassert solution(\"20\") == \"20 20 0\"\nassert solution(\"100\") == \"100 100 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0 0'\nassert solution('2') == '2 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2 2 6'\nassert solution('5') == '2 2 5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"3 3 4\"\nassert solution(\"4\") == \"5 4 5 6\"\nassert solution(\"5\") == \"5 4 5 6\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('redcoder') == '1'\nassert solution('are') == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('redcoder') == 1\nassert solution('redcoder') == 1\nassert solution('redcoder') == 1\n\n-------------------",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('redcoder') =='redcoder'\nassert solution('redcoder') =='redcoder'\nassert solution('redcoder') =='redcoder'\n\n\"\"\"\n\n\"\"\"\nSolution 1 (Brute Force)",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 39
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('redcoder') == '1'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('redcoder') == '1'\nassert solution('red') == '1'\nassert solution('a') == '1'\nassert solution('') == ''\n",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('redcoder') == '1'\nassert solution('abcdefghijklmnopqrstuvwxyz') == '3'\n\"\"\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('redcoder') == '1'\nassert solution('aaaaa') == '1'\nassert solution('abcd') == '1'\nassert solution('aabbb') == '1'\nassert solution('kitten') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"abbcdee\") == \"2\"\nassert solution(\"abcdeff\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9''') == 'Yes', 'Example Test Case Failed'\nassert solution('''10\n2\n4\n8\n16\n32\n64\n128\n256\n512''') == 'No', 'Example Test Case Failed'\nprint('All test cases passed!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Yes', '1'\nassert solution('5') == 'No', '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Yes'\nassert solution('10') == 'No'\nassert solution('10') == 'Yes'\nassert solution('10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'No'\nassert solution('5') == 'Yes'\nassert solution('14') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == 'Yes'\nassert solution('1') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"8\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes'\nassert solution('1') == 'No'\nassert solution('10') == 'Yes'\nassert solution('101') == 'No'\nassert solution('1020') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4 4 9 7 5\n''') == '5'\nassert solution('''\n5\n4 4 9 7 5\n''') == '5'\nassert solution('''\n5\n4 1 2 3 4\n''') == '0'\nassert solution('''\n5\n1 2 1 1 1\n''') == '3'\nassert solution('''\n5\n1 1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n4 4 9 7 5\n''') == '5'\nassert solution('''6\n4 5 1 8 2 6\n''') == '10'\nassert solution('''10\n10 20 30 40 50 60 70 80 90 100\n''') == '412'\nassert solution('''10\n1 1 1 1 1 1 1 1 1 1\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n4 4 9 7 5\\n') == '5\\n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4 9 7 5\") == \"5\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\n\nstdin = input()\nN = int(stdin)\n\nL = []\nfor _ in range(N):\n    L.append(int(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n4\\n5\\n') == '5'\nassert solution('4\\n5\\n7\\n9\\n10\\n') == '10'\nassert solution('2\\n4\\n5\\n') == '5'\n",
        "num_ids_2": 42,
        "num_ids_4": 60
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 9 7 5') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"5\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n4 4 9 7 5\n''') == \"5\"\nassert solution('''\n2\n3 5 9 7\n''') == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10'\nprint('Congratulations! All test cases passed!')\n'''\nA, B = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '10'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '-1'\nassert solution('2 5') == '10'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 2\") == \"-1\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"10\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 5\n''') == '10'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 3\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '5'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '5'\nassert solution('3 5') == '5'\nassert solution('10 3') == '2'\nassert solution('10 6') == '2'\nassert solution('10 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('10 20\\n12 14 9 2 3 10 11 7') == '8'\nassert solution('10 20\\n12 14 9 2 3 10 11 7') == '11'\nassert solution('10 20\\n12 14 9 2 3 10 11 7') == '8'\nassert solution('2 5\\n1 2 3 4 5') == '2'\n",
        "num_ids_2": 39,
        "num_ids_4": 81
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1\\n') == '1'\nassert solution('5 2\\n') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"3 3\\n10 12 1 2 14\\n\") == \"0\"\nassert solution(\"7 3\\n10 12 1 2 14\\n\") == \"5\"\nassert solution(\"1 1\\n10 12 1 2 14\\n\") == \"2\"\nassert solution(\"1 10\\n10 12 1 2 14\\n\") == \"4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5\\n10 12 1 2 14') == '5'\nassert solution('3 3\\n0 2 1 2 3') == '3'\nassert solution('4 8\\n0 2 1 2 3\\n5 6 7 8') == '6'\nassert solution('1 2\\n1 2 3 4') == '2'\nassert solution('2 5\\n1 1 1 1 1') == '5'",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '5'\nassert solution('2 10') == '10'\nassert solution('1 4') == '4'\nassert solution('100 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"4 6\") == \"3\"\nassert solution(\"6 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''4\n1 2\n2 3\n1 4\n4 3\n''') == '1'\nassert solution('''6\n1 2\n2 3\n1 4\n4 3\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''7\n1 2\n2 3\n1 4\n4 3\n2 5\n3 4\n3 5\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('4 6 3') == '1'\nassert solution('5 6 2') == '2'\nassert solution('10 10 1') == '111011'",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 3\") == \"1110\"\nassert solution(\"4 6 3\") == \"101001\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('5 6 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6 2') == '1'\nassert solution('4 6 3') == '1110'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\n''')\n\n'''\nInput\n4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n\nOutput\n2\n1110\n1011\n\nInput\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\nOutput\n1\n101001\n\nInput\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\nOutput\n2\n111100\n110110\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 3') == '1110'\nassert solution('4 6 3') == '11101'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"10 10\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"YES\"\n\n\n-----Challenge-----\nCan you do it in-place?\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n3 3 5\n''') == 'YES'\nassert solution('''4\n5 4 3\n''') == 'NO'\nassert solution('''5\n4 2 1 1 2 5\n''') == 'YES'\nassert solution('''6\n1 2 3 4 5 6\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'YES'\nassert solution('2') == 'YES'\nassert solution('1') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution('''\n5\n2 1 1 2 5\n''') == \"YES\"\nassert solution('''\n3\n1 2 3\n''') == \"NO\"\nassert solution('''\n2\n10 10\n''') == \"YES\"\nassert solution('''\n3\n1 2 3\n''') == \"NO\"",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\n    5,\n    2, 1, 2, 5\n]) == \"YES\", \"First example\"\nassert solution([\n    3,\n    4, 5,\n    3\n]) == \"NO\", \"Second example\"\nassert solution([\n    1, 2, 3,\n    5\n]) == \"NO\", \"Third example\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5], '2 1 1 2 5') == 'YES'\nassert solution([3], '4 5 3') == 'NO'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3\n2 2\n4 5\n''') == 'YES'\nassert solution('''3\n2\n2 2\n3 5\n''') == 'YES'\nassert solution('''3\n4\n3 5 6\n''') == 'NO'\nassert solution('''3\n1\n2 2\n3 5\n''') == 'YES'\nassert solution('''4\n1\n2 2\n3 5\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 6\n-100 -200 -300 125 77 -4\n''') == '9'\nassert solution('''10 4\n-1 0 0 0\n''') == '4999999999996'\nassert solution('''1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'\n",
        "num_ids_2": 16,
        "num_ids_4": 26
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n0\n1\n-1\n''') == '-1'\nassert solution('''\n1000000000000\n-1 0 0 0 0\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    1000 6\n    -100 -200 -300 125 77 -4\n    ''') == '9'\nassert solution('''\n    1000000000000 5\n    -1 0 0 0 0\n    ''') == '4999999999996'\nassert solution('''\n    10 4\n    -3 -6 5 4\n    ''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\n\nassert solution('''\n1000000000000 5\n-1 0 0 0 0\n''') == '4999999999996'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '-1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4\\n') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0\\n') == '4999999999996'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1000 6\"\n    \"\") == \"9\"\nassert solution(\n    \"1000000000000 5\"\n    \"\") == \"4999999999996\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10000000 0 0 0 0') == '-1'\nassert solution('0') == '-1'\nassert solution('0 1') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'ZZ'\nassert solution('7') == 'AB'\nassert solution('5') == 'ZZ'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8\\n') == 'ZZ', f'Your solution for this test doesn\\'t match the expected solution. Expected: {\"ZZ\"}. Actual: {solution(\"8\\n\")}'\nassert solution('10\\n') == 'ZZ', f'Your solution for this test doesn\\'t match the expected solution. Expected: {\"ZZ\"}. Actual: {solution(\"10\\n\")}'\nassert solution('6\\n') == 'AZ', f'Your solution for this test doesn\\'t match the expected solution. Expected: {\"AZ\"}. Actual: {solution(\"6\\n\")}'\nassert solution('1\\n') == 'A', f'Your solution for this test doesn\\'t match the expected solution. Expected: {{\"A\"}}. Actual: {solution(\"1\\n\")}'\n",
        "num_ids_2": 92,
        "num_ids_4": 186
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''ABACABA''') == 'AB'\nassert solution('''ZZZAA''') == 'ZZ'\nassert solution('''ZZZAAZZ''') == 'ZZ'\nassert solution('''ZZZAAZZZZZ''') == 'ZZ'\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\nABACABA''') == 'AB'\nassert solution('''5\nZZZAA''') == 'ZZ'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\nABACABA\n''') == \"AB\"\nassert solution('''\n5\nZZZAA\n''') == \"ZZ\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nABACABA\n''') == 'AB'\nassert solution('''7\nABACABA\n''') == 'AB'\nassert solution('''5\nZZZAA\n''') == 'ZZ'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\nABACABA') == 'AB'\nassert solution('5\\nZZZAA') == 'ZZ'\n\n\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABACABA\") == \"AB\"\nassert solution(\"ZZZAA\") == \"ZZ\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n        'ABACABA') == 'AB'\nassert solution(\n        'ZZZAA') == 'ZZ'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('test') == 2\nassert solution('west') == 9\nassert solution('b') == 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''west''') == '2'\nassert solution('''test''') == '9'\nassert solution('''codeforces''') == '7'\nassert solution('''b''') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('west') == 'here'\nassert solution('test') == 'here'\nassert solution('yes') == 'yes'\nassert solution('b') == 'a'\nassert solution('codeforces') == 'es'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('codeforces') == 7\n\nassert solution('west') == 2\n\nassert solution('test') == 9\n\nassert solution('yes') == 7\n\nassert solution('b') == 1",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('codeforces') == 'est'\nassert solution('test') == 'west'\nassert solution('b') == ''\n",
        "num_ids_2": 23,
        "num_ids_4": 31
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"west\") == \"here\"\nassert solution(\"codeforces\") == \"es\"\nassert solution(\"test\") == \"est\"\nassert solution(\"yes\") == \"yes\"\nassert solution(\"b\") == \"b\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"codeforces\") == \"1\"\nassert solution(\"test\") == \"2\"\nassert solution(\"west\") == \"1\"\nassert solution(\"\") == \"1\"\nassert solution(\"b\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 42
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('a b c d') == 'a b c d'\nassert solution('b c d') == 'a b c d'\nassert solution('a b c d e') == 'a b c d e'\n",
        "num_ids_2": 18,
        "num_ids_4": 49
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == solution(input()) == solution(input()) == solution(input())\nassert solution(input()) == solution(input()) == solution(input()) == solution(input())\nassert solution(input()) == solution(input()) == solution(input()) == solution(input())\nassert solution(input()) == solution(input()) == solution(input()) == solution(input())\nassert solution(input()) == solution(input()) == solution(input()) == solution(input())\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input().strip()) == (input().strip())",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n1 7 11\n''') == '2'\nassert solution('''10 10\n1 6 10\n''') == '5'\nassert solution('''1 10\n1 10\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"4\"\nassert solution(\"12 12\") == \"2\"\nassert solution(\"15 15\") == \"4\"\n\n\"\"\"\nimport math\nimport sys\nsys.setrecursionlimit(10**6)\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '2'\nassert solution('100 100') == '99'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n5 7 11\") == \"2\"\n\nassert solution(\"1 1\\n1 1 1 1\") == \"2\"\n\nassert solution(\"1 1\\n1 2 5 1\") == \"2\"\n\nassert solution(\"1 1\\n2 2 2 2\") == \"2\"\n\nassert solution(\"1 1\\n3 4 4 2\") == \"2\"",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '2'\nassert solution('5 5') == '2'\nassert solution('10 10') == '2'\nassert solution('12 12') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '2'\nassert solution('10 5') == '4'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 7 11\n''') == '2'\nassert solution('''3 2\n1 2 3\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n1 7 11\\n') == '2'\nassert solution('4 4\\n2 4 2 3\\n') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"hahaha\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('akakka') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"akasaka\") == \"Yes\", \"Wrong answer\"\nassert solution(\"avaxax\") == \"No\", \"Wrong answer\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''akasaka''') == 'Yes'\nassert solution('''abcda''') == 'No'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"aba\") == \"Yes\"\nassert solution(\"aku\") == \"No\"\nassert solution(\"aa\") == \"No\"\nassert solution(\"q\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('akasaka') == 'Yes'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'Yes'\nassert solution('akasaka') == 'Yes'\nassert solution('akasakaakasaka') == 'Yes'\nassert solution('akasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaakasakaak",
        "num_ids_2": 22,
        "num_ids_4": 1743
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('akasaka') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('0.1') == '1'\nassert solution('0.1') == '1'\nassert solution('0.1') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('198 1.10') == '217'\n\"\"\"\nimport math",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('-13 0.00001') == '-13'\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"198 1.0\") == \"198\"\nassert solution(\"0 1.10\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('1.5 1.5') == '1'\nassert solution('1 1.5') == '1'\nassert solution('0 0') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"10.10\") == \"10\"\n\nSolution:\n\nA,B = map(int,input().split())\nprint(int(A*B),end='')\n\n=====",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('198 1.11') == '198'\nassert solution('198 1.12') == '196'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"198 2.1\") == \"210\"\nassert solution(\"198 2.10\") == \"208\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"198 0.1\") == \"198\"\nassert solution(\"198 0.001\") == \"198\"\nassert solution(\"-1.1\") == \"-1\"\nassert solution(\"1.1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n1\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n7') == '3'\nassert solution('6\\n2000000000') == '999999999'\nassert solution('6\\n763243547') == '381621773'",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\") == \"3\"\nassert solution(\"3\\n4\\n5\\n2\\n5\\n100\\n\") == \"0\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n7\\n1\\n2\\n3\\n2000000000\\n763243547\\n') == '3'\nassert solution('6\\n7\\n1\\n2\\n3\\n2\\n3\\n') == '1'\nassert solution('6\\n7\\n1\\n2\\n3\\n3\\n3\\n') == '0'\nassert solution('6\\n7\\n1\\n2\\n3\\n4\\n4\\n') == '999999999'\nassert solution('6\\n7\\n1\\n2\\n3\\n5\\n5\\n') == '381621773'\n",
        "num_ids_2": 64,
        "num_ids_4": 126
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n1\") == \"0\"\nassert solution(\"3\\n1\") == \"1\"\nassert solution(\"4\\n1\") == \"0\"\nassert solution(\"5\\n1\") == \"0\"\nassert solution(\"6\\n1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"0\"\nassert solution(\"8\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1') == '0'\nassert solution('2\\n3\\n4') == '1'\nassert solution('3\\n4\\n5') == '1'\nassert solution('4\\n5\\n6') == '2'\nassert solution('5\\n6\\n7') == '0'\n\n\"\"\"\n\n\nimport sys\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n8\n''') == '2'\nassert solution('''4\n6\n''') == '0'\nassert solution('''2\n1\n''') == '0'\nassert solution('''5\n1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('5 4 5') == '1'\nassert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 5') == '1'\nassert solution('3 5 5') == '1'\nassert solution('2 5 5') == '2'\nassert solution('1 5 5') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4 1\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n\nassert solution('''\n5 5 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\\n') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\\n') == '1'\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 9 1') == '3'\nassert solution('5 4 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4 1') == '3'\nassert solution('5 4 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"9 9 1\") == \"3\"\nassert solution(\"5 4 5\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '2'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 9 1\\n1 2\\n1 3\\n2 3\\n1 5\\n5 6\\n6 1\\n1 8\\n9 8\\n7 1\") == \"3\"\nassert solution(\"5 4 5\\n1 2\\n2 3\\n3 4\\n4 1\") == \"1\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\nassert solution('''5\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 2 4 1''') == '4'\nassert solution('''6\n1 1 1 4 4 4''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 2 4 1\n''') == '4'\nassert solution('''\n5\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 4 1') == '4'\nassert solution('6 1 1 4 4 4') == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution() == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\nassert solution('6') == '5'\nprint('All tests passed!')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 4 1\") == \"4\"\nassert solution(\"6\") == \"5\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2 4 1') == '4'\nassert solution('6') == '5'\nassert solution('1 1 1 4 4 4') == '5'",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 3\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 32\n2 63\n1 12\n''') == '000001000002'\nassert solution('''\n4 6\n1 2\n1 5\n2 3\n1 9\n1 10\n''') == '000100000100101'\nassert solution('''\n7 3\n1 2\n2 3\n2 5\n2 10\n2 11\n1 13\n''') == '0000000100010010'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 2]) == \"000001000002\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '000001000002\\n000002000001\\n000001000001'\nassert solution('1 3') == '000001000002\\n000002000001\\n000001000001'\nassert solution('1 2') == '000001000002\\n000002000001\\n000001000001'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '000001000002\\n000002000001\\n000001000001'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 2\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001'\nassert solution('''2 4\n1 32\n2 63\n1 12\n''') == '000001000002\\n000002000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001\\n000001000001'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"1 32\\n\"\n    \"2 63\\n\"\n    \"1 12\"\n) == \"000001000002\\n000002000001\\n000001000001\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '000001000002'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 10 8 40\n''') == '2'\nassert solution('''\n1\n1\n''') == '1'\nassert solution('''\n2\n2\n''') == '2'\nassert solution('''\n5\n1 3 4 5 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\n\"\"\"\nimport sys\nimport itertools\nimport functools\nfrom collections import defaultdict, Counter",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1\"\nassert solution(\"5\\n2 5 2 6 5\") == \"2\"\nassert solution(\"5\\n3 1 2 3 1\") == \"1\"\nassert solution(\"5\\n5 5 5 5 5\") == \"5\"\nassert solution(\"5\\n1 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4 1 3\") == \"2\"\nassert solution(\"3\\n6 6 6\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4') == '2'\nassert solution('5\\n6\\n7\\n8\\n9') == '3'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"5\\n3 10 20 5 20\") == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 10 3\") == \"3\"\nassert solution(\"10 5 10 3\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2'\nassert solution('3') == '1'\nassert solution('2') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\n    \"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\n    \"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\n    \"?(__+___+__-___):-___>__.\\n\") == \"0101\"\nassert solution(\n    \"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\n",
        "num_ids_2": 50,
        "num_ids_4": 124
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?') == '0010'\nassert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\n",
        "num_ids_2": 32,
        "num_ids_4": 109
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0250341\"\nassert solution(\"?(__+___+__-___):-___>__.\\n\") == \"0101\"\n",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"false\"\nassert solution(\"?(___-____):-____>____\") == \"0101\"\nassert solution(\"?(___*___+___-___)/_-_+_/_____):-__>__.__,__,__<__,__<______,______<_______.__\") == \"101001001\"\nassert solution(\"?(________-____,____+___,___-___)/_-_+_/_____):-__>__.__,__,__<__,__<______,______<_______.__\") == \"10001\"\nprint(solution(open(\"input.txt\").read()))\n",
        "num_ids_2": 29,
        "num_ids_4": 130
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(__+___+__-___):-___>__.') == '0101'",
        "num_ids_2": 50,
        "num_ids_4": 124
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"0101\"\nassert solution(input()) == \"0250341\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"?(_-_/___*__):-___>__.\\n\") == \"0010\"\nassert solution(\"?(__-_+_/_____):-__>__,_____<__.\\n\") == \"false\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0101\"\nassert solution(\"?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n\") == \"0205\"\nassert solution(\"?(___+___+___):-___>__.\\n\") == \"0101\"\n",
        "num_ids_2": 54,
        "num_ids_4": 154
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0101'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'\n",
        "num_ids_2": 54,
        "num_ids_4": 131
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''\n3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''\n3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3 3 11\"\n) == \"3\"\n\nassert solution(\n    \"3 4 2\"\n) == \"5\"\n\nassert solution(\n    \"3 4 1000000000000000000\"\n) == \"0\"\n\nprint(solution(\n    \"2 1 5\"\n))\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 11') == \"3\"\nassert solution('3 4 2') == \"5\"\nassert solution('3 4 1000000000000000000') == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == '3'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1''') == '5'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\nassert solution('''4 3 2\n1 3 3 1\n1 1 1 0\n1 1 0 0\n''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 3 11\"\n) == \"3\"\n\nassert solution(\n    \"3 4 2\"\n) == \"5\"\n\nassert solution(\n    \"3 4 1000000000000000000\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"codeforces\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\n\nassert solution(\"z\") == \"z\"\n\n'''",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == input()\n\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"rocesfedoc\"\nassert solution(\"16\") == \"thisisexampletwo\"\nassert solution(\"1\") == \"z\"\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sample_input_1) == \"codeforces\"\nassert solution(sample_input_2) == \"thisisexampletwo\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"ac\"\nassert solution(\"1\") == \"z\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == 'codeforces'\nassert solution('16') == 'thisisexampletwo'\nassert solution('1') == 'z'",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"thisisexampletwo\"\n\n\"\"\"\nn = int(input())\ns = input()",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"dabcb\"\nassert solution(\"10\") == \"aceivb\"\nassert solution(\"16\") == \"thisisexamplenew\"\nassert solution(\"1\") == \"z\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(test_solution_input_1) == test_solution_output_1\nassert solution(test_solution_input_2) == test_solution_output_2\nassert solution(test_solution_input_3) == test_solution_output_3\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('1 1') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"-19 -35\") == \"19\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"3 3\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19', solution('5 14')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n\"\"\"\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2+3\") == \"++>\", solution(\"2+3\")\nassert solution(\"9-7\") == \"<[<->-]<\", solution(\"9-7\")\n\nstdin = \"\"\"\n99 +\n99 +\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99 +\n99 +\n99 -\n99 -\n99 +\n99",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n\n'''\n\n\nfrom collections import deque\nimport re\n\nfrom utils.file_reader import FileReader\n\n'''\n+\n-\n>\n<\n[<+>-]\n\n'''\n\n\nclass Solution:\n    def evaluate(self, expression: str) -> str:\n        data = list(map(int, re.findall('\\d+', expression)))\n\n        commands = deque(['+', '-', '<', '>'])\n\n        stack = deque()\n\n        def push_command(command: str):\n            if command == '>':\n                stack.append('<')\n            elif command == '<':\n                stack.append('>')\n            elif command == '+':\n                stack.append('-')\n            elif command == '-':\n                stack.append('+')\n\n        while commands or stack:\n            command = commands.popleft() if commands else '-'\n\n            while stack and (command == '-' and stack[-1] == '-' or command == '+' and stack[-1] == '+'):\n                stack.pop()\n                push_command(commands.popleft())\n\n            if command == '>':\n                push_command(commands.popleft())\n                while stack and stack[-1]!= '>':\n                    push_command(commands.popleft())\n\n            elif command == '<':\n                while stack and stack[-1]!= '<':\n                    push_command(commands.popleft())\n\n            elif command == '+':\n                while stack and (stack[-1] == '+' or stack[-1] == '-'):\n                    push_command(commands.popleft())\n\n        return ''.join(map(str, data))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2+3') == '++>', \"Input #1\"\nassert solution('9-7') == '+++++++++>', \"Input #2\"\n\n\n\n\"\"\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Should be '++>'\"\nassert solution(\"9-7\") == \"++++++++>\", \"Should be '++++++++>'\"\nassert solution(\"9+7\") == \"++++++++>\", \"Should be '++++++++>'\"\nassert solution(\"9-7\") == \"++++++++>\", \"Should be '++++++++>'\"\n\n\"\"\"\n\nimport re",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Wrong result for input '2+3'\"\nassert solution(\"9-7\") == \"<[<->-]<\", \"Wrong result for input '9-7'\"\nassert solution(\"8-3\") == \"<[-><]<\", \"Wrong result for input '8-3'\"\nassert solution(\"3+8\") == \"++>\", \"Wrong result for input '3+8'\"\nassert solution(\"9-7\") == \"<[<->-]<\", \"Wrong result for input '9-7'\"\n",
        "num_ids_2": 52,
        "num_ids_4": 103
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2+3''') == '++>'\nassert solution('''9-7''') == '+++++++++>'\nassert solution('''11+4+0''') == '+++++++++++++>'\nassert solution('''5+2+1+4+3''') == '<[<+>-]<+>'\nassert solution('''1+5+5+7+2+4+4+7''') == '<[<->-]<+>'\n'''",
        "num_ids_2": 33,
        "num_ids_4": 83
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Error!\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Error!\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1+2') == '++>', 'Input #1'\nassert solution('1-2') == '<[<-]<', 'Input #2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Wrong\"\nassert solution(\"9-7\") == \"+++++++++>\", \"Wrong\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"++>\", \"1st example\"\nassert solution(\"9-7\") == \"++++++++>\", \"2nd example\"\n\n\n\"\"\"\n\n\n\nclass Stack:\n    def __init__(self, size):\n        self.stack = [0]*size\n        self.size = size\n        self.top = -1\n\n    def push(self, item):\n        self.top += 1\n        self.stack[self.top] = item\n\n    def pop(self):\n        if self.top!= -1:\n            item = self.stack[self.top]\n            self.stack[self.top] = 0\n            self.top -= 1\n            return item\n        else:\n            return 0\n\n    def __len__(self):\n        return self.top + 1\n\n    def __str__(self):\n        return str(self.stack[:self.top+1])\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"8\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1\") == \"1\"\nassert solution(\"4\\n2\") == \"8\"\nassert solution(\"5\\n3\") == \"2\"\nassert solution(\"4\\n4\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('8') == '8'\nassert solution('2132') == '1'\nassert solution('506') == '2'\nassert solution('1000000000000000000') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n3\n20\n38\n56\n''') == '2'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '8'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '8'\nassert solution('''1\n3\n20\n38\n56\n''') == '2'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"5\"\nassert solution(\"13\") == \"1\"\nassert solution(\"10\") == \"4\"\nassert solution(\"1011\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '2'\n\nstdin = '''\n1\n2\n5\n'''\nprint(solution(input_))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"18\") == \"4\"\nassert solution(\"100\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == '4'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('575') == '4'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input(\"\")) == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('575') == '4'\nassert solution('12345678') == '0'\nassert solution('12345678') == '1'\nassert solution('12345678') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\", \"sample test 1\"\nassert solution(\"2\") == \"1\", \"sample test 2\"\nassert solution(\"3\") == \"2\", \"sample test 3\"\nassert solution(\"4\") == \"1\", \"sample test 4\"\nassert solution(\"5\") == \"1\", \"sample test 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"4\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('000') == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '1'\nassert solution('11') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"0\") == 1\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0101\") == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"000\") == \"1\"\nassert solution(\"001\") == \"0\"\nassert solution(\"010\") == \"1\"\nassert solution(\"011\") == \"0\"\nassert solution(\"100\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00000000\") == \"1\"\nassert solution(\"01001\") == \"2\"\nassert solution(\"0101\") == \"2\"\nassert solution(\"00001\") == \"1\"\nassert solution(\"11111\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0\\n') == '0'\nassert solution('1\\n') == '1'\nassert solution('00\\n') == '0'\nassert solution('11\\n') == '1'\nassert solution('111\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('00000') == 1\nassert solution('00011') == 2\nassert solution('01011') == 3\n\nfrom typing import List\n",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0\\n') == '1'\nassert solution('00\\n') == '1'\nassert solution('01\\n') == '1'\nassert solution('10\\n') == '1'\nassert solution('11\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'APPROVED'\n\"\"\"\n\nN = int(input())\na = list(map(int, input().split()))\neven = False\n\nfor i in a:\n    if i % 2 == 0:\n        even = True",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('5\\n1 2 3 4 5') == 'DENIED'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n6 7 9 10 31\n''') == 'APPROVED'\nassert solution('''4\n1 2 3 4 5\n''') == 'DENIED'\nassert solution('''5\n5 6 7 8 9\n''') == 'DENIED'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n6 7 9 10 31') == 'APPROVED'\nassert solution('5\\n12 3 54 6') == 'DENIED'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    3\n    3\n    4\n    5\n    \"\"\"\n) == \"APPROVED\"\nassert solution(\n    \"\"\"\n    6\n    1\n    2\n    3\n    4\n    5\n    \"\"\"\n) == \"DENIED\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'APPROVED', \"First\"\nassert solution('2') == 'DENIED', \"Second\"\nassert solution('10') == 'APPROVED', \"Third\"\nassert solution('100') == 'APPROVED', \"Fourth\"\nassert solution('10') == 'APPROVED', \"Fifth\"",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"10\") == \"DENIED\"\n\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n6 7 9 10 31\\n\") == \"APPROVED\"\nassert solution(\"4\\n3 6 9 10\\n\") == \"DENIED\"\n\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('100') == 'APPROVED'\nassert solution('3') == 'DENIED'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"UDLD\") == \"No\"\nassert solution(\"R\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('RDDDDUDLR') == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LUDR\") == \"No\"\n\"\"\"\n\nimport re\n\npattern = r\"([RULDRU]{1})*\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RUDLUDR') == 'Yes'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'No'\nassert solution('RUDLUDR') == 'Yes'\nassert solution('R') == 'No'\nassert solution('U') == 'No'\nassert solution('UUDD') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'Yes'\nassert solution('RUDLUDR') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''RUDLUDR''') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n\"\"\"\n\nimport re",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('6\\n1\\n2\\n4\\n3\\n5') == '7'\nassert solution('5\\n2\\n4\\n3\\n5') == '7'\n\n'''\nimport sys\n\nN = int(sys.stdin.readline())\nA, B, C, D, E = map(int, sys.stdin.readline().split())",
        "num_ids_2": 50,
        "num_ids_4": 97
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3') == '7'\nassert solution('10\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('10\\n3\\n2\\n4\\n3\\n5\\n') == '10'\nassert solution('1\\n1\\n1\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 52,
        "num_ids_4": 77
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '7'\nassert solution('10') == '12'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5\\n') == '7'\nassert solution('10\\n8\\n4\\n10\\n6\\n5\\n') == '20'\nassert solution('15\\n7\\n4\\n10\\n5\\n') == '21'\nassert solution('1\\n2\\n4\\n5\\n') == '0'\nassert solution('1\\n3\\n2\\n3\\n') == '0'\n",
        "num_ids_2": 54,
        "num_ids_4": 99
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n3\n2\n4\n3\n5\n\"\"\") == \"7\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '7'\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"7\"\n\"\"\"\n\nfrom math import ceil\n\nn, a, b, c, d, e = map(int, stdin().split())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 3, 2, 4, 3, 5]) == '7'\n\n'''\nimport sys\nfrom collections import deque\n\nN, A, B, C, D, E = list(map(int, sys.stdin.readline().rstrip().split()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3\\n2\\n4\\n3\\n5') == '7'\nassert solution('6\\n5\\n3\\n4\\n3\\n5') == '9'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n\"\"\"\n\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == \"0\"\nassert solution('2') == \"2\"\nassert solution('3') == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '7'\nassert solution('100') == '71'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '23'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('15') == '13'\nassert solution('5') == '5'\nassert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('10') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20') == '23'\nassert solution('1') == '1'\nassert solution('10') == '11'\nassert solution('100') == '101'\nassert solution('100000') == '101'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"23\"\nassert solution(\"3\") == \"23\"\nassert solution(\"4\") == \"23\"\nassert solution(\"5\") == \"23\"\nassert solution(\"6\") == \"23\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''20\n''') == '23'\nassert solution('''2\n''') == '2'\nassert solution('''3\n''') == '2'\nassert solution('''10\n''') == '11'\nassert solution('''1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\", 'X1'\nassert solution(\"100\") == \"97\", 'X100'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"20\") == \"23\"\nassert solution(\"10\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"7\"\nassert solution(\"5\") == \"7\"\nassert solution(\"100\") == \"101\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '11'\nassert solution('20') == '23'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 1 3 2\n''') == '1'\nassert solution('''6\n3 1 3 2 1 2\n''') == '2'\nassert solution('''6\n3 1 3 2 1 2 3\n''') == '2'\nassert solution('''6\n3 1 3 2 1 2 3 4 5\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n3 1 3 2') == '1'\nassert solution('5\\n2 1 3 2 4') == '3'\nassert solution('10\\n1 1 1 1 1 2 2 2 2 2') == '2'",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"8\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 3 2\") == \"1\"\nassert solution(\"4\\n3 1 3 2\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 1 3 2\\n\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n2 1 3 2''') == '1'\nassert solution('''3\n1 2 3''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 100 90 80\") == \"23\"\nassert solution(\"3 3 3\") == \"1\"\nassert solution(\"4 1 1\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '23'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80 98 40 30 21 80\") == \"10\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"23\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([5, 100, 90, 80]) == \"23\"\nassert solution([3, 1, 1]) == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('5 10 40 30 21') == '9'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80 81\") == \"25\"\nassert solution(\"5 100 90 80 81 81\") == \"25\"\nassert solution
        "num_ids_2": 27,
        "num_ids_4": 1488
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '22'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '21'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '20'\nassert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '19'\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('6 5 5 10\\n7 0 9\\n3 6 3\\n11 5 4\\n1 3 2\\n2 5 3\\n1 4 1') == '6'\nassert solution('9 4 3\\n1 2 5\\n1 3 5\\n5 2 3\\n2 1 2\\n1 3 3\\n2 4 1\\n1 2 3\\n1 4 5\\n3 2 4\\n2 2 4\\n4 2 4\\n3 3 4\\n4 1 1\\n4 1 1\\n3 2 4\\n2 2 3\\n2 3 2\\n4 2 4\\n4 2 4\\n2 2 2\\n3 1 2\\n1 2 1\\n3 3 3') == '9'\nassert solution('10 3 3\\n1 2 2\\n1 3 3\\n3 2 2\\n2 3 3\\n4 4 4\\n4 4 4\\n1 4 1\\n3 4 3\\n1 3 1\\n1 2 2\\n3 2 2\\n1 2 1\\n1 2 1\\n3 3 3\\n2 4 4\\n3 4 4\\n4 4 4\\n3 4 4\\n1 1 1\\n3 1 2\\n1 4 2\\n4 1 2\\n1 4 2\\n4 4 4\\n2 2 4\\n1 2 2\\n1 4 3\\n2 1 4\\n1 1 1\\n1 3 3\\n1 2 2\\n1 4 3\\n2 3 4\\n1 1 1\\n2 2 4\\n4 1 2\\n3 2 4\\n2 4 4\\n3 4 4\\n1 1 1\\n2 3 4\\n4 4 4\\n4 2 4\\n1 4 3\\n2 4 4\\n3 4 4\\n1 1 1\\n4 3 3\\n4 3 3\\n4 4 4\\n4 4 4\\n4 2 4\\n1 2 4\\n2 2 4\\n1 4 4\\n1 2 4\\n1 4 4\\n3 2 4\\n3 4 4\\n2 4 4\\n2 4 4\\n1 2 4\\n4 3 4\\n1 4 4\\n1 3 2\\n2 2 4\\n2 2 4\\n2 4 4\\n2 4 4\\n1 1 2\\n3 3 3\\n1 1 2\\n1 3 3\\n1 4 4\\n1 2 2\\n1 2 3\\n1 3 3\\n1 4 3\\n1 4 4\\n2 1 3\\n1 4 4\\n1 2 3\\n1 3 3\\n1 3 3\\n1 1 3\\n2 1 4\\n2 2 2\\n2 2 4\\n1 2 2\\n1 2 4\\n2 2 2\\n1 2 3\\n1 3 3\\n1 1 2\\n1 1 3\\n1 2 3\\n1 3 3\\n1 3 3\\n1 4 4\\n1 3 4\\n1 4 3\\n2 3 2\\n2 3 4\\n2 4 2\\n1 2 2\\n3 1 4\\n1 4 4\\n1 3 4\\n2 3 4\\n1 1 2\\n1 3 3\\n2 2 4\\n1 1 2\\n3 3 3\\n1 3 3\\n1 3 3\\n1 4 4\\n1 3 4\\n2 2 2\\n1 3 2\\n1 4 4\\n1 2 2\\n1 4 3\\n1 3 2\\n1 2 2\\n1 4 4\\n2 2 2\\n1 3 2\\n1 4 3\\n1 2 3\\n1 2 2\\n1 2 2\\n2 4 4\\n1 3 3\\n1 3 4\\n1 4 2\\n1 2 4\\n3 4 4\\n1 4 4\\n2 1 4\\n1 4 4\\n1 4 4\\n1 4 4\\n1 4 4\\n1 4 4\\n2 1 4\\n1 4 4\\n1 4 4\\n1 2 2\\n1 1 2\\n1 3 3\\n1 2 2\\n1 1 2\\n1 3 3\\n1 2 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 1 2\\n1 2 2\\n1 3 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 2 2\\n1 3 3\\n1 1 2\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1 1 3\\n1",
        "num_ids_2": 71,
        "num_ids_4": 1488
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 100 90 80') == '23'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"AA\") == \"A\"\nassert solution(\"ABC\") == \"A\"\nassert solution(\"ABCDEF\") == \"ABC\"\nassert solution(\"ABCABCABCABC\") == \"ABC\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'CDEZAB'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'CDEZAB'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"10\\nABCDEFGHIJ\") == \"DEJKHXBCFI\"\nassert solution(\"0\\n\") == \"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 50
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABCXYZ\") == \"CDEZAB\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABCXYZ') == 'CDEZAB'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'CDEZAB'\nassert solution('3') == 'BCDEABA'\nassert solution('4') == 'DCDCCBBA'",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"CDEZAB\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n5 2 3 2 4\n\"\"\") == \"3 4 2\"\nassert solution(\"\"\"\n1\n2750131 199999\n\"\"\") == \"199999\"\nassert solution(\"\"\"\n1\n3 5 2 3 2 4\n\"\"\") == \"3 4 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3 4 2'\nassert solution('5') == '5 4 2 3 1'\nassert solution('1') == '1'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 36
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 2 1 5'\nassert solution('3') == '3 2 1'\nassert solution('3') == '3 2 1'\nassert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n2 5 2 3\n\n\"\"\") == \"4 3 2\"\n\nassert solution(\"\"\"\n3\n3 5 2 3 2\n\n\"\"\") == \"4 3 2\"\n\nassert solution(\"\"\"\n1\n2750131 199999\n\n\"\"\") == \"199999\"\n\nassert solution(\"\"\"\n5\n2 3 5 2 2\n\n\"\"\") == \"2 2\"\n\nassert solution(\"\"\"\n3\n1 2 3\n\n\"\"\") == \"2 1 3\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3 4 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5 2 3 2 4\n''') == '3 4 2 '\nassert solution('''\n1\n2750131 199999\n''') == '199999'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n2750131 199999\n''') == '199999'\nassert solution('''5\n3 5 2 3 2\n''') == '3 4 2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"3 4 2\"\nassert solution(\"1\") == \"199999\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''\n1\n2750131 199999\n''') == '199999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5 2 3 2 4') == '3 4 2'\nassert solution('1\\n2750131 199999') == '199999'\n\nstdin = '3\\n5 2 3 2 4\\n199999'\nprint(solution(stdin))\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\") == \"1121122\"\n",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('6 1\\n5 3 2 1 4 6\\n') == '2121212'\n",
        "num_ids_2": 42,
        "num_ids_4": 89
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_1) == \"11111\"\nassert solution(input_2) == \"22111\"\nassert solution(input_3) == \"1121122\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"5 1\\n7 1 2 3 5 4 6\") == \"1121122\"\n",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 5 3 1\\n') == '11111'\nassert solution('5 1\\n2 1 3 5 4\\n') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6\\n') == '1121122'\nassert solution('10 1\\n6 2 4 2 4 1\\n') == '011110'\nassert solution('5 1\\n1 1 2 1 3 1\\n') == '211111'\n",
        "num_ids_2": 42,
        "num_ids_4": 89
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n2 4 5 3 1''') == '11111'\nassert solution('''5 1\n2 1 3 5 4''') == '22111'\nassert solution('''7 1\n7 2 1 3 5 4 6''') == '1121122'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_stdin) == str(answer)\n\n\n>>> \n= RESTART: /Users/brian/Desktop/code/competitive-programming/day-02-code-optimization/day-02-code-optimization-n-queens-solutions.py\n6 7\n10 1 2 4 5 3\n\n5 1\n2 1 3 5 4\n\n7 1\n7 2 1 3 5 4 6\n\n= RESTART: /Users/brian/Desktop/code/competitive-programming/day-02-code-optimization/day-02-code-optimization-n-queens-solutions.py\n5 2\n2 4 5 3 1\n\n11111\n\n5 1\n2 1 3 5 4\n\n1121122\n\n5 1\n2 4 5 3 1\n\n21112\n\n\n= RESTART: /Users/brian/Desktop/code/competitive-programming/day-02-code-optimization/day-02-code-optimization-n-queens-solutions.py\n6 7\n10 1 2 4 5 3\n\n5 1\n2 1 3 5 4\n\n7 1\n7 2 1 3 5 4 6\n\n= RESTART: /Users/brian/Desktop/code/competitive-programming/day-02-code-optimization/day-02-code-optimization-n-queens-solutions.py\n5 1\n2 1 3 5 4\n\n11111\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1\n\n21112\n\n5 1\n2 4 5 3 1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\\n\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\\n\") == \"22111\"\nassert solution(\"7 1\\n7 2 1 3 5 4 6\\n\") == \"1121122\"\n",
        "num_ids_2": 42,
        "num_ids_4": 66
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"5 1\\n3 2 1 3 5 4\") == \"1121122\"\nassert solution(\"4 4\\n2 1 3 5 4\") == \"21112\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\n\nassert solution('''\n2\n100 1\n''') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"4\"\nassert solution(\"1 3 3 7\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('100') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n1\\n2\\n3') == '2'\nassert solution('1\\n3\\n3') == '3'\n",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '1'\nassert solution('5') == '2'\nassert solution('4') == '2'\nassert solution('8') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 1 2 3') == '2'\nassert solution('5\\n1 2 1 2 3') == '4'\nassert solution('4\\n100 1') == '4'\nassert solution('4\\n0 0') == '4'\n",
        "num_ids_2": 34,
        "num_ids_4": 62
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 2 3') == '2', \"First\"\nassert solution('5') == '2', \"Second\"\nassert solution('100 1') == '2', \"Third\"\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 1 1023\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\nassert solution('''\n4\n1 2 3 4 5\n''') == '2'\nassert solution('''\n4\n1 2 3 4 5\n''') == '1'\nassert solution('''\n4\n1 1 1 1023\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1023\") == \"0\"",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '2'\nassert solution('''1\n16''') == '1'\nassert solution('''4\n1 1 1 1023''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4 7 1 5 4 9\") == \"1\"\nassert solution(\"5\\n16\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT.strip()) == OUTPUT.strip()\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n4 7 1 5 4 9''') == \"1\"\nassert solution('''5\n1 2 3 4 5''') == \"2\"\nassert solution('''4\n1 1 1 1023''') == \"0\"\nassert solution('''3\n1 2 3''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 1 1 1023''') == '0'\nassert solution('''5\n1 2 3 4 5''') == '1'\nassert solution('''6\n4 7 1 5 4 9''') == '1'\nassert solution('''1\n16''') == '0'\nassert solution('''4\n1 1 1 1023''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"4\"\nassert solution(\"00\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0011') == '4'\nassert solution('1111') == '3'\nassert solution('101010') == '1'\nassert solution('0') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"01\") == \"1\"\nassert solution(\"00\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0011') == '4'\nassert solution('10111') == '3'\nassert solution('1010') == '2'\nassert solution('10001') == '1'\nassert solution('100') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"0011\"\n) == \"4\"\n\nassert solution(\n    \"0111\"\n) == \"2\"\n\nassert solution(\n    \"10111\"\n) == \"3\"\n\nassert solution(\n    \"1111\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"000000\") == \"000000\"\nassert solution(\"100010\") == \"100000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0011') == '4'\nassert solution('1111') == '3'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0011') == '4'\nassert solution('0000') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '4'\nassert solution('01') == '1'\nassert solution('0101') == '0'\nassert solution('01010') == '1'\nassert solution('00101010') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin := '1100') == '2'\nassert solution(stdin := '0001') == '0'\nassert solution(stdin := '0101') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\nassert solution('''5 2\n1 2\n1 3\n1 4\n1 5\n2 4\n''') == '2'\nassert solution('''1 10\n1 2\n1 3\n1 4\n1 5\n2 4\n''') == '1'\nassert solution('''3 2\n1 2\n1 3\n1 4\n1 5\n2 4\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '3'\nassert solution('5 5') == '5'\n\"\"\"\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"2 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n1 3\n2 4\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"10 10\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1 3\n2 4\n''') == '2'\nassert solution('''4 4\n1 3\n2 4\n3 5\n4 6\n''') == '2'\nassert solution('''6 5\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n''') == '3'\nassert solution('''10 5\n1 3\n2 4\n3 5\n4 6\n5 7\n6 8\n7 9\n8 10\n9 11\n10 12\n11 13\n12 14\n13 15\n14 16\n15 17\n16 18\n17 19\n18 20\n19 21\n20 22\n21 23\n22 24\n''') == '13'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 4 4 5''') == '2'\n\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 2 1\n\n''') == '2'\n\n'''\n\n## https://www.hackerrank.com/challenges/minimum-swaps-2/problem\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '2'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 2 2 1\\n\") == \"2\"\nassert solution(\"3\\n3 5 5 3\\n\") == \"1\"\nassert solution(\"5\\n1 5 5 1 3\\n\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 2 1\") == \"2\"\nassert solution(\"3\\n1 2 1\") == \"1\"\nassert solution(\"7\\n1 2 2 1\") == \"3\"\n\"\"\"\n\nn = int(input())\nheights = list(map(int, input().split()))\n\nmin_watering_operations = float(\"inf\")",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 5\n2 1 -3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"2 4\n-1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"4 10\n2 4 1 2\n\"\"\") == \"2\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 5\n2 1 -3\n''') == '3'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n\nassert solution('''\n4 10\n-1 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 1 2\") == \"4\"\nassert solution(\"3 5\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"\nassert solution(stdin='''4 5\n2 1 -3\n''') == \"3\"\nassert solution(stdin='''3 10\n2 4 1 2\n''') == \"2\"\nassert solution(stdin='''4 10\n1 3 -3\n''') == \"0\"\n\n\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 5\n2 1 -3''') == '3'\nassert solution('''2 4\n-1 1''') == '4'\nassert solution('''4 10\n2 4 1 2''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\n\nassert solution('''\n2 4\n-1 1\n''') == '4'\n\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n2 1 -3\n\n''') == '3'\nassert solution('''2 4\n-1 1\n\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"3\"\nassert solution(input_2) == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution() == \"4\"\nassert solution() == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '9 3 6 12 4 8'\nassert solution('4') == '126 42 84 28'\nassert solution('2') == '3000000000000000000 1000000000000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n4 8 6 3 12 9\") == \"9 3 6 12 4 8?\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '9 3 6 12 4 8'\nassert solution('6') == '9 3 6 12 4 8'\nassert solution('2') == '3000000000000000000 1000000000000000000'",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline()\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('4\\n1000000000000000000 3000000000000000000') == '126 42 84 28'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(takes) == takes\nassert solution(solve) == solve",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('6\\n4 8 6 3 12 9') == '9 3 6 12 4 8'\nassert solution('2\\n1000000000000000000 3000000000000000000') == '3000000000000000000 1000000000000000000'\n",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8 \n\nassert solution('''2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000 \n\nassert solution('''5\n12 4 8 6 3\n''') == '6 3 4 8 12'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '1234'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''6\n3 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '8'\nassert solution('''6\n3 5 4 7 10 12\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3 6 7 8\\n\") == \"1 5\"\nassert solution(\"5\\n-1 2 5 8 11\\n\") == \"1 8\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"6\\n\"\n    \"3 5 4 7 10 12\"\n) == \"3\\n7 3 5\"\n\nassert solution(\n    \"5\\n\"\n    \"-1 2 5 8 11\"\n) == \"1\\n8\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '8'\nassert solution('5') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6\n3 5 4 7 10 12\n\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5 4 7 10 12\n''') == '3'\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n3 5 4 7 10 12\") == \"2\"\nassert solution(\"5\\n-1 2 5 8 11\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('5') == '8'\nassert solution('3') == '7 3 5'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n4 5 4 7 10 12\n''') == '3'\nassert solution('''5\n-1 2 5 8 11\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n-1 2 5 8 11') == '1'\nassert solution('5\\n2 5 7 10 12') == '3'\nassert solution('5\\n-1 2 5 8 11') == '1'",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"1 4 2\") == \"1 3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"1 2 3\") == \"0 2\"\nassert solution(\"3 3 3\") == \"0 2\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input := \"2 3 3\") == \"0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\n    \"2\",\n    \"3\",\n    \"3\",\n]) == \"0 2\"\nassert solution([\n    \"2\",\n    \"3\",\n    \"3\",\n]) == \"0 2\"\nassert solution([\n    \"4\",\n    \"5\",\n    \"5\",\n]) == \"1 1\"\nassert solution([\n    \"4\",\n    \"5\",\n    \"5\",\n]) == \"1 1\"\nassert solution([\n    \"2\",\n    \"4\",\n    \"4\",\n]) == \"0 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"0 2\"\nassert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"10 5 1\") == \"2 3\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 3 3'\n    ) == '0 2'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"4 3 3\") == \"1 1\"\n\nNote that the string '0' represents False.\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n\"\"\"\n\nA, B, K = map(int, input().split())",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('103') == '3'\nassert solution('101') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"11\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"101\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('103') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"3\"\nassert solution(\"103\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('103') == '3'\nassert solution('1000000') == '10'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '1'\nassert solution('20') == '2'\nassert solution('100') == '3'\nassert solution('100000000') == '3'\nassert solution('10100000000') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"1001\") == \"1\"\nassert solution(\"100000000\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100') == '3'\nassert solution('101') == '2'\nassert solution('102') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '9\\n', \"Should be 9\"\nassert solution('5\\n') == '9\\n', \"Should be 9\"\nassert solution('2\\n') == '9\\n', \"Should be 9\"\nassert solution('10\\n') == '36\\n', \"Should be 36\"\nassert solution('12\\n') == '49\\n', \"Should be 49\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '9'\nassert solution('4') == '9'\nassert solution('5') == '17'\nassert solution('8') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n') == '3\\n'\nassert solution('2\\n') == '1\\n'\nassert solution('100\\n') == '9\\n'\nassert solution('7\\n') == '1\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"4\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"\nprint(solution(\"5\"))\n\n------------------------------------------\n7. Odd and Even\n\nWrite a function, which when given a non-negative integer will check if the number is even or odd and return an appropriate message.\n\nFor example, when the function is given the number 8, it should return \u201c8 is even\u201d, because it is even. When the function is given the number 7, it should return \u201c7 is odd\u201d, because it is odd.\n\nYour code should take in a single argument which is an integer and should return one of the two strings, \u201ceven\u201d or \u201codd\u201d, depending on the integer given.\n\n-----Constraints-----\n - 1 \\leq N \\leq 100\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n'5 is odd'\n\n------------------------------------------\n8. Zeros and Ones\n\nWrite a function, which when given a non-negative integer will return a new string with the number 0's and 1's in the correct place.\n\nFor example, when the function is given the number 8, it should return \u201c000001\u201d. When the function is given the number 3, it should return \u201c00011\u201d.\n\nYour code should take in a single argument which is an integer and should return a string.\n\n-----Constraints-----\n - 1 \\leq N \\leq 100\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n'000001'\n\n------------------------------------------\n9. Single Digit\n\nWrite a function, which when given a non-negative integer will return a new string with the number 0's and 1's in the correct place.\n\nFor example, when the function is given the number 8, it should return \u201c0008\u201d. When the function is given the number 3, it should return \u201c003\u201d.\n\nYour code should take in a single argument which is an integer and should return a string.\n\n-----Constraints-----\n - 1 \\leq N \\leq 100\n\n-----Sample Input-----\n5\n\n-----Sample Output-----\n'0005'\n\n------------------------------------------\n10. Insert Delete GetRandom\n\nWrite a function, which takes a string as an input, and returns that same string with a random character inserted.\n\nLet\u2019s look at how we can do it:\n\nSay that the string we want to work with is: \u201ckitten\u201d and we want to add a random character at a random position.\n\nThe code would look something like:",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '18'\n\"\"\"\n\nfrom math import gcd",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3 4 6') == '10', 'Sample test 1 fail'\nassert solution('4\\n2 3 5 6') == '12', 'Sample test 2 fail'\nassert solution('5\\n3 4 6 7 8') == '16', 'Sample test 3 fail'\nassert solution('10\\n10 20 30 40 50') == '50', 'Sample test 4 fail'\nassert solution('20\\n1 2 3 4 5 6 7 8 9 10') == '38', 'Sample test 5 fail'",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '10'\nassert solution('4') == '11'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(f\"3\\n3 4 6\") == \"10\"\nassert solution(f\"10\\n3 4 6\") == \"10\"\nassert solution(f\"10\\n2 2 3\") == \"8\"\nassert solution(f\"3\\n2 2 3\") == \"8\"\nassert solution(f\"1\\n1 1 1\") == \"1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 4 6\") == \"10\", \"Wrong answer\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '10'\nassert solution('2') == '0'\nassert solution('3') == '10'\nassert solution('4') == '10'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"9\"\nassert solution(\"1000000000000\") == \"10\"\nassert solution(\"6000000000\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"6\") == \"10\"\nassert solution(\"13\") == \"10\"\nassert solution(\"20\") == \"10\"\nassert solution(\"13\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '10'\nassert solution('3 4 6') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3 4 6\") == \"10\", \"Should be 10\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5\", \"Should be 5\"\nassert solution(\"6\\n1 1 1 1 1 1\") == \"3\", \"Should be 3\"\nprint(\"Congratulations! Your solution is correct.\")\n",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"6 6\") == \"Yes\"\nassert solution(\"4 4\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\n\nprint(solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n'''))\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"6 6\") == \"Yes\"\nassert solution(\"4 4\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\n1 1\n6 6\n4 4\n3 3\n3 2\n\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(TEST) == \"Yes\"\nassert solution(PULL) == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Yes'\nassert solution('1') == 'No'\nassert solution('5') == 'Yes'\n'''\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\nassert solution('3') == '1'\nassert solution('4') == '1'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\n\"\"\"\n\nimport math\n\nr = int(input())\n\na = math.pi * r ** 2\nb = math.pi * r ** 2\n\nprint(math.ceil(a/b))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"16\"\nassert solution(\"20\") == \"64\"\nassert solution(\"50\") == \"256\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == '1', \"First test case\"\nassert solution(\"2\") == '4', \"Second test case\"\nassert solution(\"3\") == '6', \"Third test case\"\nassert solution(\"4\") == '8', \"Fourth test case\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('3') == '4'\nassert solution('3') == '5'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '4'\nassert solution('0') == '0'\nassert solution('5') == '25'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3 6 4') == 'Yes'\nassert solution('1\\n0') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'No'\nassert solution('4') == 'No'\nassert solution('10') == 'Yes'\nassert solution('6') == 'Yes'\nassert solution('1') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == 'Yes'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 8 5 1\\n') == 'Yes\\n', \"Wrong answer in sample tests\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3 8 5 1\") == \"Yes\"\nassert solution(\"5\\n8 12 10 10 4\") == \"No\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('6\\n2 2 4 2 2') == 'Yes'\nassert solution('8\\n5 7 3 4 1 5 3 4') == 'Yes'\nassert solution('8\\n5 7 3 4 1 5 3 4') == 'Yes'\nassert solution('10\\n5 9 7 3 4 1 5 3 4') == 'Yes'\n",
        "num_ids_2": 33,
        "num_ids_4": 73
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('2\\n1 1 1') == 'No'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n8 5 1') == 'Yes'\nassert solution('3\\n6 6 2') == 'No'\n\"\"\"\n\n\"\"\"\n\nConstraints:\n - All values in input are integers.\n - 3 \\leq N \\leq 10\n - 1 \\leq L_i \\leq 100\n\n-------Input-------\nInput is given from Standard Input in the following format:\nN\nL_1 L_2... L_N\n\n-------Output-------\nIf an N-sided polygon satisfying the condition can be drawn, print Yes; otherwise, print No.\n\n-------Sample Input-------\n4\n3 8 5 1\n\n-------Sample Output-------\nYes\n\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == 'Yes'\nassert solution('5') == 'No'\nassert solution('6') == 'Yes'\nassert solution('7') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '702', solution('3 3')\nassert solution('12') == '-1', solution('12')\nassert solution('2 2') == '0', solution('2 2')\nassert solution('5 5') == '92', solution('5 5')\nassert solution('14 14') == '-1', solution('14 14')",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '702'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '702', '3 3'\nassert solution('1 7') == '702', '1 7'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '702'\nassert solution('2 2') == '-1'\nassert solution('1 7') == '702'\nassert solution('3 2') == '-1'\nassert solution('1 7') == '702'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 7\n3 2\n1 7''') == '702'\nassert solution('''5 5\n1 2\n2 3\n3 4\n4 5\n5 6''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '702'\nassert solution('1 7') == '702'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3\\n1 7') == '702'\nassert solution('3 2\\n1 7') == '-1'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"10 6\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"702\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '702', \"Wrong answer\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"0\", solution(None)\nassert solution(\"1 1\") == \"1\", solution(\"1 1\")\nassert solution(\"1 2\") == \"0\", solution(\"1 2\")\nassert solution(\"2 1\") == \"1\", solution(\"2 1\")\nassert solution(\"3 1\") == \"0\", solution(\"3 1\")\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '9'\nassert solution('10 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"9\", \"WRONG SOLUTION\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == \"9\"\nassert solution(2) == \"45\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n5''') == '12'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\") == \"9\"\nassert solution(\"3 2\") == \"9\"\n\nassert solution(\"4 1\") == \"0\"\nassert solution(\"4 2\") == \"0\"\n\"\"\"\nfrom math import gcd\n\nN, K = map(int, input().split())",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"5 5\") == \"37\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"9\"\nassert solution(\"3 2\") == \"12\"\nassert solution(\"4 4\") == \"24\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('-9') == '1011'\nassert solution('-1') == '1011'\nassert solution('-0') == '0'\nassert solution('9') == '1001'\nassert solution('1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-9') == '1011'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('-9') == '1011'\nassert solution('-7') == '-10'\nassert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('-10') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"101\"\nassert solution(\"-9\") == \"1011\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-9\") == \"1011\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('-9') == '1011'\nassert solution('-12') == '-1110'\nassert solution('-21') == '-1211'\nassert solution('-3') == '-3'\nassert solution('-7') == '-7'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-9') == '1011'\nassert solution('-1') == '0'\nassert solution('2') == '10'\nassert solution('-10') == '11'\nassert solution('-100') == '100'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('-9') == '1011'\nprint(solution('-9'))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('-9') == '1011'\nassert solution('-12') == '1011'\nassert solution('-45') == '1011'\nassert solution('-36') == '1011'\nassert solution('-90') == '1011'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-9') == '1011'\nassert solution('-10') == '1010'\nassert solution('-11') == '1001'\nassert solution('-100') == '1010'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"4 9\") == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '12'\nassert solution('2 4') == '6'\nassert solution('1') == '1'\nassert solution('2') == '2'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5') == '12'\nassert solution('2 5') == '12'\nassert solution('2 5') == '12'\nassert solution('2 5') == '12'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5\\n4 9') == '12'\nassert solution('2 5\\n2 4') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"7\"\nassert solution(\"10 20\") == \"50\"\nassert solution(\"3 4\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"5\"\n\n------SOLUTION------\n1.  If you can get the maximum amount of money with only one store, it is optimal.\n2.  If you can get the maximum amount of money with only two stores, it is optimal.\n3.  If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many stores do you need to buy at once?\n    -- How many cans of energy drink do you need?\n    -- How many cans of energy drink do you need in the first stores?\n4.  1) If you can get the maximum amount of money with only two stores, it is optimal.\n    -- How many cans of energy drink do you need?\n5.  2) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n6.  If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n7.  8) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n8.  9) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n    -- How many cans of energy drink do you need in the fifth stores?\n9.  10) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n    -- How many cans of energy drink do you need in the fifth stores?\n    -- How many cans of energy drink do you need in the sixth stores?\n10. 11) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n    -- How many cans of energy drink do you need in the fifth stores?\n    -- How many cans of energy drink do you need in the sixth stores?\n    -- How many cans of energy drink do you need in the seventh stores?\n12. 13) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n    -- How many cans of energy drink do you need in the fifth stores?\n    -- How many cans of energy drink do you need in the sixth stores?\n    -- How many cans of energy drink do you need in the seventh stores?\n    -- How many cans of energy drink do you need in the eighth stores?\n    -- How many cans of energy drink do you need in the ninth stores?\n    -- How many cans of energy drink do you need in the tenth stores?\n    -- How many cans of energy drink do you need in the eleventh stores?\n14. 15) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n    -- How many cans of energy drink do you need in the fifth stores?\n    -- How many cans of energy drink do you need in the sixth stores?\n    -- How many cans of energy drink do you need in the seventh stores?\n    -- How many cans of energy drink do you need in the eighth stores?\n    -- How many cans of energy drink do you need in the ninth stores?\n    -- How many cans of energy drink do you need in the tenth stores?\n    -- How many cans of energy drink do you need in the eleventh stores?\n16. 17) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n    -- How many cans of energy drink do you need in the fifth stores?\n    -- How many cans of energy drink do you need in the sixth stores?\n    -- How many cans of energy drink do you need in the seventh stores?\n    -- How many cans of energy drink do you need in the eighth stores?\n    -- How many cans of energy drink do you need in the ninth stores?\n    -- How many cans of energy drink do you need in the tenth stores?\n    -- How many cans of energy drink do you need in the eleventh stores?\n18. 19) If you can get the maximum amount of money with more than 2 stores, you need to make different decisions:\n    -- How many cans of energy drink do you need in the first stores?\n    -- How many cans of energy drink do you need in the second stores?\n    -- How many cans of energy drink do you need in the third stores?\n    -- How many cans of energy drink do you need in the fourth stores?\n    -- How many cans of energy drink do you need in the fifth stores?\n    -- How many cans of energy drink do you need in the sixth stores?\n    -- How many cans of energy drink do you need in the seventh stores?\n    -- How many cans of energy drink do you need in the eighth stores?\n    -- How many cans of energy drink do you need in the ninth stores?\n    -- How many cans of energy drink do you need in the tenth stores?",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n2 2') == '1'\nassert solution('1 2\\n1 3') == '2'\nassert solution('1 4\\n2 5\\n3 6\\n4 7') == '5'\nassert solution('1 5\\n2 8\\n3 9\\n4 10') == '8'\n",
        "num_ids_2": 30,
        "num_ids_4": 76
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '12'\nassert solution('3 2') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2,5]) == '12'\nassert solution([4,9]) == '12'\nassert solution([2,4]) == '10'\n\n------class------\nclass Solution(object):\n    def minimumAmount(self, n: int, m: int, k: int, A: List[int]) -> int:\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type k: int\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        maxi = max(A)\n        lis = []\n        lis.append(maxi)\n        for i in range(1, n):\n            lis.append(maxi)\n        dp = [[0] * (len(lis)) for _ in range(m + 1)]\n        for i in range(1, len(lis)):\n            dp[1][i] = lis[i]\n        for i in range(2, m + 1):\n            for j in range(len(lis)):\n                if i - j >= 1:\n                    dp[i][j] = dp[i - 1][j]\n                else:\n                    dp[i][j] = dp[i][j - 1]\n                for k in range(i - 1, j):\n                    if i - k >= 1:\n                        dp[i][j] = min(dp[i][j], max(dp[i - k][k - 1], dp[k][j]) + A[j - 1])\n        return dp[m][k - 1]\n\n------class------\nclass Solution(object):\n    def minimumAmount(self, n: int, m: int, k: int, A: List[int]) -> int:\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type k: int\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        from collections import deque\n        nums = deque(sorted(A))\n        nums.append(nums[-1] + 1)\n        res = float('inf')\n        for i in range(len(nums)):\n            for j in range(i, len(nums)):\n                s = nums[i] + nums[j]\n                l = len(nums)\n                l_1 = l - 2\n                l_2 = l - 1\n                if s <= m:\n                    if l <= k:\n                        res = min(res, s)\n                    else:\n                        res = min(res, s + nums[l_1] + nums[l_2])\n        return res\n\n------class------\nclass Solution(object):\n    def minimumAmount(self, n: int, m: int, k: int, A: List[int]) -> int:\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type k: int\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        import heapq\n        heap = []\n        for num in A:\n            heapq.heappush(heap, -num)\n        res = 0\n        while heap:\n            res += heapq.heappop(heap)\n            if len(heap) < k:\n                break\n            res += heapq.heappop(heap) * -1\n        return res if res <= m else -1\n\n------class------\nclass Solution(object):\n    def minimumAmount(self, n: int, m: int, k: int, A: List[int]) -> int:\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type k: int\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        import heapq\n        heap = []\n        for num in A:\n            heapq.heappush(heap, -num)\n        res = 0\n        while len(heap) > k:\n            res += heapq.heappop(heap)\n        while heap and len(heap) < k:\n            res += heapq.heappop(heap) * -1\n        return res if res <= m else -1\n\n------class------\nclass Solution(object):\n    def minimumAmount(self, n: int, m: int, k: int, A: List[int]) -> int:\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type k: int\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        # dp = [0]*(m+1)\n        # for i in range(n):\n        #     for j in range(i+1):\n        #         dp[j] = dp[j] + A[i]\n        # for i in range(n):\n        #     for j in range(i,n):\n        #         dp[j] = min(dp[j],dp[i]+dp[j-i])\n        # return dp[n]\n        \n        dp = [[0]*(m + 1) for _ in range(k + 1)]\n        for i in range(k + 1):\n            for j in range(m + 1):\n                if i == 0:\n                    dp[i][j] = j\n                elif j == 0:\n                    dp[i][j] = 0\n                else:\n                    dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + max(0, A[i - 1] - dp[i - 1][j]))\n        return dp[-1][-1]\n\n------class------\nclass Solution(object):\n    def minimumAmount(self, n: int, m: int, k: int, A: List[int]) -> int:\n        \"\"\"\n        :type n: int\n        :type m: int\n        :type k: int\n        :type A: List[int]\n        :rtype: int\n        \"\"\"\n        # dp = [0]*(m + 1)\n        # for i in range(n):\n        #     for j in range(i+1):\n        #         dp[j] = dp[j] + A[i]\n        # for i in range(n):\n        #     for j in range(i,n):\n        #         dp[j] = min(dp[j],dp[i]+dp[j-i])\n        # return dp[n]\n\n        dp = [[0]*(m + 1) for _ in range(k + 1)]\n        for i in range(k + 1):\n            for j in range(m + 1):\n                if i == 0:\n                    dp[i][j] = j\n                elif j == 0:\n                    dp[i][j] = 0\n                else:\n                    dp[i][j] = min(dp[i][j], dp[i - 1][j - 1] + max(0, A[i - 1] - dp[i - 1][j]))\n        return dp[-1][-1]\n\n------class------\nclass Solution(",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('5') == '1'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n10 4 8 7 3\n''') == '2', \"First\"\nassert solution('''\n10\n10 4 8 7 3\n''') == '1', \"Second\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('10\\n10 4 8 7 3') == '2'\nassert solution('5\\n10 10 8 7 3') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution(stdin='''\n10 3\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution(stdin='''\n3 3\n1 2 3 4\n''') == '0'\nassert solution(stdin='''\n10 5\n1 2 3 4 5 6 7 8 9 10\n''') == '1'\nassert solution(stdin='''\n10 5\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\n''')",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 3') == '0'\n\n'''\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"5 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 3 3''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\nassert solution(input) == '2'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n1 2 3\n''') == '2'\nassert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 2 4 5') == '2'\nassert solution('5 3\\n1 2 3 4 5') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 2 4 2 3\") == \"3\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n\nfor i in range(1, 7):\n    assert solution(f'{i} {i} {i} {i} {i} {i}') == f'{i} {i} {i} {i} {i}'\n\nfor i in range(1, 7):\n    assert solution(f'{i} {i} {i} {i} {i} {i}') == f'{i} {i} {i} {i} {i}'\n\nfor i in range(1, 7):\n    assert solution(f'{i} {i} {i} {i} {i} {i}') == f'{i} {i} {i} {i} {i}'\n\nfor i in range(1, 7):\n    assert solution(f'{i} {i} {i} {i} {i} {i}') == f'{i} {i} {i} {i} {i}'\n\nfor i in range(1, 7):\n    ",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('5 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n3 3 2 1 1 1 3\\n') == '4'\nassert solution('6 5\\n1 2 2 4 2 3\\n') == '3'\nassert solution('7 5\\n3 3 2 1 1 1 3\\n') == '4'\nassert solution('11 5\\n3 3 2 1 1 1 3\\n') == '5'\nassert solution('13 5\\n3 3 2 1 1 1 3\\n') == '4'\n",
        "num_ids_2": 43,
        "num_ids_4": 87
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution([1, 2, 2, 4, 2, 3]) == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 2 4 2 3') == '3'\nassert solution('6 5\\n3 3 2 1 1 1 3') == '4'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('100\\n3 3 2 1 1 1 3') == '4'\nassert solution('1000000000\\n3 3 2 1 1 1 3') == '100'\n",
        "num_ids_2": 38,
        "num_ids_4": 79
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\n\nassert solution('''\n3\n6 4 5\n4 3 5 6 7\n1 10 1\n''') == '4'\n\nassert solution('''\n8\n4 3 1 2 3 6 4 5\n1 1 2 3 4 5 6 7\n1 1000 1\n1000000000000 42 88\n''') == '1000'\n\nassert solution('''\n8\n2 4 3 2 5 4 1\n3 3 2 2 5 5 1\n''') == '2'\n\nassert solution('''\n8\n2 4 3 2 5 4 1\n3 3 2 2 5 5 1\n1 1000 1\n1000000000000 42 88\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"10\"\nassert solution() == \"9\"\nassert solution() == \"1000\"\nassert solution() == \"42000000000000\"\nprint(solution(input()))\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '900000000000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''\n10 2 4\n3 2 1\n5 1 1\n5 100 1\n''') == '9'\nassert solution('''\n15 2 4\n3 3 1\n1 1 1\n5 100 1\n''') == '5000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 1 3') == '10'\nassert solution('7 3 2') == '9'\nassert solution('1 1000 1') == '1000'\nassert solution('1000000000000 42 88') == '42000000000000'",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 1 2') == \"3\\n3\\n6\\n100000000000000000000000000000000000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 1 3\") == \"10\"\nassert solution(\"7 3 2\") == \"9\"\nassert solution(\"1 1000 1\") == \"1000\"\nassert solution(\"1000000000000 42 88\") == \"42000000000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2\\n2 3\") == \"2\"\nassert solution(\"3\\n1 2\\n2 3\") == \"3\"\nassert solution(\"4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88\") == \"42000000000000\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n3 4 5\n3 6 5\n''') == '2'\nassert solution('''6 3\n3 4 5\n1 2 3\n''') == '1'\nassert solution('''10 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 6\n2 4 5\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('5 1 2') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == '2'\nassert solution('3 6') == '2'\nassert solution('5 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '2'\nassert solution('3 4 5') == '2'\nassert solution('3 4 5 6') == '3'\nassert solution('5 6 8 10') == '4'\nassert solution('0') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 6') == '2'\nassert solution('5 6') == '4'\nassert solution('10 20') == '1'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == None\nassert solution(\"\") == None\nassert solution(\"1\") == None\nassert solution(\"2\") == None\nassert solution(\"3 6\") == 2\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '2'\nassert solution('10 3') == '5'\nassert solution('10 10') == '0'\nassert solution('10 20') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 6\n3 4 5\n''') == '2'\nassert solution('''\n1 1\n1\n''') == '0'\nassert solution('''\n2 5\n7 8\n''') == '1'\nassert solution('''\n3 5\n4 4 7 8\n''') == '1'\nassert solution('''\n2 5\n7 8\n7 10\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"3 5\n3 4 5\n\"\"\") == \"2\"\nassert solution(\"\"\"5 1\n3 4 5\n\"\"\") == \"1\"\nassert solution(\"\"\"5 9\n3 4 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"10\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'No'\nassert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nhoge\nenglish\nhoge\nenigma\n''') == 'No'\n\nassert solution('''\n4\nhoge\nenglish\nhoge\nenigma\n''') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"No\"\nassert solution(\"10\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nhoge\\neenglish\\nhoge\\nenigma') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nhoge\\nenglish\\nhoge\\nenigma\\n') == 'No'\nassert solution('2\\nhoge\\nhoge\\n') == 'Yes'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nhoge\\nenglish\\ne\\ngo\\n') == 'Yes'\nassert solution('1\\nhoge\\nh\\n\\ne\\ng\\n') == 'No'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 3\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '6'\nassert solution('2 3') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"6\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"2 0\") == \"0\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '6'\nassert solution('2 3') == '6'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"2 2\") == \"4\"\nassert solution(\"2 4\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 3') == '3'\nassert solution('2 2') == '3'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '2'\nassert solution('3 1') == '3'\nassert solution('3 2') == '3'\nassert solution('4 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"2 4\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"6\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 4\") == \"8\"\nassert solution(\"10 10\") == \"45\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"Buffy\") == \"BFFFBBF\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('apple') == 'xxxxxxx'\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('coding') == 'coding'\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('abcdef') == 'xxxxxxx'\nassert solution('abc') == 'xxx'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'xxxxxxx'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('sardine') == 'xxxxxxx'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([5, 1, 1, 1, 3]) == 'Yes'\nassert solution([5, 1, 1, 1, 3]) == 'No'\nassert solution([5, 1, 1, 1, 4]) == 'No'\nassert solution([5, 1, 1, 1, 4]) == 'Yes'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('3') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 2\") == \"Yes\"\nassert solution(\"5\\n1 1 2 3 4\") == \"No\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n\nfrom typing import List\n\nimport pytest\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 2, 1, 1, 3]) == \"Yes\"\nassert solution([5, 1, 2, 1, 3]) == \"No\"\nassert solution([7, 1, 2, 1, 3]) == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('6\\n1 2 1 3 2 4') == 'No'\nassert solution('4\\n1 2 1 3 2') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"4\\n1 2 1 1 3\\n\") == \"No\"\nassert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == 'Yes'\nassert solution('10\\n1 2 1 1 1 1 1 1 1') == 'No'\n",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\"\nprint(solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\"))\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 3, -10], [1, 2, 3], [3, 2, 1], ) == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\nassert solution('5 2 -10\\n3 4 1\\n5 2 1\\n1 2 1\\n3 4 1\\n2 3 1\\n') == '0'\n\n--- --- ---\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '2 3 -10\\n'\n    '1 2 3\\n'\n    '3 2 1\\n'\n    '1 2 2\\n'\n) == '1'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '2'\nassert solution('3 2 1') == '1'\nassert solution('1 2 2') == '2'\nassert solution('1 2 2 -1') == '1'\n\"\"\"\nimport math\nimport sys\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('2 2 2') == '1'\nassert solution('5 5 4') == '3'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\") == \"1\"\nassert solution(\"3 1 2\") == \"1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2 3\n3 2 1\n1 2 2\n''') == '1'\nassert solution('''\n5 5 2\n0 1 2 3 4\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1 -2 -3 -4 -5\n-1",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '1'\nassert solution('1100') == '11'\nassert solution('10') == '10'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"100\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"10000\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '2'\nassert solution('13') == '3'\nassert solution('17') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1900') == '100'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '100'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10000000000000') == '1000000'\nassert solution('1000000000000') == '1000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1900') == '100'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '100'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '100'\nassert solution('0') == '0'\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('13') == '8'\nassert solution('20') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '9'\nassert solution(input()) == '9'\n\n\"\"\"\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"2\"\n    \"5 2\"\n    \"4 5\"\n    ) == \"9\"\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\na.sort()\nb.sort()",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\nassert solution('5') == '9'\nassert solution('6') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n4 5 2\n4 5''') == '9'\nassert solution('''2\n3 5 2\n4 5\n''') == '9'\nassert solution('''4\n1 2 3 4 5\n1 2 3 4\n1 2 3 4\n1 2 3 4\n1 2 3 4\n''') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5 2\n4 5\n''') == '9'\nassert solution('''\n2\n3 5 2\n4 5\n''') == '9'\n\n'''\n- the first hero is attacking monsters that have been attacked by 2 or more monsters\n- the second hero is attacking monsters that have been attacked by 3 or more monsters\n'''\n\n'''\n    - if we chose to defeat a number of monsters of each type, how many different types we can defeat?\n    - What is the maximum number of monsters that can be defeated?\n    - The maximum number of monsters that can be defeated is the maximum number of monsters we can defeat by defeating\n    - If we chose to defeat monsters of the same type, how many monsters of each type can we defeat?\n'''\n\n'''\n    - if we chose to defeat a number of monsters of each type, how many different types we can defeat?\n    - If we chose to defeat monsters of the same type, how many monsters of each type can we defeat?\n\n---- - for the first hero, we should choose the monsters that were attacked by 2 or more\n---- - for the second hero, we should choose the monsters that were attacked by 3 or more\n\n---- In the case that the heroes were able to defeat monsters of the same type, how many monsters of each type we can defeat?\n\n---- In the case that we chose to defeat monsters of the same type, how many monsters of each type can we defeat?\n\n---- If we chose to defeat monsters of the same type, how many monsters of each type can we defeat?\n\n---- If we chose to defeat monsters of the same type, how many monsters of each type can we defeat?\n\n---- If we chose to defeat monsters of the same type, how many monsters of each type can we defeat?\n\n---- If we chose to defeat monsters of the same type, how many monsters of each type can we defeat?\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 3, 5, 2]) == '9'\nassert solution([2, 4, 5, 3]) == '8'\nassert solution([2, 3, 5, 3]) == '7'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1 1\n2\n\"\"\") == \"9\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n1 1 2 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n6\n1 1 1 1 1 1\n1 1 2 2\n1 1 3 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n8\n1 1 1 1 1 1 1 1\n1 1 2 2\n1 1 3 2\n1 1 4 2\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n1 1 1 1 1\n1 1 2 2\n1 1 3 2\n1 1 4 2\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 2\") == \"9\"\nassert solution(\"3 5 2\") == \"9\"\nassert solution(\"4 5\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 2\\n4 5\") == \"9\"\nassert solution(\"2\\n4 5\") == \"9\"\nassert solution(\"3\\n4 5\") == \"9\"\nassert solution(\"4\\n4 5\") == \"9\"",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\", \"1\"\nassert solution(\"2\") == \"9\", \"2\"\nassert solution(\"3\") == \"9\", \"3\"\nassert solution(\"4\") == \"9\", \"4\"\nassert solution(\"5\") == \"9\", \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"4 4 10 10\") == \"War\"\nassert solution(\"1 100 100\") == \"No War\"\nassert solution(\"3 4 10 20\") == \"No War\"\nassert solution(\"3 3 3 3\") == \"War\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"5 5 5 5\") == \"War\"\nassert solution(\"3 6 9 5\") == \"War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('4 5 9 10') == 'War'\nassert solution('4 5 9 10') == 'No War'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 10 20') == 'No War'\nassert solution('3 2 11 21') == 'No War'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 10 20') == 'War'\nassert solution('5 5 11 22') == 'No War'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"4 3 9 10\") == \"War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('6 8 10 20') == 'War'\nassert solution('3 4 6 8 10 20') == 'War'\nassert solution('2 2 2 2 2') == 'No War'\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 20') == 'No War'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 2 10 20\n8 15 13\n16 22\n''') == 'War'\nassert solution('''3 2 10 20\n8 15 13\n16 22\n''') == 'No War'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('1') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '6'\nassert solution('1') == '0'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3\\n1\\n3') == '6'\n\"\"\"\n\nN = int(stdin.readline())\nT_1, T_2 = map(int, stdin.readline().split())\n\nT_1 += 180\nT_2 += 360\n\nprint(min(T_1, T_2) % 360)\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\nassert solution('4') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '7'\nassert solution('4') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '6'\nassert solution('2') == '6'\nassert solution('2') == '6'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n3\\n3\\n\") == \"6\"\nassert solution(\"2\\n4\\n3\\n\") == \"6\"\nassert solution(\"2\\n5\\n3\\n\") == \"6\"\nassert solution(\"2\\n6\\n3\\n\") == \"6\"\nassert solution(\"2\\n7\\n3\\n\") == \"6\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2\\n') == '0'\nassert solution('3\\n1 2 3\\n') == '0'\nassert solution('6\\n2 3 1 5 7\\n') == '0'\n",
        "num_ids_2": 33,
        "num_ids_4": 52
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\n''') == '0'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '1'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3') == '0'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2') == '0'\nassert solution('3\\n1 2 3') == '0'\nassert solution('10\\n2 3 5 1 7 9 6') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '1'\nassert solution('3 5 8 6') == '0'\nassert solution('1 1 2 3 3 4') == '3'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n1 2 3 4\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n3 2 1\n1 2 3\n4 5 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\n\nassert solution(\n'''\n4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\n\nassert solution(\n'''\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    3 3\n    3 2 1\n    1 2 3\n    4 5 6\n''') == '6'\n\nassert solution('''\n    4 3\n    1 6 3 4\n    5 10 7 8\n    9 2 11 12\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n3 2 1\n1 2 3\n4 5 6''') == '6'\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '2'\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\nassert solution('3 3') == '6'\nassert solution('4 3') == '0'",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '0'\nassert solution('3 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6''') == \"6\"\nassert solution('''4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == \"0\"\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == \"2\"",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6'\nassert solution() == '0'\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"1 2 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n5 10 2 3 14 5\n''') == '5'\n\nassert solution('''2\n1 100\n''') == '99'\n\nassert solution('''4\n3 5\n5 2\n4 1\n''') == '10'\n\nassert solution('''4\n5 5\n5 3\n5 2\n''') == '0'\n\nassert solution('''5\n5 5\n5 5\n5 5\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5 10 2 3 14 5\n\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n5 10 2 3 14 5\n''') == '5'\nassert solution('''2\n1 100\n''') == '99'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 100\n\n''') == '99'\n\nassert solution('''\n3\n1 20 50 40\n\n''') == '100'\n\nassert solution('''\n10\n10 20 30 50 60 70 80 90 100\n\n''') == '199'\n\nassert solution('''\n10\n5 10 20 30 50 60 70 80 90 100\n\n''') == '199'\n\nassert solution('''\n30\n10 20 30 50 60 70 80 90 100\n\n''') == '99'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n5 10 2 3 14 5\n''') == '5'\nassert solution('''\n2\n1 100\n''') == '99'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"99\"\nassert solution(\"2\") == \"98\"\n\n\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n10 2 3 4 5\n''') == '5'\nassert solution('''2\n1 100\n''') == '99'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n5 10 2 3 14 5\") == \"5\"\nassert solution(\"2\\n1 100\") == \"99\"\nassert solution(\"3\\n1 100\") == \"99\"\nassert solution(\"4\\n1 100\") == \"100\"\nassert solution(\"5\\n1 100\") == \"101\"\n",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin_1) == '2'\nassert solution(stdin_2) == '3'\nassert solution(stdin_3) == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 0 1 0 1\n''') == '2'\n\nassert solution('''6\n0 1 0 1 1 0\n''') == '3'\n\nassert solution('''7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution('''3\n0 0 0\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == '2'\nassert solution('''\n6\n0 1 0 1 1 0\n''') == '3'\nassert solution('''\n3\n0 0 0\n''') == '0'\nassert solution('''\n3\n1 0 1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5\n1 0 1 0 1\n\"\"\") == \"2\"\nassert solution(\"\"\"6\n0 1 0 1 1 0\n\"\"\") == \"3\"\nassert solution(\"\"\"3\n0 0 0\n\"\"\") == \"0\"\nassert solution(\"\"\"7\n1 0 1 1 1 0 1\n\"\"\") == \"3\"\nassert solution(\"\"\"5\n1 0 1 0 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0 1') == '3'\nassert solution('7\\n1 0 1 1 1 0 1') == '2'\nassert solution('3\\n0 0 0') == '0'\nprint('All tests passed.')\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == \"2\"\nassert solution('''\n6\n0 1 0 1 1 0\n''') == \"3\"\nassert solution('''\n3\n0 0 0\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n3\n8\n1\n7\n6\n8''') == '2'\nassert solution('''1\n3\n4\n4\n5\n4''') == '3'\nassert solution('''8\n6\n8\n5\n4\n5\n7\n7''') == '0'\nassert solution('''8\n2\n4\n6\n8\n5\n9\n10\n8''') == '3'\nassert solution('''2\n1\n4\n5\n6\n7\n8''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"7\") == \"0\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('7') == '0'\nassert solution('7') == '0'\nassert solution('7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard\n''') == '4'\nassert solution('''9\nbrie soft\ncamembert soft\nfeta soft\ngoat soft\nmuenster soft\nasiago hard\ncheddar hard\ngouda hard\nswiss hard\n''') == '3'\nprint('You passed all the tests! Congratulations!')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n    4\n    parmesan hard\n    emmental hard\n    colby hard\n    gruyere hard\n    \"\"\") == \"4\"\n\"\"\")\n\ninput()\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n\") == 3\n\n\"\"\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"9\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n4\nedam hard\nparmesan hard\nemmental hard\ncolby hard\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n5\ngruyere hard\nfeta hard\nbrie soft\nedam hard\ngouda hard\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n7\nswiss hard\nmuenster hard\nparmesan hard\ncheese 1 hard\ncheese 2 hard\ncheese 3 hard\ncheese 4 hard\n\"\"\") == \"7\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\nassert solution() == '4'\n'''\n\n'''\n1)Brute force solution\n2)Try and find the algorithm\n3)use a loop, do the same thing",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"9\") == \"3\"\nassert solution(\"6\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\nparmesan hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == \"4\"\nassert solution('''6\nparmesan hard\nemmental hard\nedam hard\ncolby hard\ngruyere hard\nasiago hard''') == \"6\"\nprint(solution('''7\nsofthard\nsofthard\nsoftsoft\nsoftsoft\nsoftsoft\nsoftsoft\nsoftsoft'''))\nprint(solution('''13\ngoatsoft\ngoatsoft\ngoatsoft\ngoatsoft\ngoatsoft\ngoatsoft\ngoatsoft'''))\n\n'''\n\n[Special Notes]\n[2. Input, 2. Output]\n[3. Edge cases]\n[3. Time, O(n) ]\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nswiss hard\\n') == '3'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0 1 2 1\n3 2 1 1\n''') == '1 0 2 1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0 1 2 1\n3 2 1 1\n\n''') == '1 0 0 2 1 2 1'\nassert solution('''\n4\n0 1 2 1\n3 2 1 1\n5 4 3 5 6\n\n''') == '0 0 0 1 0 2 4 5 6'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n2 5 1 5 3 4 3') == '0 0 0 1 0 2 4'\nassert solution('3\\n1 1 1\\n1 2 1') == '1 0 0 1 1 2'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 0 0 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n2 5 1 5 3 4 3\") == \"0 0 0 1 0 2 4\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n2 5 1 5 3 4 3\n3 2 1 1\n''') == '0 0 0 1 0 2 4', \"First\"\nassert solution('''\n10\n5 1 5 3 2 4 3\n5 1 3 2 4\n''') == '1 0 0 2 0 0 4', \"Second\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2 1'\n\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1 0 0 2 0 0 1 0 2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1 2 1\n3 2 1 1\n''') == '1 0 0 2 1 2 1'\nassert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n2 5 1 5 3 4 3\n2 4 3 5 6 5 1\n''') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '0'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n0\\n1\\n0') == '1'\nassert solution('1\\n1\\n1\\n0') == '1'\nassert solution('0\\n0\\n0\\n0') == '1'\nassert solution('1\\n0\\n1\\n1') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n1\\n0') == '1'\nassert solution('0\\n0\\n1\\n0') == '1'\n\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\\n1\") == \"0\"\nassert solution(\"1\\n0\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"0\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"0\"\n) == \"0\"\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"0\"\n) == \"1\"\nassert solution(\n    \"0\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"0\"\n) == \"0\"\nassert solution(\n    \"1\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"0\"\n) == \"1\"\n\n\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0\\n1\\n1\\n0\\n\") == \"0\"\nassert solution(\"1\\n1\\n1\\n0\\n\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\\n\") == \"0\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"0\\n1\\n1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(stdin) == \"0\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 49
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\".\\\n1\\\n1\\\n1\\\n1\\\n\") == \"1\"\n\n\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"15 20 80\") == \"No\"\nassert solution(\"100 10 20\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1000 15 80\"\n) == \"Yes\"\nassert solution(\n    \"0 10 20\"\n) == \"No\"\nassert solution(\n    \"10 0 20\"\n) == \"No\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1000 15 80\n''') == 'Yes'\nassert solution('''\n10 10 10\n''') == 'No'\nassert solution('''\n50 20 10\n''') == 'Yes'\nassert solution('''\n500 20 10\n''') == 'No'\nassert solution('''\n100 20 10\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000 15 80\\n\") == \"Yes\", \"Sample test\"\nassert solution(\"1000 15 100\\n\") == \"No\", \"Sample test\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1 1 1') == 'No'\nassert solution('1 2 3') == 'No'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\", \"Wrong\"\nassert solution(\"10000 15 80\") == \"No\", \"Wrong\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    3 3 1\n    \"\"\"\n) == \"Yes\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"10000 1 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('1000 20 80') == 'No'\n\"\"\"\nd, t, s = map(int, stdin.split())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4 8 7\n4 5 9\n5 2 3\n3 1 4\n2 6 5\n6 3 1\n2 5 4\n3 1 5\n7 4 9\n5 2 8\n6 5 9\n2 2 8\n5 4 6\n1 9 7\n3 3 5\n7 2 6\n2 7 9\n3 9 2\n6 5 2\n3 6 7\n5 4 2\n1 3 5\n1 4 3\n3 7 4\n5 2 3\n6 6 5\n2 1 9\n4 1 2\n5 7 8\n2 3 4\n3 4 2\n7 1 6\n1 3 9\n1 2 6\n4 3 5\n7 5 6\n6 7 1\n2 6 5\n2 8 5\n8 6 5\n6 9 1\n7 7 7\n1 9 4\n1 4 1\n4 6 2\n2 3 9\n2 8 4\n6 5 1\n6 2 4\n9 7 5\n2 4 8\n3 5 4\n4 8 9\n4 5 7\n2 4 6\n4 7 6\n5 7 5\n3 4 7\n3 5 4\n5 8 8\n4 6 6\n3 9 1\n2 7 4\n3 8 5\n7 9 2\n2 3 9\n3 5 2\n6 3 3\n7 5 2\n5 7 6\n4 9 4\n5 4 5\n3 6 1\n2 3 1\n2 8 2\n1 7 7\n6 6 5\n6 2 5\n1 3 7\n1 3 4\n4 1 3\n7 6 7\n1 5 9\n3 6 3\n4 3 5\n5 1 1\n4 9 7\n5 5 2\n1 1 2\n1 3 7\n2 3 4\n4 4 7\n8 7 2\n5 1 2\n1 7 5\n7 2 5\n5 1 4\n4 7 7\n8 5 2\n4 3 8\n2 5 2\n6 5 7\n2 2 2\n4 3 9\n5 1 3\n4 6 4\n3 7 8\n7 8 6\n8 4 7\n4 7 3\n2 1 2\n1 2 7\n5 4 6\n2 2 2\n3 6 4\n8 3 1\n6 9 6\n4 1 9\n3 1 2\n3 5 4\n4 5 4\n3 2 8\n1 2 9\n2 7 2\n6 5 5\n7 3 4\n6 2 1\n3 7 3\n4 8 3\n7 3 6\n2 1 3\n2 5 7\n4 5 2\n4 4 5\n2 3 3\n2 7 4\n7 4 5\n5 6 1\n5 8 2\n7 5 3\n4 6 7\n4 6 1\n1 4 7\n1 1 3\n7 7 7\n7 7 3\n6 5 6\n4 3 1\n7 2 5\n4 5 6\n1 1 1\n3 5 1\n7 5 6\n3 7 4\n6 3 3\n5 8 2\n7 3 3\n2 6 3\n2 5 5\n4 6 7\n4 5 7\n1 3 6\n5 3 1\n1 5 4\n6 6 5\n6 6 5\n3 1 3\n6 3 2\n7 3 5\n2 6 7\n1 5 5\n6 5 1\n7 4 6\n2 1 5\n2 1 5\n6 6 5\n1 2 3\n1 1 1\n1 3 4\n3 4 2\n3 5 1\n2 6 3\n5 1 4\n3 2 4\n2 6 2\n6 6 3\n5 4 1\n2 6 6\n2 2 5\n5 7 7\n4 7 1\n4 5 1\n2 2 2\n2 3 3\n7 4 7\n5 7 7\n3 6 5\n5 7 3\n2 1 2\n4 6 3\n1 6 6\n1 5 6\n1 2 2\n5 2 6\n6 1 1\n6 2 5\n2 7 3\n2 6 6\n1 5 1\n2 4 2\n4 7 8\n6 5 2\n3 4 5\n2 5 6\n4 5 2\n4 4 2\n4 6 2\n7 2 5\n4 4 2\n1 5 1\n3 3 5\n6 5 3\n5 1 3\n5 4 5\n7 1 5\n6 3 2\n5 2 2\n3 5 5\n3 4 1\n1 6 6\n3 4 2\n4 6 3\n2 6 7\n5 6 5\n7 3 1\n4 5 1\n3 3 1\n4 4 2\n2 5 4\n5 4 1\n1 1 5\n1 5 2\n4 3 1\n1 2 7\n5 1 3\n2 5 7\n4 2 6\n1 4 1\n1 1 1\n4 6 3\n4 1 1\n7 2 2\n6 6 5\n2 2 2\n6 1 2\n3 3 6\n7 2 4\n6 6 6\n4 5 7\n5 3 6\n7 4 4\n3 6 3\n3 6 7\n4 3 6\n1 5 4\n2 2 1\n5 2 6\n3 6 2\n6 6 2\n5 3 4\n2 6 4\n3 6 2\n3 5 2\n1 1 1\n4 6 3\n6 6 2\n1 1 4\n7 7 7\n1 1 2\n6 2 5\n2 6 3\n2 5 2\n7 7 4\n4 5 5\n1 5 1\n1 1 1\n2 3 3\n3 4 3\n3 3 3\n3 1 3\n3 3 3\n6 1 3\n5 7 2\n3 4 5\n1 6 3\n6 3 1\n2 3 2\n5 4 6\n7 5 7\n6 5 1\n3 6 4\n4 6 5\n1 6 4\n5 1 2\n1 5 2\n1 3 2\n4 5 4\n2 6 1\n6 6 2\n3 4 3\n5 2 2\n4 4 2\n1 6 7\n4 7 4\n5 4 6\n6 3 3\n3 3 3\n3 3 3\n4 6 4\n2 6 6\n4 6 4\n3 1 6\n5 2 3\n4 4 3\n3 5 2\n2 5 1\n5 1 5\n4 5 4\n5 4 5\n6 2 3\n5 6 5\n7 4 5\n5 6 2\n4 4 2\n2 4 5\n2 5 5\n6 1 6\n5 5 1\n6 5 2\n4 6 4\n1 4 1\n3 4 4\n4 3 6\n5 4 3\n4 3 4\n3 5 2\n4 5 2\n4 4 2\n1 5 1\n1 5 1\n7 3 3\n3 3 4\n6 6 5\n5 7 2\n3 4 3\n5 2 6\n3 7 3\n4 6 4\n5 4 6\n3 3 5\n5 5 2\n3 6 3\n5 5 6\n4 6 4\n3 4 2\n5 6 4\n2 5 1\n3 1 2\n4 6 2\n2 3 3\n4 5 3\n5 4 5\n2 2 1\n3 6 4\n1 4 3\n3 7 4\n3 4 4\n5 6 2\n3 4 5\n3 4 3\n6 3 5\n7 5 7\n6 5 6\n4 4",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == 'Yes'\nassert solution(\"\") == 'No'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n9\\n91') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n8\\n91') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n5\\n91') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n89\\n91') == 'No'\n",
        "num_ids_2": 98,
        "num_ids_4": 202
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7') == 'Yes'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n87') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n89') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n87\\n69') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n89\\n3') == 'Yes'\n",
        "num_ids_2": 89,
        "num_ids_4": 184
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''A_{1, 1} A_{1, 2} A_{1, 3}\nA_{2, 1} A_{2, 2} A_{2, 3}\nA_{3, 1} A_{3, 2} A_{3, 3}\nN\n89\n7\n87\n79\n24\n84\n30''') == \"Yes\"\nassert solution('''A_{1, 1} A_{1, 2} A_{1, 3}\nA_{2, 1} A_{2, 2} A_{2, 3}\nA_{3, 1} A_{3, 2} A_{3, 3}\nN\n89\n7\n87\n79\n24\n84\n30\nA_{2, 1}\nA_{2, 2}\nA_{2, 3}\nA_{3, 1}\nA_{3, 2}\nA_{3, 3}\nN\n89\n7\n87\n79\n24\n84\n30\nA_{2, 1}\nA_{2, 2}\nA_{2, 3}\nA_{3, 1}\nA_{3, 2}\nA_{3, 3}\nN\n89\n7\n87\n79\n24\n84\n30''') == \"Yes\"\n\n'''\nSample Input 1:\n84 97 66\n79 89 11\n61 59 7\n7\n89\n7\n87\n79\n24\n84\n30\n\nSample Output 1:\nYes\n'''\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"\nassert solution(\"16\\n80 17 25\\n30 17 28\\n4 19 24\\n8 30 19\\n7 12 23\\n14 27 28\\n7 13 23\\n10 12 23\\n11 20 23\\n12 19 23\\n11 15 23\\n\") == \"No\"\nassert solution(\"6\\n1 1 1\\n2 2 2\\n3 3 3\\n4 4 4\\n5 5 5\\n\") == \"Yes\"\n",
        "num_ids_2": 115,
        "num_ids_4": 152
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('41 2') == '30'\nassert solution('41 2') == '-1'\nassert solution('41 2') == '30'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"30\"\nassert solution(\"40 2\") == \"30\"\nassert solution(\"100 2\") == \"30\"\nassert solution(\"1000 2\") == \"30\"\nassert solution(\"41 2\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"41 2\\n5 7\") == \"31\"\nassert solution(\"41 2\\n5 10\") == \"31\"\nassert solution(\"41 2\\n5 100\") == \"31\"\nassert solution(\"41 2\\n10 7\") == \"-1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '-1'\nassert solution('5 5') == '30'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"42 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 5\n1 3\n''') == '30'\n\nassert solution('''\n50 10\n1 5\n''') == '99'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''41 2\n5 6\n''') == '30'\nassert solution('''41 2\n5 6\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"41 2\\n5 6\") == \"30\"\nassert solution(\"41 2\\n5 6\\n3 4\") == \"3\"\nassert solution(\"41 2\\n5 6\\n3 4\\n3 4\") == \"3\"\nassert solution(\"41 2\\n5 6\\n3 4\\n3 4\\n6 7\") == \"3\"\nassert solution(\"41 2\\n5 6\\n3 4\\n3 4\\n6 7\\n8 9\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('41 2\\n5 6') == '30'\nassert solution('41 2\\n5 6') == '30'\nassert solution('41 2\\n6 7') == '-1'\nassert solution('41 2\\n10 10') == '-1'\nassert solution('41 2\\n5 1') == '-1'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4\\n5 6') == '30'\nassert solution('41 2\\n5 6') == '30'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"4 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '5'\nprint('Day 12 - Number to the Power', solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"0 10\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 1') == '1'\nassert solution('1 2') == '2'\nassert solution('2 3') == '3'\nassert solution('3 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '5'\nassert solution('2 1') == '1'\nassert solution('0 0') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 2') == '2'\nassert solution('0 2') == '2'\nassert solution('1 3') == '3'\nassert solution('2 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '2'\nassert solution('10') == '10'\nassert solution('20') == '10'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n4 5 6') == '2'\nassert solution('5\\n6 3 2 8 1') == '8'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"7 6 8\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n\n''') == '2'\nassert solution('''\n1\n10\n\n''') == '10'\nassert solution('''\n1\n6\n\n''') == '1'\nassert solution('''\n4\n2 2 2\n\n''') == '2'\nassert solution('''\n6\n2\n2 3\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 1 2', \"Failed\"\nassert solution('1') == '1', \"Failed\"\nassert solution('5') == '1 2 3 4 5', \"Failed\"\nprint('Success')\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 1\\n2 3 1') == '3 1 2', \"First\"\nassert solution('3\\n1 2\\n1 3') == '2 1 3', \"Second\"\nassert solution('7\\n2 3 1 4 5 6 1\\n1 3 2') == '1 3 2 1', \"Third\"\nassert solution('2\\n1 3\\n2 3') == '2 1 3', \"Fourth\"\nassert solution('3\\n1 2 3\\n1 2 2') == '1 2 2 1', \"Fifth\"\n",
        "num_ids_2": 47,
        "num_ids_4": 100
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1 2 3\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"6\") == \"1 2 3 4 5 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('4') == '3 2 1 4'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1 2 3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 3 1\n\"\"\") == \"3 1 2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3 1 2\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9 10\"\n\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3 4\n1 2''') == '3 1 2'\nassert solution('''4\n5 4 3 2 1\n''') == '1 2 3 4 5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"1 3 5\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([10, 7, 100]) == \"9\"\nassert solution([10, 7, 12345]) == \"123485\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 7 100''') == '9'\nassert solution('''2 7''') == '0'\nprint(solution('''1 1'''))",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 7 100\") == \"9\"\nassert solution(\"10 2 2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('10 7 100') == '9'\nassert solution('1 10 1') == '10'\nassert solution('10 10 10 10 10') == '10'\nassert solution('10 10 10 10 10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([10, 7, 100]) == '9'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 7 100') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"9\"\n\"\"\"\nimport sys\n\nA, B, X = list(map(int, input().split()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 7 100\n10''') == '9'\nassert solution('''10 10 100\n1''') == '9'\nassert solution('''5 5 0\n5''') == '0'\nassert solution('''3 3 0\n3''') == '0'\nassert solution('''1 9 9\n1''') == '9'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"10 7 100\"\n    ) == \"9\"\nassert solution(\n    \"1 1\"\n    ) == \"1\"\nassert solution(\n    \"4 1\"\n    ) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 150\") == \"2\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '2'\nassert solution('3\\n10 20 30\\n50 60 70 80\\n') == '2'\nassert solution('3\\n10 20 30\\n50 60 70 80\\n3\\n1 1 1\\n') == '1'\nassert solution('3\\n10 20 30\\n50 60 70 80\\n3\\n2 2 2\\n') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 95
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 150\\n150 140 100 200\") == \"2\"\nassert solution(\"5 10\\n160 110 100 120 100\\n150 140 100 200\\n150 160 100 120 100\") == \"4\"\nassert solution(\"10 50\\n170 150 100 120 100\\n150 170 100 120 100\\n170 150 100 120 100\") == \"3\"",
        "num_ids_2": 48,
        "num_ids_4": 80
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 150\n150 140 100 200''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n10 1') == '2'\nassert solution('2\\n5 2') == '3'\nassert solution('3\\n5 2') == '2'\nassert solution('5\\n5 2') == '2'\nassert solution('4\\n4 2') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('3 1') == '1'\nassert solution('10 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n90 100\n100 90\n80 100''') == '2', 'Wrong answer'\nassert solution('''5\n100 80 90 80 60\n90 90 90 100\n90 100 100 90\n100 90 100 90\n80 80 100 80''') == '3', 'Wrong answer'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"4\", \"150\", \"140\", \"100\", \"200\"]) == \"2\"\nassert solution([\"6\", \"200\", \"150\", \"100\", \"100\", \"150\", \"100\"]) == \"2\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"3 4\\n1 3 2 3\\n\") == \"No\"\nassert solution(\"5 1\\n5 4 2 1\\n\") == \"Yes\"\n",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 1\n5 4 2 1\n''') == 'Yes'\n\nprint('--- 1 ---')\nprint('--- 2 ---')\nprint('--- 3 ---')\nprint('--- 4 ---')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\\n5 4 2 1\") == \"Yes\"\nassert solution(\"10 20 30 40\\n10 20 30 40\") == \"No\"\nassert solution(\"5\\n10 20 30 40\") == \"Yes\"\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n4 5\n''') == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"10 10\") == \"Yes\"\nassert solution(\"1 10\") == \"No\"\nassert solution(\"100 100\") == \"No\"\nassert solution(\"2 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('8 4\\n7 5 2 1\\n8 9 9 1') == 'No'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1\") == \"Yes\", \"Should return Yes\"\nassert solution(\"8 5\") == \"No\", \"Should return No\"\nassert solution(\"12 10\") == \"Yes\", \"Should return Yes\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1\n2 3\n5 3\n''') == 'No'\nassert solution('''\n3 3\n1 2\n5 2\n''') == 'Yes'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"4 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 2\\n..#\\n###\") == \"5\"\nassert solution(\"5 3 2\\n#...\\n###\") == \"5\"\nassert solution(\"2 2 2\\n.##\\n.##\") == \"4\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('1 2 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 2') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 2\") == \"5\"\nassert solution(\"1 2\") == \"4\"\nassert solution(\"2 3\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('1 2 1') == '1'\nassert solution('2 2 2') == '3'\n\n--------------------------------------------------\n\nQ.10 Write a program to read an input string, which consists of lowercase alphabets and \u2018#\u2019 as delimiter.\n\nInput:",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('2 2 2') == '1'\nassert solution('3 2 4') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 2\\n..#\\n###\") == \"5\"\nassert solution(\"1 1\\n#\\n#\") == \"0\"\nassert solution(\"2 2\\n##\") == \"1\"\nassert solution(\"3 2\\n..#\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 65
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3 2\n..#\n###''') == '5'\nassert solution('''3 3 2\n..#\n###",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 2041') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('16') == '2'\nassert solution('20') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2020 2040') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['2020', '2040']) == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 20') == '2'\nassert solution('20 40') == '1'\nassert solution('20 20') == '2'\nassert solution('20 40') == '1'\nassert solution('20 20') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2020 2040\") == '2'\nassert solution(\"2020 2041\") == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('1 1') == '1'\nassert solution('1 5') == '4'\nassert solution('100 2') == '2'\nassert solution('1000 1000') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2020 2040') == '2'\nassert solution('2020 2020') == '2'\nassert solution('2040 2020') == '2'\nassert solution('2020 2020 2020') == '2'\nassert solution('2020 2020 2020 2020') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('Atcoder') == 'AC'\nassert solution('AtCoderAAAA') == 'AC'\nassert solution('AtCoderAAAAA') == 'AC'\nassert solution('AtCoderAAAAAAAA') == 'AC'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'WA'\nassert solution('ABC') == 'AC'\nassert solution('ABCD') == 'AC'\nassert solution('ABCAAABCD') == 'AC'\nassert solution('AAA') == 'AC'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"\") == \"WA\"\nassert solution(\"ABC\") == \"WA\"\nassert solution(\"AAB\") == \"WA\"\nassert solution(\"ABCB\") == \"AC\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AABCDCDD\") == \"WA\"\nassert solution(\"BCA\") == \"WA\"\nassert solution(\"AABCDAABCDCDAABCD\") == \"AC\"\nassert solution(\"AABCDCDDAABCDAABC\") == \"WA\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('codeforces') == 'WA'\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"AC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'AC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AbC') == 'WA'\nassert solution('BCA') == 'WA'\nassert solution('ATC') == 'WA'\nassert solution('ATCoder') == 'AC'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"Cake\") == \"WA\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"AC\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1214') == '2'\nassert solution('1324') == '2'\nassert solution('13333') == '3'\nassert solution('1333333333') == '3'\nassert solution('133333333333') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(1214) == \"2\"\nassert solution(1214) == \"2\"\nassert solution(1214) == \"2\"\nassert solution(1214) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12345') == '4'\nassert solution('1214') == '2'\nassert solution('122456') == '2'\nassert solution('1233') == '2'\nassert solution('123') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"1234\") == \"3\"\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 1599
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"1214\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1214') == '2'\nassert solution('1234') == '3'\nassert solution('1234') == '3'\nassert solution('12') == '1'\nassert solution('2345') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"4\"\nassert solution(\"12\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1214') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1214') == '2'\nassert solution('1010') == '1'\nassert solution('22122') == '2'\nassert solution('121112222') == '2'\nassert solution('2211221222') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('6 5 3 4 2 1') == 'NO'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('10') == 'NO'\nassert solution('10 20 30 40 50') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"4 2 1 3 5\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"5 2 4 3 1\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('10 1 2 3 4 5') == 'NO'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"2 3 1 4 5\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n3 2 1\n''') == 'YES'\nassert solution('''6\n1 2 3 4 5 6\n''') == 'NO'\nassert solution('''5\n2 1 3 4 5\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"9\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"21\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3121') == 2\nassert solution('6') == 1\nassert solution('1000000000000000000000000000000000') == 33\nassert solution('201920181') == 4\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3121\n''') == '2'\nassert solution('''\n6\n''') == '1'\nassert solution('''\n201920181\n''') == '4'\nassert solution('''\n1000000000000000000000000000000000\n''') == '33'\nassert solution('''\n201920181\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3121') == 2\nassert solution('6') == 1\nassert solution('1000000000000000000000000000000000') == 33\nassert solution('201920181') == 4\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"201920181\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3121\n    ''') == '2'\n\nassert solution('''\n    6\n    ''') == '1'\n\nassert solution('''\n    201920181\n    ''') == '4'\n\nassert solution('''\n    1000000000000000000000000000000000\n    ''') == '33'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '2'\nassert solution('2 4 7 11 3') == '2'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''3\n1 2 3\n2 4 5\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5\n1 2 3 4 5\n2 4 7 11 3\n\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n3\n13 37 39\n1 2 3\n\n\"\"\") == \"0\"\nassert solution(\n\"\"\"\n4\n0 0 0 0\n1 2 3 4\n\n\"\"\") == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''3\n1 2 -1\n-6 -12 6\n''') == '0'\nassert solution('''4\n0 0 0 0\n1 2 3 4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"\nassert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n1 2 3\\n\") == \"0\"\nassert solution(\"3\\n-1 2 3\\n-6 -12 6\\n\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 81
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '0'\n\nassert solution('''\n4\n0 0 0 0\n1 2 3 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == str(output)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_lines) == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7\\n\"\n    \"abaca?b\\n\"\n    \"zabbbcc\\n\"\n) == \"5\"\nassert solution(\n    \"8\\n\"\n    \"bambarbia\\n\"\n    \"hellocode\\n\"\n) == \"0\"\nassert solution(\n    \"9\\n\"\n    \"code??????\\n\"\n    \"??????test\\n\"\n) == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_lines()) == stdout\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '5'\nassert solution('7') == '6'\nassert solution('9') == '10'\nassert solution('10') == '0'\nassert solution('11') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == str(max([0] + solution(input()) + 1))\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1 1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"7\") == \"6\"\nassert solution(\"9\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10\"\n    \"codeforces\"\n    \"dodivthree\"\n) == \"5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\nabaca?b\nzabbbcc\n''') == '5'\n\nassert solution('''\n7\nbambarbia\nhellocode\n''') == '6 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '6 2'\nassert solution(input()) == '1 6'\nassert solution(input()) == '7 3'\nassert solution(input()) == '3 5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution() == '3 4'\nassert solution() == '4 4'\n",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n1 2 3\n2 3 4\n3 4 5\n''') == '2 4'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '2 4 1 4'\nassert solution('''7\n4 1 2 2 1 5 3\n''') == '3 7'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '3 7 5 4 2 3 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n4 1 2 2 1 5 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n1 1 1 1\n\"\"\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n4 1 2 2 1 5 3\") == \"2 3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\nassert solution('4') == '4 4'\nassert solution('5') == '4 4'\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(test_input_1) == '3'\nassert solution(test_input_2) == '3 4 4 1 1'\nassert solution(test_input_3) == '5'\nassert solution(test_input_4) == '4 4 4 4 4'\nassert solution(test_input_5) == '4 4 3 2 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"4 4 4 4 4\"\nassert solution(\"10\") == \"6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7",
        "num_ids_2": 24,
        "num_ids_4": 1261
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\nassert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('-5') == '5'\nassert solution('-4') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4\"\nassert solution(\"-5 -4 -3 -2 -1 0 1 2 3 4 5\") == \"2 4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"7\"\nassert solution(input) == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7\n\n4 2\n2 78 4 10''') == '7'\nassert solution('''5 2\n3 7 19 3 3\n\n4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3\n\n4 2\n2 78 4 10''') == '0'\nassert solution('''6 11\n45 1 10 12 11 7\n\n4 2\n2 78 4 10''') == '12'\nassert solution('''6 11\n45 1 10 12 11 7\n\n4 2\n2 78 4 10''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n3 7 19 3 3\n''') == '0'\nassert solution('''\n6 11\n45 1 10 12 11 7\n''') == '7'\nassert solution('''\n5 2\n2 78 4 10\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n5 2\n2 78 4 10\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n6 11\n45 1 10 12 11 7\n\"\"\") == \"7\"\n\nassert solution(\n\"\"\"\n5 2\n3 7 19 3 3\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n1\n\"\"\") == \"0\"\n\nassert solution(\n\"\"\"\n1\n\"\"\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == output_string\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test_input_1) == \"7\"\nassert solution(test_input_2) == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 11\n45 1 10 12 11 7''') == '7'\nassert solution('''4 2\n2 78 4 10''') == '12'\nassert solution('''5 2\n3 7 19 3 3''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n6 11\n45 1 10 12 11 7\n\"\"\"\n) == \"7\"\n\nassert solution(\n\"\"\"\n4 2\n2 78 4 10\n\"\"\"\n) == \"12\"\n\nassert solution(\n\"\"\"\n5 2\n3 7 19 3 3\n\"\"\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"5\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '10'\nassert solution('2') == '7'\nassert solution('3') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n2 5\n\n''') == '9'\nassert solution('''\n2\n4 1\n\n''') == '10'\nassert solution('''\n3\n0 1\n\n''') == '0'\nassert solution('''\n3\n1 2\n\n''') == '3'\nassert solution('''\n5\n-1 -2 1 1 -1\n\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10\") == \"\"\nassert solution(\"1 2\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2 3 4\") == \"8\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"10\") == \"17\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '9'\nassert solution('2') == '9'\nassert solution('1') == '9'\nassert solution('0') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 7 5\\n') == '9'\nassert solution('5\\n-2 4 7 5\\n') == '9'\nassert solution('5\\n-4 4 7 5\\n') == '9'\nassert solution('5\\n2 4 7 5\\n') == '9'\nassert solution('5\\n-4 4 7 5\\n') == '9'\n",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '9'\nassert solution('2') == '9'\nassert solution('1') == '9'\nassert solution('2 1') == '9'\nassert solution('2 2') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '9'\nassert solution('1') == '3'\nassert solution('2') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '10'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '110'\n\n\"\"\"\n\nn, m, q = (int(i) for i in input().split())\nscore = [0] * q\nfor i in range(q):\n    a, b, c, d = (int(i) for i in input().split())\n    if a == b and c <= m and d <= n:\n        score[i] = (c - 1) * (n - d)\n    if a <= b and c <= m and d <= n:\n        score[i] = (b - 1) * (c - 1)\nprint(max(score))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"110\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 2\") == \"0\"\nassert solution(\"1 2 2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n\"\"\") == \"110\"\nassert solution(\"\"\"\n2 2 3\n1 2 1 100\n1 2 1 100\n\"\"\") == \"100\"\nassert solution(\"\"\"\n4 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n3 4 2 10\n\"\"\") == \"100\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3 3\\n1 2 3 100\\n1 2 2 10\\n2 3 2 10\\n\") == \"110\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3 3\\n1 2 2 10') == '110'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('4 4 3') == '110'\nassert solution('6 4 3') == '110'\nassert solution('2 4 3') == '110'\nassert solution('6 4 3') == '110'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n1 2 3 100\\n1 2 3 10\\n2 3 2 10\\n2 3 2 10') == '110'\nassert solution('3 3 3\\n1 3 3 100\\n1 2 2 10\\n2 3 2 10\\n2 3 2 10') == '110'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10''') == '110'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('2 2 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n-1 0 -1''') == '1'\nassert solution('''4\n-1 -1 3 -1''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 4 6 3\\n') == '5'\nassert solution('5\\n1 2 3 4 5\\n') == '0'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 4') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '5'\nassert solution('5 2 1 4') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 4 6 3\\n') == '5'\nassert solution('4\\n1 5 3 2\\n') == '5'\nassert solution('4\\n1 5 3 2\\n') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4') == '5'\nassert solution('4\\n1 2 3 4') == '1'\nassert solution('1\\n1 2 3 4') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\n\"\"\"\n\na = []\na = stdin.split()\nn = int(a[0])\na = a[1:]\n\na.sort()\n\nfor i in range(0, n - 1):\n    if a[i + 1] - a[i] >= 0:\n        print(a[i + 1] - a[i])\n        break\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4 6 3\\n') == '5\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 4 6 3\\n') == '5'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.276142'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == '0.000000'\nassert solution(\"1\") == '1.000000'\nassert solution(\"2\") == '1.50000'\nassert solution(\"3\") == '2.000000'\nassert solution(\"4\") == '2.000000'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1''') == \"2.276142371\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2.276142...'\nassert solution('2') == '2.276142...'\nassert solution('3') == '2.276142...'\nassert solution('4') == '2.276142...'\nassert solution('5') == '2.276142...'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2.300\"\n",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2.2761424\"\nassert solution(\"6\") == \"2.2164974\"\nassert solution(\"12\") == \"2.2164974\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1''') == \"2.2761424\"\n\"\"\"\n\nfrom math import sqrt\n\nimport pytest",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n0 0') == '2.2761423749'\n\"\"\"\n\nimport math\nfrom functools import reduce",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n0 0\n1 0\n0 1\"\"\") == \"2.27614\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2.2761424...\"\nassert solution(\"4\") == \"2.2761424...\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"15 6\") == \"6\"\nassert solution(\"12 8\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 4') == '4'\nassert solution('1 10') == '10'\nassert solution('1 10') == '9'\nassert solution('12 10') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"12 10\") == \"8\"\nassert solution(\"12 20\") == \"16\"\nassert solution(\"12 30\") == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"8 8\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12 4\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12 4\") == 4\nassert solution(\"10 4\") == 4\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 4') == '4'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 4') == 4\n\"\"\"\n\nfrom math import ceil",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 4') == 4",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([10]) == \"2\"\nassert solution([1]) == \"1\"\nassert solution([2]) == \"0\"\nassert solution([3]) == \"2\"\nassert solution([4]) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100') == \"2\", \"Case #1\"\nassert solution('10000') == \"3\", \"Case #2\"\nassert solution('100000') == \"2\", \"Case #3\"\nassert solution('1000001') == \"2\", \"Case #4\"\nassert solution('100010') == \"2\", \"Case #5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n10000''') == '3'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1'\nassert solution('123456789') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '3'\nassert solution('3') == '3'\nassert solution('100') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"1\",\"2\",\"3\"]) == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([10000]) == \"3\"\nassert solution([1]) == \"1\"\nassert solution([10]) == \"1\"\nassert solution([2]) == \"2\"\nassert solution([3]) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"100\") == \"3\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([10000]) == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == '1'\nassert solution('4 3') == '2'\nassert solution('5 6') == '3'\nassert solution('10 6') == '10'\nassert solution('15 8') == '14'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 5\") == \"5\"\nassert solution(\"5 6\") == \"2\"\n\n--:\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 2\n1 2 3\n1 3 2\n1 4 2\n1 5 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 5\n1 1 2 3\n1 1 4 2\n1 5 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10 3\n5 1 2 3\n4 3 4 5\n5 5 4 4\n5 5 5 4\n4 6 4 7\n4 6 4 7\n3 7 4 8\n3 7 4 8\n\"\"\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n2 1 3\n3 1 2 3\n2 3 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\") == \"1\"\nassert solution(\"3 5\\n1 3 2 2 4\\n1 3 3 2 3\\n2 3 3 3 3\") == \"2\"\nassert solution(\"5 5\\n3 1 3 3 5\\n4 1 4 2 3\\n2 1 3 3 4\\n3 1 3 3 5\\n4 2 2 3 4\") == \"3\"\n\n\"\"\"",
        "num_ids_2": 59,
        "num_ids_4": 105
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''5 4\n3 1 2 3\n5 5 6 6\n2 3 2 4\n4 5 4 5\n1 4 2 5''') == '3'\nassert solution('''10 10\n
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n') == '0.5'\nassert solution('2\\n') == '0.0'\nassert solution('1\\n') == '0.5'\nassert solution('4\\n') == '0.5'\nassert solution('5\\n') == '0.5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.5000000000', \"Wrong answer\"\n\n\"\"\"\nimport math",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '0.5000000000'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\nassert solution(\"123\") == \"0.5\"\nassert solution(\"4\") == \"0.5000000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"0.5\"\nassert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"0.5\"\nassert solution(\"3\") == \"0.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"0.5\"\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '0.5000000000'\nassert solution(input()) == '0.5000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0.5000000000\"\nassert solution(\"5\") == \"0.3333333333\"\nassert solution(\"100\") == \"0.0\"\nassert solution(\"101\") == \"0.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n1\n2 1\n1\n1 1\n1\n2 0\"\"\") == \"2\"\nassert solution(\"\"\"2\n1\n2 1\n1\n1 1\n1\n2 0\"\"\") == \"1\"\nassert solution(\"\"\"5\n1\n2 1\n1\n1 1\n1\n2 0\"\"\") == \"3\"\nassert solution(\"\"\"4\n1\n2 1\n1\n1 1\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '1'\nassert solution('6') == '0'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '1'",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nassert solution('5\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '4'\nassert solution('9\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '8'\nassert solution('8\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '7'\nassert solution('7\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '6'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0') == '2'\nprint('Test passed')\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n10\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n15\n1\n2 1\n1\n1 1\n1\n2 0\n\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n2 1\n1\n1 1\n1\n2 0\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('1') == '0'\nassert solution('11') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == 'nikoandsolstice'\nassert solution('1') == 'nikoandsolstice'\nassert solution('2') == 'nikoandsolstice'\nassert solution('5') == 'nikoandsolstice'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('seven') =='seven'\nassert solution('x') == 'x'\nassert solution('x') == 'x'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"...\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"nikoandsolstice\") == \"nikoandsolstice\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"...\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"34\") == \"...\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'nikoandsolstice'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"nikoandsolstice\"\nassert solution(\"6\") == \"nikoand\"\nassert solution(\"4\") == \"niko\"",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"nikoandsolstice\"\nassert solution(\"9\") == \"nikoandsolstice\"\nassert solution(\"5\") == \"nikoandsolstice\"\nassert solution(\"10\") == \"nikoandsolstice\"\nassert solution(\"11\") == \"nikoandsolstice\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'ni...'\nassert solution('5') == 'ini...'\nassert solution('123456789') == '123456789'\n",
        "num_ids_2": 22,
        "num_ids_4": 38
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 'nikoandsolstice'\nassert solution('6') == 'nikoandsolst'\nassert solution('10') == 'nikoandsolst'\nassert solution('23') == 'nikoandsolst'\nassert solution('100') == 'nikoandsolst'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apple') == 'apples'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\nassert solution('grapes') == 'grappes'\nassert solution('ladder') == 'ladders'\n\nS = stdin.rstrip()",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"apple\") == \"apples\"\nassert solution(\"orange\") == \"oranges\"\n\nprint(solution())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('cat') == 'cats'\nassert solution('dog') == 'dogs'\nassert solution('fog') == 'foggier'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"apple\") == \"apples\"\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == input",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\n\nprint(solution(''))\n\nprint(solution('a'))\n\nprint(solution('aa'))\n\nprint(solution('e'))\n\nprint(solution('eeee'))\n\nprint(solution('eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"apple\") == \"apples\"\nprint(\"solution() finished successfully!\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples'\nassert solution('banana') == 'bananas'\nassert solution('orange') == 'oranges'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1', 'Test 1 failed.'\nassert solution('3 3') == '0', 'Test 2 failed.'\nassert solution('3 2 3') == '0', 'Test 3 failed.'\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n2\n1 3\n1''') == '1', \"Wrong!\"\nassert solution('''3 2\n2\n1 3\n1\n3\n\n-----Input is correct, generating incorrect output. Try to debug and find out the problem.\"''') == '', \"Wrong!\"\nprint('TAKAHASHI')\nprint('Everything passed.')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 1') == '2'\nassert solution('3 2 3') == '0'\nassert solution('3 2 1 2 3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 1') == '0'\nassert solution('3 3') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 3') == '2'\nassert solution('4 1') == '1'\nassert solution('4 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n1\n4\n''') == '1'\nassert solution('''\n5 2\n2\n3\n''') == '0'\nassert solution('''\n5 2\n2\n3\n''') == '1'\nassert solution('''\n5 2\n2\n1\n1\n3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input) == \"1\"\nassert solution(real_input) == \"1\"\n\"\"\"\nimport collections\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n2\n1 3\n1\n3\n''') == '1'\nassert solution('''4 2\n2\n1 2\n1\n3\n''') == '2'\nassert solution('''3 3\n3\n1 2\n1\n3\n''') == '1'\nassert solution('''5 4\n2\n1 3\n1\n3\n''') == '2'\nassert solution('''6 5\n3\n1 2\n1\n2\n3\n1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"5\"\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"15\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '5'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5'\n\"\"\"\n\nfrom itertools import product\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\naba') == '5'\nassert solution('100\\nabcdefghij') == '10'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"10\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10\naabbbbaaca''') == '5'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '5'\nassert solution('15') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5 2 4\n''') == '3'\nassert solution('''2\n2 3\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"18\"\nassert solution(\"100000\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\nassert solution('5 2 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n5 2 4\") == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''4\n5 2 4''') == '4'\nassert solution('''5\n5 2 4''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"15\") == \"3\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 1 1 2\") == \"4\"\nassert solution(\"4 5 1 -2\") == \"4\"\nassert solution(\"5 5 5 5\") == \"0\"\nassert solution(\"10 4 1 -2\") == \"7\"\nassert solution(\"2 1 1 1\") == \"2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 1 1 3\n''') == '2'\nassert solution('''1 2 1 3\n''') == '2'\nassert solution('''1 1 1 3\n''') == '3'\nassert solution('''2 2 2 2\n''') == '2'\nassert solution('''1 1 1 1\n''') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"2 2 2 2\") == \"3\"\nassert solution(\"10 2 -2 3\") == \"11\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('1 1 1 0') == '1'\nassert solution('1 0 0 0') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 1 2 3\") == \"2\"\nassert solution(\"1 2 3 3\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"10 2 2 0\") == \"3\"\nassert solution(\"100 1 1 1\") == \"5\"\n\"\"\"\n\n\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1 1 3\n''') == '2'\nassert solution('''\n3 5 1 -4\n''') == '4'\nassert solution('''\n2 0 2 0\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"5 1 1 3\") == \"5\"\nassert solution(\"3 5 1 3\") == \"10\"\nassert solution(\"1 2 2 3\") == \"5\"\nassert solution(\"3 6 3 2\") == \"7\"\n\n\"\"\"\n\nfrom math import inf\nimport collections",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 1 3\") == \"2\"\nassert solution(\"1 2 3\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8') == 'Yes', solution('3 8')\nassert solution('5 8') == 'No', solution('5 8')\nassert solution('10 4') == 'Yes', solution('10 4')\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 5') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('6 6') == 'Yes'\nassert solution('2 6') == 'No'\n\n---Time Limit exceeded---\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"No\"\nassert solution(\"3 5\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 2\n3 4\n''') == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('1 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"Yes\"\nassert solution(\"3 8\") == \"Yes\"\nassert solution(\"5 6\") == \"No\"\nassert solution(\"20 20\") == \"No\"\nassert solution(\"100 100\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('2') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 5\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"3 4\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\", \"Should return 2\"\n\"\"\"\n\nfrom collections import defaultdict\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 3], [[1, 2], [1, 3], [2, 3]]) == '2'\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 3\n1 2\n1 3\n2 3\n\"\"\") == \"2\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n1 2\n1 3\n2 3\n''') == '2'\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3\\n') == '2'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3, 3, 'a', 'b']) == 2",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\\n1 2\\n1 3\\n2 3\") == \"2\"\nassert solution(\"2 2\\n1 2\") == \"1\"\n'''",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3\\n1 2\\n1 3\\n2 3') == '2'\nassert solution('3 5\\n1 2\\n3 4\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n10 11\\n11 12\\n12 13\\n13 14\\n14 15\\n15 16\\n16 17\\n17 18\\n18 19\\n19 20\\n20 21\\n21 22\\n22 23\\n23 24\\n24 25\\n25 26\\n26 27\\n27 28\\n28 29\\n29 30\\n30 31\\n31 32\\n32 33\\n33 34\\n34 35\\n35 36\\n36 37\\n37 38\\n38 39\\n39 40\\n40 41\\n41 42\\n42 43\\n43 44\\n44 45\\n45 46\\n46 47\\n47 48\\n48 49\\n49 50\\n50 51\\n51 52\\n52 53\\n53 54\\n54 55\\n55 56\\n56 57\\n57 58\\n58 59\\n59 60\\n60 61\\n61 62\\n62 63\\n63 64\\n64 65\\n65 66\\n66 67\\n67 68\\n68 69\\n69 70\\n70 71\\n71 72\\n72 73\\n73 74\\n74 75\\n75 76\\n76 77\\n77 78\\n78 79\\n79 80\\n80 81\\n81 82\\n82 83\\n83 84\\n84 85\\n85 86\\n86 87\\n87 88\\n88 89\\n89 90\\n90 91\\n91 92\\n92 93\\n93 94\\n94 95\\n95 96\\n96 97\\n97 98\\n98 99\\n99 100\\n100 101\\n101 102\\n102 103\\n103 104\\n104 105\\n105 106\\n106 107\\n107 108\\n108 109\\n109 110\\n110 111\\n111 112\\n112 113\\n113 114\\n114 115\\n115 116\\n116 117\\n117 118\\n118 119\\n119 120\\n120 121\\n121 122\\n122 123\\n123 124\\n124 125\\n125 126\\n126 127\\n127 128\\n128 129\\n129 130\\n130 131\\n131 132\\n132 133\\n133 134\\n134 135\\n135 136\\n136 137\\n137 138\\n138 139\\n139 140\\n140 141\\n141 142\\n142 143\\n143 144\\n144 145\\n145 146\\n146 147\\n147 148\\n148 149\\n149 150\\n150 151\\n151 152\\n152 153\\n153 154\\n154 155\\n155 156\\n156 157\\n157 158\\n158 159\\n159 160\\n160 161\\n161 162\\n162 163\\n163 164\\n164 165\\n165 166\\n166 167\\n167 168\\n168 169\\n169 170\\n170 171\\n171 172\\n172 173\\n173 174\\n174 175\\n175 176\\n176 177\\n177 178\\n178 179\\n179 180\\n180 181\\n181 182\\n182 183\\n183 184\\n184 185\\n185 186\\n186 187\\n187 188\\n188 189\\n189 190\\n190 191\\n191 192\\n192 193\\n193 194\\n194 195\\n195 196\\n196 197\\n197 198\\n198 199\\n199 200\\n200 201\\n201 202\\n202 203\\n203 204\\n204 205\\n205 206\\n206 207\\n207 208\\n208 209\\n209 210\\n210 211\\n211 212\\n212 213\\n213 214\\n214 215\\n215 216\\n216 217\\n217 218\\n218 219\\n219 220\\n220 221\\n221 222\\n222 223\\n223 224\\n224 225\\n225 226\\n226 227\\n227 228\\n228 229\\n229 230\\n230 231\\n231 232\\n232 233\\n233 234\\n234 235\\n235 236\\n236 237\\n237 238\\n238 239\\n239 240\\n240 241\\n241 242\\n242 243\\n243 244\\n244 245\\n245 246\\n246 247\\n247 248\\n248 249\\n249 250\\n250 251\\n251 252\\n252 253\\n253 254\\n254 255\\n255 256\\n256 257\\n257 258\\n258 259\\n259 260\\n260 261\\n261 262\\n262 263\\n263 264\\n264 265\\n265 266\\n266 267\\n267 268\\n268 269\\n269 270\\n270 271\\n271 272\\n272 273\\n273 274\\n274 275\\n275 276\\n276 277\\n277 278\\n278 279\\n279 280\\n280 281\\n281 282\\n282 283\\n283 284\\n284 285\\n285 286\\n286 287\\n287 288\\n288 289\\n289 290\\n290 291\\n291 292\\n292 293\\n293 294\\n294 295\\n295 296\\n296 297\\n297 298\\n298 299\\n299 300\\n300 301\\n301 302\\n302 303\\n303 304\\n304 305\\n305 306\\n306 307\\n307 308\\n308 309\\n309 310\\n310 311\\n311 312\\n312 313\\n313 314\\n314 315\\n315 316\\n316 317\\n317 318\\n318 319\\n319 320\\n320 321\\n321 322\\n322 323\\n323 324\\n324 325\\n325 326\\n326 327\\n327 328\\n328 329\\n329 330\\n330 331\\n331 332\\n332 333\\n333 334\\n334 335\\n335 336\\n336 337\\n337 338\\n338 339\\n339 340\\n340 341\\n341 342\\n342 343\\n343 344\\n344 345\\n345 346\\n346 347\\n347 348\\n348 349\\n349 350\\n350 351\\n351 352\\n352 353\\n353 354\\n354 355\\n355 356\\n356 357\\n357 358\\n358 359\\n359 360\\n360 361\\n361 362\\n362 363\\n363 364\\n364 365\\n365 366\\n366 367\\n367 368\\n368 369\\n369 370\\n370 371\\n371 372\\n372 373\\n373 374\\n374 375\\n375 376\\n376 377\\n377 378\\n378 379\\n379 380\\n380 381\\n381 382\\n382 383",
        "num_ids_2": 1556,
        "num_ids_4": 1556
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([[1, 2], [1, 3], [2, 3]]) == '2'\nassert solution([[1, 2], [1, 3], [2, 3], [3, 2]]) == '2'\nassert solution([[1, 2], [1, 3], [2, 3], [3, 2], [3, 1]]) == '3'\nassert solution([[1, 2], [1, 3], [2, 3], [3, 1]]) == '1'\n\"\"\"",
        "num_ids_2": 53,
        "num_ids_4": 116
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"18\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2\n3''') == '18'\nassert solution('''5 1\n2''') == '3'\nassert solution('''5 1\n1''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '18'\nassert solution('10 2') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '18'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''5 2\n2\n3\n4\n5\n6''') == '18'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2''') == '18'\nassert solution('''10 3''') == '16'\nassert solution('''13 8''') == '17'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '3'\nassert solution('5 3') == '2'\nassert solution('5 2') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Buzz'\nassert solution('10') == 'Buzz'\nassert solution('20') == 'Buzz'\nassert solution('15') == '60'\nassert solution('30') == 'FizzBuzz'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15') == '60'\n\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10**6)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1\\n2\\nFizz'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"15\") == \"60\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"10\") == \"60\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '1\\n1\\n2\\n4'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15') == '60'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5\"\n) == \"1,2,4,Buzz,Fizz\"\nassert solution(\n    \"10\"\n) == \"1,2,4,Buzz,Fizz,7,8,Fizz,Buzz,11,13,14,FizzBuzz\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"60\"\nassert solution(\"15\") == \"60\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == '60'\n'''\n\nimport time",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"15\") == \"60\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '8'\nassert solution('5 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''X N\n4 7 10 6 5\n''') == '8'\nassert solution('''X N\n4 7 10 6 5\n4 6\n''') == '6'\nassert solution('''X N\n5 5\n''') == '0'\nassert solution('''X N\n4 7 10 6 5\n4 5\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '3'\nassert solution('6 5') == '8'\nassert solution('6 5') == '3'\nassert solution('5 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\n') == '4'\nassert solution('2 4\\n') == '2'\nassert solution('3 5\\n') == '3'\nassert solution('3 5\\n') == '2'\nassert solution('100 5\\n') == '101'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 10') == '1'\n\n----------------------------------\n\n-----Simple Solver-----\n\nX = stdin.readline().strip()\nN = stdin.readline().strip()\np = stdin.readline().strip().split()\n\nX_int = int(X)\nN_int = int(N)\np_int = [int(num) for num in p]\n\np_int.sort()",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"0\", \"1 2\"\nassert solution(\"4 1\") == \"3\", \"4 1\"\nassert solution(\"2 9\") == \"5\", \"2 9\"\n\n\"\"\"\n\nimport math\nimport sys",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n4 7 10 6 5\") == \"8\"\nassert solution(\"8\\n8\\n8\") == \"8\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 5\\n4 7 10 6 5') == '8'\nassert solution('4\\n6 7 10 6 5') == '8'\nassert solution('1\\n2 3 4 5 6 7 8 9 10 11 12') == '5'\n",
        "num_ids_2": 35,
        "num_ids_4": 58
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '8'\nassert solution('10 2') == '0'\nassert solution('50 2') == '2'\nassert solution('10 2') == '2'\nassert solution('10 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '2', \"Third\"\nassert solution('3 0') == '0', \"Zero\"\nassert solution('3 1') == '1', \"One\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"20 20\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 3') == '4'\nassert solution('3 5') == '2'\nassert solution('15 10') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"2 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1', \"Wrong answer\"\nassert solution('3 3') == '2', \"Wrong answer\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 2') == '1'\nassert solution('5 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"5 5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n3 7 5 1 10 3 20''') == '6'\nassert solution('''5\n3 7 5 1 10 3 20''') == '-1'\nassert solution('''7\n3 7 5 1 10 3 20''') == '6'\nassert solution('''8\n3 4\n5 6 7 8''') == '5'\nassert solution('''9\n3 4\n5 6 7 8''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4\\n') == '6'\nassert solution('7 2\\n') == '-1'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 4\n3 7 5 1 10 3 20\n''') == '6'\nassert solution('''\n7 2\n3 7 5 1 10 3 20\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 4\\n\") == \"6\"\nassert solution(\"7 2\\n\") == \"-\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 4\n3 7 5 1 10 3 20''') == '6'\nassert solution('''7 2\n3 7 5 1 10 3 20''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 4\") == \"6\"\nassert solution(\"7 2\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2 2 1\"\n\nassert solution(\"5 5\") == \"3 3 1\"\n\nassert solution(\"3 3\") == \"3 4 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n''') == '3'\n\nassert solution('''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n''') == '3'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n''') == '-1'\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '-1'\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n\nassert solution(stdin='''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\n''') == \"3\"\n\nassert solution(stdin='''\n5 5\n.*...\n****.\n.****\n..**.\n.....\n\n''') == \"3\"\n\nassert solution(stdin='''\n3 3\n*.*\n.*.\n*.*\n\n''') == \"-1\"\n\nassert solution(stdin='''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == \"3\"",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '3 3 1'\nassert solution('3 3') == '2 2 1'\nassert solution('2 3') == '-1'\nassert solution('1 1') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 8\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 3\") == \"3\"\n\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n.*.\\n.*.\\n.*.\\n.....\\n\") == \"3 4 1\"\nassert solution(\"3 3\\n.***\\n*.*.\\n.*.*\\n***.\\n***.\\n\") == \"2 2 1\"",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"3 3\") == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '3 4 1'\nassert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 4 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('5 5') == '3 4 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(''.join(input().splitlines())) == ''.join(input().splitlines())",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\ngood\\n') == '0\\ngood\\n'\nassert solution('3\\naaa\\n') == '2\\naa\\n'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('good') == 'g'\nassert solution('bad') == 'a'\nassert solution('a') == 'a'\nassert solution('x') == ''\nassert solution('aa') == 'aa'\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    good\n    ''') == ''\n\nassert solution('''\n    aabc\n    ''') == 'ab'\n\nassert solution('''\n    aaa\n    ''') == 'def'\n\nassert solution('''\n    bad\n    ''') == 'bad'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"0\"\nassert solution(stdin=\"good\") == \"0\"\nassert solution(stdin=\"aabc\") == \"2\"\nassert solution(stdin=\"aaa\") == \"3\"\nassert solution(stdin=\"aaaaa\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('good') == 'good'\nassert solution('abc') == 'abc'\nassert solution('aaa') == 'abc'\nassert solution('a') == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"good\") == \"\", \"One letter\"\nassert solution(\"good\") == \"\", \"All letters are same\"\nassert solution(\"aaabc\") == \"\", \"All letters are same\"\nassert solution(\"bad\") == \"\", \"Bad string\"\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"aaa\") == \"aab\"\nassert solution(\"aaa\") == \"aab\"\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"aaaa\") == \"3\"\nassert solution(\"aaaaaa\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"YES\"\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''\n6 4\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''\n6 4\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\n\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\"\n\n'''\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n\") == \"YES\"\n\"\"\"\n\nfrom collections import defaultdict\nimport sys",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"YES\"\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"NO\"\nassert solution('''\n6 4\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"NO\"\nassert solution('''\n7 4\n1 2\n2 1\n1 3\n4 1\n4 1\n5 2\n6 1\n''') == \"NO\"\nassert solution('''\n7 3\n1 2\n2 1\n1 3\n4 1\n4 1\n5 2\n6 1\n''') == \"NO\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n5 5\n1 5\n2 1\n1 4\n3 1\n6 1\n    ''',\n'') == 'YES'\n    '''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"2\"\nassert solution(\"1 7\") == \"3 4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\\n\") == \"2 4\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''1 7\n1 7\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n\n''') == '2'\nassert solution('''1 7\n1 7\n\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '2'\nassert solution([input_[0], input_[1]]) == '3 4'\nassert solution([input_[0], input_[2]]) == '3 4'\nassert solution([input_[2], input_[3]]) == '3 4'\n",
        "num_ids_2": 31,
        "num_ids_4": 71
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '2'\nassert solution('1 7') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''\n1 7\n1 7\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_1) == '2'\nassert solution(input_2) == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 7\") == \"2\"\nassert solution(\"1 7\") == \"0\"\n\n'''\nfrom collections import deque\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 7 10 3\") == \"2\"\nassert solution(\"2 5 6 3\") == \"1\"\nassert solution(\"100 10 90 2\") == \"20\"\nassert solution(\"1 1 1 1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4 2 3\") == \"2\"\nassert solution(\"7 1 2 3\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 2\") == \"2\"\nassert solution(\"4 5 2 3\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3') == '3'\nassert solution('3 3 4') == '3'\nassert solution('3 5 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 5 7') == \"2\"\nassert solution('3 3 5 7') == \"2\"\nassert solution('3 7') == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"5 8 7 4\") == \"1 2 3 4\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 5 7') == '1'\nassert solution('8 9 3 5 7') == '3'\nassert solution('1 1 1 1') == '3'\nassert solution('3 3 2 3') == '4'\nassert solution('1 1 1 1') == '3'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([4, 9, 2, 3]) == '2'\nassert solution([3, 7, 5, 9]) == '1'\nassert solution([-4, -9, -2, -3]) == '1'\nassert solution([1, 3, 2, 6]) == '0'\nassert solution([3, 4, 6, 6]) == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 6 2 5') == '1'\nassert solution('4 9 2 3') == '2'\n\n===\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())\n\nsum = 0\nfor i in range(a, b + 1):\n    if (i % c) == 0 or (i % d) == 0:\n        sum += 1\nprint(sum)\n\n===",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"12356789\") == \"No\"\n\"\"\"\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123456789') == 'Yes'\n\"\"\"\n\nN = int(stdin)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'\nassert solution('12345678901') == 'Yes'\nassert solution('1234567890123') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('1234567890') == 'No'\nassert solution('12345678900') == 'Yes'\nassert solution('1234567890') == 'No'\nassert solution('12345678909') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('979693542765') == 'No'\nassert solution('68') == 'No'\nassert solution('123456789') == 'Yes'\nassert solution('1') == 'Yes'\n",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('9999999999') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"1234567890\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('00000000') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('127') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '4'\nassert solution('130') == '4'\nassert solution('123') == '5'\nassert solution('1') == '0'\nassert solution('4') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('127') == '4'\nassert solution('5') == '1'\nassert solution('10') == '2'\nassert solution('100') == '5'\nassert solution('100000000') == '14'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('15') == '5'\nassert solution('7') == '5'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('127') == '4'\nassert solution('216') == '6'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"127\") == \"4\"\nassert solution(\"5\") == \"0\"\nassert solution(\"9\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"17\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('127') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"127\") == \"4\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('128') == '4'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('-1') == '0'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"castle\") == \"No\"\nassert solution(\"baseball\") == \"Yes\"\nassert solution(\"antarctica\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"tokyo\"\nassert solution(\"tokyo\") == \"kyoto\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'\nassert solution('kyoto okyot') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\"\"\"\n\n\"\"\"\nTime complexity : O(n)\nSpace complexity: O(n)\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"tokyo\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\"\"\"\n\ns = input()\nt = input()\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"ab\") == \"1\"\nassert solution(\"aab\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\nassert solution('aabca') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '1'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"cabacc\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aabcc') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('1 3 4 5 6 7 8 9') == '8'\nassert solution('1 1 1 1') == '1'\nassert solution('1 10 100') == '10'\n",
        "num_ids_2": 29,
        "num_ids_4": 54
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 12 2\") == \"2\"\nassert solution(\"10 10 6\") == \"6\"\nassert solution(\"8 4 1\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('10 4 5') == '5'\nassert solution('5 7 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('1 2 3 4 5 6 7 8') == '8'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 6 1\") == \"1\"\nassert solution(\"8 12 2\") == \"2\"\nassert solution(\"10 10 5\") == \"5\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\nassert solution(\"1 1 3\") == \"1\"\nassert solution(\"10 10 3\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 12 2') == '2'\n\"\"\"\n\na, b, k = map(int, input().split())\n\nl = [i for i in range(a, b + 1) if i % a == 0 and i % b == 0]\nprint(l[k - 1])\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('4 10 3') == '2'\nassert solution('20 100 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"1000\") == \"1152\"\nassert solution(\"1\") == \"0\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"15\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('100') == '100'\nassert solution('1024') == '2020'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1024\") == \"2020\"\nassert solution(\"10000\") == \"100000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1024') == '2020'\nassert solution('5') == '5'\nassert solution('10') == '5'\nassert solution('100') == '10'\nassert solution('500') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1024') == '2020'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '2000'\nassert solution('100') == '3300'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2030\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"512\") == \"8\"\nassert solution(\"1024\") == \"2020\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '5'\nassert solution('1') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '6'\nassert solution('5') == '5'\nassert solution('10') == '45'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"2 2 3 2\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"0 1 2 3 4 5\") == \"0\"\nassert solution(\"5 9 7 5 9\") == \"10\"",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 2\n\n''') == '5'\nassert solution('''\n2\n1 1\n\n''') == '1'\nassert solution('''\n1\n10 10\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('1\\n2') == '4'\nassert solution('1\\n4') == '5'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"2 3\") == \"10\"\nassert solution(\"5 5\") == \"20\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 5\n\n''') == '5'\nassert solution('''\n4\n5 6 7\n\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"1 4\") == \"10\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '5'\nassert solution('3') == '9'\nassert solution('4') == '5'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4 10') == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"3\"\nassert solution(\"3 4\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"3 10\") == \"2\"\nassert solution(\"9 10\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4,10]) == \"3\"\nassert solution([20, 20]) == \"5\"\nassert solution([20, 15]) == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n2 3\n7 9\n''') == '3'\nassert solution('''5 10\n1 4\n2 3\n8 9\n''') == '4'\nassert solution('''5 20\n1 4\n2 3\n8 9\n''') == '5'\nassert solution('''5 3\n1 4\n2 3\n8 9\n''') == '4'\nassert solution('''1 1\n1 1\n1 1\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"4 20\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"10 3\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"CSGS\") == \"3\"\nassert solution(\"CSRS\") == \"3\"\nassert solution(\"CSSSSS\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CSS') == '2'\nassert solution('CSR') == '2'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '2'\nassert solution('CSS') == '2'\nassert solution('CSR') == '2'\nassert solution('CSSCSR') == '3'\nassert solution('CSSRC') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"S\") == \"0\"\nassert solution(\"T\") == \"0\"\nassert solution(\"S\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"SWR\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\nassert solution(\"SC\") == \"0\"\nassert solution(\"C\") == \"0\"\nassert solution(\"SSR\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('SS') == '1'\nassert solution('CS') == '2'\nassert solution('RR') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('6\\n1 3 5 4 2 7 5') == '2'\nassert solution('7\\n2 5 1 4 3 6 7') == '3'\nassert solution('10\\n1 3 5 4 2 7 5 8 9 5') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\n\n---another sample\n5\n1 3 5 4 2\n4\n---\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\"\nassert solution(\"5\\n1 3 5 4 2\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('5\\n2 1 3 5 4') == '1'\nassert solution('5\\n1 2 3 4 5') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '1'\nassert solution('3') == '1'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 2 3 4\n''') == '2'\nassert solution('''5\n1 2 3 4 5\n''') == '2'\nassert solution('''3\n1 2 3\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5.420\"\nassert solution() == \"6.040\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '6.720'\nprint(solution())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.480'\nassert solution('8') == '5.410'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.480'\nassert solution('7') == '6.720'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\nassert solution('''\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n''') == '6.720'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6.720\"\nprint(solution())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\nassert solution('8') == '6.000'\nassert solution('5') == '6.000'\nassert solution('5') == '6.000'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n''') == '5.410'\nassert solution('''\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n''') == '5.620'\nassert solution('''\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n''') == '5.480'\nassert solution('''\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n''') == '6.040'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.620\"\nassert solution(\"5\") == \"5.620\"\nassert solution(\"8\") == \"5.480\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\nassert solution('7') == '6.720'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(test_input_1) == \"4\"\nassert solution(test_input_2) == \"2\"\nassert solution(test_input_3) == \"1\"\nassert solution(test_input_4) == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8\\n2 3 1 1 2') == '4'\nassert solution('7 10\\n1 3 4 2 1 4 2') == '2'\nassert solution('5 16\\n5 5 5 5 5') == '1'\nassert solution('5 26\\n5 5 5 5 5') == '-1'",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '2'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'\nassert solution('''\n5 15\n5 5 5 5 5\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"4\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"7 10\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5 8\n2 3 1 1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7 10\n1 3 4 2 1 4 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 16\n5 5 5 5 5\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5 26\n5 5 5 5 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 50\n3 4 1 2 3 2 4 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''\n7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''\n5 16\n5 5 5 5 5\n''') == '1'\nassert solution('''\n5 26\n5 5 5 5 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5 8\n2 3 1 1 2\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n5 16\n5 5 5 5 5\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n5 26\n5 5 5 5 5\n\"\"\"\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8') == '4'\nassert solution('5 10') == '-1'\nassert solution('5 16') == '2'\nassert solution('5 26') == '1'\nassert solution('7 10') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 4, 4, 3, 3]) == \"1 1 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3') == '1 2 3'\nassert solution('10 4') == '7 3 1 3'\nassert solution('15 2') == '1 1'",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 2 3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_data) == \"1 2 3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"7 3 1 3\"\nassert solution() == \"7 3 1 3\"\nassert solution() == \"7 3 1 3\"\nassert solution() == \"7 3 1 3\"\nassert solution() == \"7 3 1 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"10 4\") == \"1 3 1 3\"\nassert solution(\"15 2\") == \"1 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([7, 3, 1, 3, 2, 1, 1, 2, 1, 1, 1, 1]) == \"1 1 3\"\nassert solution([10, 4]) == \"7 3 1 3\"\nassert solution([15, 2]) == \"1 1\"",
        "num_ids_2": 49,
        "num_ids_4": 62
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4') == '7 3 1 3'\nassert solution('15 2') == '7 3 1 3'\nassert solution('1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1') == '1 1'\nassert solution('1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1') == '1 1'\n",
        "num_ids_2": 28,
        "num_ids_4": 80
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\n\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\n\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''2 4\n1 2 3 4\n10 3 7 3\n''') == '0'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\nassert solution('''6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n''') == '3'\nassert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n''') == '0'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '3'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n\n''') == '0'\nassert solution('''\n4 1\n2\n3\n4\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n''') == '0'\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    4 2\n    9 9\n    10 8\n    5 3\n    4 3\n''') == '5'\nassert solution('''\n    2 4\n    1 2 3 4\n    10 3 7 3\n''') == '0'\nassert solution('''\n    6 1\n    3\n    6\n    2\n    5\n    1\n    4\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4 2\\n'\n    '9 9\\n'\n    '10 8\\n'\n    '5 3\\n'\n    '4 3\\n') == '5\\n'\n\n\nassert solution(\n    '2 4\\n'\n    '1 2 3 4\\n'\n    '10 3 7 3\\n'\n    ) == '0\\n'\n\n\nassert solution(\n    '6 1\\n'\n    '3\\n'\n    '6\\n'\n    '2\\n'\n    '5\\n'\n    '1\\n'\n    '4\\n') == '3\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n9 9\n10 8\n5 3\n4 3\n''') == \"5\"\nassert solution('''\n6 1\n3\n6\n2\n5\n1\n4\n''') == \"0\"\nassert solution('''\n2 4\n1 2 3 4\n10 3 7 3\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"\"\nassert solution(\"12\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'x'\nassert solution('10') == 'x'\nassert solution('33') == ''\n",
        "num_ids_2": 20,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nxoxox') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('xxxiii') == '1'\nassert solution('xxoxx') == '0'\nassert solution('xxxxx') == '0'\nassert solution('xaxxx') == '1'\nassert solution('xxxx') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 0\nassert solution(input()) == 1\n\n\n\n'''\n\nfrom collections import deque\n\ninput_string = input()\nlength_of_file = int(input_string.split(\" \")[0])\nfile_name = input_string.split(\" \")[1]\n\nremove_char = deque()\n\nfor char in file_name:\n    if char == \"x\":\n        remove_char.append(char)\n    elif remove_char:\n        remove_char.popleft()\n\nprint(len(file_name) - (len(remove_char) if remove_char else 0))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == 0\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nx\n''') == \"1\", \"First\"\nassert solution('''\nxxxxxx\n''') == \"0\", \"Second\"\nassert solution('''\nxxxxxxx\n''') == \"0\", \"Third\"\nassert solution('''\nxxxxxx\n''') == \"0\", \"Fourth\"\nassert solution('''\nxxxx\n''') == \"0\", \"Fifth\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\nxxxiii\n''') == '1'\nassert solution('''\n5\nxxoxx\n''') == '0'\nassert solution('''\n10\nxxxxxxxxxx\n''') == '8'\nassert solution('''\n32\nxxxxxxxxxxxxxx\n''') == '0'\nassert solution('''\n7\nxxoxxx\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '48'\nassert solution('5') == '6320'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '12'\nassert solution('4') == '24'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"48\"\nassert solution(\"4\") == \"96\"\nassert solution(\"5\") == \"225\"\nassert solution(\"6\") == \"1296\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('4') == '48'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '12'\nassert solution('4') == '64'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '48'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '48'\nassert solution('5') == '57'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '48'\nassert solution('10') == '504'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '48'\nassert solution('10') == '48'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '48'\nassert solution('4') == '96'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'unsafe'\nassert solution('10 20') =='safe'\nassert solution('10 40') == 'unsafe'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') =='safe'\nassert solution('2 4') == 'unsafe'\nassert solution('10 20') == 'unsafe'\nassert solution('100 200') == 'unsafe'\nassert solution('1000 2000') == 'unsafe'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"unsafe\"\nassert solution(\"5 6\") == \"unsafe\"\nassert solution(\"2 3\") == \"safe\"\nassert solution(\"5 2\") == \"safe\"\n\"\"\"\n\nstdin = input()\nsheeps = int(stdin.split()[0])\nwolves = int(stdin.split()[1])",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == 'unsafe'\nassert solution('1 2') =='safe'\nassert solution('2 1') == 'unsafe'\nassert solution('3 1') == 'unsafe'\nassert solution('4 3') =='safe'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"unsafe\"\nassert solution(\"5 4\") == \"safe\"\n\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'unsafe'\nassert solution('3') =='safe'\nassert solution('4') == 'unsafe'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"1 5\") == \"safe\"\nassert solution(\"2 3\") == \"unsafe\"\nassert solution(\"1 1\") == \"safe\"\nassert solution(\"3 4\") == \"unsafe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == 'unsafe'\nassert solution('10 5') =='safe'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'unsafe'\nassert solution('4 5') =='safe'\nassert solution('5 5') == 'unsafe'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"unsafe\", \"Sample #1\"\nassert solution(\"4 2\") == \"safe\", \"Sample #2\"\nassert solution(\"5 9\") == \"unsafe\", \"Sample #3\"\nassert solution(\"3 8\") == \"safe\", \"Sample #4\"\nassert solution(\"10 10\") == \"unsafe\", \"Sample #5\"\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\nassert solution('3 4 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 6 5\") == \"6\"\nassert solution(\"6 5 3\") == \"8\"\nassert solution(\"1 1 1\") == \"3\"\nassert solution(\"2 5 3\") == \"9\"\nassert solution(\"1 2 1\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"1 2 3\") == \"3.0\"\nassert solution(\"2 1 3\") == \"2\"\nassert solution(\"2 2 2\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == 6\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6 3') == '6', 'Test #1'\nassert solution('0 0 0') == '0', 'Test #2'\nassert solution('1 1 1') == '1', 'Test #3'\nassert solution('10 10 10') == '10', 'Test #4'\nassert solution('100 100 100') == '10000', 'Test #5'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 3') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 1 1') == '1'\nassert solution('-2 -2 -2') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 5\") == \"6\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"3 4 3\") == \"6\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 100 3\") == \"1\"\nassert solution(\"1 10 3\") == \"0\"\nassert solution(\"2 10 3\") == \"0\"\nassert solution(\"1 100 4\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 4\") == \"4\"\nassert solution(\"10 10 10\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('5 5 4') == '1'\nassert solution('10 10 4') == '2'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 11 4') == '4'\n\"\"\"\n\nA, B, C = list(map(int, input().split()))\n\nc = 0\nwhile A >= 0:\n    if A >= 8:\n        c += 1\n    A -= 8\n    if A < 0:\n        break\n    A += (C / 2)\n    c += 1\n\nprint(c)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('12 25 35') == '8'\nassert solution('12 9 10') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 11 4') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 11 4\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 11 4\") == \"4\"\n\"\"\"\n\nA, B, C = map(int, stdin.split())\n\nprint(max(min(A, B//C, C), 1))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"5 100 5\") == \"11\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 11 4') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '10'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"9 9\") == \"45\"\nassert solution(\"15 9\") == \"21\"\nassert solution(\"15 20\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"10\"\nprint(\"All tests passed.\")\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n''') == '1 2', 'Wrong Answer'\nassert solution('''\n2 5\n''') == '10', 'Wrong Answer'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2\", \"1 * 2 = 2\"\nassert solution(\"3 4\") == \"6\", \"3 * 4 = 6\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"10\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 1\"\n) == \"1\", \"Incorrect\"\n\nassert solution(\n    \"5 4\"\n) == \"10\", \"Incorrect\"\n\nassert solution(\n    \"9 1\"\n) == \"9\", \"Incorrect\"\n\nassert solution(\n    \"5 5\"\n) == \"10\", \"Incorrect\"\n\nassert solution(\n    \"1 1\"\n) == \"1\", \"Incorrect\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"10\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"6 6\") == \"36\"\nassert solution(\"2 5\") == \"10\"\nassert solution(\"10 10\") == \"100\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 5\n''') == '10'\nassert solution('''\n10 10\n''') == '100'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 1 1\n\"\"\") == \"10\"\nassert solution(\n\"\"\"\n1 3 2\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n1 5 1\n\"\"\") == \"6\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 3') == '6'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 5 7\n\"\"\") == \"10\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 7\") == \"10\"\nassert solution(\"2 2 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 10') == '5'\nassert solution('1 1 1') == '3'\nassert solution('1 1 3') == '3'\nassert solution('3 5 7') == '10'\nprint('Congratulations!')\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"3 2 3\") == \"4\"\nassert solution(\"3 1 1\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2\") == \"1\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 3 5\") == \"5\"\nassert solution(\"1 2 3\") == \"4\"\nassert solution(\"1 1 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1 4\") == \"5\"\nassert solution(\"3 5 7\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 2 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('6 5 20') == '16'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n500 600\") == \"NG\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == 'OK'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"OK\"\nassert solution(\"5\") == \"NG\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == 'OK'\nassert solution('7') == 'NG'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7') == \"OK\"\nassert solution('7 6') == \"NG\"\n\n\"\"\"\n\nfrom math import ceil,floor",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('3\\n3 2\\n') == 'NG'\nassert solution('2\\n3 2\\n') == 'OK'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == 'OK'\nassert solution('1') == 'NG'\nassert solution('2') == 'NG'\nassert solution('3') == 'NG'\nassert solution('4') == 'NG'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"NG\", \"Simple test case, check for error code and expected output\"\nassert solution(\"7\") == \"OK\", \"Simple test case, check for error code and expected output\"\nassert solution(\"8\") == \"OK\", \"Simple test case, check for error code and expected output\"\nassert solution(\"10\") == \"OK\", \"Simple test case, check for error code and expected output\"",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n500 600') == 'OK'\nassert solution('10\\n500 600') == 'NG'\nassert solution('20\\n500 600') == 'NG'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"6\\n1000 1000\") == \"NG\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '2.6643334'\nassert solution('6 3') == '2.6667'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('3 4') == '0.3333333333333333'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"2.5\"\nassert solution(\"10 20\") == \"2.0\"\nassert solution(\"100 3\") == \"2.3\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"2\"\nassert solution(\"6 2\") == \"3\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"10 4\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2.5'\nassert solution('1 3') == '1.8333333333333333'\n\"\"\"\n\nT, X = map(int, input().split())",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"50 10\") == \"1.4545454545\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '0.25', 'Tets Failed'\nassert solution('5 6') == '1.6666666667', 'Tets Failed'\nassert solution('5 5') == '1.5', 'Tets Failed'\n",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"2.6666666667\"\nassert solution(\"8 3\") == \"2.6666666667\"\nassert solution(\"1 2\") == \"1.5\"\nassert solution(\"8 1\") == \"8.0\"\nassert solution(\"4 6\") == \"8.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '2.5'\nassert solution('8 1') == '3.666666667'\nassert solution('8 2') == '3.95135942'\nassert solution('8 3') == '4.2'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3') == '2.6666666667'\nassert solution('1 2') == '1.5'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 1\") == \"1\"\nassert solution(\"10 10 10\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 4 3') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''A B C\n1 1 2\n1 1 2\n1 1 2\n''') == '1'\nassert solution('''A B C\n1 1 2\n1 1 3\n1 1 4\n''') == '2'\nassert solution('''A B C\n1 1 2\n1 1 3\n1 1 4\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 3, 4]) == \"1\"\nassert solution([1, 2, 3]) == \"1\"\nassert solution([6, 4, 3]) == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '1'\nassert solution(input(\"\")) == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\nassert solution(\"10 6 2\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(6, 4, 3) == 1\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 3') == '1'\nassert solution('6 4 3') == '2'\nassert solution('1 1 1') == '1'\nassert solution('3 3 3') == '3'\nassert solution('2 2 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''\n5\n1 3 2\n3 1 2\n3 4 1\n1 3 4\n2 3 1\n''') == '6'\nassert solution('''\n6\n1 3 2\n3 1 2\n3 4 1\n1 3 4\n2 3 1\n5 2 4\n''') == '7'\nassert solution('''\n2\n1 3 2\n3 1 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\nassert solution('1 3 2 3 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 65
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"9\"\n\nimport sys\nfrom itertools import permutations",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''4\n1 3 2\n3 1 2\n2 1 3\n''') == '3'\n\nassert solution('''5\n1 3 2\n3 1 2\n4 1 2\n3 1 2\n2 1 3\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''4\n1 3 2 5\n3 1 2 5\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 3 2\\n3 1 2\\n') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('ATCODERAC') == 'ATC'\nassert solution('ATCODERG') == 'ATC'\nassert solution('ATCODERA') == 'ATC'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\nassert solution(\"\") == 0\nassert solution(\"A\") == 1\nassert solution(\"TTT\") == 3\n",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('A') == '0'\nassert solution('ACGT') == '4'\nassert solution('ACGTAAACGT') == '8'\nassert solution('ACGTACGTACGT') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ATCODER\") == \"3\"\nassert solution(\"ACODER\") == \"2\"\nassert solution(\"CODER\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ATCODER') == 'ATC'\nassert solution('CTORAT') == 'CTRO'\nassert solution('ABC') == ''\nassert solution('TTT') == 'TT'\nassert solution('GTT') == 'GT'\n",
        "num_ids_2": 27,
        "num_ids_4": 46
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================\n\n=========================================",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 3",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ATCODER\") == \"AT\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ATCODER\") == \"ATC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"13\") == \"3\"\nassert solution(\"1423456789\") == \"3\"\nassert solution(\"123456789\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11') == '9'\nassert solution('1000') == '9'\nassert solution('101') == '8'\nassert solution('10') == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"11\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"9\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '9'\nassert solution('1') == '1'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"11\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12\") == \"2\"\nassert solution(\"13\") == \"2\"\nassert solution(\"141\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"12\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''cupofcoffee\ncupofhottea''') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\nassert solution('cupofcoffee') == 'cupofcoffee'\nassert solution('cupofcoffee') == 'cupofcoffee'\nassert solution('cupofcoffee') == 'cupofcoffee'\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofcoffee\") == \"cupofhottea\"\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('4 1') == '1 2 3 4'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 1\n\"\"\") == \"2 3 4 5\"\nassert solution(\"\"\"\n3 7\n\"\"\") == \"5 6 7 8 9\"\nassert solution(\"\"\"\n3 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1 2\n\"\"\") == \"\"\nassert solution(\"\"\"\n1 1\n\"\"\") == \"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('4 1') == '1 2 3 4'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6 7 8 9\") == \"5 6 7 8 9\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('4 1') == '4 1'\nassert solution('4 10') == '4 10'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"1 4 9\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"7 8\") == \"7 8\"\nassert solution(\"8 1\") == \"8 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 7') == '5 6 7 8 9'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"3 1\") == \"1 2 3 4 5\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25') == 'No'\nassert solution('-40') == 'No'\nassert solution('40') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"-10\") == \"Yes\"\nassert solution(\"0\") == \"Yes\"\nassert solution(\"40\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(0) == 'No'\nassert solution(1) == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == 'No'\nassert solution('-15') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Yes'\nassert solution('10') == 'No'\nassert solution('-1') == 'No'\nassert solution('40') == 'Yes'\nassert solution('0') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('25') == 'Yes'\nassert solution('-40') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"0\") == \"No\"\nassert solution(\"-1\") == \"No\"\nassert solution(\"\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('30') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('-5') == 'No'\nassert solution('5') == 'Yes'\nassert solution('2') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"30\") == \"Yes\"\nassert solution(\"-40\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"15\") == \"No\"\nassert solution(\"-2\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 5') == '1'\nassert solution('-2 8') == '1'\nassert solution('3 3') == '0'\nassert solution('5 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"10 10\") == \"45\"\nassert solution(\"100 100\") == \"457\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 2') == '0'\nassert solution('3 3') == '2'\nassert solution('4 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 1') == '0'\nassert solution('4 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n1 2\n5 5\n-2 8\n''') == '1'\nprint('Congratulations, have a nice day!')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '1'\nassert solution('6 7') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('5678') == 'Good'\nassert solution('1234') == 'Good'\nassert solution('1233') == 'Bad'\nassert solution('1232') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('123456') == 'Good'\nassert solution('1111') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"123456\") == \"Good\"\nassert solution(\"000112\") == \"Bad\"\n\n## https://codeforces.com/problemset/problem/709/A\n## Sort the array\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3776\") == \"Bad\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3776\") == \"Bad\"\nassert solution(\"1234\") == \"Good\"\nassert solution(\"1222\") == \"Bad\"\nassert solution(\"1221\") == \"Bad\"\nassert solution(\"122223\") == \"Good\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3776''') == 'Bad'\nassert solution('''1234''') == 'Good'\nassert solution('''123450''') == 'Bad'",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('9726') == 'Good'\nassert solution('7777') == 'Bad'\n\n--\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3776') == 'Good'\nassert solution('12345') == 'Good'\nassert solution('23456') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('1\\n2 3') == '1.5'\nassert solution('2\\n1 3') == '1.5'\nassert solution('1\\n2 3') == '1.5'\nassert solution('2\\n1 2') == '1.5'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('2') == '3.5'\nassert solution('3') == '3.5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3.5'\nassert solution('3') == '3.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"2\") == \"3.5\"\nassert solution(\"2\") == \"3.5\"\nassert solution(\"2\") == \"3.5\"\nassert solution(\"2\") == \"3.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 4') == '3.5'\n\nfrom math import inf\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3.5'\nassert solution('3') == '4.0'\nassert solution('4') == '3.0'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n3 4\n''') == '3.5'\nassert solution('''4\n1 2\n''') == '3.5000001'\nassert solution('''3\n1 2\n''') == '2.000000'\nassert solution('''6\n3 5\n''') == '7.000000'\nassert solution('''12\n3 5\n''') == '11.000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '1.5'\nassert solution('3') == '2.0'\nassert solution('4') == '2.5'\nassert solution('5') == '3.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('2\\n1 2') == '1.5'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"3 1 2 3\") == \"25\"\nassert solution(\"3 1 2 3 3\") == \"41\"",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 2\\n2 5 4\\n3 6\") == '14'\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\") == '210'\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '14'\nassert solution('4') == '14'\nassert solution('5') == '14'\n\"\"\"\n\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nc = list(map(int, input().split()))\n\ntotal = 0\nfor i in range(n - 1):\n    total += (a[i] + b[i] + c[i])\nprint(total)\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"10\") == \"28\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"2 5 4\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n2 1 3\n2 5 4\n3 6\n''') == '14'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"3 1 2\") == \"14\"\nassert solution(\"3 6\") == \"17\"\nassert solution(\"3 6 4\") == \"21\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == '0'\nprint(solution(input()))\n\n<https://www.hackerrank.com/challenges/balanced-brackets/problem>",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 1 2\n2 5 4\n3 6\n''') == '14'\nassert solution('''\n4\n3 1 2 3\n2 5 4 6\n3 6 7 8\n''') == '18'\n\nassert solution('''\n5\n3 1 2 3 4\n2 5 4 6 7\n3 6 7 8 9\n4 9 10 11 12\n5 13 14 15 16\n''') == '42'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABCDBABCQ\") == \"2\"\nassert solution(\"ABC\") == \"1\"\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 1855
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"2\"\nassert solution(\"12\") == \"2\"\nassert solution(\"20\") == \"2\"\nassert solution(\"25\") == \"2\"\nassert solution(\"30\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'\n\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '2'\nassert solution('ZABCDBABCQ') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '2'\nassert solution('4') == '1'\n\"\"\"\nimport sys\nn = int(sys.stdin.readline().strip())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ZABCDBABCQ') == '2'\nassert solution('ZABCDBABCQ') == '2'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '11'\n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nZABCDBABCQ\n''') == '2'\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '2'\nassert solution('2') == '0'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n\"\"\"\n\n\nimport itertools\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\n\"\"\"\n\nfrom collections import defaultdict",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI''') == \"2\"\n\n\"\"\"\nimport math",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '2'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('5') == '2'\nassert solution('10') == '1'\n'''\n\nfrom itertools import combinations",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n''') == '2'\n\nimport sys\nimport os\n\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\nfrom tests.sample_tests import tests\n\ntests(solution)\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 2\n\n\"\"\"\n\nimport itertools\n\nN = int(input())\nS = [input() for _ in range(N)]\n\ncount = 0\n\nfor i in range(3):\n    for j in itertools.permutations(S, i+1):\n        if 'M' in j or 'A' in j or 'R' in j or 'C' in j or 'H' in j:\n            count += 1\n\nprint(count)",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"\nassert solution(input()) == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n4\\n5\\n\") == \"Yes\"\nassert solution(\"5\\n10\\n20\\n25\\n\") == \"No\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"No\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 3\\n\"\n    \"1 2\\n\"\n    \"2 2\"\n) == \"Yes\\n\"\n\nassert solution(\n    \"2 4\\n\"\n    \"1 2\\n\"\n    \"2 2\"\n) == \"No\\n\"\n\nassert solution(\n    \"3 1\\n\"\n    \"1 1\\n\"\n    \"1 2\"\n) == \"Yes\\n\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"Yes\"\nassert solution(\"3 2\") == \"Yes\"\nassert solution(\"4 3\") == \"No\"\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\n\"\"\"\nimport unittest\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 3') == 'No'\nassert solution('3 4') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == 'Yes'\nassert solution('3\\n4\\n5') == 'Yes'\nassert solution('4\\n5\\n6') == 'Yes'\nassert solution('5\\n6\\n7') == 'No'\nassert solution('7\\n8\\n9') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"3 1\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\nassert solution('sippuu') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('cups') == 'No'\nassert solution('a') == 'Yes'\nassert solution('ab') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('as') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sipp\") == \"No\"\n\"\"\"\n\nstdin = input()\n\nprint(\"Yes\" if stdin[2] == stdin[4] and stdin[5] == stdin[6] else \"No\")\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('bbaa') == 'No'\nassert solution('aaa') == 'Yes'\n\nTest.assert_equals(solution('sippuu'), 'Yes')\nTest.assert_equals(solution('bbaa'), 'No')\nTest.",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('aaaa') == 'No'\nassert solution('coffee') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sipps') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\n\n----\n\n---\n\n------",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 70\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\") == \"4\"\nassert solution(\"5 10\\n40 30\\n50 20\\n60 10\\n40 10\") == \"10\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\n7 60\\n1 80\\n4 50\\n') == '4'\nassert solution('10 20\\n50 60\\n20 60\\n60 60\\n20 60\\n20 60\\n20 60\\n20 60\\n') == '20'\nassert solution('10 20\\n50 60\\n20 60\\n60 60\\n20 60\\n20 60\\n20 60\\n20 60\\n') == 'TLE'\nassert solution('10 20\\n50 60\\n20 60\\n60 60\\n20 60\\n20 60\\n20 60\\n20 60\\n') == 'TLE'\nassert solution('10 20\\n50 60\\n20 60\\n60 60\\n20 60\\n20 60\\n20 60\\n20 60\\n') == 'TLE'\n",
        "num_ids_2": 66,
        "num_ids_4": 150
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"4 50\") == \"TLE\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 70') == '4'\nassert solution('5 50') == '100'\nassert solution('5 30') == 'TLE'\nassert solution('100 100') == '100'\nassert solution('1 0') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 70') == '4'\nassert solution('1 80') == 'TLE'\nassert solution('4 50') == 'TLE'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 70\n7 60\n1 80\n4 50''') == '4'\nassert solution('''2 1\n3 1\n1 3''') == '2'\nassert solution('''5 20\n7 10\n1 50\n10 10\n10 8\n20 2''') == '20'\nassert solution('''10 20\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n2 3\n2 4\n2 5\n2 6\n2 7\n2 8\n2 9\n2 10\n3 4\n3 5\n3 6\n3 7\n3 8\n3 9\n3 10\n4 5\n4 6\n4 7\n4 8\n4 9\n4 10\n5 6\n5 7\n5 8\n5 9\n5 10\n6 7\n6 8\n6 9\n6 10\n7 8\n7 9\n7 10\n8 9\n8 10\n9 10''') == '10'\nassert solution('''8 12\n10 4\n1 6\n5 7\n1 8\n2 5\n3 8\n2 9\n2 10\n3 11\n3 12\n4 5\n4 8\n4 9\n4 10\n4 11\n4 12\n5 6\n5 8\n5 9\n5 10\n5 11\n5 12\n6 7\n6 8\n6 9\n6 10\n6 11\n6 12\n7 8\n7 9\n7 10\n7 11\n7 12\n8 9\n8 10\n8 11\n8 12\n9 10\n9 11\n9 12\n10 11\n10 12\n11 11\n11 12\n12 12''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 70\\n7 60\\n1 80\\n4 50') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2 9\") == \"8\"\nassert solution(\"3 3 3\") == \"18\"\nassert solution(\"7 8 5\") == \"9\"\nassert solution(\"3 6 7\") == \"15\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('2 2 3') == '3'\nassert solution('3 1 5') == '5'\nassert solution('5 2 10') == '12'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2 9\") == \"8\"\n\"\"\"\n\nfrom math import inf",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 9\") == \"8\"\nassert solution(\"5 2 10\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('20 100 100') == '200'\nassert solution('40 100 100') == '200'\nassert solution('20 20 20 20 20') == '300'\nassert solution('30 30 30 30 30 30') == '400'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\") == \"6\"\nassert solution(\"4 3 6\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 2 50') == '50'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 2 9\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 9') == '8'\nassert solution('7 3 4') == '10'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 2, 9]) == '8'\nassert solution([3, 7, 5]) == '12'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('5\\nacornistnt\\npeanutbomb\\nconstraint\\nchessboard\\n2\\nnovel\\ncombat\\n3\\nicecream\\n') == '2'\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\nacornistnt\npeanutbomb\nconstraint\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n2\nabcd\nabcd\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\ncanarian\ncanarian\ncanarian\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n1\nabcd\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"1\"\n\n'''\n\nn = int(input())\nstrings = []\nfor i in range(n):\n    strings.append(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1\\n3\\n20\\n38\\n56\") == \"1\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\"\nassert solution(\"4\\n2132\\n506\\n999999999\\n1000000000\") == \"8\"\n",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n20\\n38\\n56') == '2'\nassert solution('4\\n2132\\n506\\n999999999\\n1000000000') == '8'\nassert solution('2\\n7\\n9') == '2'\nassert solution('3\\n4') == '0'\nassert solution('4\\n7') == '4'\n",
        "num_ids_2": 49,
        "num_ids_4": 78
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n12345\n123456\n1234567''') == '8'\nassert solution('''\n4\n123\n1234\n12345\n123456''') == '2'\nassert solution('''\n5\n112123123412345\n123456\n1234567\n12345678\n123456789''') == '8'\nassert solution('''\n3\n123\n1234\n12345''') == '8'\nassert solution('''\n4\n123\n1234\n12345\n123456''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1\n3\n20\n38\n56''') == '1'\nassert solution('''4\n2132\n506\n999999999\n1000000000''') == '8'\n\n'''\n\nfrom typing import List",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('2') == '8'\nassert solution('3') == '2'\nassert solution('4') == '9'\n\"\"\"\n\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '8'\nassert solution(input()) == '2'\nassert solution(input()) == '9'\nassert solution(input()) == '8'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"99\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '2'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '9'\nassert solution(input()) == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''\n6 2\n3 1\n1 4\n1 2\n''') == '2'\nassert solution('''\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 2\") == \"1 2 1 1 2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'\nassert solution() == '1 1 2 3 2 3 1 3 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 2 2 2 2 1 1 1 1 2 2 2'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"4 2\") == \"1 2 1 1 2\"\nassert solution(\"10 2\") == \"1 1 1 1 1 1 1 1 1 2\"",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1'",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2', 'First'\n\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n\n''') == '1', 'Second'\n\nassert solution('''\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\n''') == '3', 'Third'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\nassert solution(\"3 2\") == \"1 2 1\"\nassert solution(\"10 2\") == \"1 1 1 1 1 1 1 1 1\"\nassert solution(\"20 2\") == \"1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\"\nassert solution(\"20 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 67
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n1 2 4 4\n\"\"\") == \"2 4\"\nassert solution(\"\"\"\n9\n1 1 8 8 8 4 4 4 4\n\"\"\") == \"3 8\"\nassert solution(\"\"\"\n7\n4 3 7 1 4 3 3\n\"\"\") == \"3 6\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == \"2 4\"\nassert solution('9') == \"3 8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n1 1 4 4\n''') == '2 4'\nassert solution('''9\n1 1 8 8 8 4 4 4\n''') == '3 8'\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 6'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 4 4') == '2 4'\nassert solution('9 1 1 8 8 8 4 4 4') == '3 8'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2 4'\nassert solution('9') == '3 8'\nassert solution('7') == '3 6'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1 8 8 8 4 4 4 4') == '2 4'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 4 4\n''') == '2 4'\nassert solution('''\n7\n4 3 7 1 4 3 3\n''') == '3 6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2 4 4\"\nassert solution('''5\n1 2 4 4\n4\n''') == \"3 4\"\nassert solution('''6\n4 2 3 7\n8\n''') == \"6 8\"\nassert solution('''7\n2 3 3 4 4 3\n8\n''') == \"2 4\"\nassert solution('''8\n2 3 4 2 4 4 3\n3\n''') == \"4 2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 32
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\n    \"3\",\n    \"1 1 8 8 8 4 4 4 4\",\n    ]) == \"2 4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 4 4\") == \"2 4\"\nassert solution(\"9 1 8 8 8 4 4 4 4\") == \"3 8\"\nassert solution(\"7 4 3 7 1 4 3 3\") == \"3 6\"\n",
        "num_ids_2": 33,
        "num_ids_4": 51
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5', \"First\"\nassert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5', \"Second\"\nassert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5', \"Third\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n2 3\n4 3\n1 2\n5 1\n''') == '3 2 1 4'\nassert solution('''\n6\n5 1\n1 2\n5 2\n1 3\n4 3\n1 4\n''') == '1 3 1 4 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3 2 1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2\n5\n1 4\n2 4\n1 5\n2 3\n\"\"\") == \"\"\"3 2 4 1 5\"\"\"\nassert solution(\"\"\"\n10\n1 4\n3 2\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n\"\"\") == \"\"\"3 2 4 1 5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\"\"\"\nassert solution(\"\"\"\n100\n1 1\n11 1\n2 2\n33 2\n3 3\n5 5\n6 6\n7 7\n9 9\n10 10\n11 11\n12 12\n13 13\n15 15\n16 16\n17 17\n19 19\n20 20\n21 21\n22 22\n23 23\n25 25\n26 26\n27 27\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n39 39\n40 40\n41 41\n42 42\n43 43\n45 45\n46 46\n47 47\n49 49\n50 50\n51 51\n52 52\n53 53\n55 55\n56 56\n57 57\n59 59\n60 60\n61 61\n62 62\n63 63\n65 65\n66 66\n67 67\n69 69\n70 70\n71 71\n72 72\n73 73\n75 75\n76 76\n77 77\n79 79\n80 80\n81 81\n82 82\n83 83\n85 85\n86 86\n87 87\n89 89\n90 90\n91 91\n92 92\n93 93\n95 95\n96 96\n97 97\n99 99\n100 100\n\"\"\") == \"\"\"3 2 4 1 5 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 1\n1 2\n''') == '3 1 2'\n\nassert solution('''\n5\n3 1 5 2 4\n1 4 2 5 3\n2 3 4 5 1\n''') == '2 1 3 4 5'\n\nassert solution('''\n4\n1 2 3 4\n2 3 4 1\n4 1 2 3\n3 4 1 2\n''') == '2 3 4 1 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n5 3 5 3 4 2 1 5 1\n1 2\n1 3\n1 4\n2 3\n2 4\n2 5\n3 4\n3 5\n4 4\n4 5\n5 5\n''') == '3 1 2'\n\nassert solution('''\n3\n4 3 2 1\n1 2\n2 1\n''') == '4 3 2 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    5\n    3 5\n    1 4\n    2 4\n    1 5\n    2 3\n    '''\n) == '3 2 4 1 5'\n\nassert solution(\n    '''\n    10\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    6 7\n    7 8\n    8 9\n    9 10\n    10 11\n    11 12\n    12 13\n    13 14\n    14 15\n    15 16\n    16 17\n    17 18\n    18 19\n    19 20\n    20 21\n    21 22\n    22 23\n    23 24\n    24 25\n    25 26\n    26 27\n    27 28\n    28 29\n    29 30\n    30 31\n    31 32\n    32 33\n    33 34\n    34 35\n    35 36\n    36 37\n    37 38\n    38 39\n    39 40\n    40 41\n    41 42\n    42 43\n    43 44\n    44 45\n    45 46\n    46 47\n    47 48\n    48 49\n    49 50\n    50 51\n    51 52\n    52 53\n    53 54\n    54 55\n    55 56\n    56 57\n    57 58\n    58 59\n    59 60\n    60 61\n    61 62\n    62 63\n    63 64\n    64 65\n    65 66\n    66 67\n    67 68\n    68 69\n    69 70\n    70 71\n    71 72\n    72 73\n    73 74\n    74 75\n    75 76\n    76 77\n    77 78\n    78 79\n    79 80\n    80 81\n    81 82\n    82 83\n    83 84\n    84 85\n    85 86\n    86 87\n    87 88\n    88 89\n    89 90\n    90 91\n    91 92\n    92 93\n    93 94\n    94 95\n    95 96\n    96 97\n    97 98\n    98 99\n    99 100\n    100 101\n    101 102\n    102 103\n    103 104\n    104 105\n    105 106\n    106 107\n    107 108\n    108 109\n    109 110\n    110 111\n    111 112\n    112 113\n    113 114\n    114 115\n    115 116\n    116 117\n    117 118\n    118 119\n    119 120\n    120 121\n    121 122\n    122 123\n    123 124\n    124 125\n    125 126\n    126 127\n    127 128\n    128 129\n    129 130\n    130 131\n    131 132\n    132 133\n    133 134\n    134 135\n    135 136\n    136 137\n    137 138\n    138 139\n    139 140\n    140 141\n    141 142\n    142 143\n    143 144\n    144 145\n    145 146\n    146 147\n    147 148\n    148 149\n    149 150\n    150 151\n    151 152\n    152 153\n    153 154\n    154 155\n    155 156\n    156 157\n    157 158\n    158 159\n    159 160\n    160 161\n    161 162\n    162 163\n    163 164\n    164 165\n    165 166\n    166 167\n    167 168\n    168 169\n    169 170\n    170 171\n    171 172\n    172 173\n    173 174\n    174 175\n    175 176\n    176 177\n    177 178\n    178 179\n    179 180\n    180 181\n    181 182\n    182 183\n    183 184\n    184 185\n    185 186\n    186 187\n    187 188\n    188 189\n    189 190\n    190 191\n    191 192\n    192 193\n    193 194\n    194 195\n    195 196\n    196 197\n    197 198\n    198 199\n    199 200\n    200 201\n    201 202\n    202 203\n    203 204\n    204 205\n    205 206\n    206 207\n    207 208\n    208 209\n    209 210\n    210 211\n    211 212\n    212 213\n    213 214\n    214 215\n    215 216\n    216 217\n    217 218\n    218 219\n    219 220\n    220 221\n    221 222\n    222 223\n    223 224\n    224 225\n    225 226\n    226 227\n    227 228\n    228 229\n    229 230\n    230 231\n    231 232\n    232 233\n    233 234\n    234 235\n    235 236\n    236 237\n    237 238\n    238 239\n    239 240\n    240 241\n    241 242\n    242 243\n    243 244\n    244 245\n    245 246\n    246 247\n    247 248\n    248 249\n    249 250\n    250 251\n    251 252\n    252 253\n    253 254\n    254 255\n    255 256\n    256 257\n    257 258\n    258 259\n    259 260\n    260 261\n    261 262\n    262 263\n    263 264\n    264 265\n    265 266\n    266 267\n    267 268\n    268 269\n    269 270\n    270 271\n    271 272\n    272 273\n    273 274\n    274 275\n    275 276\n    276 277\n    277 278\n    278 279\n    279 280\n    280 281\n    281 282\n    282 283\n    283 284\n    284 285\n    285 286\n    286 287\n    287 288\n    288 289\n    289 290\n    290 291\n    291 292\n    292 293\n    293 294\n    294 295\n    295 296\n    296 297\n    297 298\n    298 299\n    299 300\n    300 301\n    301 302\n    302 303\n    303 304\n    304 305\n    305 306\n    306 307\n    307 308\n    308 309\n    309 310\n    310 311\n    311 312\n    312 313\n    313 314\n    314 315\n    315 316\n    316 317\n    ",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 5\\n1 4') == '3 2 4 1 5'\nassert solution('5\\n2 3\\n3 1') == '3 1 2'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n3 5\n1 4\n2 4\n1 5\n2 3\n''') == '3 2 4 1 5'\nassert solution('''\n3\n2 3\n3 1\n1 2\n''') == '3 1 2'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n2 3 4 5 6 7 8 9 10 1\n''') == '2 3 4 5 6 7 8 9 10 1'\nassert solution('''\n5\n1 2 3 4 5\n2 3 4 5 1\n3 4 5 1 2\n4 5 1 2 3\n5 1 2 3 4\n''') == '3 4 5 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"15\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '3'\nassert solution('10') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n\n''') == '1'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input(False)) == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\nassert solution('''\n10\n
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 10 17 12 15 2\n''') == '3'\n\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n''') == '1'\n\nassert solution('''\n6\n1 1000 10000 10 100 1000000000\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 10\") == \"10\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\nassert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\nassert solution('''\n6\n10 10 3 2\n10 10 4 3\n10 10 2 1\n10 10 5 1\n10 10 7 3\n10 10 7 5\n''') == '0'\nassert solution('''\n7\n13 0 5 4 2 0 2 1 0 0 0 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"4\"\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\\n\") == \"4\\n5\\n2\\n0\\n1\\n\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2') == '4'\nassert solution('10\\n1 1 1 1\\n100 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100') == '100'\nassert solution('10\\n1 1 1 1\\n100 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100\\n1 100 100 100') == '-1'\nassert solution('2\\n3 2 2\\n10 3 2') == '2'\nassert solution('2\\n4 4 4\\n6 7 4\\n7 8 4\\n8 10 4\\n4 4 4\\n6 6 4\\n9 8 4\\n8 10 4\\n4 4 4\\n2 4 4\\n4 4 4\\n10 10 4\\n4 4 4\\n8 4 4\\n4 4 4\\n6 4 4\\n4 4 4\\n6 4 4\\n10 4 4\\n4 4 4\\n4 4 4\\n6 4 4\\n4 4 4\\n2 4 4\\n8 4 4\\n4 4 4\\n6 4 4\\n10 4 4\\n4 4 4\\n4 4 4\\n6 4 4\\n4 4 4\\n8 4 4\\n4 4 4\\n6 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n4 4 4\\n2 4 4\\n4 4 4\\n6 4 4\\n4 4 4\\n8 4 4\\n4 4 4\\n6 4 4\\n10 4 4\\n4 4 4\\n4 4 4\\n6 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n4 4 4\\n6 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n2 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10 4 4\\n4 4 4\\n6 4 4\\n8 4 4\\n10",
        "num_ids_2": 134,
        "num_ids_4": 237
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nassert solution() == \"0\"\nassert solution() == \"1\"\nassert solution() == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20 5 7 3\n15 5 4 3''') == '4'\nassert solution('''15 5 3 2\n15 5 4 3''') == '-1'\nassert solution('''16 7 5 2\n15 5 7 3''') == '2'\nassert solution('''20 5 7 3\n15 5 2 1''') == '0'\nassert solution('''15 5 7 1\n15 5 2 1''') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\nassert solution('''\n6\n15 5 4 3\n15 5 2 1\n15 5 5 1\n15 5 7 1\n16 7 5 2\n20 5 7 3\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\nac?b?c\n''') == '24'\n\nassert solution('''\n6\n???????\n''') == '2835'\n\nassert solution('''\n9\ncccbbbaaa\n''') == '0'\n\nassert solution('''\n5\na???c\n''') == '46'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(test_input_1) == '24'\nassert solution(test_input_2) == '2835'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\nac?b?c\") == \"24\"\nassert solution(\"7\\n???????\\n\") == \"2835\"\nassert solution(\"9\\ncccbbbaaa\\n\") == \"0\"\nassert solution(\"5\\na???c\\n\") == \"46\"",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"5\") == \"46\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n''') == '0'\nassert solution('''\n7\n???????\n''') == '2835'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '24'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\nac?b?c\n\"\"\") == \"24\"\nassert solution(\"\"\"\n7\n??????????\n\"\"\") == \"2835\"\nassert solution(\"\"\"\n5\na???c\n\"\"\") == \"46\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"24\"\nassert solution(\"7\") == \"2835\"\nassert solution(\"5\") == \"46\"\nassert solution(\"6\") == \"24\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\nac?b?c\n\n''') == '24'\nassert solution('''\n7\n???????\n\n''') == '2835'\nassert solution('''\n5\na???c\n\n''') == '46'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == \"0\"\nassert solution('ac?b?c') == \"24\"\nassert solution('???????') == \"2835\"\nassert solution('cccbbbaaa') == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n3 2\n1 3 3\n2 3 5\n2 1 1\n\"\"\"\n) == \"5\"\n\nassert solution(\n\"\"\"\n4 0\n1 3 3 7\n\"\"\"\n) == \"16\"\n\nassert solution(\n\"\"\"\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n\"\"\"\n) == \"18\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '5'\n\nassert solution('4 0') == '16'\n\n\"\"\"\n\nfrom collections import deque\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 4\n1 2 3 4\n1 3 5\n1 2 1\n''') == '5'\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n\n'''\n\n'''\n\nimport heapq\n\nn, m = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\ngraph = [[] for _ in range(n)]\n\nfor _ in range(m):\n    u, v, w = list(map(int, input().split()))\n    heapq.heappush(graph[u - 1], (w, v - 1))\n    heapq.heappush(graph[v - 1], (w, u - 1))\n\ncost = 0\nq = [(0, 0)]\n\nwhile q:\n    c, u = heapq.heappop(q)\n    if graph[u]:\n        for w, v in graph[u]:\n            if c + w < cost:\n                heapq.heappush(q, (c + w, v))\n    cost = max(cost, c)\n\nprint(cost)\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_str_1) == '5'\nassert solution(input_str_2) == '16'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '1'\nassert solution('3 2') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 0\") == \"16\"\nassert solution(\"3 2\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '5'\nassert solution(input()) == '16'\nassert solution(input()) == '18'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"4 0\") == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '14'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"14\"\nassert solution(input_data='''\n5 1 1\n0 9\n1 5\n\n''') == \"45\"\nassert solution(input_data='''\n10 1 1\n0 9\n0 5\n\n''') == \"-1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n') == '14'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '45'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '-1'\n",
        "num_ids_2": 60,
        "num_ids_4": 83
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\n\nassert solution('''10 1 1\n0 9\n0 5\n''') == '45'\n\nassert solution('''10 1 1\n0 9\n1 5\n''') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"45\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == '14'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2') == '14'\nassert solution('10 1 1\\n0 9\\n1 5\\n') == '45'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == \"14\"\nassert solution('''10 1 1\n0 9\n1 5\n''') == \"-1\"\nassert solution('''1 1 1\n0 9\n1 5\n''') == \"45\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == '14'\nassert solution(input_data2) == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('2 2 1') == 'No'\nassert solution('3 3 3') == 'No'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"1 1 1 2\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Should be Yes\"\nassert solution(\"1 1 1\") == \"No\", \"Should be No\"\nassert solution(\"4 5 7\") == \"No\", \"Should be No\"\nassert solution(\"7 7 7\") == \"Yes\", \"Should be Yes\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 2 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\\n4 5 6\") == \"Yes\"\nassert solution(\"2 2 3\\n3 1 1\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 7 5\n''') == \"Yes\"\nassert solution('''1 2 1\n''') == \"No\"\n\n'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\", \"Yes is the correct answer\"\nassert solution(\"1 1 1\") == \"No\", \"No is the correct answer\"\nassert solution(\"2 2 2\") == \"Yes\", \"Yes is the correct answer\"\nassert solution(\"5 5 5\") == \"Yes\", \"Yes is the correct answer\"\nassert solution(\"5 6 6\") == \"Yes\", \"Yes is the correct answer\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"6\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n12 5\n1000 2000''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 5') == '2'\nassert solution('5 3 5') == '1'\nassert solution('5 1 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"5\"\n\"\"\"\n\nn, t, *h = list(map(int, input().split()))\n\nimport math\n\nA = t - (sum(h) / len(h)) * 0.006\n\nm = math.ceil(A - t)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n5\\n1000 2000') == '1'\nassert solution('3\\n-60 -60 -60\\n10 50 10') == '3'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"1\\n1000 1\\n-1 1\") == \"0\"\nassert solution(\"1\\n2000 100\\n-1 1000\") == \"0\"",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n12 5\\n1000 2000\") == \"1\"\nassert solution(\"3\\n1 2 3\\n1000 2000 2000\") == \"0\"\nassert solution(\"1\\n1\\n1000 2000\") == \"0\"\nassert solution(\"2\\n1 5\\n1000 2000\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '1'\nassert solution('3 10') == '4'\nassert solution('3 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 4') == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 1\n''') == '1'\nassert solution('''2 2\n''') == '0'\nassert solution('''1 2\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\\n\") == \"1\"\nassert solution(\"2 2\\n\") == \"0\"\nassert solution(\"10 10\\n\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1', 'First'\nassert solution('2 2') == '0', 'Second'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 20\\nAC') == '2'\nassert solution('10 10\\nAC') == '0'\nassert solution('2 2\\nAC') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8\n''') == '2\\n0\\n3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3') == '0'\nassert solution('8 3') == '2'\nassert solution('100 4') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"2\"\nassert solution(\"10 3\") == \"1\"\nassert solution(\"100 3\") == \"3\"\nassert solution(\"1000 3\") == \"3\"\nassert solution(\"10000 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '2'\nassert solution('''8 3\nACACTACG\n3 7\n1 8''') == '0'\nassert solution('''8 4\nACACTACG\n3 7\n2 5\n1 2\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(solution.__doc__) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\\n0\\n3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"2\"\nassert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"3\"\nassert solution(\"10 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n\") == \"0\"\n",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"210\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        lines = stdin.splitlines()\n        N, K = map(int, lines[0].split())\n        prices = list(map(int, lines[1].split()))\n        min_sum = sum(prices[:K])\n        for i in range(K, N):\n            min_sum = min(min_sum + prices[i], prices[i] + min_sum)\n        return min_sum\n\nassert Solution().solution(\"5 3\") == \"210\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '210'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"210\"\nassert solution(\"10 20 30 50 70 80 90 100\") == \"300\"\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '210'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 2') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '210'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n50 100 80 120 80\\n') == '210'\nassert solution('2\\n3\\n60 100 80 120 80\\n') == '150'\n\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 4 5') == '4'\nassert solution('2 3 4') == '7'\nassert solution('2 4 5') == '7'\nassert solution('3 4 5') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\") == \"4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 4') == '4'\nassert solution('1 3 4') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '4'\nprint('All tests passed!')",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3 4\") == \"4\", \"Should be 4\"\nassert solution(\"1 2 3\") == \"1\", \"Should be 1\"\nassert solution(\"2 2 1\") == \"1\", \"Should be 1\"\nassert solution(\"5 4 3\") == \"7\", \"Should be 7\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == \"4\"\nassert solution('5 7 8 9') == \"15\"\nassert solution('10 11 12 13 14') == \"10\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,3,4]) == \"4\"\nassert solution([1,2,3]) == \"4\"\nassert solution([2,1,3]) == \"4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\nassert solution('3 10') == '10'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '10'\nassert solution('2 10') == '10'\nassert solution('10 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == 0, \"Should be 0\"\nassert solution(\"\") == 0, \"Should be 0\"\nassert solution(\"1 2\") == 10, \"Should be 10\"\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"2 4\") == \"10\"\nassert solution(\"5 4\") == \"10\"\nassert solution(\"4 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"0 10\") == \"10\"\nassert solution(\"8 7\") == \"10\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"\"\"2 3\n2 2\n\"\"\") == r\"\"\"10\n\"\"\", \"Error with sample input 1\"\nassert solution(r\"\"\"2 2\n3 4\n\"\"\") == r\"\"\"10\n\"\"\", \"Error with sample input 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '10'\nassert solution('5 1') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\\n3\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\", \"Test 1 failed\"\nassert solution(\"0 0\") == \"0\", \"Test 2 failed\"\nassert solution(\"0 1\") == \"1\", \"Test 3 failed\"\nassert solution(\"1 1 1\") == \"1\", \"Test 4 failed\"\nassert solution(\"1 2\") == \"1\", \"Test 5 failed\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '1'\nassert solution('3 4') == '1'\nassert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n') == '1'\nassert solution('10 10\\n') == '-1'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 1') == '4'\nassert solution('0 0') == '0'\nassert solution('1 1') == '1'\nassert solution('-1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 9') == '1'\nassert solution('0 0') == '0'\nassert solution('10 0') == '10'\nassert solution('10 10') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"100 2\") == \"1\"\nassert solution(\"6 5\") == \"2\"\nassert solution(\"100 0\") == \"1\"\nassert solution(\"3 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"win\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 9\") == \"bust\"\nassert solution(\"7 7 7\") == \"win\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"win\"\nassert solution(\"1 2 4\") == \"bust\"\nassert solution(\"1 2 5\") == \"win\"\nassert solution(\"1 2 6\") == \"bust\"\nassert solution(\"1 2 7\") == \"win\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('10 1 5') == 'bust'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('-1 -2 -3') == 'bust'\nassert solution('2 2 2') == 'win'\nassert solution('3 4 5') == 'win'",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 9') == \"win\"\nassert solution('9 8 7') == \"bust\"\nassert solution('5 6 5') == \"win\"\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'win', 'WRONG'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('8 9 10') == 'bust'\nassert solution('1 2 3') == 'win'\n\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 1\") == \"bust\"\nassert solution(\"5 7 9\") == \"win\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n6\n7\n8\n9\n10''') == '10'\n\nassert solution('''1\n1\n1\n1\n1''') == '1'\n\nassert solution('''1\n1\n2\n2\n3\n3''') == '1'\n\nassert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '10'\n\nassert solution('''5\n6\n7\n8\n9\n10''') == '10'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(3) == 6\nassert solution(12) == 12\nassert solution(16) == 12\nassert solution(1) == 1",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n') == '5\\n'\nassert solution('4\\n') == '4\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '10'\nassert solution('10') == '10'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"1\\n\", 'Just pass'\nassert solution(\"1\\n\") == \"1\\n\", 'Just pass'\n\n----Submissions----\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '5'\nassert solution('8') == '7'\nassert solution('10') == '7'\nassert solution('16') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('6') == '6'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '5'\nassert solution('5') == '6'\n\n-----\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '6'\nassert solution('1') == '1'\nassert solution('5') == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n') == '6'\nassert solution('10\\n') == '10'\nassert solution('1000\\n') == '1000'\nassert solution('1\\n') == '2'\nassert solution('0\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 1') == '2'\nassert solution('3 4') == '2'\nassert solution('4 3') == '1'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 2 3\") == \"2\"\n\n--Time Limit Exceeded--\n\"\"\"\n\nfrom math import ceil\n\nn, d = list(map(int, input().split()))\n\nn -= 1\n\nprint(ceil(d / (n - 1)) + 1)\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"5 2\") == \"2\"\nassert solution(\"6 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2\") == \"2\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 2\n''') == '2'\nassert solution('''5 1\n''') == '1'\nassert solution('''1 3\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"2\"\nassert solution(\"8 9\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 6\") == \"2\"\nassert solution(\"20 20\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 2\") == '2'\nassert solution(\"10 2\") == '1'\nassert solution(\"30 2\") == '1'\nassert solution(\"100 2\") == '1'\nassert solution(\"1 1\") == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20') == 'pon'\nassert solution('14') == 'pon'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'pon'\nassert solution('8') == 'bon'\nassert solution('16') == 'pon'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16') == 'pon'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == 'pon'\n\nassert solution('999') == 'bon'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"hon\"\nassert solution('2') == \"hon\"\nassert solution('4') == \"hon\"\nassert solution('5') == \"hon\"\nassert solution('6') == \"hon\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"hon\"\nassert solution(\"2\") == \"pon\"\nassert solution(\"3\") == \"bon\"\nassert solution(\"4\") == \"pon\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"1\") == \"hon\"\nassert solution(\"100\") == \"bon\"\nassert solution(\"1000\") == \"pon\"\nassert solution(\"4\") == \"hon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == 'pon'\nassert solution('4') == 'pon'\nassert solution('5') == 'bon'\nassert solution('6') == 'bon'\nassert solution('7') == 'hon'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('16') == 'pon'\nassert solution('12') == 'hon'\nassert solution('5') == 'bon'\nassert solution('11') == 'bon'\nassert solution('25') == 'bon'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"hon\"\nassert solution(\"18\") == \"bon\"\nassert solution(\"20\") == \"hon\"\nassert solution(\"24\") == \"bon\"\nassert solution(\"28\") == \"bon\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '11'\nassert solution('4') == '42'\nassert solution('5') == '52'\nassert solution('6') == '62'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"19\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '11'\nassert solution('4') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '11'\nassert solution('3 1 2') == '11'\nassert solution('3') == '11'\nassert solution('4') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 1 2') == '11'\nassert solution('4\\n1 1 3 2') == '13'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '11'\nassert solution('4') == '14'\nassert solution('5') == '21'\n\n\"\"\"\n\nn = int(input())\nd = list(map(int, input().split()))\n\nfor i in range(n):\n    for j in range(i+1, n):\n        d[i] += d[j]\n\nprint(d[0])\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3 1 2\\n') == '11'\nassert solution('3\\n1 2 3\\n') == '10'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '5'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"2\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1\n4\n3\n\"\"\") == \"4 3\"\nassert solution(\"\"\"\n2\n3\n3\n\"\"\") == \"3 3\"\nassert solution(\"\"\"\n5\n1\n2\n4\n3\n5\n4\n\"\"\") == \"5 5\"\nassert solution(\"\"\"\n2\n1\n2\n\"\"\") == \"2 1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n4\n3\n''') == '4 3 4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('1') == '3'\nassert solution('4') == '4'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1\\n3\\n4') == '4\\n3\\n4'\n\n------------------------------------------\n\n//TODO: Write 3 lines of code to test the correctness of solution:\nYou are given a sequence of length N: A_1, A_2,..., A_N.\nFor each integer i between 1 and N (inclusive), answer the following question:\n - Find the minimum value among the N-1 elements other than A_i in the sequence.\n\n-----Constraints-----\n - 2 \\leq N \\leq 200000\n - 1 \\leq A_i \\leq 200000\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nN\nA_1\n:\nA_N\n\n-----Output-----\nPrint N lines. The i-th line (1 \\leq i \\leq N) should contain the minimum value among the N-1 elements other than A_i in the sequence.\n\n-----Sample Input-----\n3\n1\n4\n3\n\n-----Sample Output-----\n1\n3\n1\n\n - The minimum value among the two elements other than A_1, that is, A_2 = 1 and A_3 = 3, is 1.\n - The minimum value among the two elements other than A_2, that is, A_1 = 1 and A_3 = 3, is 3.\n - The minimum value among the two elements other than A_3, that is, A_1 = 1 and A_2 = 4, is 1.\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '4\\n3\\n4'\nassert solution('2') == '3\\n4'\nassert solution('5') == '4\\n3\\n4'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\nassert solution('10\\n1\\n1\\n3\\n3\\n6\\n6\\n5\\n7\\n5\\n9\\n10\\n') == '6\\n3\\n5\\n7\\n10\\n'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n4\n3''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1\\n4\\n3') == '4\\n3\\n4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '4 3 4'\nassert solution('1') == '4 3 3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == '9'\nassert solution('1 2') == '3'\nassert solution('3 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '9'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"5 5\") == \"10\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"100 10\") == \"101\"\nassert solution(\"4 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"4 5\") == \"4\"\nassert solution(\"6 3\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '9'\nassert solution('10 10') == '10'\nassert solution('20 20') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"9\"\n\nfrom collections import deque",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"3 2\") == \"3\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '6'\nassert solution('5 2') == '5'\nassert solution('10 4') == '8'\nassert solution('20 3') == '12'\nassert solution('30 6') == '18'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"40\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '40'\nprint(solution(input))\n\"\"\"\n\nimport sys\nimport math\nimport itertools",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n-30 -10 10 20 50''') == \"40\"\nassert solution('''3 5\n-30 -10 10 20 50''') == \"70\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n-30 -10 10 20 50''') == '40'\n\"\"\"\n\nfrom typing import List\nimport sys",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n-30 -10 10 20 50') == '40'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"40\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"40\"\nassert solution(\"5 3\") == \"40\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '40'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 3') == '40'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([8, 13]) == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 13\") == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"10000\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == OUTPUT\n\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == str(2)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\nassert solution('10 9') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"1 100\") == \"100\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"10 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 5') == '4'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 13') == '2'\nassert solution('6 13') == '2'\nassert solution('4 13') == '2'\nassert solution('13 13') == '2'\nassert solution('11 13') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 4') == '3'\nassert solution('3 2') == '2'\nassert solution('11 9') == '3'\nassert solution('13 5') == '1'\nassert solution('10 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"10 10\") == \"3\"\nassert solution(\"10 1\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"10 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 10') == '1'\nassert solution('100 100') == '2'\nassert solution('100 100') == '1'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == '3'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"10 3\") == \"1\"\nassert solution(\"10 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 10') == '0'\nassert solution('2 3') == '3'\nassert solution('2 7') == '1'\nassert solution('12 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 4') == '3'\nassert solution('5 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 4\") == \"2\"\nassert solution(\"1 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 0 0 0') == '0'\nassert solution('100 0 0 0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 75 25 100') == '50'\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 75 25 100\n''') == '50'\nassert solution('''0 0 0 0\n''') == '0'\nassert solution('''0 0 0 100\n''') == '0'\nassert solution('''1 5 10 10\n''') == '40'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 75 25 100') == '50'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nprint(solution(input()))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 75 25 100') == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 75 25 100') == '50'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"15 18 15 20\") == \"45\"\nassert solution(\"10 20 20 20\") == \"10\"\n\nfrom collections import deque",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 5 10 5') == '15'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100') == '1'\nassert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('20') == '1'\nassert solution('50') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n101\n''') == '0'\nassert solution('''\n102\n''') == '1'\nassert solution('''\n103\n''') == '1'\nassert solution('''\n104\n''') == '1'\nassert solution('''\n105\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '1', \"Wrong\"\nassert solution('1') == '1', \"Wrong\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"20\") == \"1\"\nassert solution(\"25\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '1'\nassert solution(\"1000000\") == '999999'\n",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0\\n\") == \"1\\n\"\nassert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"2\\n\") == \"2\\n\"\nassert solution(\"3\\n\") == \"1\\n\"\nassert solution(\"4\\n\") == \"2\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == '1'\nassert solution('5 3') == '2'\nassert solution('7 7') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"2 4\") == \"1\"\n\n---\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n10\n10\n5\n7\n10\n4\n3\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 10\n3\n1\n5\n4\n9\n10\n8\n7\n''') == '1', f'''\\n{solution('''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"7 3\") == \"1\"\nassert solution(\"10 10\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3') == '1'\nassert solution('20 10') == '9'\nassert solution('10 20') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"100\") == \"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('111') == '111'\nassert solution('99') == '99'\nassert solution('11') == '11'\nassert solution('111') == '111'\nassert solution('111') == '111'\n\n\"\"\"\nimport math\n\nn = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('111') == '111'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"111\") == \"111\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('111') == '111'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('111') == '111'\nassert solution('1234567') == '1234567'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"123\"\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('111') == '111'\nassert solution('111') == '111'\nassert solution('111') == '111'\nassert solution('111') == '111'\nassert solution('111') == '111'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('111') == '111'\n\n'''\n\n'''\nSolution:\n\nUse recursion to solve this problem\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 4') == '10'\nassert solution('2 3 6') == '10'\nassert solution('1 1 1') == '1'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 5 3\") == \"7\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 2 3') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 6 3\n''') == '5'\nassert solution('''\n1 6 2\n''') == '7'\nassert solution('''\n1 2 3\n''') == '3'\nassert solution('''\n4 3 2\n''') == '7'\nassert solution('''\n6 5 4\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '5'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"-1 -6 -3\") == \"1\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 5 3') == '10'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 6 3\") == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('100') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '4'\nassert solution('10') == '3'\nassert solution('8') == '5'\nassert solution('12') == '7'\nassert solution('20') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\nprint(\"Congratulations! Your function is correct.\")\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('8') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\n\nprint(solution(\"10 9 10 10\"))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 1 1 1\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 10 10 10\") == \"Yes\"\nassert solution(\"10 20 30 40\") == \"No\"\nprint(solution())\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == 'No', 'Test 1 failed'\nassert solution('10 9 10 10') == 'Yes', 'Test 2 failed'\nassert solution('1 1 1 1') == 'No', 'Test 3 failed'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 2 3 4\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 9 10 10\n''') == 'No'\nassert solution('''\n10 9 10 10\n''') == 'Yes'\nassert solution('''\n10 7 8 5\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 5 8\") == \"No\"\nassert solution(\"3 3 5 8\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\nassert solution(\"20 5 10 10\") == \"No\"\nassert solution(\"20 5 10 10\") == \"Yes\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"1 9 10 10\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n10 2 5\\n6 3 4\") == \"5\"\nassert solution(\"6\\n20 2 20 4\\n30 3 20 5\") == \"37\"\nassert solution(\"10\\n6 2 4\\n20 5\\n3 20\\n100 20\\n3 30\\n100 40\\n5 60\\n8 80\\n20 100\\n15 100\") == \"191\"\n",
        "num_ids_2": 42,
        "num_ids_4": 93
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n10 2 5\\n6 3 4') == '5'\nassert solution('3\\n10 2 5\\n6 3 4') == '6'\nassert solution('3\\n10 2 5\\n6 3 4') == '6'\nassert solution('3\\n1 1 1\\n1 1 1') == '1'\nassert solution('3\\n1 1 1\\n1 1 1') == '1'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\nassert solution(\"6\") == \"10\"\nassert solution(\"7\") == \"10\"\nassert solution(\"8\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"3 1 2 3\") == \"7\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5'\nassert solution('10 2 5') == '15'\nassert solution('6 3 4') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '###'\nassert solution('4 5') == '###'\nassert solution('4 1') == '##.'\nassert solution('4 2') == '##.'\nassert solution('4 3') == '##.'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n#####\\n#####\\n#.##\\n') == '###\\n###\\n.##\\n'\nassert solution('6 4\\n##.##\\n#...#\\n.##.##\\n###.##\\n##...#\\n######\\n') == '#...#\\n.##.##\\n###.##\\n######\\n######\\n######\\n'\nassert solution('5 5\\n...#\\n.##.\\n.##.\\n#...\\n') == '...#\\n...#\\n.##.\\n.##.\\n...\\n'",
        "num_ids_2": 105,
        "num_ids_4": 156
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\\n#.#\") == \"###\"\nassert solution(\"4 4\\n##.#\") == \"###\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == '###'\nassert solution(\"3 4\") == '###'\nassert solution(\"1 1\") == '###'\nassert solution(\"5 5\") == '####'\nassert solution(\"2 2\") == '####'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\\n####\\n####\\n####\\n\") == \"###\\n###\\n###\\n\"\nassert solution(\"4 4\\n#...#\\n#...#\\n#...#\\n\") == \"###\\n###\\n###\\n\"\nassert solution(\"4 4\\n#.##.\\n#.##.\\n#.##.\\n\") == \"###\\n###\\n###\\n\"\n",
        "num_ids_2": 66,
        "num_ids_4": 105
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\n##.#\\n###\\n.###\\n#.##\") == \"###\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n...#''') == '###'\nassert solution('''5 5\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"###\\n###\\n.##\\n\", \"Test 1\"\nassert solution(\"6 6\") == \"####\\n##.\\n####\\n####\\n####\\n####\\n####\\n\", \"Test 2\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n####\\n##.#\\n###.') == '###'\nprint(solution('''5 4\n##.#\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n#.#\\n...\\n#.#\\n') == '###\\n###\\n.##\\n'\nassert solution('5 2\\n#.##\\n###.\\n#...\\n##...\\n') == '####\\n####\\n####\\n####\\n'\nassert solution('2 4\\n##.##\\n###.##\\n###.#\\n###.##\\n###.#\\n##.##\\n') == '#.##.\\n#.##.\\n#.##.\\n#.##.\\n'\nassert solution('2 4\\n##.##\\n###.#\\n###.##\\n###.##\\n###.##\\n##.##\\n') == '##.##\\n##.##\\n##.##\\n##.##\\n'\nassert solution('3 3\\n##.##\\n##.##\\n###.##\\n###.##\\n##.##\\n') == '##.##\\n##.##\\n##.##\\n##.##\\n'\n",
        "num_ids_2": 74,
        "num_ids_4": 199
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '3.14159265358979323846'\nassert solution('3') == '12.566370614359172'\n",
        "num_ids_2": 37,
        "num_ids_4": 54
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('4') == '67.9130434782608696'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '6.28318530717958623200'\nprint(solution('1\\n'), end='')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '6.28318530717958623200'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"12.566370614359172\"\nassert solution(\"10\") == \"32.95846153846154\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '6.28318530717958623200'\nassert solution('1') == '6.28318530717958623200'\nassert solution('1.1') == '6.28'\nassert solution('1.0') == '6.28'\nassert solution('0') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('1') == '6.28'\nassert solution('1') == '6.28'\nassert solution('1') == '6.28'\nassert solution('1') == '6.28'\n'''",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '7.07106781186547524400'\nassert solution('10') == '0.00817013870967742'\n",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '5.473684210526316'\nassert solution('1') == '6.28318530717958623200'\nassert solution('0') == '0.0'\n",
        "num_ids_2": 35,
        "num_ids_4": 47
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"9.8284375\"\nassert solution(\"3\") == \"2.94339622641509434\"\nassert solution(\"10\") == \"3.14159265358979323846\"\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASAA') == 'Yes'\nassert solution('ASAAB') == 'No'\nassert solution('AABA') == 'No'\nassert solution('AABABA') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AASSA') == 'Yes'\nassert solution('ASAA') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ADAF') == 'No'\nassert solution('ASDG') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AASSA') == 'No'\nassert solution('AAASSA') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ASSA') == \"Yes\"\nassert solution('A') == \"Yes\"\nassert solution('A') == \"No\"\nassert solution('B') == \"No\"\nassert solution('C') == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('A') == 'No'\nassert solution('a') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('HELLO') == 'No'\nassert solution('NOMA') == 'No'\n\n'''",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ASSA\") == \"Yes\"\nassert solution(\"ASSAASSA\") == \"Yes\"\nassert solution(\"ASS\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n''') == '1'\nassert solution('''-1 -1\n''') == '-2'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-43 50\") == \"-43\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1', \"Wrong\"\nassert solution('2') == '2', \"Wrong\"\nassert solution('-1') == '-1', \"Wrong\"\nassert solution('-2') == '-2', \"Wrong\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 -5') == '8'\nassert solution('4 1') == '-1'\nassert solution('-3 -5') == '-10'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '4'\nassert solution('4 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\nassert solution('10 5') == '15'\nassert solution('-13 -3') == '-10'\nassert solution('-10 5') == '-15'\nassert solution('13 -3') == '-10'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1\\n2\\n2'\nassert solution('1\\n') == '1\\n1\\n2'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('-5 -3') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13 3') == '10'\nassert solution('-13 3') == '-10'\nassert solution('-13 -3') == '-16'\nassert solution('-13 -3 -3') == '-27'\nassert solution('13 -3') == '-10'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"-13 3\") == \"-10\"\nassert solution(\"-17 3\") == \"-17\"\nassert solution(\"-15 3\") == \"-15\"\nassert solution(\"-19 3\") == \"-19\"\nassert solution(\"-11 3\") == \"-11\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('8') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4, 6, 5, 6, 8]) == \"3\"\nassert solution([4, 6, 6, 6, 8]) == \"3\"\nassert solution([4, 6, 6, 8, 8]) == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input) == '3'\nassert solution(input) == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('5\\n3 5 2 5 3\\n') == '4'\nassert solution('6\\n10 10 10 8 5 3\\n') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 55
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2,1]) == \"1\"\nassert solution([2,1,1]) == \"2\"\nassert solution([4,7,6,4,2,3,4,5,3,2,2,1,4,4,6,5]) == \"2\"\nassert solution([2,1,2,2,3,4,5,1,2,1,2,3,4,2,3,4]) == \"3\"\nassert solution([3,2,3,4,2,1,2,2,3,4,5,1,2,3,4,2]) == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 106
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n5 3\n4 2\n3 2\n''') == '3'\nassert solution('''3\n5\n4 3\n3 2\n''') == '2'\nassert solution('''4\n5\n5 3\n4 2\n3 2\n''') == '1'\nassert solution('''4\n5\n3 3\n3 2\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '3'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n6 5 6 8''') == '3'\nassert solution('''5\n4 4 5 6''') == '4'\nassert solution('''6\n5 6 7''') == '2'\n''')",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4,6,5,6,8]) == '3'\nassert solution([6,5,6,8]) == '2'\nassert solution([4,6,5,6,8,10]) == '3'\nassert solution([6,5,6,7,8]) == '2'\nassert solution([4,6,5,6,7,8]) == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 72
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"1 2 1 2 1\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 4 3 2\"\nassert solution(input()) == \"1 1 1 1\"\nassert solution(input()) == \"1 1 1 1\"\nassert solution(input()) == \"1 1 1 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution(stdin='''1\n1 2 3\n3 4 5''') == \"3\"\nassert solution(stdin='''4\n1 1 1 1\n1 2 2 2''') == \"2\"\nassert solution(stdin='''5\n1 1 1 1 1\n1 2 2 2 1''') == \"4\"\nassert solution(stdin='''6\n1 1 1 1 1 1\n1 2 2 2 2 1''') == \"5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('7') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"5\"\nassert solution(\"15\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"1 1 1 1\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4\n3\n2\n1\n0\n''') == '1'\nassert solution('''3\n2\n1\n0\n''') == '2'\nassert solution('''5\n5\n5\n5\n4\n4\n''') == '5'\nassert solution('''1\n4\n7\n4\n3\n''') == '4'\nassert solution('''5\n2\n2\n2\n4\n2\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\\\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\\\n3\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\\\n3\n3\n3\n3\n3\n3\n3\n3\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '2'\nassert solution('7') == '1'\nassert solution('21') == '7'\nassert solution('28') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n10\n1\n8\n11\n16\n22\n26\n29\n30\n33\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n6\n7\n21\n28\n999999999\n999999984''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n21\n28\n9999999999\n999999984\n''') == '2'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n3\n1\n7\n4\n333333333\n333333328\n''') == '1'\nassert solution('''\n3\n1\n7\n4\n333333333\n333333328\n''') == '7'\nassert solution('''\n3\n1\n7\n4\n333333333\n333333328\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n6\n7\n21\n28''') == \"1\"\n\nassert solution('''4\n10\n20\n90\n200''') == \"4\"\n\nassert solution('''6\n10\n20\n90\n200\n99999999\n999999984''') == \"2\"\n\nassert solution('''6\n3\n6\n7\n21\n28''') == \"1\"\n\nassert solution('''4\n10\n20\n90\n200''') == \"4\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n1\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n4\n2\n5\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n1\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n5\n2\n5\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"512 4\\n\") == \"50\"\nassert solution(\"1000000000 9\\n\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10000000000') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''512 4''') == '50'\nassert solution('''1000000000 9''') == '1'\nassert solution('''1000000000 1000000000''') == '1'\nassert solution('''1000000000 999999999''') == '1'\nassert solution('''1000000000 100000000''') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000000000 9') == '1'\nassert solution('2') == '2'\nassert solution('20') == '19'\nassert solution('10000010') == '999'\nassert solution('20 20') == '19'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('10000000001 8') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('1234') == '1234'\nassert solution('123456789') == '123456789'\nassert solution('54321') == '54321'\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000000000 9\") == \"1\"\nassert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n7\n3 7 5 1 5\n''') == '7'\nassert solution('''\n3\n5 1 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n3\n5 1 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\\n5 2 4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '2'\nassert solution('5') == '1 2 3 4 5'\nassert solution('3') == '2 4 5'\nassert solution('7') == '7'\nassert solution('5') == '4 5'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n4 3 5 1 2 2 1\n''') == '5 2 1 2 2 3'\nassert solution('''5\n3 7 5 1 5\n''') == '2 5 1 5 7'\nassert solution('''3\n5 1 4\n''') == '2 5 1 4 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\n4 3 5 1 2 2 1\n''') == '5 2 1 1 2 3'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2 5 5 5 7'\nassert solution('''\n3\n5 1 4\n''') == '2 4 4 4 5'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7 1 2 2 2 2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '5 2 1 2 2 2 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\\n4 3 5 1 2 2 1\\n\") == \"2\\n4 5 1 2 2 3\"\nassert solution(\n    \"5\\n3 7 5 1 5\\n\") == \"2\\n5 5 1 2 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n4 3 5 1 2 2 1') == '5\\n2 1 1 2 3'\nassert solution('5\\n3 7 5 1 5') == '2\\n5 5'\nassert solution('3\\n5 1 4') == '2\\n4 5'\nassert solution('7\\n2 2 3 2 1 2 2') == '7\\n1 2 2 2 2 3 2'\n",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n7\n4 3 5 1 2 2 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n5\n3 7 5 1 5\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n3\n5 1 4\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n7\n2 2 3 2 1 2 2\n\"\"\") == \"7\"\nassert solution(\n\"\"\"\n7\n4 3 5 1 2 2 1\n\"\"\") == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution(\"4 21\\n10 8\\n7 4\\n3 1\\n5 4\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\") == \"1\"\nassert solution(\"2 5\\n4 2\\n2 3\\n3 2\\n1 2\\n2 2\") == \"1\"\n",
        "num_ids_2": 35,
        "num_ids_4": 93
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '2'\nassert solution('5 16') == '-1'\nassert solution('4 16') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 21') == '2'\nassert solution('4 16') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4''') == '2'\nassert solution('''4 16\n10 8\n7 4\n3 1\n5 4''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 20\n10 8\n7 4\n3 1\n5 4\n''') == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 3') == 'tleel'\n\nassert solution('6 1 1') == 'qwerty'\n\nassert solution('6 6 1') == 'vvvvv'\n\nassert solution('5 2 2') == 'abcde'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n7 5 3\\n6 1 1\\n6 6 1\") == \"tleelte\"\nassert solution(\"5\\n2 2 2 2 2\") == \"qwerty\"\nassert solution(\"5\\n2 2 2 2 2 2\") == \"abcde\"\n",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'tleelte'\nassert solution('2\\n6 1 1\\n6 6 1\\n5 2 2') == 'qwerty'\nassert solution('3\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'vvvvvv'\nassert solution('4\\n7 5 3\\n6 1 1\\n6 6 1\\n5 2 2') == 'abcde'",
        "num_ids_2": 59,
        "num_ids_4": 122
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'tleelte'\nassert solution('7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'tleelte'\nassert solution('7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\\n') == 'tleelte'\n\n\n\n\nInput:\n\n2\n8 12 3\n5 1 1\n\nOutput:\n\nabcde\nabc\n\nInput:\n\n3\n8 12 3\n6 1 1\n5 2 2\n\nOutput:\n\nabcde\nabc\n",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"4 5 3\\n\"\n    \"6 1 1\\n\"\n    \"6 6 1\\n\"\n    \"5 2 2\\n\"\n) == \"tleelte\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == ''\nassert solution('2') == ''\nassert solution('3') == ''\nassert solution('4') == 'tleelte'\nassert solution('5') == 'qwerty'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"tleelte\"\nprint(solution(input))\n\"\"\"\n\nimport itertools",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\n\nassert solution('''\n4\n6 7 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"qwerty\"\n\nassert solution('''\n5\n7 5 2\n6 1 1\n6 6 1\n5 2 2\n''') == \"vvvvv\"\n\nassert solution('''\n4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"abcde\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"tleelte\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte'\nassert solution('''\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'qwerty'\nassert solution('''\n8 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'vvvvvv'\nassert solution('''\n9 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'abcde'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"20 12 6\"\n) == \"12\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3 2\") == \"2\"\nassert solution(\"10 4 10\") == \"15\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 12 6') == '12'\nassert solution
        "num_ids_2": 1796,
        "num_ids_4": 1796
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"10 12 4\") == \"10\"\nassert solution(\"100 10 4\") == \"110\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"12 10 3\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 12 6\") == \"12\"\nassert solution(\"10 11 1\") == \"1\"\nassert solution(\"4 5 3\") == \"12\"\nassert solution(\"8 5 1\") == \"1\"\nassert solution(\"5 5 5 5\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 12 2\") == \"24\"\nassert solution(\"20 2 8\") == \"26\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 12 6') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''20 12 6\n\n''') == '12'\nassert solution('''40 20 7\n\n''') == '20'\nassert solution('''100 40 10\n\n''') == '10'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"30 60 9\") == \"99\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('20') == '10'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"10\") == \"3\"\nassert solution(\"100\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '2'\n\n\"\"\"\n\nN = int(input())\nfor i in range(N):\n    print(i)\n    \n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n') == '3'\nassert solution('6') == '2'\nassert solution('10') == '3'\nassert solution('50') == '4'\nassert solution('500') == '4'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '2'\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 1') == '1'\nassert solution('0 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 3\n2\n''') == '3'\nassert solution('''2 3\n3\n''') == '5'\nassert solution('''100 10\n100\n''') == '100'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 0\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 3\n\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"3 5\") == \"6\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"-1 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '3'\nassert solution('5 2') == '3'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"100 2\") == \"101\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '3'\nassert solution('1 5') == '5'\nassert solution('0 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '2 4'\nassert solution('3 4') == '1 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"4 5\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 1') == '1'\nassert solution('1 3') == '3'\nassert solution('4 5') == '3'\nassert solution('1 2 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '16'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 4\") == \"5\"\nassert solution(\"4 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == \"6\"\nassert solution(\"5 1\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 12\n\n''') == '16'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"4 3\") == \"5 3\"\nassert solution(\"7 9\") == \"8 - 7\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '7'\nassert solution('6 4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n2\n3 1''') == '4 5'\nassert solution('''5 2\n5\n2 1''') == '4 5'\nassert solution('''5 2\n5\n2 1''') == '3 4'\nassert solution('''5 2\n5\n2 1''') == '3 4'\nassert solution('''2 4\n4\n2 1''') == '3 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"chokudai\") == \"Yes\", \"Expected: Yes\"\nassert solution(\"chokudaiz\") == \"No\", \"Expected: No\"\n\"\"\"\n\nimport re",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('chokudai') == 'Yes', 'Expected: Yes'\nassert solution('chokudai') == 'No', 'Expected: No'\n\n--------------------------------------------------------------------------------\n\n6. Counting Bits\n\nDifficulty: Easy\n\nProblem Title: Counting Bits\n\nProblem Statement:\nA number can be represented in binary format by replacing each of its digits with '0' or '1' and concatenating the binary number.\nFor example, the number 9 can be converted to its binary representation by inserting a zero before the first 1 and then inserting another zero after the first 1.\n\nSo, we say that a number is in the 'binary representation' if its binary representation has no leading zero.\n\nExamples are the numbers 2, 3, 5 and 7.\n\nGiven an integer N, your task is to count the total number of integers in the 'binary representation' of all integers between 1 and N (both included).\n\nInput Format:\nA single integer N\n\nConstraints:\n1 <= N <= 100\n\nOutput Format:\nTotal number of integers in the binary representation\n\nSample Input 1:\n11\nSample Output 1:\n4\n\nSample Input 2:\n17\nSample Output 2:\n5\n\n--------------------------------------------------------------------------------\n\n7. Roman to Integer\n\nDifficulty: Easy\n\nProblem Title: Roman to Integer\n\nProblem Statement:\nGiven a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.\n\nInput Format:\nA single roman numeral\n\nConstraints:\n1 <= S <= 3999\n\nOutput Format:\nThe integer representation of the roman numeral\n\nSample Input 1:\nCD\nSample Output 1:\n600\n\nSample Input 2:\nIX\nSample Output 2:\n9\n\nSample Input 3:\nMCMXCIV\nSample Output 3:\n1994\n\n--------------------------------------------------------------------------------\n\n8. Rotate Matrix\n\nDifficulty: Easy\n\nProblem Title: Rotate Matrix\n\nProblem Statement:\nYou are given an n x n 2D matrix representing an image.\nRotate the image by 90 degrees (clockwise).\n\nNote:\nYou have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.\n\nExample 1:\nGiven input matrix =\n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\nrotate the input matrix in-place such that it becomes:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n\nExample 2:\nGiven input matrix =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n],\n\nrotate the input matrix in-place such that it becomes:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n\n----SOLUTION----",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"chokudai1\") == \"No\"\nassert solution(\"chokudaiz1\") == \"No\"\nassert solution(\"chokudai2\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Yes\"\n\n\"\"\"\n\ns = input()\nt = input()\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n\"\"\"\n\nfrom itertools import count\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '9'\nassert solution('5 10') == '9'\nassert solution('5 15') == 'IMPOSSIBLE'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 16') == '9'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"3 4\") == \"IMPOSSIBLE\"\nassert solution(\"2 4\") == \"IMPOSSIBLE\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('3 4') == '9'\nassert solution('10 11') == 'IMPOSSIBLE'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"5 4\") == \"10\"\nassert solution(\"1 6\") == \"IMPOSSIBLE\"",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3\\n') == 'IMPOSSIBLE'\nassert solution('2 3\\n') == '9'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('1 1') == 'IMPOSSIBLE'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 16\") == \"9\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(12) == \"Yes\"\nassert solution(22) == \"No\"\nassert solution(40) == \"Yes\"\n\n--------------------------------------------------------------------------------------------------------------------------------------\n\n------Method 2: Using numpy arrays and matrix operations------\n\nWe can use the numpy arrays and matrix operations to solve this problem.\nWe will use numpy arrays to represent 3-digit numbers and matrix operations to represent numpy arrays.\n\nnumpy.array([[0, 1, 2, 3],\n    [4, 5, 6, 7],\n    [8, 9, 10, 11]])\n\nnumpy.array([[-1, -2, -3, -4],\n    [-5, -6, -7, -8],\n    [-9, -10, -11, -12]])\n\nnumpy.array([[0, 4, 8, 12],\n    [1, 5, 9, 13],\n    [2, 6, 10, 14],\n    [3, 7, 11, 15]])\n\nnumpy.array([[-1, -2, -3, -4],\n    [-5, -6, -7, -8],\n    [-9, -10, -11, -12],\n    [-13, -14, -15, -16]])\n\nIn our code we want to use numpy to implement the array and matrix operations.\nWe are taking 2-D arrays as input, and later using the matrix operations.\n\nWe have 3 2-D arrays.\nThe first 2-D array will contain the matrix of the input given by user.\nThe second 2-D array will contain the transpose of the first 2-D array.\nThe third 2-D array will contain the inverse of the second 2-D array.\n\n---------Definition---------\nThe array consists of the integer numbers between 1 and 15.\nThe transpose of this array is the transpose of the original array.\nThe inverse of the array is the transpose of the inverse of the original array.\n\n--Solution--",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"13\") == \"No\"\nassert solution(\"14\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('117') == \"Yes\"\nassert solution('101') == \"No\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('117') == \"Yes\"\nassert solution('37') == \"No\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('117') == 'Yes'\nassert solution('10') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"9\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('117') == 'Yes'\nassert solution('35') == 'No'\nassert solution('0') == 'No'\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('117') == 'Yes'\nassert solution('1') == 'No'\nassert solution('0') == 'No'\nassert solution('11') == 'No'\nassert solution('9876543210') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 'Yes'\nassert solution('31') == 'No'\nassert solution('73') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == 'Yes'\nassert solution('10') == 'No'\nassert solution('123') == 'No'\nassert solution('11') == 'No'\nassert solution('90') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"12\") == \"Yes\"\nassert solution(\"12345\") == \"No\"\nassert solution(\"1234\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"111\") == \"Yes\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"1235\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\nassert solution('14') == 'No'\nassert solution('9999') == 'No'\nassert solution('4') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('123456') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('1234567890') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('13') == \"No\"\nassert solution('123') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"1 1 0 0\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '-1 1 -1 0'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 -1\") == \"-1 0 1 -1\"\nassert solution(\"0 0 0 -1\") == \"-1 0 -1 0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 -1') == '-1 -1 1 0'\nassert solution('0 0 1 0') == '-1 0 1 0'\nassert solution('0 0 -1 0') == '-1 0 -1 0'\nassert solution('0 1 0 0') == '-1 0 1 0'\n",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 -1\") == \"-1 1 -1 -1\"\nassert solution(\"0 0 1 0\") == \"0 0 1 0\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('1 0 0 1') == '-1 1 -1 0'\nassert solution('0 1 0 1') == '-1 1 -1 0'\nassert solution('1 1 0 1') == '-1 1 -1 0'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0 0 0 1\n\n''') == '-1 1 -1 0', 'Wrong!'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nprint(solution(\"0 0 0 1\"))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1 1'\nassert solution('1 1') == '1 1'\nassert solution('1 1') == '1 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''red blue\n3 4\nred''') == '2 4'\nassert solution('''red blue\n3 4\nblue''') == '1 3'\nassert solution('''blue red\n2 5\nblue''') == '2 6'\nassert solution('''blue red\n2 5\nred''') == '2 6'\nassert solution('''red blue\n3 4\nred''') == '1 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue red\") == \"2 4\"\nassert solution(\"red blue red red\") == \"2 4\"\nassert solution(\"red blue red red red\") == \"2 4\"\nassert solution(\"red red red red red red red\") == \"2 4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''red blue\n3 4\nred\n''') == '2 4', 'First Test'\nassert solution('''red blue\n4 3\nred\n''') == '2 4', 'Second Test'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"red blue\") == \"2 4\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('red blue') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('red blue') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"red blue\") == \"2 4\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'Yes'\nassert solution('5') == 'No'\nassert solution('4') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"3\\nabcd\") == \"No\"\nassert solution(\"4\\nabc\") == \"Yes\"\nassert solution(\"1\\n\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'Yes'\nassert solution('abcabc') == 'Yes'\nassert solution('2') == 'No'\nassert solution('0') == 'No'\nassert solution('3') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\nabcabc\") == \"Yes\"\nassert solution(\"5\\nabc\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nabcabc\n''') == 'Yes'\nassert solution('''2\nabc\n''') == 'No'\nassert solution('''1\n''') == 'Yes'\nassert solution('''3\nabc\nabc\n''') == 'No'\nassert solution('''4\nabcabc\nabc\nabc\n''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 2 1') == '2.000000 1'\nassert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 2 5 2') == '2.000000 1'\nassert solution('1 2 2 2') == '1.000000 2'\nassert solution('1 1 2 1') == '1.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 3 1 1') == '1.000000 0'\nassert solution('2 4 1 2') == '2.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '3.000000 0'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('2 2 1 2') == '2.000000 1'\nassert solution('2 4 1 2') == '3.000000 1'\nassert solution('2 3 1 2') == '2.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 1 2\") == \"3.000000 0\"\nassert solution(\"2 3 1 2\") == \"3.000000 1\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nP Y Y W\nY''') == 'Four'\nassert solution('''2\nP Y Y\nY''') == 'Three'\nassert solution('''5\nP Y Y G\nY''') == 'Four'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"Four\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nG W Y P Y W') == 'Four'\n\n'''",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"Four\"\nassert solution(\"1\") == \"Three\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\nG W Y P Y W\n''') == 'Four'\nassert solution('''\n4\nG W Y P Y\n''') == 'Three'\nassert solution('''\n2\nG W\n''') == 'Two'\nassert solution('''\n6\nG W Y P Y W\n''') == 'Three'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Four'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"Three\"\nassert solution(\"4\") == \"Four\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nG W Y P Y\n''') == 'Four'\nassert solution('''5\nG W Y P\n''') == 'Three'\nassert solution('''6\nP Y G Y\n''') == 'Three'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('4\\nP G Y P Y') == 'Three'\nassert solution('2\\nP G Y P') == 'Two'\nassert solution('1\\nP') == 'One'",
        "num_ids_2": 35,
        "num_ids_4": 64
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Four\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''5 3 3\n1 2 4 2 3\n''') == '2'\nassert solution('''5 5 6\n1 2 6 10 3\n''') == '2'\n\n'''\n2. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043a\u0430\u043a\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0447\u0430\u0449\u0435 \u0432\u0441\u0435\u0433\u043e.\n'''",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == '6'\nassert solution(input_string2) == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 6\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\nassert solution(input()) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 2') == '6'\nassert solution('5 3 3') == '2'\nassert solution('5 5 6') == '2'\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3 2\") == \"6\"\nassert solution(\"5 3 3\") == \"2\"\nassert solution(\"5 5 6\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n4\n1 3 2 4\n1 3 2 4\n''') == '0'\nassert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n5 6 2 8 4\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n3\n1 3 2\n1 3 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n8 2 6 2\\n4 5 4 1 3\\n') == '7'\nassert solution('3\\n3 2 3\\n4 1 2\\n') == '0'\nassert solution('10\\n6 5 2 1\\n5 9 9 7\\n') == '7'\n",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '7'\nassert solution('4') == '0'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 8 2 6 2') == '7'\nassert solution('5\\n4 8 2 6 2') == '7'\nassert solution('5\\n4 8 2 6 2') == '7'\nassert solution('5\\n4 8 2 6 2') == '7'\nassert solution('5\\n1 3 2 4') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '7'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"7\"\n\nassert solution([4, 8, 2, 6, 2]) == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == '7'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 1 3 5 9'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\n\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 1 3 5 9'\n\nstdin = \"\"\"\n20\n10 10 100 1 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9 9",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n1 2\\n\") == \"1 1\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 4 5 10\n''') == '1 1 3 5 9'\nassert solution('''\n10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\n''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 4 5 10\") == \"1 1 3 5 9\"\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506056 1000000000\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_stdin()) == '1 1 3 5 9'\nassert solution(input_stdin()) == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1 1 3 5 9'\nassert solution(input()) == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1 1 3 5 9'\nassert solution('10') == '9999 9 50605065 1 5 89 5 999999999 60506056 1000000000'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input) == '1'\nassert solution(input_data) == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\n\n'''\n\nfrom collections import defaultdict\nfrom typing import List\nfrom collections import deque\nimport sys\n\n\nclass Graph:\n    def __init__(self, vertices):\n        self.graph = defaultdict(list)\n        self.V = vertices\n\n    def addEdge(self, u, v):\n        self.graph[u].append(v)\n\n    def printGraph(self):\n        print(self.graph)\n\n    def isCyclic(self):\n        visited =[False]*self.V\n        recStack = deque()\n        recStack.append(0)\n\n        while(len(recStack)>0):\n            i = recStack.popleft()\n            if visited[i] == True:\n                return True\n            visited[i] = True\n            for j in self.graph[i]:\n                if visited[j]==False:\n                    recStack.append(j)\n        return False\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution_trio(\"\"\"\n4 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == \"1\"\nassert solution_trio(\"\"\"\n5 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == \"2\"\nassert solution_trio(\"\"\"\n5 5\n1 2\n3 4\n5 4\n3 5\n\"\"\") == \"1\"\nassert solution_trio(\"\"\"\n5 4\n1 2\n3 4\n5 4\n3 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution([7, 10, 16]) == \"2\"\nassert solution([5, 11, 9, 15]) == \"1\"\nassert solution([3, 13, 4, 3]) == \"2\"\nassert solution([14, 3, 4, 3]) == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 4\n1 2\n3 4\n5 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n5 4\n1 2\n3 4\n5 4\n3 5\n\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n6 7\n1 4\n2 5\n3 4\n4 5\n4 6\n5 6\n5 7\n\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n4 4\n1 2\n3 4\n5 4\n3 5\n\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n10 20\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n\n\"\"\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\nassert solution('''\n5\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''\n5\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''\n3\n2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\nassert solution('''5\n1 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == \"4\"\nassert solution('''3\n1 1 2\n2 3\n1 3\n''') == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3') == '4'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5') == '0'\n",
        "num_ids_2": 50,
        "num_ids_4": 83
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3') == '4'\nassert solution('5\\n1 0 0 0 2\\n1 2\\n2 3') == '0'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n\") == \"1\"\nassert solution(\"5\\n1 0 0 0 2\\n1 2\\n2 3\\n3 4\\n4 5\\n\") == \"4\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2') == '4'\nassert solution('5\\n1 1 2\\n2 3\\n1 3') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n\"\"\") == \"4\"\nassert solution(\"\"\"3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '0'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\", \"The first example\"\nassert solution(\"5\") == \"1\", \"The second example\"\nassert solution(\"3\") == \"0\", \"The third example\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('5\\n1 0 0 1 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('5\\n1 0 0 1 2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '0'",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\naz\nbf''') == 'bc', '2'\n\nassert solution('''5\nafogk\nasdji''') == 'alvuw', '5'\n\nassert solution('''6\nnijfvj\ntvqhwp''') == 'qoztvz', '6'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nasdji\ntvqhwp\n''') == 'alvuw'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\naz\\nbf\") == \"bc\"\nassert solution(\"5\\nafogk\\nasdji\") == \"alvuw\"\nassert solution(\"6\\nnijfvj\\ntvqhwp\") == \"qoztvz\"\n",
        "num_ids_2": 37,
        "num_ids_4": 62
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\naz\\nbf') == 'bc'\nassert solution('5\\nafogk\\nasdji') == 'alvuw'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\nasdf\nqwert\nasdf\n''') == 'asdf'\n\nassert solution('''\n2\nzqyw\nzqyw\n''') == 'zqyw'\n\nassert solution('''\n5\ntsgszrpv\nqywvfsu\nqywvfsu\nqywvfsu\nqywvfsu\n''') == 'tsgszrpv'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'a'\nassert solution('2') == 'b'\nassert solution('5') == 'c'\nassert solution('6') == 'd'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'bc', 'Wrong answer'\nassert solution('5') == 'def', 'Wrong answer'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'bf'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\naz\\nbf\") == \"bc\"\nassert solution(\"5\\nafogk\\nasdji\") == \"alvuw\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2\naz\nbf\n\"\"\") == \"bc\"\nassert solution(\"\"\"\n5\nafogk\nasdji\n\"\"\") == \"alvuw\"\nassert solution(\"\"\"\n6\nnijfvj\ntvqhwp\n\"\"\") == \"qoztvz\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n5 4\n15 13 15 15 12\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n') == 'YES\\n1 2 5\\n', \"ERROR\"\nassert solution('5 4\\n') == 'NO\\n', \"ERROR\"\nassert solution('4 4\\n') == 'YES\\n1 2 3 4\\n', \"ERROR\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3\\n15 13 15 15 12') == 'YES'\nassert solution('5 4\\n20 10 40 30') == 'NO'\nassert solution('4 4\\n20 10 40 30') == 'YES'\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('4 4') == 'YES'\n\n\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n15 13 15 15 12\n\n''') == \"YES\"\nassert solution('''5 4\n20 10 40 30\n\n''') == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 1 3 6 8 2 9 0 10\n\"\"\") == \"\"\"YES\n1 0 0 0 0 1 0 1 0 \n\"\"\", \"is the sequence of increasing and decreasing length, which can be printed in two different ways.\"\n\nassert solution(\"\"\"\n1\n\"\"\") == \"\"\"NO\n\"\"\", \"is an empty sequence.\"\n\nassert solution(\"\"\"\n5\n\"\"\") == \"\"\"NO\n\"\"\", \"is a sequence consisting of one element.\"\n\nassert solution(\"\"\"\n10\n0 1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"\"\"YES\n1 1 1 1 1 1 0 0 0 0 \n\"\"\", \"is the sequence of increasing and decreasing length, which can be printed in two different ways.\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\n\nassert solution() == \"NO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 4 0 2\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"5 6 7 8 9 0 10\") == \"YES\"\n\nstdin = \"\"\"7\n2 3 4 0 2 1 5 6\n\n\"\"\"\n\nprint(solution(stdin))\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1 3 6 8 2 9 0 10') == 'YES'\nassert solution('1 2 3 4 5 6 7 8 9 10') == 'NO'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 1 3 6 8 2 9 0 10\") == \"YES\"\nassert solution(\"5 1 2 4 0 2\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1 3 6 8 2 9 0 10\n''') == 'NO'\nassert solution('''\n5\n1 2 4 0 2\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"NO\"\n\nassert solution(r\"\"\"\n6\n1 2 4 0 2\n\"\"\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"9\"\n    \"5 1 3 6 8 2 9 0 10\"\n) == \"YES\"\nassert solution(\n    \"5\"\n    \"1 2 4 0 2\"\n) == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution('1\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '0'\nassert solution('1\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '1134'\nassert solution('1\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '0'\n",
        "num_ids_2": 46,
        "num_ids_4": 123
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == \"1134\"\nassert solution('''\n5\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n''') == \"1134\"\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\\n0\\n1134\\n0\\n\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5 1 3 2\n100 101 101 102\n1234 1 100 100\n1000000000 1 1 1000000000\n\n''') == '3'\nassert solution('''\n5\n5 2 1 3\n100 101 100 102\n1234 1 100 100\n1000000000 1 1 1000000000\n\n''') == '0'\nassert solution('''\n5\n5 1 3 2\n100 101 100 102\n1234 1 100 100\n1000000001 1 1 1000000000\n\n''') == '1134'\nassert solution('''\n5\n5 1 3 2\n100 101 100 102\n1000000001 1 1 1000000000\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '3'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '0'\nassert solution('''4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000''') == '1134'\nassert solution('''4\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\\n0\\n1134\\n0\"\nassert solution(\"2\\n3 2 1 5\\n4 1 1 1\") == \"0\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"3\"\nassert solution(\"2\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"0\"\nassert solution(\"3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\") == \"1134\"\n",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n5\n4 1 1 1\n''') == '0'\nassert solution('''\n3\n3 5 3\n3 8 9\n''') == '1134'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n\n''') == '1'\nassert solution('''\n4\n\n''') == '3'\nassert solution('''\n8\n\n''') == '1260'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n2\n\n\"\"\") == \"1\"\nassert solution(\n    \"\"\"\n4\n\n\"\"\") == \"3\"\nassert solution(\n    \"\"\"\n8\n\n\"\"\") == \"1260\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'def'\nassert solution(input_data=\"1 1\\n\", output_data=\"def\\n\")\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"\", \"You should return something\"\nassert solution(\"1 1\") == \"\", \"You should return something\"\nassert solution(\"2 2\") == \"\", \"You should return something\"\n\nprint(solution(input()))",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\\nab\") == \"ab\", \"First\"\nassert solution(\"1\\nab\") == \"\", \"Second\"\nassert solution(\"1\\nab\\n\") == \"\", \"Third\"",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == ''\nassert solution('1 2') == '2'\nassert solution('2 3') == '2'\nassert solution('3 4') == '3'\nassert solution('4 5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15 3') == 'ccbbabaccbc'\nassert solution('15 9') == 'cccccc'\nassert solution('1 1') == ''\n",
        "num_ids_2": 28,
        "num_ids_4": 37
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15 3') == 'ccbbabaccbc'\nassert solution('15 9') == 'cccccc'\nassert solution('1 1') == ''\n\n\n------SOLUTION------\n\nstdin = input().split(\" \")\nk = int(stdin[1])\ns = stdin[0]\n\nalphabet_map = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0, 'h': 0, 'i': 0, 'j': 0, 'k': 0, 'l': 0,'m': 0, 'n': 0, 'o': 0, 'p': 0, 'q': 0, 'r': 0,'s': 0, 't': 0, 'u': 0, 'v': 0, 'w': 0, 'x': 0, 'y': 0, 'z': 0}\n\nfor char in s:\n    alphabet_map[char] += 1",
        "num_ids_2": 28,
        "num_ids_4": 37
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'ccccc'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"\", \"Please use assert\"\nassert solution() == \"\", \"Please use assert\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\\ncccaabababaccbc\\n\") == \"cccbbabaccbc\"\nassert solution(\"5 4\\nabcd\\n\") == \"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('15 3\\ncccaabababaccbc\\n') == 'cccbbabaccbc'\nassert solution('1 1\\nu\\n') == ''",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"20\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n    1 2 0 2 0\n    2 4\n    3 3\n    1 5\n    1 2\n    1 5\n    2 3\n    ''') == '8'\nassert solution('''5 3\n    4 2\n    3 5\n    4 2\n    2 5\n    \n    ''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n0 1\n2\n''') == '8'\nassert solution('''\n1\n2\n0 1\n2\n''') == '20'\nassert solution('''\n1\n2\n0 1\n2\n''') == '20'\nassert solution('''\n1\n2\n1 1\n2\n''') == '21'\nassert solution('''\n1\n2\n1 2\n2\n''') == '19'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '28'\n\nassert solution('''\n1 10\n1 3\n1 2\n1 3\n1 4\n''') == '7'\n\nassert solution('''\n2 9\n1 4\n1 3\n1 4\n1 5\n''') == '3'\n\nassert solution('''\n2 8\n1 1\n1 2\n1 1\n1 1\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"8\"\n\nassert solution('''\n5 3\n4 2\n2 5\n''') == \"20\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2\n3 5\n4 2\n2 5\n''') == '20'\nassert solution('''\n1\n2\n''') == '2'\nassert solution('''\n2\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5 6\"\n    \"1 2 0 2 0\"\n    \"2 4\"\n    \"3 3\"\n    \"1 5\"\n    \"1 2\"\n    \"1 5\"\n    \"2 3\"\n    ) == \"8\"\n\nassert solution(\n    \"5 3\"\n    \"4 2\"\n    \"3 5\"\n    \"4 2\"\n    \"2 5\"\n    \"1 5\"\n    \"1 2\"\n    \"1 5\"\n    \"2 3\"\n    ) == \"20\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n4\n3 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"20\"\nassert solution(\n    \"\"\"\n4\n2 1 3 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"20\"\nassert solution(\n    \"\"\"\n4\n4 2 1 3 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"16\"\nassert solution(\n    \"\"\"\n2\n4\n4 2\n2 5\n\"\"\") == \"16\"\nassert solution(\n    \"\"\"\n3\n4 2 1 3 2\n3 5\n4 2\n2 5\n\"\"\") == \"20\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\"\"\") == \"8\"\nassert solution(\"\"\"5 3\n4 2\n3 5\n4 2\n2 5\"\"\") == \"20\"\nassert solution(\"\"\"5 5\n1 2\n2 3\n3 2\n4 3\n2 2\"\"\") == \"10\"\nassert solution(\"\"\"10 0\n1\n\"\"\") == \"10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 8\\n'\n                 '....*...\\n'\n                 '...**...\\n'\n                 '..*****.\\n'\n                 '...**...\\n'\n                 '....*...\\n'\n                 '........') == \"3\\n3 4 1\\n3 5 2\"\n\nassert solution('5 5\\n'\n                 '.*...\\n'\n                 '****.\\n'\n                 '.*...\\n'\n                 '.*...\\n'\n                 '.....') == \"3\\n2 2 1\\n3 3 1\\n3 4 1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3 4 1\\n3 5 2\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3 4 1\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == -1\n\nassert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3 4 1\"\nassert solution(\"5 5\\n.*...\\n****.\\n.****\\n..**.\\n.....\\n\") == \"3 4 1\"\n",
        "num_ids_2": 83,
        "num_ids_4": 158
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"-1\"\nassert solution(\"3 3\") == \"3 4 1\"\nassert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"8 9\") == \"3 4 1\"\nassert solution(\"10 10\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 8\n*...\n*...\n***.\n***.\n.***\n*...\n''') == '3 4 1', \"Wrong first example\"\nassert solution('''\n5 5\n*.*\n.*.\n*.*\n.*.\n*.*\n''') == '3 3 1', \"Wrong second example\"\n\nassert solution('''\n5 5\n*.*\n.*.\n*.*\n.*.\n*.*\n''') == '-1', \"Wrong third example\"\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n''') == '3 3 1', \"Wrong fourth example\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '3 5 2'\nassert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 4 1'\nassert solution('6 8') == '3 4 1'\nassert solution('4 4') == '1 1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"3 3\") == \"2 2 1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"3 3\") == \"2 2 1\"\nassert solution(\"5 5\") == \"3 4 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('3 3') == '-1'\nassert solution('5 5') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 1\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('575') == 'Yes'\nassert solution('1234567') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\nassert solution('123') == 'No'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('575') == 'Yes'\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('575') == 'Yes'\nassert solution('123') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"575\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'\nassert solution('37') == 'Yes'\nassert solution('3175') == 'No'\n\n---Using Regular Expression---\n'''\nimport re\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"15\") == \"No\"\nassert solution(\"45\") == \"Yes\"\nassert solution(\"0\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"29\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('575') == 'Yes'\nassert solution('23') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('1 2') == 'Bob'\nassert solution('4 3') == 'Draw'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'Alice'\nassert solution(input()) == 'Bob'\nassert solution(input()) == 'Draw'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"Bob\"\nassert solution(\"1 2\") == \"Alice\"\nassert solution(\"1 1\") == \"Draw\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\") == \"Alice\"\nassert solution(\"8 6\") == \"Bob\"\nassert solution(\"5 1\") == \"Draw\"\nassert solution(\"1 1\") == \"Draw\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('7 8') == 'Alice'\nassert solution('8 7') == 'Bob'\nassert solution('7 7') == 'Bob'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 5\") == \"Bob\"\nassert solution(\"3 4\") == \"Alice\"\nassert solution(\"8 6\") == \"Alice\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('4 5') == 'Bob'\nassert solution('2 2') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'Alice'\nassert solution('4 3') == 'Bob'\nassert solution('2 5') == 'Draw'\nassert solution('1 2') == 'Draw'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Alice'\nassert solution('5') == 'Bob'\nassert solution('1') == 'Draw'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 9\") == \"Alice\"\nassert solution(\"8 4\") == \"Bob\"\nassert solution(\"8 6\") == \"Draw\"\nassert solution(\"5 2\") == \"Draw\"\nassert solution(\"10 12\") == \"Alice\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"zwgl,nzg,zgl\") == \"zwgl nzg zgl\"\nassert solution(\"zwglfg,nzglfg,zglfg\") == \"zwglfg nzglfg zglfg\"\nassert solution(\"ywzg,zgg,zg\") == \"ywzg zgg zg\"\n",
        "num_ids_2": 44,
        "num_ids_4": 107
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'happy newyear enjoy'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,,,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,,,newyear,,,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,,,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,,,newyear,,,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nprint(solution(input()))\n\nThe input is given from Standard Input in the following format:\nhello\n\nThe output is print the string after the conversion.\n\n-----Input-----\nhello\n\n-----Output-----\nhello\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('weird,wonderful,jealous') == 'weird wonderful jealous'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy,') == 'happy newyear enjoy,'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''happy,newyear,enjoy''') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('rock,paper,scissors') == 'rock paper scissors'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('2 0') == '2 1'\nassert solution('0 0') == '1 1'\nassert solution('-1 0') == '2 1'\nassert solution('1 0') == '1 1'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\\n2 0\\n0 0\\n-1 0\\n1 0\\n\") == \"2 1\"\nassert solution(\"2 3\\n5 1\\n5 -1\\n4 -3\\n4 0\\n\") == \"1 3\"",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"8 4\") == \"7 2\"\nassert solution(\"10 10\") == \"10 9\"\nassert solution(\"50 100\") == \"10 9\"\nassert solution(\"3 3\") == \"3 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\nassert solution('5 6') == '4'\nassert solution('2 7') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2 1'\nassert solution('2 4') == '2 3'\nassert solution('3 4') == '1 3'\nassert solution('1 1') == '1 1'\nassert solution('1 2') == '1 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 2') == '2'\nassert solution('2 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"3 3\") == \"3 2 1\"\nassert solution(\"4 4\") == \"4 3 2 1\"\nassert solution(\"5 5\") == \"5 4 3 2 1\"\n\nfrom collections import deque\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"4 1\") == \"1 1 2 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\nassert solution('10') == '52'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\nassert solution('5') == '31'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '14'\nassert solution('2') == '14'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == 14\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(2) == \"14\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 14\nassert solution('1') == 1\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '14'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == 'Yes'\nassert solution('3\\n') == 'No'\nassert solution('1\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.#.\\n.",
        "num_ids_2": 24,
        "num_ids_4": 1252
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n#.#\\n#.#\\n#.#\\n#.\\n#.\") == \"Yes\"\nassert solution(\"5 2\\n#.#\\n#.#\\n#.#\\n#.\\n#.\") == \"No\"\nassert solution(\"3 2\\n#.#\\n#.#\\n#.#\\n#.\\n#.\") == \"No\"\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2\\n.#.#\\n.#.\\n#.\\n#.\\n') == 'Yes'\nassert solution('3 2\\n.#.\\n.#.\\n#.\\n#.\\n') == 'No'\nassert solution('3 2\\n.#.\\n#.\\n#.\\n#.\\n') == 'Yes'\nassert solution('3 2\\n.#.#\\n#.\\n#.\\n#.\\n') == 'No'",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('1 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 2') == '53'\nassert solution('1 5 2') == '53'\nassert solution('1 5 2 1 3 4 5 6 7 8 9') == '65'\nassert solution('1 5 2 1 3 4 5 6 7 8 9 6 5 4 3 2 1') == '69'\n",
        "num_ids_2": 24,
        "num_ids_4": 70
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 10 3') == '65'\nassert solution('1 10 3') == '65'\n\n----------------------------------------------------------------------\n\nSolution:",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1 5 2\n\"\"\") == \"53\"\nassert solution(\"\"\"\n2 2 2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n1 4 6\n\"\"\") == \"40\"\nassert solution(\"\"\"\n2 5 4\n\"\"\") == \"25\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3') == '6'\nassert solution('4 5 2') == '7'\nassert solution('4 6 2') == '5'\nassert solution('5 6 2') == '7'\nassert solution('1 2 3') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 4\") == \"2\"\nassert solution(\"2 3 4\") == \"4\"\nassert solution(\"3 2 1\") == \"1\"\nassert solution(\"2 2 0\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 3 4') == '4'\nassert solution('1 4 3 2') == '5'\nassert solution('1 3 2 4') == '5'\nassert solution('1 2 3 4') == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1 2') == '53'\nassert solution('1 5 2') == '53'\nassert solution('1 5 7 2') == '7'\nassert solution('1 5 7 3') == '7'\nassert solution('1 5 7 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 3') == '7'\nassert solution('1 2 3 4') == '10'\nassert solution('2 2 2') == '8'\nassert solution('4 4 4') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 3 4') == '9'\nassert solution('1 2 5 4') == '8'\nassert solution('1 2 3 5 4') == '7'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"1400\"\nassert solution(\"5\") == \"1800\"\nassert solution(\"6\") == \"1500\"\nassert solution(\"7\") == \"2700\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '15950'\nassert solution('5') == '15950'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"12\") == \"12975\"\nassert solution(\"10\") == \"12015\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '15950'\nassert solution('5') == '4158'\nassert solution('100') == '40080'\nassert solution('5') == '39900'\nassert solution('4') == '39900'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"5\") == \"12500\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '15950'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n3920\n3444\n4555\n3390''') == '15950'\nassert solution('''5\n1810\n3444\n4555\n3390\n5640''') == '15400'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '15950'\nassert solution('4') == '15950'\nassert solution('6') == '15950'\nassert solution('7') == '15950'\nassert solution('8') == '15950'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '15950.0', \"Wrong Answer\"\nassert solution('4') == '15950.0', \"Wrong Answer\"\nassert solution('5') == '15950.0', \"Wrong Answer\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1\\n2\\n3\\n4') == '4\\n4\\n4\\n4\\n'\nassert solution('10\\n4980\\n7980\\n6980\\n') == '15950\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"57\"\nassert solution(\"35\") == \"180\"\nassert solution(\"120\") == \"215\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"215\"\nassert solution(\"30\") == \"50\"\nassert solution(\"7\") == \"29\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"215\"\nassert solution(\"A\") == \"215\"\nassert solution(\"2\") == \"215\"\nassert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"215\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20\\n7\\n35\\n120') == '215'\nassert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('29\\n20\\n7\\n35\\n120') == '215'\n",
        "num_ids_2": 41,
        "num_ids_4": 63
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"215\"\nassert solution(\"2\") == \"60\"\nassert solution(\"3\") == \"20\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n\"\"\"\n\n\"\"\"\nThe restaurant AtCoder serves the following five dishes:\n - ABC Don (rice bowl): takes A minutes to serve.\n - ARC Curry: takes B minutes to serve.\n - AGC Pasta: takes C minutes to serve.\n - APC Ramen: takes D minutes to serve.\n - ATC Hanbagu (hamburger patty): takes E minutes to serve.\nHere, the time to serve a dish is the time between when an order is placed and when the dish is delivered.\nThis restaurant has the following rules on orders:\n - An order can only be placed at a time that is a multiple of 10 (time 0, 10, 20,...).\n - Only one dish can be ordered at a time.\n - No new order can be placed when an order is already placed and the dish is still not delivered, but a new order can be placed at the exact time when the dish is delivered.\nE869120 arrives at this restaurant at time 0. He will order all five dishes. Find the earliest possible time for the last dish to be delivered.\n\nHere, he can order the dishes in any order he likes, and he can place an order already at time 0.\n\n-----Constraints-----\n - A, B, C, D and E are integers between 1 and 123 (inclusive).\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA\nB\nC\nD\nE\n\n-----Output-----\nPrint the earliest possible time for the last dish to be delivered, as an integer.\n\n-----Sample Input-----\n29\n20\n7\n35\n120\n\n-----Sample Output-----\n215\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"20\") == \"1\"\nassert solution(\"7\") == \"2\"\nassert solution(\"35\") == \"2\"\nassert solution(\"120\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n1\\n1\\n1') == '1'\nassert solution('10\\n10\\n10\\n10\\n10') == '10'\nassert solution('20\\n20\\n20\\n20\\n20') == '20'\nassert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('30\\n20\\n7\\n35\\n120') == '215'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n20\n7\n35\n120''') == '215'\nassert solution('''29\n20\n7\n35\n120''') == '215'\nassert solution('''19\n18\n17\n17\n19''') == '169'\nassert solution('''23\n20\n7\n35\n120''') == '215'\nassert solution('''29\n20\n7\n35\n120''') == '215'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"29\"\nassert solution(\"35\") == \"58\"\nassert solution(\"120\") == \"180\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '60'\nassert solution('35') == '57'\nassert solution('120') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '7.5'\nassert solution('10 30') == '7.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n10 30\n''') == '7.5'\nprint(solution('''2\n10 30\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n10 30\n''') == '7.5'\nassert solution('''\n2\n10\n''') == '10.0'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '7.5'\nassert solution('20') == '7.50001'\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '7.5'\nassert solution('3') == '7.6'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"4\") == \"7.60000000000001\"\nassert solution(\"5\") == \"7.7\"\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10 30\") == \"7.5\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n10 30\\n\") == \"7.5\"\nassert solution(\"3\\n7 6 4\\n\") == \"10.0\"\nassert solution(\"5\\n0 0 0 0 0\\n\") == \"1.0\"\n",
        "num_ids_2": 37,
        "num_ids_4": 58
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n10 30') == '7.5'\nassert solution('3\\n2 3 4') == '0.25'\nassert solution('3\\n2 4 5') == '0.6'\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1.0\"\nassert solution(\"1 2\") == \"1.5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('5 1\\n6\\n9\\n10\\n1\\n4') == '0'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n') == '2'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3\n10\n15\n11\n14\n12\n''') == '2'\nassert solution('''5 3\n10\n15\n11\n14\n12\n''') == '2'\nassert solution('''5 5\n15\n15\n15\n15\n12\n''') == '3'\nassert solution('''10 10\n10\n10\n10\n10\n''') == '0'\nassert solution('''10 10\n10\n10\n10\n10\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"10 5\") == \"10\"\nassert solution(\"3 10\") == \"9\"\nassert solution(\"4 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12\\n') == '2'\nassert solution('2 3\\n10\\n15\\n11\\n14\\n12\\n') == '1'\nassert solution('2 1\\n10\\n15\\n11\\n14\\n12\\n') == '0'\n",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"7 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '2'\nassert solution('5 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\nassert solution('3 3\\n10\\n15\\n11') == '0'\nassert solution('3 2\\n10\\n15\\n11') == '1'\n",
        "num_ids_2": 46,
        "num_ids_4": 66
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n10\n15\n11\n14\n12\n''') == '2'\nassert solution('''\n5 2\n1\n8\n10\n5\n5\n''') == '4'\nassert solution('''\n5 3\n10\n15\n11\n14\n12\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 3\") == \"2\"\n\n\"\"\"\n\n\"\"\"\nSTART CODING\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('B') == 'a'\nassert solution('C') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('B') == 'A', 'Should be A.'\n\"\"\"\n\nimport unittest\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == 'A', \"Should be 'A'\"\nassert solution('a') == 'a', \"Should be 'a'\"\nassert solution('b') == 'b', \"Should be 'b'\"\nassert solution('B') == 'A', \"Should be 'A'\"\nassert solution('a') == 'a', \"Should be 'a'\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"B\") == \"A\"\nassert solution(\"b\") == \"a\"\n\nSample Test Cases\n\nstdin = \"A\"\nstdout = \"A\"\n\nstdin = \"a\"\nstdout = \"a\"\n\nstdin = \"B\"\nstdout = \"A\"\n\nstdin = \"b\"\nstdout = \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\nassert solution('b') == 'a'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"B\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"E\") == \"E\"\nassert solution(\"e\") == \"e\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"B\") == \"A\"\n\"\"\"\n\nupper_letter = {'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'}\nlower_letter = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z'}",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == \"A\"\nassert solution(\"b\") == \"a\"\nprint(solution(\"b\"))\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"A\"\nassert solution(\"a\") == \"a\"\nassert solution(\"\") == \"\"\nassert solution(\"Z\") == \"A\"\nassert solution(\"b\") == \"b\"\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('B') == 'A'\nassert solution('A') == 'a'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '6'\nassert solution('2 3') == '3'\nassert solution('3 1') == '3'\nassert solution('1 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 5\") == \"12\"\nassert solution(\"4 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '6'\nassert solution('100 101') == '0'\nassert solution('100000001 10001') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '6'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1905\") == \"YYMM\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"1905\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"0101\") == \"YYMM\"\nassert solution(\"0112\") == \"AMBIGUOUS\"\nassert solution(\"12345\") == \"AMBIGUOUS\"\nassert solution(\"12567\") == \"AMBIGUOUS\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1905') == 'YYMM', 'Expected: YYMM'\nassert solution('1906') == 'YYMM', 'Expected: YYMM'\nassert solution('1907') == 'YYMM', 'Expected: YYMM'\nassert solution('1908') == 'YYMM', 'Expected: YYMM'\nassert solution('1909') == 'YYMM', 'Expected: YYMM'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'NA'\nassert solution('2') == 'NA'\nassert solution('3') == 'NA'\nassert solution('4') == 'AMBIGUOUS'\nassert solution('5') == 'AMBIGUOUS'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"1905 is not valid\"\nassert solution(\"5653\") == \"NA\", \"5653 is not valid\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"01\") == \"YYMM\"\nassert solution(\"12\") == \"YYMM\"\nassert solution(\"0101\") == \"YYMM\"\nassert solution(\"0102\") == \"YYMM\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\", \"1905\"\nassert solution(\"1919\") == \"AMBIGUOUS\", \"1919\"\nassert solution(\"1919\") == \"AMBIGUOUS\", \"1919\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'NA'\nassert solution('100') == 'NA'\nassert solution('201') == 'YYYY'\nassert solution('012') == 'YYMM'\nassert solution('1') == 'YYYY'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"NA\"\nassert solution(\"1910\") == \"AMBIGUOUS\"\nassert solution(\"1900\") == \"AMBIGUOUS\"\nassert solution(\"19\") == \"NA\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '2'\nassert solution('2') == '2'\nassert solution('5') == '2'\nassert solution('10') == '3'\nassert solution('100') == '13'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('3') == '2'\nassert solution('5') == '1'\nassert solution('100') == '4'\nassert solution('5') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '2'\nassert solution(4) == '1'\nassert solution(5) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == '2'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n\n--- Day 1: The Tyranny of the Rocket Equation ---\n\nSanta has become stranded at the edge of the Solar System while delivering presents to other planets! To accurately calculate his position in space, safely align his warp drive, and return to Earth in time to save Christmas, he needs you to bring him measurements from fifty stars.\n\nCollect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!\n\nSanta's measurements are represented by a grid. You make a grid with dimensions A x B, where each cell in this grid has an integer written in it.\n\nThe grid can be partially traversed by jumping over empty cells. A valid path takes at least 1 step, but doesn't have to go through every single cell.\n\nFor example, below is a valid path:\n\n1721\n1611\n1501\n1804\n1901\n1512\n2003\n1704\n1902\n1802\n2003\n1707\n1501\n1904\n1707\n1601\n1806\n\nWhat is the minimum number of jumps needed to reach the end of the grid?\n\n--- Part Two ---\n\nSeeing what Santa's measurements said, he wonders how many stars he'll need to go through to reach the end. He needs to know how many stars he'll need to collect.\n\nCollect stars by solving puzzles. Two puzzles will be made available on each day in the Advent calendar; the second puzzle is unlocked when you complete the first. Each puzzle grants one star. Good luck!\n\nThe first star is a grid of integers. Each cell in this grid has an integer written in it. The sum of the numbers in each cell is part of the star's position.\n\nFor example, below is a possible path:\n\n1721\n16721\n17487\n167121\n172119\n1671219\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197\n16721197",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9 12') == '21'\nassert solution('0 0') == '0 0'\nassert solution('11 0') == '11 0'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"9 00\") == \"21\"\nassert solution(\"12 12\") == \"21\"\nassert solution(\"12 00\") == \"21\"\nassert solution(\"00 12\") == \"21\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 10') == '14'\nassert solution('12 12') == '21'\nassert solution('1 1') == '1'\nassert solution('11 0') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 12') == '21'\nassert solution('2 3') == '8'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"21\"\nassert solution(\"10 11\") == \"21\"\nassert solution(\"2 3\") == \"21\"\nassert solution(\"9 12\") == \"21\"\nassert solution(\"10 11\") == \"21\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 8\") == \"21\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"21\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 9\") == \"21\"\nassert solution(\"15 10\") == \"23\"\nassert solution(\"24 30\") == \"23\"\nassert solution(\"24 4\") == \"23\"\nassert solution(\"4 10\") == \"23\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 1\") == \"10\"\nassert solution(\"9 2\") == \"21\"\nassert solution(\"8 5\") == \"20\"\nassert solution(\"6 2\") == \"21\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2919') == '3719'\nassert solution('5 10 50') == '50'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"10 4\") == \"20\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"10 10 5\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(Takahashi) == '3719'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\\n\") == \"3719\"\nassert solution(\"1 100\\n\") == \"100\"\nassert solution(\"5 10\\n\") == \"19\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2919\") == \"3719\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '37'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2919\") == \"3719\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2919\n''') == '3719'\nassert solution('''\n3 2 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2919\\n') == '3719'\nassert solution('4 1459\\n') == '1459'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 10\") == \"3719\"\nassert solution(\"2 20\") == \"4028\"\nassert solution(\"3 10\") == \"3893\"\nassert solution(\"4 10\") == \"4143\"\nassert solution(\"5 10\") == \"4427\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1011\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '4'\n\"\"\"\n\nn, k = map(int, input().split())",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\nprint(solution(sys.stdin.read()))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''11 2''') == '4'\nassert solution('''11 2''') == '4'\nassert solution('''11 2''') == '4'\nassert solution('''11 2''') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1011''') == \"4\"\nassert solution('''11 2''') == \"4\"\nassert solution('''2 2''') == \"2\"\nassert solution('''2 1''') == \"1\"\nassert solution('''2 4''') == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == ''\nassert solution('10') == '1'\nassert solution('11') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"4\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n''') == '3'\nassert solution('''10\n''') == '2'\nassert solution('''100\n''') == '3'\nassert solution('''20\n''') == '2'\nassert solution('''25\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"3\") == '3'\nassert solution(\"4\") == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('20') == '3'\n\"\"\"\n\nN = int(input())\nprint(min(int(N/2), N-1, N-2, N-3))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(Takahashi_solution) == '3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\n\"\"\"\n\nfrom math import log",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '9'\nassert solution('4') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5''') == '3'\nassert solution('''10''') == '2'\nassert solution('''2''') == '0'\nassert solution('''5''') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 5\") == \"Yay!\"\nassert solution(\"7 4\") == \"Yay!\"\nassert solution(\"8 4\") == \"Yay!\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"10 8\") == \"Yay!\"\nassert solution(\"8 7\") == \"Yay!\"\nassert solution(\"1 0\") == \"Yay!\"\nassert solution(\"0 1\") == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('1 5') == 'Yay!'\nassert solution('1 3') == 'Yay!'\nassert solution('5 2') == 'Yay!'\nassert solution('1 2') == 'Yay!'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == \"Yay!\"\nassert solution('5 4') == \"Yay!\"\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == 'Yay!'\n'''\n\na, b = list(map(int, stdin().split()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n') == 'Yay!'\nassert solution('5 4\\n') == 'Yay!'\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == \"Yay!\"\nassert solution('10 4') == \"Yay!\"\n\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10**6)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Yay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"5\") == \"Yay!\"\nassert solution(\"6\") == \"Yay!\"\nassert solution(\"12\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA B\n''') == 'Yay!'\nassert solution('''\n1 2\n''') == 'Yay!'\nassert solution('''\n5 4\n''') == 'Yay!'\nassert solution('''\n2 3\n''') == 'Yay!'\nassert solution('''\n1 2\n''') == 'Yay!'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 4\") == \"Yay!\"\n\n\"\"\"\n\nA, B = input().split()\nA = int(A)\nB = int(B)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678') == '34'\nassert solution('1234567879') == '34'\nassert solution('12') == '0'\nassert solution('123456789') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 48
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"56789\") == \"67\"\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1234567876') == '34'\nassert solution('12345678976') == '37'\nassert solution('1234567876') == '34'\nassert solution('12345678976') == '37'\nassert solution('1234567876') == '34'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234567876') == '34'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('765456789') == '34'\nassert solution('7654567876') == '34'\n\n---Time Limit Exceeded---\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"567\") == \"\"\nassert solution(\"76\") == \"76\"\nassert solution(\"123456789\") == \"34\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234567876\") == '34'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1234567876') == '34'\n\"\"\"\n\nimport sys\nfrom typing import List",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234567876') == '34'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"0123456789\") == \"34\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 12, 6]) == \"5 3\"\nassert solution([2, 9]) == \"1 7\"\nassert solution([7]) == \"12 13\"\n",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '5 3'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 12 6') == '5 3'\nassert solution('2\\n2 9') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '2999999987 2'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'\n",
        "num_ids_2": 31,
        "num_ids_4": 74
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 12, 6]) == '5 3'\nassert solution([2, 9]) == '1 7'\nassert solution([6, 13, 52, 0, 13, 26, 52]) == '12 13'\n",
        "num_ids_2": 28,
        "num_ids_4": 51
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3 12 6\n''') == '5 3'\nassert solution('''7\n2 1000000000 4 6 8 4 2\n''') == '2999999987 2'\nassert solution('''6\n13 52 0 13 26 52\n''') == '12 13'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string()) == \"5 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3\"\n    \"3 12 6\"\n    ) == \"5 3\"\nassert solution(\n    \"2\"\n    \"2 9\"\n    ) == \"1 7\"\nassert solution(\n    \"7\"\n    \"13 52 0 13 26 52\"\n    ) == \"12 13\"\nassert solution(\n    \"6\"\n    \"2 1000000000 4 6 8 4 2\"\n    ) == \"2999999987 2\"\nassert solution(\n    \"10\"\n    \"1 2 3 4 5 6 7 8 9 10\"\n    ) == \"9 9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n''') == '1 2'\nassert solution('''\n3\n2\n3\n''') == '1 3'\nassert solution('''\n7\n1\n2\n3\n4\n5\n6\n''') == '7 1'\nassert solution('''\n6\n2\n3\n4\n5\n6\n''') == '7 4'\nassert solution('''\n8\n2\n3\n4\n5\n6\n7\n8\n''') == '8 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n3 12 6\n\n''') == '5 3'\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n\n''') == '2999999987 2'\nassert solution('''\n6\n13 52 0 13 26 52\n\n''') == '12 13'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2 3'\nassert solution(input()) == '4 5'\nassert solution(input()) == '12 13'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution('''3\n1 1 1\n''') == '1'\nassert solution('''3\n1 1 1\n2 2\n''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"1\"\nassert solution('3') == \"1\"\nassert solution('4') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3 1 4 1\\n') == '3'\nassert solution('5\\n1 1 1 2 2\\n') == '2'\n\nimport math",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n1 1\n''') == '2'\nassert solution('''\n3\n1 1 4\n''') == '3'\nassert solution('''\n4\n1 1 1 1\n''') == '1'\nassert solution('''\n5\n1 1 1 2 2\n''') == '3'\nassert solution('''\n6\n1 2 2 1 1 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    1 1 1\n    ''') == '3'\n\nassert solution('''\n    3\n    1 1 1\n    ''') == '2'\n\nassert solution('''\n    5\n    1 1 1 2 2\n    ''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '2'\n\nassert solution('''\n5\n1 1 1 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 1 2 2\") == \"2\"\nassert solution(\"1 1 1 2 2\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '5'\nassert solution('7') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '3'\nassert solution('''\n3\n1 1 1\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '4'\nassert solution('''\n3\n1 1 1\n''') == '3'\nassert solution('''\n2\n1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1\\n1 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"3 0\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 2\") == \"4\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n4 2\n1 2\n2 3\n\n\"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n3 2\n1 3\n2 3\n\n\"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\n3 3\n1 3\n1 2\n2 3\n\n\"\"\") == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('3 2') == '1'\nassert solution('2 0') == '1'\nassert solution('3 0') == '1'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2\\n1 2\\n2 3\\n') == '2'\nassert solution('3 2\\n1 3\\n2 3\\n') == '1'\nassert solution('2 0\\n') == '1'\n",
        "num_ids_2": 42,
        "num_ids_4": 55
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 0') == '1'\nassert solution('3 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\n1 2\n2 3\n3 1\n''') == '2'\n\nassert solution('''3 2\n1 2\n2 3\n''') == '1'\n\nassert solution('''5 4\n1 2\n1 3\n1 4\n3 2\n3 4\n3 5\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n6 5\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n\"\"\") == \"11\"\nassert solution(\"\"\"\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    5 1\n    1 2 3 4 5\n    1 2\n    2 3\n    3 4\n    3 5\n    '''\n    ) == '11'\nassert solution(\n    '''\n    7 2\n    2 1 2 1 2 1 1\n    6 4\n    1 5\n    3 1\n    2 3\n    7 5\n    7 4\n    '''\n    ) == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 1\\n2 3\") == \"1\"\nassert solution(\"3\\n1 2 3\\n3 4\") == \"4\"\nassert solution(\"4\\n5 7 1 3 2\\n5 2 1 2 3\\n4 2\\n2 3\") == \"6\"\nassert solution(\"2\\n1 2 1\\n2 3\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 89
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\n\n'''\n\n'''\nA tree is a connected undirected graph without cycles.\n\nA tree is a connected graph without cycles. In other words, it has no isolated vertices.\n\nA tree is a complete graph if it contains every possible pair of vertices.\n\nA graph is complete if it contains all possible pairs of vertices.\n\nA complete graph is a graph where every pair of vertices are connected by an edge.\n\nWe can construct complete graphs using the following construction.  For example, the following graph is complete:\n\nn = 5\n\nComplete graph on 5 vertices\n\n{\n    0 1 2 3 4\n    0 1 2 3 4\n    0 1 2 3 4\n    0 1 2 3 4\n    0 1 2 3 4\n}\n\nYou can extend the graph by adding vertices and connecting them.  For example, we can add vertices 1 and 2, and connect them by an edge.  We have now a graph with 8 vertices.\n\nCreate a complete graph G(n).  (1)\nFind out if the graph is complete.  (2)\nFind out if it is a tree.\n(3)\nFind out if the graph is connected.\n\nTask\nYou are given an undirected graph represented by an adjacency matrix. The graph is undirected: if there is an edge from vertex A to vertex B, then there is an edge from vertex B to vertex A.\n\nYour task is to determine if the given graph is a tree.\n\nReturn 1, if the given graph is a tree, otherwise return 0.\n\nNote: If a graph is bipartite, then it is a tree too.\n\nExample 1\nInput\n\ngraph =\n[[0, 1, 1, 1],\n [0, 0, 0, 1],\n [1, 0, 0, 0],\n [1, 1, 0, 0]]\nOutput\n\n1\n\nExample 2\nInput\n\ngraph =\n[[0, 0, 0, 0],\n [1, 0, 1, 1],\n [1, 1, 0, 1],\n [0, 1, 0, 0]]\nOutput\n\n0\n\nExample 3\nInput\n\ngraph =\n[[0, 1, 1],\n [0, 0, 0],\n [1, 1, 0]]\nOutput\n\n0\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n\nOutput\n11\n''') == '11', 'First'\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n\nOutput\n4\n''') == '4', 'Second'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 1 2 3\\n3 2\\n4 5\\n5 4\\n6 7\\n7 6') == '4'\nassert solution('7 1\\n1 2 2 3 4 5 6\\n6 4\\n1 3\\n4 5\\n2 5\\n5 4\\n3 4\\n4 3\\n5 2\\n5 1\\n6 5\\n6 4\\n7 5\\n7 3\\n') == '7'",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2') == '4'\nassert solution('5 1') == '11'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\nassert solution('2 3') == '1 5\\n2 1\\n2 9999999994\\n'\n\n\"\"\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\n5 10000000000\n5 6 9999999999\n\n3 1\n1 9999999994\n2 2\n2 13\n3 1\n3 12\n''') == '1 5\\n2 1\\n2 9999999994'\n\nassert solution('''2 4\n2 4\n1 1\n1 2\n1 1\n''') == '1 1\\n2 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6\") == '1 1\\n1 9\\n2 2'\nassert solution(\"2 3\") == '1 5\\n2 1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"1 5\"\nassert solution(\"3 6\") == \"1 1\"\nassert solution(\"3\") == \"1 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994\\n'\nassert solution('''3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994\\n'\n\n'''\n\n##################################################################################################################################\n",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '1 5'\nassert solution('2 3') == '1 1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 6 5 4\\n\") == \"2 1 3\"\nassert solution(\"40 40 40 60\\n\") == \"20 20 20\"\nassert solution(\"201 101 101 200\\n\") == \"1 100 100\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8\n1 3 4 8 5 2 7 9\n\"\"\") == \"1 3 2 4 5 7 8 9\"\nassert solution(\"\"\"\n3\n4 4 2\n\"\"\") == \"3 4 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\nassert solution(\"201 101 101 200\") == \"1 100 100\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 6 5 4''') == '2 1 3'\nassert solution('''40 40 40 60''') == '20 20 20'\nassert solution('''201 101 101 200''') == '1 100 100'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\nassert solution('1310 1310 1310 1311') == '1 3 10 13'\n\n\n\"\"\"\n\n\nfrom itertools import permutations\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 6 5 4\n    20 20 20\n    ''') == '2 1 3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().replace('\\n', '')\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == 'BGRBGBRGR'\nassert solution('13') == 'BGRBRBGBGBGRG'\nassert solution('1') == ''\n",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\nRBRR\n''') == 'RBRR'\nassert solution('''\n7\nRBR\n''') == 'RBR'\nassert solution('''\n11\nRBBBBRRRBBR\n''') == 'BBBBRRRBBR'\nassert solution('''\n6\nBRBGBRGR\n''') == 'BRBGBRGR'\n\nassert solution('''\n7\nRBBBBRRRBBR\n''') == 'RBBBBRRRBBR'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\\nBBGBBGBGBGBGB\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"9\\nRRRRRBRGG\"\n    ) == \"2\\nBGRGBRGR\"\nassert solution(\n    \"8\\nBBBGBRRR\"\n    ) == \"2\\nBRBGBRGR\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('15') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\nBBBGBRRR\n''') == 'BBBGBRGR'\nassert solution('''\n5\nBBBGBRRR\n''') == 'BBBGBRGR'\nassert solution('''\n6\nBBBGBRRR\n''') == 'BBBGBRGR'\nassert solution('''\n7\nBBBGBRRR\n''') == 'BBBGBRGR'\nassert solution('''\n8\nBBBGBRRR\n''') == 'BBBGBRGR'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"R\"\nassert solution(\"2\") == \"GR\"\nassert solution(\"5\") == \"BG\"\nassert solution(\"9\") == \"RRRBBBBG\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"R\") == \"0\"\nassert solution(\"G\") == \"0\"\nassert solution(\"B\") == \"0\"\n\nassert solution(\"RRR\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6\n7 8 9 10 11 12''') == \"6\"\nassert solution('''3\n3 4 7 5 6 8''') == \"4\"\nassert solution('''4\n10 9 8 7''') == \"2\"\nassert solution('''9\n6 7 8 3 4 5 9 10 11''') == \"6\"\n\nassert solution('''6\n1 3 5 2 4 6''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"4\\n1 2 3 7 8 9\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"7\\n3 3 4 7 5 6 8\"\n) == \"4\\n2 3 5 6\"\nassert solution(\n    \"6\\n1 3 5 2 4 6\"\n) == \"2\\n1 4\"\nassert solution(\n    \"4\\n10 9 8 7\"\n) == \"1\\n1 2 3\"\nassert solution(\n    \"9\\n6 7 8 3 4 5 9 10 11\"\n) == \"6\\n1 2 3 7 8 9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\nassert solution('''8\n1 2 3 7 8 9 10 11\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"9\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '4'\nassert solution('6') == '2'\nassert solution('4') == '1'\nassert solution('9') == '6'\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n6 7 8 9 10 11') == '1 2 3 7 8 9 10 11'\nassert solution('4\\n10 9 8 7') == '1 4'\nassert solution('9\\n6 7 8 3 4 5 9 10 11') == '1 2 3 7 8 9 10 11'\nassert solution('10\\n10 9 8 7') == '1 2 3 7 8 9 10 11'\n",
        "num_ids_2": 42,
        "num_ids_4": 93
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('6') == '2'\nassert solution('4') == '1'\nassert solution('9') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\n6 7 8 9 10 11\n''') == '2'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '1'\nassert solution('''4\n10 9 8 7\n''') == '1'\nassert solution('''9\n6 7 8 3 4 5 9 10 11\n''') == '6'\nassert solution('''3\n10 9 8 7\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n5 3 7 1 4 6 8''') == '4'\nassert solution('''10\n3 5 6 4 7 8 9 10 11''') == '7'\nassert solution('''9\n3 4 7 5 6 8''') == '2'\nassert solution('''6\n10 9 8 7''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('5 1') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input().strip()) == \"Yes\"\nassert solution(input().strip()) == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('3 1') == 'Yes'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('4 4') == 'No'\nassert solution('3 1') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('4 4') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"2 1\") == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n5 7\n''') == 'Yes'\nassert solution('''3 2\n5 7\n''') == 'No'\nassert solution('''3 3\n5 7\n''') == 'No'\nassert solution('''3 4\n5 7\n''') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"Yes\", \"First\"\nassert solution(\"5 5\") == \"No\", \"Second\"\nassert solution(\"5 5\") == \"Yes\", \"Third\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('11 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"11 11\") == \"11\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"81 58\") == \"110\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"3 100\") == \"15\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('81 58') == '110'\nassert solution('100 30') == '100'\nassert solution('100 50') == '150'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"10\"\nassert solution(\"5 20\") == \"15\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 5\") == \"9\"\nassert solution(\"11 20\") == \"29\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1.5\"\nassert solution(\"3 2\") == \"1.0\"\nassert solution(\"0 0\") == \"0.0\"\nassert solution(\"0 0 0\") == \"0.0\"\nassert solution(\"0 0 0 0\") == \"0.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"2 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('41 55') == '110'\nassert solution('91 55') == '105'\nassert solution('81 55') == '105'\nassert solution('81 55') == '110'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"80 58\") == \"81\"\nassert solution(\"77 58\") == \"66\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"2\") == \"8\"\nassert solution(\"4\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '8'\nassert solution('5') == '252'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n\") == \"8\"\nassert solution(\"5\\n\") == \"28\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"8\"\n\"\"\"\n\nimport re\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == \"8\"\nassert solution('10') == \"64\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == '1'\nassert solution(\"2\") == '8'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == \"8\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\nassert solution('6') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('0') == 'NO'\nassert solution('-1') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'YES'\nassert solution('6') == 'NO'\nassert solution('7') == 'YES'\n\"\"\"\n\nx = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"2\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('10') == 'NO'\nassert solution('1') == 'NO'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"10\") == \"NO\"\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"ABC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\n'''\n\nn = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"999\") == \"ABC\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('999') == 'ABC'\nassert solution('123') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\nassert solution('100') == 'ABD'\nassert solution('999999') == 'ABD'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC001') == 'ABC'\nassert solution('ABC002') == 'ABC'\nassert solution('ABC003') == 'ABC'\nassert solution('ABC004') == 'ABC'\nassert solution('ABC005') == 'ABC'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('999') == 'ABC'\nassert solution('100') == 'AB'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\nassert solution('999') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"5\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Nay!\"\nassert solution(\"4\") == \"Nay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"5\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n4\n8\n9\n15\n''') == 'Yay!'\nassert solution('''\n3\n4\n7\n10\n12\n''') == 'Nay!'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('3') == 'Nay!'\nassert solution('4') == 'Yay!'\nassert solution('5') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"123\") == \"red\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"10\"\nassert solution(\"\") == \"\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcdefg\") == \"abcdefg\"\nassert solution(\"abcdefghijklmnop\") == \"abcdefghijklmnop\"\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"a\"\nassert solution(\"3200\") == \"pink\"\nassert solution(\"54321\") == \"red\"\nassert solution(\"123456\") == \"red\"\nassert solution(\"135789\") == \"red\"\n\n--- Output ---\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3200') == 'pink'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3200') == 'pink'\nassert solution('4200') =='red'\nassert solution('4201') =='red'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"5\") == \"red\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3200') == 'pink'\nassert solution('3200') == 'pink'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3200\") == \"pink\", \"Should be pink\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'a is not less than 3200, so we print s = red'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"35\") == \"red\"\nassert solution(\"3501\") == \"red\"\nassert solution(\"\") == \"\"\nassert solution(\"2221\") == \"pink\"\n",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20') == 'ARC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'ARC'\nassert solution('4') == 'AGC'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'ARC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'ARC'\nassert solution('1199') == 'ARC'\nassert solution('1209') == 'ARC'\n\"\"\"\nfrom itertools import count",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1199') == 'ABC'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('12') == 'ARC'\nassert solution('4') == 'AGC'\nassert solution('2') == 'ARC'\nassert solution('10') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ARC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1199') == 'ABC'\nassert solution('200') == 'ARC'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('42') == 'ARC'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('111') == '991'\nassert solution('1337') == '1337'\nassert solution('1111') == '9111'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('119') == '991'\nassert solution('112') == '111'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('19') == '9'\nassert solution('123') == '1'\nassert solution('123456789') == '123456789'\nassert solution('1234567891') == '1'\nassert solution('12345678910') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 50
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('112') == '991'\nassert solution('234') == '991'\nassert solution('299') == '991'\nassert solution('1121') == '9911'\nassert solution('1234') == '991234'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '91'\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('110') == '111'\nassert solution('111') == '101'\nassert solution('101') == '1'\nassert solution('1') == '9'\n\n[\uc2dc\uac04 \uc81c\ud55c] 2\ucd08\n[\uba54\ubaa8\ub9ac \uc81c\ud55c] 1024MB\n[\uc81c\ucd9c] 9153\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '9'\nassert solution('9') == '1'\nassert solution('11') == '1'\nassert solution('99') == '9'\nassert solution('111') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"9\") == \"99\"\nassert solution(\"11\") == \"99\"\nassert solution(\"111\") == \"99\"\n\n---",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12\") == \"12\"\nassert solution(\"9\") == \"9\"\nassert solution(\"99\") == \"99\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('119') == '991'\nassert solution('100') == '100'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\nabac\nac\nbcdaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''\n2\nzzzzzzzzzz\n''') == \"zzzzzzzzzz\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'abac'\nprint(solution(input))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\nabac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'bccddaaf'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nabbaac\") == \"abac\", \"Should be 'abac'\"\nassert solution(\"1\\nac\") == \"ac\", \"Should be 'ac'\"\nassert solution(\"3\\nzzzzzzzzzz\") == \"zzzzzzzzzz\", \"Should be 'zzzzzzzzzz'\"\n\n\n-----Explanation-----\nIn the first test case, the secret string $a$ is \"abbaac\". Bob got it right.\n\nIn the second test case, the secret string $a$ is \"ac\". Bob got it right.\n\nIn the third test case, the secret string $a$ is \"zzzzzzzzzz\". Bob got it right.",
        "num_ids_2": 41,
        "num_ids_4": 72
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"abac\"\nassert solution(input()) == \"ac\"\nassert solution(input()) == \"bcdaf\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzz\\n') == 'abac'\nassert solution('3\\nac\\nab\\nac\\n') == 'ac'\nassert solution('2\\nab\\nac\\n') == 'abac'\nassert solution('1\\nabc\\n') == 'abc'\nassert solution('0\\n') == ''",
        "num_ids_2": 54,
        "num_ids_4": 88
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"333\"\nassert solution(\"6\") == \"0\"\nassert solution(\"7\") == \"333\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n10 4\\n\") == \"2\"\nassert solution(\"2\\n100 13\\n\") == \"333\"\nassert solution(\"3\\n9 4\\n\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10 4\") == \"2\"\nassert solution(\"1\\n10 4\") == \"2\"\nassert solution(\"1\\n2 5\") == \"1\"\nassert solution(\"1\\n3 7\") == \"0\"\nassert solution(\"2\\n10 4\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10 4\n13 9\n100 13\n123 456\n92 46''') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\n\nassert solution('''\n5 4\n13 9\n100 13\n123 456\n92 46\n''') == '5'\n\nassert solution('''\n10 4\n8 8\n123 456\n92 46\n''') == '1'\n\nassert solution('''\n5 4\n10 4\n100 13\n123 456\n92 46\n''') == '0'\n\nassert solution('''\n10 4\n8 8\n123 456\n92 46\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('5 4') == '1'\nassert solution('10 4') == '2'\nassert solution('100 13') == '5'\nassert solution('123 456') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n10 4\n''') == '2'\nassert solution('''\n1\n10 4\n''') == '1'\nassert solution('''\n3\n10 4\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n10 4\n13 9\n100 13\n123 456\n92 46\n''') == '2'\nassert solution('''\n5\n100 7\n100 101\n100 661\n100 852\n100 941\n''') == '0'\nassert solution('''\n5\n10 5\n2 3\n1 2\n1 3\n1 4\n''') == '3'\nassert solution('''\n5\n10 5\n2 3\n1 2\n1 3\n1 4\n''') == '2'\nassert solution('''\n5\n10 5\n2 3\n1 2\n1 3\n1 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n10 4\\n13 9\\n100 13\\n123 456\\n92 46') == '2\\n5\\n4'\nassert solution('1\\n1000000000\\n1000000000') == '1'\nassert solution('3\\n3\\n5') == '1'\n",
        "num_ids_2": 57,
        "num_ids_4": 73
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46''') == \"333\"\nassert solution('''1\n1\n10''') == \"0\"\nassert solution('''2\n2\n2''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"\n    5 2\n    3 4 1 2\n    \"\"\") == \"2.666666666666667\"\n    \nassert solution(\n    \"\"\"\n    5 4\n    3 4 1 2\n    \"\"\") == \"1.333333333333333\"\n    \nassert solution(\n    \"\"\"\n    100 2\n    1 1\n    \"\"\") == \"100.0\"\n    \nassert solution(\n    \"\"\"\n    100 4\n    1 1 1 1\n    \"\"\") == \"1.333333333333333\"\n    \nassert solution(\n    \"\"\"\n    10 3\n    1 2 3 4\n    \"\"\") == \"3.0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"2.666666666666667\"\nassert solution(\"4 3\") == \"2.666666666666667\"\nassert solution(\"4 1\") == \"2.666666666666667\"\nassert solution(\"4 3\") == \"2.666666666666667\"\nassert solution(\"5 5\") == \"2.666666666666667\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2.75'\nassert solution('100') == '2.5'\nassert solution('1000') == '2.5'\nassert solution('10000') == '2.5'\nassert solution('100000') == '2.5'\n\n----------------------------------------\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430 \u043a\u0430\u043a\u0438\u0445-\u0442\u043e \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044f\u0445, \u0447\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0431\u0435\u0437 \u0437\u0430\u0434\u0430\u043d\u0438\u044f \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043d\u0435 \u0440\u0430\u0432\u043d\u044b \u0438 \u0443\u0431\u044b\u0442\u043e\u0447\u043d\u044b.\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442 \u0434\u043e\u043b\u0436\u043d\u044b \u043f\u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0432\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435, \u0438 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0439 \u0438\u043b\u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u043e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0432\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435.\n\n\u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0435 \u0441 \u043a\u0430\u043a\u0438\u043c-\u0442\u043e \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u0435\u043c, \u0442\u043e \u0432 \u0435\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0438 \u043d\u0438 \u043e\u0434\u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0435 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0442\u044c\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043e\u0434\u043d\u0438\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0432\u044b\u0431\u043e\u0440\u043a\u0438. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043d\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 \u0437\u0430\u0434\u0430\u043d\u0438\u0435\u043c, \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0435\u0435 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432. \u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u0434\u0432\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430 \u0438 \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0435\u0449\u0435 \u0440\u0430\u0437.\n\n\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432\u044b\u0432\u043e\u0434\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u0432 \u044d\u0442\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432 \u043f\u0440\u0438\u0432\u044b\u0447\u043d\u043e\u043c \u0432\u0438\u0434\u0435.\n\n\n-----\u041e\u0431\u044a\u044f\u0441\u043d\u0435\u043d\u0438\u0435 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0430-----\n\n\u0412 \u044d\u0442\u043e\u043c \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u0435 \u043c\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c \u043c\u0435\u0442\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0420\u0435\u0448\u0435\u0442\u0430 \u042d\u0440\u0430\u0442\u043e\u0441\u0444\u0435\u043d\u0430. \u041f\u0440\u0438 \u044d\u0442\u043e\u043c \u043c\u044b \u0441\u0447\u0438\u0442\u0430\u0435\u043c, \u0447\u0442\u043e \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438 \u0434\u043b\u044f \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u042d\u0440\u0430\u0442\u043e\u0441\u0444\u0435\u043d\u0430 \u0438\u043c\u0435\u044e\u0442 \u0441\u0438\u043b\u0443 \u043d\u0430 \u0440\u0430\u0437\u0431\u0438\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u0447\u0430\u0441\u0442\u044b\u0435 \u0441\u0442\u0440\u043e\u043a\u0438, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043c\u044b \u0441\u0447\u0438\u0442\u0430\u0435\u043c, \u0447\u0442\u043e \u0434\u0430\u043d\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043e\u0431\u0440\u0430\u0442\u043d\u0443\u044e \u0441\u0432\u044f\u0437\u044c \u043c\u0435\u0436\u0434\u0443 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438. \u0422\u0430\u043a \u043a\u0430\u043a \u0438\u043c\u0435\u043d\u043d\u043e \u043e\u043d \u043d\u0443\u0436\u0435\u043d, \u044d\u0442\u043e \u0438 \u043f\u0440\u0438\u0432\u043b\u0435\u043a\u0430\u0442\u0435\u043b\u044c\u043d\u043e, \u043d\u0430\u043c \u043d\u0435 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0447\u0442\u043e \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0431\u044b\u0432\u0430\u0435\u0442 \u0432\u0441\u0435\u0433\u0434\u0430 \u0443\u043c\u0435\u043d\u044c\u0448\u0430\u0442\u0435\u043b\u0435\u043c \u0434\u043b\u0438\u043d\u044b \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438. \u0412 \u044d\u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043c\u044b ",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n3 4 1 2\n''') == '2.666666666666667'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2.666666666666667'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n4\\n5\\n') == '2.5'\nassert solution('2\\n7\\n4\\n2\\n') == '2.5'\nassert solution('1\\n100\\n50\\n50\\n') == '5.0'\nassert solution('1\\n1000\\n100\\n50\\n') == '100.0'\nassert solution('1\\n1000\\n100\\n50\\n') == '100.0'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3\n3 4 1 2''') == \"2.666666666666667\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1\\n3 4 1 2') == '2.5'\nassert solution('4 4\\n3 4 1 2') == '3.0'\nassert solution('10 11\\n7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9 1 2 3",
        "num_ids_2": 38,
        "num_ids_4": 1429
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n3 4 1 2\n''') == \"2.666666666666667\"\nassert solution('''5 6\n4 2 1 5 3 2\n''') == \"2.8125\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1.5\", \"Wrong!\"\nassert solution(\"3 3\") == \"2.0\", \"Wrong!\"\nassert solution(\"5 5\") == \"2.0\", \"Wrong!\"",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nassert solution('''\n2 4\n1 1 2 3\n2 2 2 2\n1 1 3 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == \"YES\"\nassert solution('3 2 1') == \"YES\"\nassert solution('1 2') == \"YES\"\nassert solution('4 2') == \"NO\"\nassert solution('4 1 2 3') == \"NO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1\\n4 2\\n2 1 4 3\\n1 3\\n4 2\\n4 3 2 1\\n1 3') == 'YES'\nassert solution('5\\n3 1\\n1 3\\n2 2\\n2 3\\n4 4') == 'NO'",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"3 2 1\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"4 2\") == \"YES\"\nassert solution(\"4 1 2 3\") == \"NO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5 2\\n2 1 4 3') == 'NO'\nassert solution('3\\n4 1 2\\n1 2 3') == 'YES'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n6\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\nassert solution('''\n1\n1\n2\n1\n''') == 'YES'\n\nstdin = '''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n'''\nprint(solution(stdin))",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"2\\n3\\n2\\n1\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"3\\n4\\n3\\n2\\n1\\n1\\n1\") == \"NO\"\nassert solution(\"3\\n4\\n3\\n2\\n1\\n1\\n1\") == \"YES\"\nassert solution(\"4\\n4\\n4\\n4\\n4\\n4\\n4\") == \"YES\"\n",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'bab'\nassert solution(input()) == 'bab'\nassert solution(input()) == 'bab'\nassert solution(input()) == 'bab'\nassert solution(input()) == 'bab'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nbaabbb\") == \"bab\"\nassert solution(\"10\\nobabbb\") == \"bab\"\nassert solution(\"2\\nbab\") == \"bab\"\nassert solution(\"1\\nz\") == \"z\"\nassert solution(\"20\\nabababab\") == \"abababab\"",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"z\"\nassert solution(\"2\") == \"oopp\"\nassert solution(\"3\") == \"psss\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"ababaaba\"\nassert solution(\"10\") == \"oooopspppssss\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nbaabbb\") == \"bab\"\nassert solution(\"6\\nooopppssss\") == \"oops\"\nassert solution(\"8\\nssssssssssss\") == \"ssssssssssss\"",
        "num_ids_2": 33,
        "num_ids_4": 56
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('baabbb') == 'bab'\nassert solution('ooopppssss') == 'oops'\nassert solution('z') == 'z'\nprint(\"Yay!  All tests passed.\")\n",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"bab\"\nassert solution(input()) == \"oops\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nabc\") == \"abc\"\nassert solution(\"5\\nbaba\") == \"baba\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"z\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nbab\n''') == 'bab'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 10') == '1'\nassert solution('4 3') == '0'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\nassert solution('''1 0\n''') == '0'\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    4 3\n    1 2 1\n    2 3 2\n    1 4 2\n''') == '1'\nassert solution('''\n    3 3\n    1 2 1\n    2 3 2\n    1 3 3\n''') == '0'\nassert solution('''\n    3 3\n    1 2 1\n    2 3 2\n    1 3 3\n''') == '1'\nassert solution('''\n    5 6\n    1 2 2\n    2 3 1\n    4 5 3\n    2 4 2\n    1 4 2\n    1 5 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 3\n2 1 3\n4 3 4\n2 4 1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 3\n1 2 1\n2 3 2\n1 3 3\n\"\"\") == \"1\"\n\n\"\"\"\nfrom collections import defaultdict\n\nclass Graph():\n    def __init__(self, n):\n        self.graph = defaultdict(list)\n        self.V = n\n\n    def addEdge(self, u, v, w):\n        self.graph[u].append((v, w))\n        self.graph[v].append((u, w))\n\n    def printMST(self, parent):\n        print(\"Edge \\tWeight\")\n        for i in range(1, self.V):\n            print(parent[i], \"-\", i, \"\\t\", self.graph[i])",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '0'\nassert solution('8 10') == '1'\nassert solution('5 6') == '2'\nassert solution('1 0') == '0'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\n\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\n\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'\n\nassert solution('''3 3\n1 2 1\n2 3 3\n1 3 3\n''') == '1'\n\nassert solution('''5 6\n1 2 2\n2 3 1\n4 5 3\n2 4 2\n1 4 2\n1 5 3\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"1 2 1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"8 10\\n\"\n    \"1 2 1\\n\"\n    \"2 3 2\\n\"\n    \"2 4 5\\n\"\n    \"1 4 2\\n\"\n    \"6 3 3\\n\"\n    \"6 1 3\\n\"\n    \"3 5 2\\n\"\n    \"3 7 1\\n\"\n    \"4 8 1\\n\"\n    \"6 2 4\\n\"\n    ) == \"1\"\nassert solution(\n    \"4 3\\n\"\n    \"2 1 3\\n\"\n    \"4 3 4\\n\"\n    \"2 4 1\\n\"\n    ) == \"0\"\nassert solution(\n    \"3 3\\n\"\n    \"1 2 1\\n\"\n    \"2 3 2\\n\"\n    \"1 3 3\\n\"\n    ) == \"1\"\nassert solution(\n    \"1 0\\n\"\n    ) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n\nassert solution() == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nBRB''') == '''1\nGRB'''\nassert solution('''7\nRGBGRBB''') == '''3\nRGBRGBR'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '2'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8\nRRGGBB\n\"\"\") == \"RGBRGBR\"\n\nassert solution(\"\"\"\n7\nRGBRGBR\n\"\"\") == \"RGBRGGB\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '2'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1\") == \"1\"\n\nassert solution(\"RRRRRR\") == \"1\"\nassert solution(\"R\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"3\\n10001 JPY\\n0.10000000 BTC\\n11000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"10\\n9900 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n11000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"47000.0\"\nassert solution(\"5\\n9900 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"55000.0\"\nassert solution(\"8\\n9900 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\\n10000 JPY\\n0.10000000 BTC\") == \"55000.0\"\n",
        "num_ids_2": 64,
        "num_ids_4": 177
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1000\\nJPY\\n1\\nBTC\\n') == '48000'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"48000\"\nassert solution(\"10\") == \"48000.1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n30000000 JPY\\n10000000 BTC\\n') == '48000.00000000'\nassert solution('2\\n30000000 JPY\\n10000 BTC\\n') == '48000.00000000'\nassert solution('2\\n30000000 JPY\\n10000000 BTC\\n') == '48000.00000000'\nassert solution('2\\n30000000 JPY\\n10000000 BTC\\n') == '48000.00000000'\n",
        "num_ids_2": 53,
        "num_ids_4": 104
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n\n''') == '48000.0'\nassert solution('''\n3\n1234 USD\n1234 USD USD\n''') == '50000.0'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"1\") == \"48000.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\n\nassert solution('''\n2\n10000 JPY\n0.10000000 BTC\n''') == '48000.0'\n\nprint(solution('''\n2\n10000 JPY\n0.10000000 BTC\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('10\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('20\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\n",
        "num_ids_2": 54,
        "num_ids_4": 81
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '3'\nassert solution('5 3') == '2'\nassert solution('5 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '3'\nassert solution('1 1') == '2'\nassert solution('10 2') == '9'\nassert solution('10 2') == '9'\nassert solution('8 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\") == \"3\"\nassert solution(\"7 5\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 1\n    3 4\n    3 5\n    2 6\n    4 8''') == '3'\nassert solution('''6 2\n    2 5\n    1 3\n    3 2\n    5 6\n    4 7''') == '5'\nassert solution('''5 1\n    4 3\n    2 5\n    1 6\n    3 7\n    8 8''') == '8'\nassert solution('''10 10\n    1 1\n    2 2\n    3 3\n    4 4\n    5 5\n    6 6\n    7 7\n    8 8\n    9 9''') == '7'\nassert solution('''5 10\n    2 2\n    4 4\n    3 3\n    5 5\n    1 1\n    8 8\n    6 6\n    9 9''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n    ip\n    cc\n    ''') == 'icpc'\n\nassert solution('''5\n    ip\n    cc\n    abc\n    abc\n    ''') == 'icpcabcabc'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nip cc\\n') == 'icpc'\nassert solution('1\\nabcd\\n') == 'abcdb'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('ip cc') == 'icpc'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\niammy\\nworld') == 'iammyworld'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ip cc\") == \"icpc\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"icpc\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"icpc\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"icpc\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"icpc\"\nassert solution(\"1\") == \"i\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"icpc\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABA') == 'Yes'\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''ABA''') == 'Yes'\nassert solution('''BABA''') == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABB\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"ABA\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAAB') == 'No'\nassert solution('ABCB') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAB') == 'No'\nassert solution('ABBA') == 'Yes'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AB') == 'Yes'\nassert solution('BA') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABA\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"\") == \"No\"\nassert solution(\"AB\") == \"Yes\"\nassert solution(\"AB\") == \"No\"\nassert solution(\"AB\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RS\") == \"1\"\nassert solution(\"RR\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('RRRR') == '2'\nassert solution('RRRR') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRRR') == '2'\nassert solution('RRRR') == '2'\nassert solution('R') == '0'\nassert solution('R') == '0'\nassert solution('RR') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRRR\") == '2'\nassert solution(\"RRSRR\") == '3'\nassert solution(\"RRRRR\") == '2'\nassert solution(\"RSS\") == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RRS\") == \"2\"\n\n\"\"\"\n\nimport itertools\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        lst = stdin.split(\"\\n\")\n        cnt = 0\n        for i in range(len(lst) - 3):\n            temp_set = set()\n            for j in range(3):\n                temp_set.add(lst[i + j])\n            if \"R\" in temp_set:\n                cnt += 1\n        return str(cnt)\n\n\ns = Solution()\nprint(s.solution(input()))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRRS') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"R\") == \"0\"\nassert solution(\"RR\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RRR\") == \"1\"\nassert solution(\"RRR\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RRS') == \"2\"\nassert solution('RR') == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRSRR') == '3'\nassert solution('RRRRRR') == '4'\n\nprint(solution('RRS'))\nprint(solution('RRSRR'))\nprint(solution('RRRRRR'))",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3\n    5 4 6\n    1 3 7\n    2 4 8''') == \"3 1 2\\n5 6 1\\n4 7 2\\n8 8 3\"\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"3 1 2\"\nassert solution(\"3 6 5\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"3 1 2 4\"\nassert solution(\"1 2 3 4 5\") == \"3 1 2 4 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 1 3') == '3 1 2'\nassert solution('1 1 1') == '3 1 2'\nassert solution('1 1 1 1') == '3 1 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('1 2 3 4') == '3 1 4 2'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4\") == \"3 1 2 4\"\nassert solution(\"1 2 3 4 5\") == \"3 1 2 4 5\"\nassert solution(\"5 6 7 8 9\") == \"5 6 7 8 9\"",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '3 1 2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('25 10') == '50', 'Should be: 50'\nassert solution('20 10') == '30', 'Should be: 30'\nassert solution('20 10') == '20', 'Should be: 20'\nassert solution('15 10') == '25', 'Should be: 25'\nassert solution('7 10') == '0', 'Should be: 0'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 10\") == \"50\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '25'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('30 100') == '100'\nassert solution('50 10') == '30'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('20 30') == '120'\nassert solution('10 10') == '40'\nassert solution('12 9') == '12'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 2') == '20'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"30 100\\n\") == \"100\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"-1 -1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('30 100') == '100'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"20 10\") == \"20\"\nassert solution(\"5 6\") == \"50\"\nassert solution(\"5 10\") == \"50\"\nassert solution(\"16 20\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-+++') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-++') == '2'\nassert solution('+++++++') == '2'\nassert solution('++++++') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+-++\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+--\") == \"1\"\nassert solution(\"+--+\") == \"0\"\nassert solution(\"+-++-\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('+-++') == '2'\nassert solution('++-++') == '1'\nassert solution('+++-') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+--\") == \"1\"\nassert solution(\"+-+\") == \"1\"\nassert solution(\"+-\") == \"0\"\nassert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('+-++') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''+-++''') == '2'\nassert solution('''+-++''') == '2'\nassert solution('''+-++''') == '2'\nassert solution('''+-++''') == '2'\nassert solution('''+-++''') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/05/31\") == \"TBD\"\nassert solution(\"2019/02/29\") == \"TBD\"\nassert solution(\"2020/02/29\") == \"TBD\"\nassert solution(\"2019/03/28\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'Heisei'\nassert solution('2019/04/30') == 'Heisei'\nassert solution('2019/01/31') == 'TBD'\nassert solution('2019/12/31') == 'TBD'\nassert solution('2020/04/30') == 'TBD'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/03/30') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'Heisei'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2019/04/30') == \"Heisei\"\nassert solution('2019/04/29') == \"TBD\"\nassert solution('2019/04/28') == \"TBD\"\nassert solution('2019/04/27') == \"TBD\"\nassert solution('2019/04/26') == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2019/04/30') == \"Heisei\"\nassert solution('April 30, 2019') == \"TBD\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2019/04/30') == 'Heisei'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\nassert solution('2019/04/28') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Heisei\"\nassert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('18') == '14'\nassert solution('10') == '9'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\n''') == \"14\"\n\nassert solution('''\n3\n1337 1337 1337\n''') == \"3\"\n\nassert solution('''\n2\n1337 1337\n''') == \"3\"\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10\\n') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6\\n') == '9'\nassert solution('3\\n1337 1337 1337') == '3'",
        "num_ids_2": 64,
        "num_ids_4": 82
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10') == '14'\nassert solution('10\\n6 6 6 3 6 1000000000 3 3 6 6') == '9'\nassert solution('3\\n1337 1337 1337') == '3'",
        "num_ids_2": 62,
        "num_ids_4": 80
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\n''') == '14'\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\nassert solution('''\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"3\"\n) == \"3\"\nassert solution(\n    \"10\"\n) == \"9\"\nassert solution(\n    \"18\"\n) == \"14\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"14\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('18') == '14'\nassert solution('10') == '9'\nassert solution('3') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2\\n1 2 3 2 1\\n') == '2 1'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3\\n') == '3'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n1 2 3 2\n''') == '2 1 3'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2 1 3'\nassert solution('''\n8 9\n3 8 1 4 5 2 9 2 3 8\n''') == '4 5 1'\nassert solution('''\n10 5\n1 2 3 4 5 6 7 8 9 1 2 3\n''') == '9 1 2 3 4'\nassert solution('''\n10 7\n1 2 3 4 5 6 7 8 9 1 2 3\n''') == '9 2 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\nassert solution('''\n10 4\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n10 4\n1 1 2 2 1 2 2 1 2 1 1 1 1 1 1 1 1 2 2 1 2 1 2 1 2 1 1 1 1 1 1 1 1 1 1 2 2 1 2 1 2 1 2 2 1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 2') == '2 1'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 2 1 3 2') == '2 1 3 2'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\") == \"2 1 3 2 1 3 2\"\nassert solution(\n\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3 1 2 3 2 1 3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 2'\nassert solution('''\n10 4\n1 2 3 2 1 3 2\n''') == '2 1 \n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4') == '1'\nassert solution('1 2') == '-1'\nassert solution('3 3') == '2'\nassert solution('10') == '3'\nassert solution('100') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n8\n5\n10\n''') == '2'\nassert solution('''\n2\n5\n8\n7\n''') == '1'\nassert solution('''\n4\n8\n5\n10\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 4 8 2 4\n8\n5\n14\n10\n''') == '3'\nassert solution('''4 3\n2 4 5 7\n6\n5\n14''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n\") == \"1 3 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n4 5 7 7 6 8 5 5 3\n6\n8\n4\n3\n1\n8\n''') == '''\n3\n-1\n3\n1\n-1\n3\n'''\n\nassert solution('''\n3\n7 7 7\n5\n8\n''') == '''\n2\n2\n'''\n\nassert solution('''\n2\n2 2\n8\n''') == '''\n-1\n-1\n'''\n\nassert solution('''\n5\n2 1 3 8 7\n2\n5\n''') == '''\n1\n1\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n') == '3 2'\nassert solution('10 3\\n2 4\\n8\\n5\\n13\\n') == '-1'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10\\n') == '1 2 3'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 32
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"3 2\"\nassert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"1 -1\"\nassert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"3 -1\"\nassert solution(\"\"\"\n5 4\n1 1 2 2 4\n2\n5\n14\n10\n\"\"\") == \"2 -1\"\nassert solution(\"\"\"\n5 4\n1 1 2 2 4\n2\n5\n14\n10\n\"\"\") == \"3 -1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 4 8 2 4') == '1'\nassert solution('8\\n5\\n14\\n10') == '3'\nassert solution('10\\n5\\n14\\n10') == '2'\n",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"21\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 1\") == \"21\"\nassert solution(\"2 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '21'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '21'\nassert solution('3 3') == '0'\nassert solution('4 4') == '21'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == stdout",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_input_1) == \"21\"\nassert solution(example_input_2) == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n3 3\n9 9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n1 2 3\n2 6 7\n3 3\n''') == '21'\nassert solution('''\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n3 3\n9 9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n1 2 3\n2 6 7\n3 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '21'\nassert solution('4 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"4 3\n    1 3 2 8 5 5 8 2 2 8 5 2\n    1 2 2 5\n    2 6 7\n    \"\"\"\n) == \"21\"\n\nassert solution(\n    \"\"\"3 3\n    9 9 9 9 9 9 9 9 9\n    1 2 3\n    1 2 3\n    \"\"\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0'\nassert solution('6') == '1 2 3 4 5'\nassert solution('4') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('4') == '0'\nassert solution('10 5') == '2 2 1 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2 4 6 6 6\n''') == '2'\nassert solution('''3\n2 8 10\n''') == '2'\nassert solution('''4\n1 1 1 1\n''') == '0'\n\nprint(solution('''\n10\n
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 3 2\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"0\"\n",
        "num_ids_2": 46,
        "num_ids_4": 64
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 4 6 6 6\n\n''') == '2'\nassert solution('''\n3\n2 8 10\n\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\nassert solution(input()) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nassert solution() == \"2 1 1\"\nassert solution() == \"2 2 2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 4 6 6 6\n''') == \"2\"\nassert solution('''5\n3 3 2 2 2\n''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n2 4 6 6 6') == '2'\nassert solution('4\\n8 10 9 8') == '2'\nassert solution('5\\n1 1 1 1 1') == '0'",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n2 4 6 6 6\n''') == '1'\n\nassert solution('''\n3\n2 8 10\n''') == '2'\n\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n\nassert solution('''\n3\n1 1 2\n''') == '1 2'\n\nassert solution('''\n3\n4 1 5\n''') == '1 2 3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 1\\n100010') == '1'\nassert solution('6 1\\n010000') == '1'\nassert solution('5 1\\n10101') == '2'\nassert solution('3 1\\n001') == '1'\nassert solution('2 2\\n00') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1') == '1'\nassert solution('6 2') == '2'\nassert solution('5 1') == '1'\nassert solution('10101') == '1'\nassert solution('3 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '2'\nassert solution('''5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '0'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n7 1\n00100000\n7 2\n000000\n6 1\n10110001\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n6 2\\n100010\") == \"1\"\nassert solution(\"2\\n6 2\\n01101\") == \"1\"\nassert solution(\"1\\n6 1\\n100010\") == \"2\"\nassert solution(\"1\\n6 1\\n001\") == \"1\"\nassert solution(\"1\\n5 1\\n10101\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00''') == '1'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00''') == '0'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"9 1\") == \"1\"\nassert solution(\"7 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution(stdin='''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"4\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"5 1\") == \"2\"\nassert solution(\"5 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '4'\n\nassert solution('9 11') == '4 6 7'\nassert solution('7 8') == '3 6 7'\nassert solution('8 9') == '3 7 8'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 4 5 \n''') == '4'\nassert solution('''5 1\n2 3\n3 3\n2 2\n2 3\n2 3\n\n''') == '1 4 5 6'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '1 4 5 6'\nassert solution('6') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 5\") == \"4\"\n\nassert solution(\"5 1\") == \"1 4 5\"\nassert solution(\"6 1\") == \"1 4 5\"\n\nassert solution(\"7 1\") == \"1 4 5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2\\n11 11') == '3'\nassert solution('5 1\\n29 30') == '4'\nassert solution('6 1\\n2 3') == '1 3 5 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '4'\nassert solution('6 1') == '1 4 5 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n10 3 2 1\n3\n10 5 4 3\n5\n10 9 5 5\n6\n10 10 4 4\n3\n10 7 9 7\n2\n2\n3\n''') == '31'\n\nassert solution('''\n3\n10 6 10\n3\n2\n''') == '2'\n\nprint('All test cases passed!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n4\n5 6 15 30\n4\n10 6 30 15\n\"\"\") == \"31\"\nassert solution(\"\"\"\n2\n4\n5 6 15 30\n3\n3 4 6\n\"\"\") == \"10\"\nassert solution(\"\"\"\n3\n5\n6 15 30\n3\n3 4 6\n\"\"\") == \"30\"\nassert solution(\"\"\"\n3\n4\n5 6 15 30\n3\n3 4 6\n\"\"\") == \"30\"\nassert solution(\"\"\"\n3\n4\n5 6 15 30\n3\n3 4 6\n\"\"\") == \"30\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15''') == '30'\nassert solution('''3\n4\n5 6 15 30\n4\n10 6 30 15''') == '31'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '30'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n4\\n5 6 15 30\") == \"30\"\nassert solution(\"4\\n4\\n10 6 30 15\") == \"31\"\nassert solution(\"3\\n3\\n3 4 6\") == \"10\"\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3\\n5 6 15 30') == '30'\nassert solution('2\\n4\\n10 6 30 15') == '30'\nassert solution('3\\n3\\n3 4 6') == '10'\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4\n3 4 6\n1\n3 4 6''') == '30'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6\"\n) == \"30\"\nassert solution(\n    \"5\\n10 6 30 15\\n4\\n3 4 6\\n3\\n3 4 6\"\n) == \"30\"\nassert solution(\n    \"5\\n10 6 30 15\\n4\\n3 4 6\\n2\\n2 4 6\"\n) == \"30\"\nassert solution(\n    \"5\\n10 6 30 15\\n4\\n3 4 6\\n2\\n1 4 6\"\n) == \"31\"\nassert solution(\n    \"5\\n10 6 30 15\\n4\\n3 4 6\\n1\\n1 3 6\"\n) == \"32\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n6''') == '1'\nassert solution('''6\n6\n1 2 3 4 5 6\n2\n3 4 5\n3 4 6\n3 5 6\n3 4 5 6\n3 4 5''') == '1'\nassert solution('''6\n6\n1 2 3 4 5 6\n2\n3 4 5\n3 4 6\n3 5 6\n3 4 5 6\n3 4 5''') == '2'\nassert solution('''5\n5\n1 2 3 4 5\n2\n3 4 5\n4\n5 6\n6\n4 5''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1\\n2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1\\n2'\nassert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1\\n2'\n\ninput:\n5\n7\n10 20 5 9 5 1\n1\n4\n9\n5\n8 9\n6\n4\n\noutput:\n3\n1\n2\n1\n\"\"\"",
        "num_ids_2": 64,
        "num_ids_4": 96
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3\n3\n3''') == '3'\nassert solution('''1\n4\n1\n5\n2\n4\n4\n5\n1\n5\n1\n2\n1\n2\n2\n3\n1\n2\n3\n1\n2\n3\n2\n2\n1\n2\n3\n4\n4\n2\n2\n4\n4\n2\n4\n2\n2\n4\n2\n2\n2\n1\n2\n1\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n1\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == '2'\nassert solution('''5\n2\n10 20 15\n4\n3\n4\n1\n6\n1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3\\n1\\n1\\n3\\n') == '1'\nassert solution('2\\n3\\n1\\n1\\n3\\n') == '2'\nassert solution('1\\n4\\n1\\n2\\n3\\n') == '1'",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\") == \"2\\n1\\n2\\n1\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\") == \"2\\n1\"\nassert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\") == \"2\\n1\"\nassert solution(\"4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\") == \"2\\n2\"\n",
        "num_ids_2": 78,
        "num_ids_4": 117
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '2'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == '1'\nassert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n12''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n1') == '1'\nassert solution('1\\n2\\n3\\n4\\n1') == '1'\nassert solution('3\\n5\\n3\\n4\\n1') == '2'\nassert solution('3\\n3\\n3\\n4\\n1') == '2'\nassert solution('4\\n5\\n3\\n4\\n1') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1') == '2\\n1\\n2'\nassert solution('4\\n4\\n3 6\\n2\\n1') == '1\\n2'\nassert solution('4\\n4\\n2\\n3\\n1') == '2\\n1'\n\n\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 71,
        "num_ids_4": 96
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES', \"First example\"\nassert solution('''3 3 5 18\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO', \"Second example\"\nassert solution('''1 3 5\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES', \"Third example\"\nassert solution('''3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'NO', \"Fourth example\"\nassert solution('''0 1\n1 2 3 6\n5 2 6 27\n3 3 5 18''') == 'YES', \"Fifth example\"\n",
        "num_ids_2": 20,
        "num_ids_4": 37
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\"\nassert solution('''\n4\n3 4\n5 4\n7 8\n''') == \"NO\"\nassert solution('''\n2\n3 2\n2 3\n4 3\n''') == \"YES\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n10 2 8 5\n1 2 3 4 5 6 7 8 9 10\n''') == 'YES'\nassert solution('''\n10 3 4 6\n1 2 3 4 5 6 7 8 9 10\n''') == 'NO'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 3 6\n3 3 5 18\n''') == 'YES'\nassert solution('''\n5 2 3 6\n3 3 5 18\n''') == 'NO'\nassert solution('''\n5 2 3 6\n3 3 5 6\n''') == 'YES'\nassert solution('''\n5 2 3 6\n3 3 5 18\n''') == 'NO'\nassert solution('''\n5 2 3 6\n3 3 5 18\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution(\"YES\") == \"YES\"\nassert solution(\"YES\") == \"YES\"\nassert solution(\"YES\") == \"YES\"\n\n\n## Sample Test Cases\n\nInput\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n\nOutput\nYES\nNO\nNO\nYES\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == 'YES'\nassert solution('''\n3\n1 2 3 4\n1 2 3 6\n5 2 6 27\n''') == 'NO'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n1 2 3\n5 2 6\n3 3 5 18\n''') == 'YES\\nNO\\nNO\\nYES\\n'\nassert solution('''\n1 1 1\n1 2 2\n5 2 6\n3 3 5 18\n''') == 'YES\\nNO\\nNO\\nYES\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\") == \"YES\"\nassert solution(\"5\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n5 5 5 5\\n5 5 5 5\") == \"YES\"\nassert solution(\"5\\n1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18\\n5 5 5 5\\n5 5 5 5\\n6 6 6 6\") == \"NO\"\nassert solution(\"3\\n1 1 1 1\\n2 2 2 2\\n3 3 3 3\") == \"NO\"\nassert solution(\"2\\n3 3 5 5\\n2 2 2 2\") == \"YES\"\n",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'YES'\nassert solution('a') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n\n5\n4 3 2 1 0\n''') == 'YES'\n\nassert solution('''\n7\n5 3 1 5 3 7 3\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n2 3 1 5 3 7 3\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n''') == 'YES'\nassert solution('''\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n\n5\n4 3 2 1 0\n''') == 'YES'\nassert solution('''\n5\n4 3 2 1 0\n\nOutput\nNO\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n4 3 1 5 3') == 'YES\\n1\\n3\\n4\\n5 4 3 1'\nassert solution('5\\n0 1 2 3 4') == 'YES\\n0\\n1\\n2\\n3\\n4'\nassert solution('5\\n0\\n1\\n2\\n3\\n4') == 'NO'",
        "num_ids_2": 64,
        "num_ids_4": 89
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n2 7 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 3 1 5 3') == 'YES\\n1\\n3'\nassert solution('7\\n7 2 7 3 3 1 4') == 'YES\\n2\\n3 7'\nassert solution('7\\n7 2 7 3 3 1 4') == 'NO'\nassert solution('5\\n4 3 1 5 3') == 'YES\\n1\\n3'\n",
        "num_ids_2": 49,
        "num_ids_4": 91
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"8\") == \"NO\"\nassert solution(\"7 3 2 7 3 1 4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n''') == \"YES\"\n\nassert solution('''\n5\n4 3 1 5 3\n''') == \"YES\"\n\nassert solution('''\n5\n0 1 2 3 4\n''') == \"YES\"\n\nassert solution('''\n5\n1 1 2 3 4\n''') == \"NO\"\n\nassert solution('''\n4\n0 1 2 3\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    10\n    10 1 2 3 4 5 6 7 8 9 10\n    ''') == 'YES'\n\nassert solution(\n    '''\n    5\n    2 3 4 5 6\n    ''') == 'YES'\n\nassert solution(\n    '''\n    5\n    5 4 3 2 1\n    ''') == 'NO'\n\nassert solution(\n    '''\n    5\n    0 1 2 3 4\n    ''') == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n''') == 'YES'\nassert solution('''5\n4 3 1 5 3\n''') == 'YES'\nassert solution('''5\n0 1 2 3 4\n''') == 'NO'\nassert solution('''5\n4 3 2 1 0\n''') == 'YES'\nassert solution('''\n5\n4 3 2 1 0\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == -1\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"8\"\nassert solution(\"5 4\") == \"18\"\nassert solution(\"6 1\") == \"10\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 4\") == \"18\"\nassert solution(\"5 2\") == \"8\"\nassert solution(\"5 3\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == \"18\"\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == \"8\"\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == \"-\"\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == \"18\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == \"18\"\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == \"8\"\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == \"-1\"\n",
        "num_ids_2": 89,
        "num_ids_4": 127
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"7\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"8 8\") == \"12\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"10 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == \"18\"\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == \"8\"\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == \"-1\"\n",
        "num_ids_2": 89,
        "num_ids_4": 127
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    8 4\n    7 1 1\n    2 1 1\n    4 0 1\n    8 1 1\n    1 0 1\n    1 1 1\n    1 0 1\n    3 0 0\n    ''') == '18', 'first example'\nassert solution('''\n    5 2\n    6 0 0\n    9 0 0\n    1 0 1\n    2 1 1\n    5 1 0\n    ''') == '8','second example'\nassert solution('''\n    5 3\n    3 0 0\n    2 1 0\n    3 1 0\n    5 0 1\n    3 0 1\n    ''') == '-1', 'third example'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n''') == \"18\"\nassert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == \"8\"\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == \"-1\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '7'\nassert solution('''\n4\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'\nassert solution('''\n4\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '-1'\nassert solution('''\n4\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n3\n10 3\n1 1 2 3 1\n5 2\n7 5\n3 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"2\"\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"6\"\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"7\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3 1\n3 2\n1 6\n5 2 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n10 1\n1 5 4 3 4 2 5 1 1\n7 7\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '2'\nassert solution('4\\n2 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '6'\nassert solution('8\\n6 4\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '-1'\n",
        "num_ids_2": 100,
        "num_ids_4": 140
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('2 1') == '2'\nassert solution('4 1') == '-1'\nassert solution('4 2') == '6'\nassert solution('6 4 8 5') == '7'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\nassert solution('3') == '6'\nassert solution('4') == '7'\n\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2\\n2",
        "num_ids_2": 1196,
        "num_ids_4": 1196
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n2\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"7\"\nassert solution(\"\"\"\n2\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1\\n1 2\\n2 2\\n\") == \"2\"\nassert solution(\"3 2\\n4 4\\n6 4\\n\") == \"6\"\nassert solution(\"4 2\\n3 2\\n2 2\\n\") == \"2\"\nassert solution(\"6 3\\n7 5\\n5 5\\n\") == \"7\"\nassert solution(\"9 8\\n10 10\\n12 12\\n\") == \"12\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('15') == '0'\nassert solution('12') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"0\"\nassert solution(\"15\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5\\n\"\n    \"4 8 15 16 23\"\n    ) == \"5\"\n\nassert solution(\n    \"12\\n\"\n    \"4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\"\n    ) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\nassert solution('''6\n2 2 3 3 4 5\n''') == '5'\nassert solution('''6\n2 2 3 3 4 5\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 8 15 16 23\n''') == '5'\nassert solution('''\n12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''\n15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 25
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"30\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4 8 15 16 23') == \"5\"\nassert solution('2\\n5 4 8 15 16 8 23 15 16 42 23 42') == \"0\"\nassert solution('3\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42') == \"3\"",
        "num_ids_2": 41,
        "num_ids_4": 68
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 8 15 16 23\n''') == '5'\nassert solution('''\n12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''\n15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n1\n100 10\n''') == '92'\n\n'''\n\n\n------SOLUTION------",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '2'\nassert solution('''3\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000''') == '1'\nassert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000''') == '3'\nassert solution('''2\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000''') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '92'\nassert solution('''\n6\n5 5\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '87654322'\nassert solution('''\n6\n5 5\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '9150'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '2'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '92'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '87654322'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n5 5') == '0\\n3\\n2'\nassert solution('2\\n13 37\\n123456789 1000000000') == '9150'\nassert solution('3\\n5 4') == '2\\n2'\nassert solution('4\\n18 4') == '92\\n87654322'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n",
        "num_ids_2": 43,
        "num_ids_4": 80
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3\nassert solution('''\n2\n10 20\n15 100\n''') == '1\nassert solution('''\n8\n9 30\n19 80\n23 10\n9 90\n12 11\n''') == '0\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0\n2\n3\n1'''):\n    print('TEST CASE PASSED')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '2\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '92\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '87654322\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n10 5 187\n2 0 999999999\n''') == '15'\nassert solution('''\n10 5 187\n2 0 999999999\n''') == '999999998'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '54306'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n999999995 9 1000000000\n10 5 187\n2 0 999999999\n''') == '185'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n999999995 9 1000000000\n10 5 187\n2 0 999999999\n''') == '999999998'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n\") == \"12339\"\nassert solution(\"5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n\") == \"0\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n\") == \"15\"\nassert solution(\"7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999\\n\") == \"999999998\"\n\n\"\"\"\n",
        "num_ids_2": 101,
        "num_ids_4": 209
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2 0 3\\n\"\n    \"4 9\\n\") == \"0\"\n\nassert solution(\n    \"2 0 3\\n\"\n    \"4 9\\n\") == \"0\"\n\nassert solution(\n    \"2 0 3\\n\"\n    \"4 9\\n\") == \"0\"\n\nassert solution(\n    \"2 0 3\\n\"\n    \"4 9\\n\") == \"0\"\n\nassert solution(\n    \"2 0 3\\n\"\n    \"4 9\\n\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"999999995\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5 12345') == '12339'\nassert solution('5 0 4') == '0'\nassert solution('10 5 15') == '15'\nassert solution('17 8 54321') == '54306'\nassert solution('499999993 9 1000000000') == '185'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n\"\"\") == \"12339\"\nassert solution(\"\"\"\n4\n12345\n12345\n12345\n12345\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '12339'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n1 2 2 3 2 4 10\n''') == '6'\n\nassert solution('''\n7 3\n1 2 2 3 2 4 5\n''') == '4'\n\nassert solution('''\n7 4\n1 2 2 3 2 4 5 6\n''') == '8'\n\nprint(\"Congratulations, have fun while coding\")\nprint('=======================================')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"6\"\nprint(solution(input_string))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"10 10\") == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"6\"\nassert solution(\"6 2\") == \"8\"\nassert solution(\"8 2\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 2\\n1 2 2 3 2 4 10\") == \"6\"\nassert solution(\"7 2\\n1 2 2 3 2 4 6 10\") == \"8\"\nassert solution(\"8 2\\n1 2 2 3 2 4 6 10\") == \"4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '6'\nassert solution('8 2') == '8'\nassert solution('7 3') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1324'\nassert solution('1 2 3 4') == '1324'\nassert solution('1 2 3 4') == '1324'\nassert solution('1 2 3 4') == '1324'\nassert solution('1 2 3 4') == '1324'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"aBC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"b\"\nassert solution(\"3\") == \"c\"\nassert solution(\"4\") == \"\"\nassert solution(\"5\") == \"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 38
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"a\"\nassert solution(\"AA\") == \"aa\"\nassert solution(\"AAB\") == \"aaa\"\nassert solution(\"ABC\") == \"abc\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 1') == 'aBC'\nprint('Your solution is correct!')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\nABC\") == \"aBC\"\nassert solution(\"2 3\\nABB\") == \"ABC\"\nassert solution(\"1 1\\nABC\") == \"ABC\"\nassert solution(\"2 1\\nBCA\") == \"BCA\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == 'ABC'\nassert solution('4 1') == 'abcd'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"Abc\"\nassert solution(\"5 1\") == \"aBc\"\nassert solution(\"4 3\") == \"Acd\"\nassert solution(\"6 1\") == \"abcd\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution.__doc__) == \"abc\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4 5\") == \"abcd\"\nassert solution(\"1 2 3 4 5 6\") == \"abcd\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nmoscow 10\nkhabarovsk 20\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3 4 6 1 5 2'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == '1 2 3 4 5 6'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3 4 6 5 2 1'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '''1\n3\n4\n5\n6\n7'''\nprint(solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n\n'''",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40') == '3\\n4\\n6\\n1\\n5\\n2'",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"6\\n\"\n    \"khabarovsk 20\\n\"\n    \":\\n\"\n    \"moscow 10\\n\"\n    \"kazan 50\\n\"\n    \"kazan 35\\n\"\n    \"moscow 60\\n\"\n    \"khabarovsk 40\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"6\\n\"\n    \"khabarovsk 20\\n\"\n    \"moscow 10\\n\"\n    \"kazan 50\\n\"\n    \"kazan 35\\n\"\n    \"moscow 60\\n\"\n    \"khabarovsk 40\\n\"\n) == \"1\\n\"\n\nassert solution(\n    \"4\\n\"\n    \"khabarovsk 20\\n\"\n    \"moscow 10\\n\"\n    \"kazan 50\\n\"\n    \"moscow 60\\n\"\n) == \"2\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\nmoscow 10\nkhabarovsk 20\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n\n''') == '6 1 5 4 2'\n\nassert solution('''\n5\nmoscow 10\nkhabarovsk 20\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n\n''') == '5 1 5 4 2'\n\nassert solution('''\n4\nmoscow 10\nkhabarovsk 20\nkazan 50\nkazan 35\nmoscow 60\n\n''') == '4 3 2 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3 4 6 1 5 2'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"No\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"9\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('3 500') == 'No'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 500\") == \"Yes\"\nassert solution(\"2 100\") == \"No\"\nassert solution(\"3 100\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 500\\n\") == \"Yes\"\nassert solution(\"1 500\\n\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"2 500\") == \"No\"\nassert solution(\"100 500\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '2 900'\n) == 'Yes'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 900\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin := '') == 'No'\nassert solution(stdin := '2 900') == 'Yes'\nassert solution(stdin := '1 3') == 'Yes'\nassert solution(stdin := '3 4') == 'No'\n\n------Submission------\npython3 -m submissions.roman.k_coin\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 10\n''') == '0.145833333333'\nassert solution('''2 10\n''') == '0.145833333333'\nassert solution('''3 10\n''') == '0.145833333333'\nassert solution('''4 10\n''') == '0.145833333333'\nassert solution('''5 10\n''') == '0.145833333333'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '0.145833333333'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 10''') == '0.1458333333'\nassert solution('''3 2''') == '0.625'\nassert solution('''1 2''') == '0.5'\nassert solution('''2 3''') == '0.3333333333'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('100 1000') == '0.145833333333'\nassert solution('101 011') == '0.145833333333'\nassert solution('100 1000') == '0.145833333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10') == '0.145833333333'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('2 5') == '0.103333333333'\nassert solution('100 5') == '0.0625'\n",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"0.1458333333\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3 10\n\"\"\") == \"0.1458333333\"\nassert solution(\"\"\"1 10\n\"\"\") == \"0.1458333333\"\nassert solution(\"\"\"2 10\n\"\"\") == \"0.1458333333\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\nassert solution(\"5 15\") == \"0.16666666666666\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10') == '0.145833333333'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('SAT') == '1'\nassert solution('TUE') == '2'\nassert solution('WED') == '3'\nassert solution('THU') == '4'\nassert solution('FRI') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"SAT\") == \"1\"\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"SAT\") == \"1\"\nassert solution(\n    \"SUN\") == \"1\"\nassert solution(\n    \"THU\") == \"2\"\nassert solution(\n    \"TUE\") == \"2\"\nassert solution(\n    \"WED\") == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"TUE\") == \"3\"\nassert solution(\"WED\") == \"4\"\nassert solution(\"THU\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('SAT') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"1\"\n\n\"\"\"\n\nday_of_week = input()\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\nprint(solution(input()))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 10 20\") == \"30\"\nassert solution(\"2 10 20\") == \"50\"\nassert solution(\"2 10 20\") == \"90\"\nassert solution(\"2 10 20\") == \"170\"\nassert solution(\"2 10 20\") == \"330\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n', 'test'\nassert solution('2 2 0') == '0\\n', 'test'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\n\"\"\"\n\nx_2000, r, D = list(map(int, stdin().split()))\n\nx_2001 = r*x_2000 - D\nx_2002 = r*x_2001 - D\nx_2003 = r*x_2002 - D\nx_2004 = r*x_2003 - D\nx_2005 = r*x_2004 - D\nx_2006 = r*x_2005 - D\nx_2007 = r*x_2006 - D\nx_2008 = r*x_2007 - D\nx_2009 = r*x_2008 - D\nx_2010 = r*x_2009 - D\n\nfor i in range(1, 11):\n    print(x_2010 - (r * x_2009 - D), end=\"\")\n    x_2010 = x_2010 - (r * x_2010 - D)\nprint()\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 10 20') == '30'\nassert solution('1 1 1') == '1'\nassert solution('2 1 1') == '2'\nassert solution('3 5 1') == '6'\nassert solution('4 10 2') == '16'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\"\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\n\n----\n\n### x[2001] = rx[2000] - D = 2*x[2000] - 10\n\nx_2 = x_1 - D\n\nx_3 = 2*x_1 - 10\n\nx_4 = 2*x_2 - 10\n\nx_5 = 2*x_3 - 10\n\nx_6 = 2*x_4 - 10\n\nx_7 = 2*x_5 - 10\n\nx_8 = 2*x_6 - 10\n\nx_9 = 2*x_7 - 10\n\nx_10 = 2*x_8 - 10",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3 1 1 4') == '5'\nassert solution('1 3 2 1 4') == '4'\nassert solution('3 4 1 2') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('1 3 1 1 4') == '5'\nassert solution('3 1 2') == '0'\nassert solution('3 1 2') == '0'\nassert solution('3 4 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('3\\n4 1 2\\n') == '0'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 1 1 4\\n') == '5'\nassert solution('5\\n1 3 2 1 4\\n') == '4'\nassert solution('3\\n4 1 2\\n') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 55
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n''') == '5'\nassert solution('''\n5\n1 3 2 1 4\n''') == '4'\nassert solution('''\n3\n4 1 2\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 2\n\n''') == '2'\n\nassert solution('''\n5\n1 3 1 1 4\n\n''') == '5'\n\nassert solution('''\n3\n4 1 2\n\n''') == '0'\n\nassert solution('''\n3\n4 1 2\n\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == \"5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n3 2 1\\n'\nassert solution(\n    '5\\n1 2 1\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n1 1 1000000000\\n'\nassert solution(\n    '5\\n3 3 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n3 2 1\\n'\nassert solution(\n    '5\\n1 2 1\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n1 1 1000000000\\n'\nassert solution(\n    '5\\n3 3 3\\n1 1 1\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n3 2 1\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\nassert solution('''\n4\n10 20 30 40\n5 50 55 60\n15 75 85 85\n25 50 50 50\n''') == 'YES\\n10 20 30 40\\n15 75 85 85\\n25 50 50 50\\nNO\\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 2 3\n100 100 100''') == 'YES'\nassert solution('''3 2 3\n10 30 20\n1 1000000000 1000000000''') == 'YES'\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == 'NO'\nassert solution('''5\n3 2 3\n10 30 20\n100 100 100\n50 49 49\n1 1000000000 1000000000''') == 'YES'",
        "num_ids_2": 18,
        "num_ids_4": 32
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\\n\" \\\n       \"3 2 1\\n\" \\\n       \"NO\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n3 2 3\n10 30 20\n100 100 100\n50 49 49\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n10 5 3\n2 100 100 100\n100 100 100 100\n5 100 100 100\n5 100 100 100\n2 100 100 100\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n10 5 3\n100 100 100 100\n100 100 100 100\n5 100 100 100\n5 100 100 100\n2 100 100 100\n1 1000000000 1000000000\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\") == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\"\nassert solution(\"\") == \"\"\nassert solution(\"2\\n3 2\\n\") == \"YES\\n3 2 1\"\nassert solution(\"1\\n1\\n\") == \"YES\\n1\\n1\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 72,
        "num_ids_4": 114
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'\nassert solution('6\\n4 2 6\\n1 6 5\\n3 7 6\\n9 10 1\\n5 7 9\\n2 3 7\\n') == 'YES\\n4 2 1\\nYES\\n1 6 5\\n3 7 6\\n9 10 1\\n5 7 9\\nNO\\nNO\\nNO\\n'\nassert solution('5\\n5 5 5\\n1 1 1\\n2 3 3\\n3 4 4\\n3 4 3\\n') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'\nassert solution('5\\n1 2 3\\n4 5 6\\n1 2 3\\n') == 'YES\\n1 2 3\\nYES\\n1 2 3\\nYES\\n'\nassert solution('5\\n1 2 3\\n4 5 6\\n5 6 5\\n') == 'NO\\nNO\\nNO\\nNO\\nNO\\n'\n",
        "num_ids_2": 150,
        "num_ids_4": 246
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 2 2\\n1 100 100 100\\n') == 'YES\\n3 2 1\\nYES'\nassert solution('5\\n3 2 3\\n100 100 100\\n50 49 49\\n10 30 20\\n1 1000000000 1000000000\\n') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\nYES'\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES\\n'\nassert solution('3 2 3') == 'YES\\n'\nassert solution('1 1 1') == 'YES\\n'\nassert solution('1 1000000000 1000000000') == 'NO\\n'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 6\n5 2 1 4 2\n''') == '4'\n\nassert solution('''5 1 4\n4 2 3 4 1\n''') == '5'\n\nassert solution('''5 3 3\n1 2 3 1 1\n''') == '5'\n\nassert solution('''5 3 3\n1 2 3 1 2\n''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n    6 2 5\n    1 2 1 4 2\n    \"\"\") == \"4\"\nassert solution(\n    \"\"\"\n    5 1 4\n    4 2 3 4 1\n    \"\"\") == \"1\"\nassert solution(\n    \"\"\"\n    5 3 3\n    1 2 3 1 1\n    \"\"\") == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 1\") == \"4\"\nassert solution(\"5 2 6\") == \"1\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1\\n5 2 1 4 2') == '4'\nassert solution('1 2 1\\n5 2 1 4 2') == '1'\nassert solution('1 1\\n5 2 1 4 2') == '5'\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 2 6\n5 2 1 4 2\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5 1 4\n4 2 3 4 1\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n5 3 3\n1 2 3 1 1\n\"\"\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2\\nabacaba\\na b') == '12'\nassert solution('10 3\\nsadfaasdda\\f a d') == '21'\nassert solution('7 1\\naaaaaaa\\nb') == '0'",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 2\nabacaba\na b''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''7 2\nabacaba\na b\n\n''') == '12'\nassert solution(\n'''10 3\nsadfaasdda\nf a d\n\n''') == '21'\nassert solution(\n'''7 1\naaaaaaa\nb\n\n''') == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\nabacaba\\nab\\nabc\\nab\\n') == '12'\nassert solution('10 3\\naaaaaaa\\nf a d\\nf\\na\\db\\n\\n') == '21'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2\\nabacaba\\na b') == '12'\nassert solution('10 3\\nabacaba\\nf a d') == '21'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2\\nabacaba\\na b\") == \"12\"\nassert solution(\"10 3\\nsadfaasdda\\f a d\") == \"21\"\nassert solution(\"7 1\\naaaaaa\\b\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '7 2\\nabacaba\\na b\\n') == '12'\nassert solution(\n    '10 3\\nsadfaasdda\\f a d\\n') == '21'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '45'\nassert solution('8 2') == '33'\nassert solution('10 4') == '22'\nassert solution('10 1') == '0'\nassert solution('7 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n\") == '2\\n'\nassert solution(\"4\\n\") == '6\\n'\nassert solution(\"10\\n\") == '-2999999997\\n'\nassert solution(\"6\\n\") == '6\\n'\nassert solution(\"1000000000\\n\") == '-1000000000\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\"\"\") == \"2\"\nassert solution(\"\"\"6\n1 -1000000000 1 -1000000000 1 -1000000000\n-1000000000\"\"\") == \"-1\"\nassert solution(\"\"\"6\n1 -1000000000 1 -1000000000 1 -1000000000\n-1000000000\"\"\") == \"1\"\nassert solution(\"\"\"4\n-1 -2 -3\"\"\") == \"\"\nassert solution(\"\"\"6\n1 -1000000000 1 -1000000000 1 -1000000000\n-1000000000\"\"\") == \"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 -1 -2') == '2'\nassert solution('4\\n-1 -2 -1 -3') == '6'\nassert solution('10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '-2999999997'\n",
        "num_ids_2": 39,
        "num_ids_4": 70
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2'\n\nassert solution('''4\n-1 -2 -3 -4\n10\n1 -1000000000 1 -1000000000 1 -1000000000\n6\n-1 -2 -3 -4''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('4') == '-1'\nassert solution('10') == '6'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\nassert solution('''\n4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6'\nassert solution('''\n3\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '2\\n-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == '6\\n-2999999997'\nprint('All tests passed!')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"-1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\nassert solution('8 9') == '3 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n\") == \"4 1\\n1 2\\n1 3\"\n",
        "num_ids_2": 74,
        "num_ids_4": 120
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n\"\"\") == \"3 4\"\n\nassert solution(\"\"\"\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n\"\"\") == \"3 4\"\n\nassert solution(\"\"\"\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\") == \"4 1\"\n\nassert solution(\"\"\"\n8 9\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n6 5\n4 5\n2 7\n5 8\n\"\"\") == \"4 1\"\n\nassert solution(\"\"\"\n10 10\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n\"\"\") == \"9 1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n1 2\n2 3\n3 5\n4 3\n1 5\n''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n''') == '4 1\\n1 2\\n1 3\\n'''\n\n\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\nassert solution('8 9') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 86
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1\\n1 2\\n1 3\\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1\\n1 2\\n1 3\\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4\\n', '1st example'\nassert solution('4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '4 1\\n1 2\\n1 3\\n', '2nd example'\nassert solution('8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\\n') == '3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\\n', '3rd example'\n",
        "num_ids_2": 106,
        "num_ids_4": 191
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"0\"\n\nassert solution([0,0]) == \"1\"\n\nassert solution([1,2,2]) == \"2\"\n\nassert solution([1,1,2]) == \"3\"\n\nassert solution([1,1,1]) == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n5\n3\n4\n1\n2\n1\n3\n0\n3\n5\n6\n3\n5\n4\n2\n3\n4\n3\n''') == \"0\", \"First\"\n\nassert solution('''\n10\n5\n3\n2\n1\n2\n1\n3\n0\n3\n5\n6\n3\n5\n4\n2\n3\n4\n3\n''') == \"40\", \"Second\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n5\n499993\n''') == '40'\nassert solution('''\n3\n2\n499993\n''') == '0'\nassert solution('''\n10\n5\n100000\n''') == '0'\nassert solution('''\n1\n2\n3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n5\n499993\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5\n''') == '0'\nassert solution('''\n3\n5\n''') == '40'\nassert solution('''\n6\n6\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n5\n499993\n''') == '0'\nassert solution('''\n1\n9\n3789\n''') == '40'\nassert solution('''\n1\n25\n302459\n''') == '41664916690999888'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '40'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"40\"\nassert solution(\"5\\n\") == \"40\"\nprint(solution(*[*[int(i) for i in input().split()] for _ in range(int(input()))]))",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 5 7 6 7\n''') == '1 1 1 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n4 5 7 6 7 5 4 4 6 4\\n') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('5\\n8 3 4 5 7 6 7 5 4\\n') == '1 1 1 2 2 2 2 2 3 -1'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 1 2'\nassert solution('4') == '1 1 2 3'\nassert solution('4') == '1 1 2 3'\nassert solution('10') == '1 1 2 3 4 5 6 7 8 9'\nassert solution('3') == '1 1 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1 1'\nassert solution('1') == '1 -1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"4\") == \"1 3 2 4\"\nassert solution(\"10\") == \"1 2 3 4 5 6 7 8 9\"\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4 5 7 6 7 5 4 4 6 4') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('2\\n3 2 4 1 3 4 5') == '1 1 1 2 -1 1 1 4 -1 1 1 5'\nassert solution('3\\n6 1 2 2 4 1 3 3') == '2 2 2 2 4 -1 1 -1 3 -1 -1 2 2 -1 3 -1 4 -1 -1 3 -1 2 2 -1 3 2 -1 2 4 -1 3 2 -1 4 1 -1 -1 3 1 -1 2 -1 2 4 -1 -1 1 2 -1 2 1 -1 2 -1 2 4 -1 2 1 -1 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1 2 -1 2 2 -1 1 1",
        "num_ids_2": 64,
        "num_ids_4": 1620
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"7\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n64\n32\n97\n2\n12345\n''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\"\"\n1\n32\n97\n2\n12345\"\"\") == \"NO\"\nassert solution(\"\"\"\n8\n8\n8\n8\n8\"\"\") == \"YES\"",
        "num_ids_2": 13,
        "num_ids_4": 18
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6''') == 'YES'\nassert solution('''1\n3\n4\n5\n6\n7''') == 'NO'\nassert solution('''2\n2\n2\n2\n2''') == 'YES'\nassert solution('''10\n4\n4\n4\n4\n4''') == 'YES'\nassert solution('''10\n8\n7\n6\n5\n4''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n32\n97\n2\n12345\n''') == 'YES 2 4 8 23'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"32\") == \"YES\"\nassert solution(\"97\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"12345\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\n12\n24\n4\n16\n26\n48\n2\n3\n17\n48\n21\n24\n16\n24\n4\n17\n32\n26\n''') == 'YES\\n3 5 823'\nassert solution('''\n20\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES\\n10 3 5 823'\nassert solution('''\n20\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == 'YES\\n11 4 6 694'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    5\n    64\n    32\n    97\n    2\n    12345\n    '''\n) == 'YES'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n3\n7\n''') == 'YES'\n\nassert solution('''2\n4\n8\n''') == 'NO'\n\nassert solution('''5\n64\n32\n97\n2\n12345\n''') == 'YES'\n\nassert solution('''6\n64\n32\n97\n2\n12345\n''') == 'NO'\n\nassert solution('''7\n64\n32\n97\n2\n12345\n''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'abbbba'\nassert solution('8') == 'abbabab'\nassert solution('1') == 'b'\nassert solution('2') == 'bb'",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"aba\"\nassert solution(\"4\") == \"abba\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"abba\"\nassert solution(\"4\") == \"ababab\"\nassert solution(\"6\") == \"ba\"\nassert solution(\"2\") == \"ba\"\nassert solution(\"0\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\nbbbb\n\n''') == '2'\nassert solution('''\n6\nababab\n\n''') == '0'\nassert solution('''\n2\naa\n\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"abba\"\nassert solution(\"6\") == \"ababab\"\nassert solution(\"4\") == \"abba\"\nassert solution(\"5\") == \"ba\"",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nbbbb\n''') == '2'\nassert solution('''\n6\nababab\n''') == '0'\nassert solution('''\n2\naa\n''') == '1'\nassert solution('''\n1\naa\n''') == 'ba'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '2'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == solution_([input_])[0]",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nbbb\") == \"abba\"\nassert solution(\"6\\nababab\") == \"ababab\"\nassert solution(\"2\\naa\") == \"ba\"",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"aa\"\nassert solution(\"4\") == \"ba\"\nassert solution(\"6\") == \"ba\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nprint('All tests passed!')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n') == '9'\nassert solution('10\\n0 1\\n1 0\\n0 2\\n3 2\\n0 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n') == '13'\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"15\"\nassert solution(\"2 2\") == \"9\"\nassert solution(\"5 1\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"15\"\nassert solution('''\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == \"9\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"15\"\nassert solution(\"5 2 1\") == \"9\"\nassert solution(\"6 1 1\") == \"8\"\nassert solution(\"6 2 1\") == \"7\"\nassert solution(\"6 1 1\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''\n12\n2 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0 3\n0 2\n1 1\n1 0\n2 0\n3 2\n0",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"2 3\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '15'\nassert solution('1 2') == '9'\nassert solution('8 2') == '13'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('1 1 1') == '2'\nassert solution('1 1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('1 1 1 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('1') == '2'\nassert solution('3') == '2'\nassert solution('1') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"3\\n1\\n2\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('2') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '2.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '2.0000'\nassert solution('5') == '5.0000'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == '1.000000000000'\nassert solution(\"3\") == '0.96'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '1'\n\n'''\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1.000000000000'\nassert solution('4') == '0.99999'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1.000000000000'\nassert solution('1') == '0.96'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3''') == '1.000000000000'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"20\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Hello World\\n'\nassert solution('2') == 'Hello World\\n'\n\"\"\"\n\nN = int(input())\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'Hello World'\nassert solution('3') == 'Hello World'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n\n2\nA\nB\n''') == 'Hello World'\nassert solution('''1\n\n2\n0\n2\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n1\n\n2\n1\n2\n\n\"\"\"\n) == \"Hello World\"\nassert solution(\n\"\"\"\n1\n\n2\n1\n2\n\n\"\"\"\n) == \"Hello World\"\nassert solution(\n\"\"\"\n1\n\n2\n1\n2\n\n\"\"\"\n) == \"Hello World\"\nassert solution(\n\"\"\"\n1\n\n2\n1\n2\n\n\"\"\"\n) == \"Hello World\"\n\nassert solution(\n\"\"\"\n2\n\n2\n1\n2\n\n\"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+1=2\"\nassert solution(\"2\") == \"2+2=4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n5\n6\n''') == '17'\nassert solution('''1\n3\n''') == '4'\nassert solution('''2\n2\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '2 3'\n\nprint(solution('1'))\nprint(solution('2'))\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Hello World'\nassert solution('1') == 'Hello World'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"1+2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"6\"\nassert solution(\"2\") == \"A+B\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 3') == '3333'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 2\") == \"1 0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('1\\n3') == '3'\nassert solution('2\\n3') == '3'\nassert solution('4\\n3') == '3'\nassert solution('4\\n4') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('4\\n5') == '4'\nassert solution('6\\n7') == '6'\nassert solution('7\\n9') == '7'\nassert solution('9\\n7') == '7'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3\n''') == '3333'\nassert solution('''\n5 5\n''') == '55555'\nassert solution('''\n1 3\n''') == '1'\nassert solution('''\n4 1\n''') == '4'\nassert solution('''\n1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '333'\nassert solution('4 4') == '4444'\nassert solution('1 1') == '1'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '3333'\nassert solution('8 8') == '8888'\nassert solution('7 7') == '7777'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n2 2\n1 1\n''') == '1'\nassert solution('''1 1\n1 1\n1 1\n''') == '1'\nassert solution('''1 1\n1 1\n2 2\n''') == '1'\nassert solution('''3 4\n3 4\n4 4\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '3333'\nassert solution('13 8') == '1383'\nassert solution('10 1') == '110'\nassert solution('11 2') == '111'\nassert solution('13 5') == '135'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"3333\"\nassert solution(\"1 2\") == \"22\"\nassert solution(\"3 3\") == \"3333\"\nassert solution(\"5 5\") == \"5555\"\nassert solution(\"10 1\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"\n\nprint(solution(\"a\"))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'a'\n\n------Extension-----\nFor each letter, we can either make the letter with case of lower case\nletters or upper case letters. We can use any letter of the alphabet and can't use z.\n\nThe answer we are looking for is the letter that comes after the letter whose case is different from the case of the letter,\nwhile the letter we were looking for was not found.\n\nIn the example above we can easily check if we were looking for 'a' or 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"b\") == \"a\"\nassert solution(\"c\") == \"d\"\nassert solution(\"d\") == \"c\"\nassert solution(\"e\") == \"f\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"b\"\nprint(solution(\"a\"))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'b'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('z') == 'a'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"z\") == \"a\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('oder atc') == 'atcoder'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('oder atc') == 'atcoder'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"oder atc\") == \"atcoder\", \"Error\"\nassert solution(\"abc\") == \"abac\", \"Error\"\nassert solution(\"abc\") == \"ababc\", \"Error\"\nassert solution(\"\") == \"\", \"Error\"\nassert solution(\"abc\") == \"abc\", \"Error\"\n",
        "num_ids_2": 31,
        "num_ids_4": 56
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"oder atc\") == \"atcoder\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"atcoder\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('oder atc') == 'atcoder'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    'oder atc') == 'atcoder'\n\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"oder atc\"\n    ) == \"atcoder\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 5 7 8 2\") == \"0\"\nassert solution(\"6\\n5 1 2 4 6 3\") == \"1000000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'\nassert solution('1000000') == '1000000'\nassert solution('5 1 5 7 8 2') == '0'\nassert solution('5 1 5 7 8 2') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\nassert solution('''\n15\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\n''') == '0'\nassert solution('''\n2\n1\n''') == '1'\nassert solution('''\n10\n1 2 3 4 5 6 7 8 9 10\n''') == '0'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('1000000 1000000') == '1000000'",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '1'\nassert solution('1000000') == '1000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '1000000'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3') == '3'\nassert solution('2\\n1 2 3') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"1000000\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1 2 3') == '1'\nassert solution('7 10 50 12 1 8') == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5 5 6') == '5'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 100 99') == '1'\nassert solution('7 4 2 1') == '6'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"6 2 3 3\\n7 10 50 12 1 8\"\n) == \"5\"\nassert solution(\n    \"1 1 100 99\\n100\"\n) == \"1\"\nassert solution(\n    \"7 4 2 1\\n1 3 5 4 2 7 6\"\n) == \"6\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n6 2 3 3\n7 10 50 12 1 8\n\"\"\") == \"5\"\nassert solution(\"\"\"\n1 1 100 99\n100\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7 4 2 1\n1 3 5 4 2 7 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n7 2 2 1\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_1) == \"5\"\nassert solution(input_2) == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 2 3 3\n7 10 50 12 1 8''') == \"5\"\nassert solution('''1 1 100 99\n100''') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3 1\n6 7 2 9\n''') == '1'\n\nassert solution('''\n6 3 2\n8 9 2 5 6 7\n''') == '2'\n\nassert solution('''\n7 6 4\n1 2 5 8 9 6 8 9\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 2 3 3') == '5'\nassert solution('7 10 50 12 1 8') == '6'\nassert solution('1 1 100 99') == '1'\nassert solution('7 4 2 1') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3\\n2') == '2'\n\nassert solution('4 2') == '0 1 2 3'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 3\n3 2 0 6 10 12\n''') == \"3 2 0 7 10 14\"\nassert solution('''4 2\n0 1 2 3\n''') == \"0 1 2 3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n6 4\n3 2 0 6 10 12\n''') == '3 2 0 6 10 12'\n\nassert solution('''\n4 1\n2 1 2 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3 2'\n\n\n'''\n\n\nn, m = map(int, stdin.readline().split())",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '0 0 1 2 3'\nassert solution('3 2') == '0 0 1 2 3'\n\nassert solution('6 3') == '3 2 0 6 10 12'\nassert solution('4 2') == '0 0 1 2 3'",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"6 3\",\n    \"3 2 0 6 10 12\",\n) == \"3 2 0 7 10 14\"\nassert solution(\n    \"4 2\",\n    \"0 1 2 3\",\n) == \"0 1 2 3\"\nassert solution(\n    \"1000000\",\n    \"0 1 2 3\",\n) == \"0 1 2 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '''\n3\n3 2 0 7 10 14 \n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'\nassert solution('1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99'",
        "num_ids_2": 220,
        "num_ids_4": 426
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6\\n1 2 0 2 0\\n2 4\\n3 3\\n1 5\\n1 2\\n1 5\\n2 3\\n') == '8'\nassert solution('10 10\\n2 2\\n8 5\\n1 1\\n6 3\\n4 5\\n8 5\\n2 5\\n1 1\\n2 2\\n1 5\\n1 6\\n2 5\\n1 7\\n3 5\\n2 7\\n5 7\\n1 1\\n3 4\\n2 5\\n4 6\\n3 7\\n5 1\\n6 3\\n4 4\\n2 4\\n4 5\\n3 7\\n6 5\\n4 6\\n4 7\\n1 4\\n1 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 8\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 1\\n4 5\\n2 5\\n3 4\\n2 5\\n2 5\\n3 4\\n1 1\\n2 5\\n1 2\\n3 5\\n2 5\\n3 6\\n4 5\\n4 7\\n5 5\\n3 7\\n2 6\\n4 4\\n4 5\\n5 2\\n3 6\\n3 7\\n5 5\\n3 7\\n4 4\\n2 4\\n5 6\\n3 4\\n1 2\\n1 2\\n1 4\\n2 4\\n3 4\\n2 5\\n3 6\\n3 7\\n1 4\\n2 5\\n3 7\\n4 6\\n3 4\\n4 5\\n2 4\\n1 2\\n4 7\\n4 5\\n3 7\\n4 4\\n4 6\\n4 5\\n4 6\\n5 7\\n4 5\\n3 7\\n2 4\\n5 6\\n3 6\\n4 4\\n1 5\\n1 4\\n2 5\\n5 4\\n3 5\\n1 6\\n4 5\\n1 6\\n1 6\\n1 7\\n2 6\\n3 5\\n4 5\\n4 5\\n1 4\\n1 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 5\\n4 6\\n3 5\\n2 5\\n5 2\\n3 4\\n2 5\\n4 5\\n4 5\\n1 4\\n1 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 5\\n4 6\\n3 4\\n3 5\\n3 6\\n4 4\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 7\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 7\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\n3 5\\n3 6\\n4 2\\n4 5\\n5 2\\n3 6\\n2 4\\n5 3\\n1 6\\n2 5\\n4 5\\n1 7\\n4 6\\n4 7\\n3 4\\",
        "num_ids_2": 1351,
        "num_ids_4": 1351
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 6\\n\"\n    \"1 2 0 2 0\\n\"\n    \"2 4\\n\"\n    \"3 3\\n\"\n    \"1 5\\n\"\n    \"1 2\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n) == \"8\"\n\nassert solution(\n    \"5 3\\n\"\n    \"4 2\\n\"\n    \"3 3\\n\"\n    \"1 5\\n\"\n    \"1 2\\n\"\n    \"1 5\\n\"\n    \"2 3\\n\"\n) == \"20\"\n\nassert solution(\n    \"5 4\\n\"\n    \"2 5\\n\"\n    \"2 5\\n\"\n    \"5 4\\n\"\n    \"2 5\\n\"\n    \"2 5\\n\"\n    \"5 4\\n\"\n    \"2 5\\n\"\n    \"5 4\\n\"\n) == \"21\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\") == \"8\"\nassert solution(\"5 3\") == \"20\"\nassert solution(\"5 1\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '8'\nassert solution('1 2 0 2 0') == '8'\nassert solution('2 4') == '20'\nassert solution('3 3') == '20'\nassert solution('1 5') == '20'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 0 2 0') == \"8\"\nassert solution('2 4') == \"20\"\nassert solution('3 3') == \"20\"\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n5\n3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == \"8\"\nassert solution('5 3') == \"20\"\nassert solution('5 5') == \"11\"\nassert solution('3 2') == \"5\"\nassert solution('10 3') == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution(\"3 5\") == \"8\"\nassert solution(\"2 4\") == \"6\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n        \"5 6\\n\"\n        \"1 2 0 2 0\\n\"\n        \"2 4\\n\"\n        \"3 3\\n\"\n        \"1 5\\n\"\n        \"1 2\\n\"\n        \"1 5\\n\"\n        \"2 3\\n\"\n        ) == \"8\"\n\n\nassert solution(\n        \"5 3\\n\"\n        \"4 2\\n\"\n        \"2 5\\n\"\n        \"3 3\\n\"\n        \"1 5\\n\"\n        \"1 2\\n\"\n        \"1 5\\n\"\n        \"2 3\\n\"\n        ) == \"20\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\"\"\"\n) == '8'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'NO'\nassert solution('''\n3\n1\n10 1\n1\n1\n1\n1\n1\n''') == 'NO'\nassert solution('''\n10\n1 1\n10 1\n1\n10\n1\n1\n10\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 1\n2\n1 1 1\n1\n10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'NO'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'NO'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n2\\n2\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n2\\n1\\n2\\n1\\n1\\n1\\n2\\n1\\n2\\n2\\n2\\n1\\n1\\n2\\n2\\n2\\n2\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\",
        "num_ids_2": 1587,
        "num_ids_4": 1587
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'NO'\nassert solution('5') == 'YES'\nassert solution('5') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 1 1 1 1 1 1\") == \"NO\"\nassert solution(\"5\\n1\\n10 5 2 10 1 1 2 5\") == \"NO\"\nassert solution(\"5\\n1\\n10000 10000 10000 10000\") == \"YES\"\n",
        "num_ids_2": 40,
        "num_ids_4": 86
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n2\n1 1 1 1 1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 10 5\") == \"3\"\nassert solution(\"7 15 18\") == \"9\"\nassert solution(\"2 6 3\") == \"2\"\nassert solution(\"5 7 4\") == \"5\"\nassert solution(\"6 5 4\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1') == '9'",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"6 10 5\") == \"3\"\nassert solution(\"2 5 1\") == \"4\"\nassert solution(\"5 3 9\") == \"5\"\nassert solution(\"6 2 2\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 5 1\\n5 3 9\") == \"3\"\nassert solution(\"6\\n10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"4\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 6 2\") == \"3\"\nassert solution(\"7 15 18\") == \"9\"\nassert solution(\"6 6\") == \"5\"\nassert solution(\"3 6 9\") == \"7\"\nassert solution(\"6 7 7\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3 1\"\nassert solution() == \"7486 3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3'",
        "num_ids_2": 41,
        "num_ids_4": 71
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\n\nassert solution('''\n6\n1 5 12 13 2 15\n''') == '7 2'\n\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3 1'\nassert solution() == '7486 3'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3 1'\nassert solution('6') == '7 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2 1'\nassert solution('6') == '7 2'\nassert solution('10') == '7486 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) in {'3 1', '7486 3'}\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n\"\n    \"1 1 3 4 2\"\n) == \"3 1\\n\"\n\nassert solution(\n    \"6\\n\"\n    \"1 5 12 13 2 15\"\n) == \"7 2\\n\"\n\nassert solution(\n    \"10\\n\"\n    \"1 2 5 129 185 581 1041 1909 1580 8150\"\n) == \"7486 3\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 3 4 2') == '3 1'\nassert solution('6\\n1 5 12 13 2 15') == '7 2'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150') == '7486 3'",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '1'\nassert solution('7') == '1'\nassert solution('9876') == '1'\nassert solution('10000') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5009\n7\n9876\n10000\n10\n''') == '2'\nassert solution('''\n1000\n1\n2\n3\n4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '1'\nassert solution('9876') == '1'\nassert solution('10000') == '4'\nassert solution('10') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '4'\nassert solution('100') == '3'\nassert solution('1000') == '4'\nassert solution('10000') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10000\") == \"4\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5 9 8 7 6\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10\n8\n100000\n\n''') == \"1 5 1\"\n\nassert solution('''\n1\n1\n\n''') == \"1\"\n\nassert solution('''\n5\n12984\n6787\n5654\n1245\n0\n\n''') == \"2 4 4\"\n\nassert solution('''\n7\n2654\n54\n569\n2635\n3\n10\n1797\n\n''') == \"3 4 2\"\n\nassert solution('''\n1\n0\n\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '1'\nassert solution('1337') == '1'\nassert solution('16') == '1'\nassert solution('1604') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n5009\\n7\\n9876\\n10000\\n10') == '2\\n5000 9\\n1\\n7'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1 1 3 3 3 2 2 3\"\nassert solution(\n    \"4\\n4\\n4\\n4\\n4\\n4\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n\") == \"2 2 2 2 2 2 2 2 2 2 2\"\nassert solution(\n    \"3\\n5\\n2 1 2 3\\n2 1 2\\n1\\n1\\n2 3 2\\n3 1 1\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n3 4 1 2\\n3 4 1 2\\n3 4 1 2\\n\") == \"1 1 1 1 1 2 2 2 2 1 3\"\nassert solution(\n    \"8\\n3\\n1 2 3 4\\n4 5 6 7\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n\") == \"1 1 1 1 1 1 1 1 1 1 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '3 3 3'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '2 3 3 2 1 3'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\n",
        "num_ids_2": 62,
        "num_ids_4": 127
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 1 1 1 1 3 3 3 2 2 2 2 3 2 1 4 4 4 1 4'\nassert solution() == '3 3 3 3 2 2 2 2 1 1 1 2 1 3 1 4 4 1 1 4'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\\n'\n) == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"2 3 1\"\nassert solution(\"5\") == \"2 2 3 4 5\"\nassert solution(\"3\") == \"3 3 3\"\nassert solution(\"6\") == \"3 3 3 2 2 1 4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '4 3 2 2 2 2 3 3 4 5 1 5 5 1 4 3 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2 1 1\\n4 4 4 1 4'\nassert solution('4\\n3\\n2 3 1\\n5\\n4 6 2 1 5 3\\n1\\n1') == '1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2 1 1\\n4 4 4 1 4'\nassert solution('3\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2 1 1\\n4 4 4 1 4'",
        "num_ids_2": 149,
        "num_ids_4": 229
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1 1 1 1 1 3 2 3 2 1 3'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1 1 1 1 1 3 2 3 2 1 3'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1 1 1 1 1 3 2 3 2 1 3'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1 1 1 1 1 3 2 3 2 1 3'\nassert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '1 1 1 1 1 3 2 3 2 1 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1 1 1 1 1 1'\nassert solution('5') == '3 3 3'\nassert solution('4') == '2 3 3 2 1 3'",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '3 3 3 2 1 3'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\"\n) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '2'\n\nassert solution('''10\n10\n9 9 9 9 9 9 9 9 9 9 9 9''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == \"2\\n2\\n1\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2''') == '2'\nassert solution('''5\n1 2 3 4 5\n3\n1 2 2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '1'\nassert solution('4') == '2'\nassert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 4') == '2'\nassert solution('3 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2\\n10 4\\n1 2\\n4 3\\n') == '0 0 1 2'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 ",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2'\n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n4 2 2 5\\n1 2\") == \"2 1 0 1 2\"\nassert solution(\"5 2\\n6 3 5 6 8\\n2 4 3 5 1\\n6 5 1 1 6\\n5 3 3 6 4 4\") == \"5 4 3 3 5 3\"\nassert solution(\"10 4\\n10 4 10 15\\n1 2\\n4 3\\n5 6\\n6 8\\n8 3\\n9 5\\n10 8\\n8 4\\n10 7\\n3 6\\n4 9\\n6 7\\n6 5\\n4 3\\n9 8\\n9 2\\n8 5\\n3 7\\n3 1\\n9 5\\n7 4\\n4 8\\n5 9\\n3 4\\n1 4\\n1 2\\n3 5\\n3 6\\n6 4\\n4 5\\n5 1\\n2 4\\n6 4\\n2 3\\n1 3\\n5 3\\n5 2\\n2 4\\n1 1\\n2 4\\n7 3\\n4 6\\n1 1\\n3 5\\n3 2\\n4 4\\n5 2\\n6 3\\n5 3\\n4 1\\n4 7\\n1 3\\n7 2\\n5 4\\n5 4\\n5 2\\n1 6\\n3 7\\n1 6\\n2 6\\n5 4\\n3 2\\n5 5\\n1 1\\n2 6\\n7 7\\n3 7\\n2 4\\n3 7\\n2 4\\n6 5\\n4 1\\n4 1\\n4 2\\n5 4\\n4 3\\n3 6\\n6 6\\n5 3\\n7 4\\n1 5\\n5 5\\n5 5\\n3 2\\n6 7\\n7 4\\n5 4\\n3 5\\n3 5\\n4 7\\n4 1\\n4 6\\n3 1\\n5 2\\n1 3\\n3 3\\n5 1\\n5 1\\n5 1\\n6 7\\n1 3\\n2 4\\n3 5\\n2 5\\n4 7\\n1 2\\n2 3\\n4 6\\n5 1\\n1 6\\n2 4\\n1 6\\n2 4\\n1 6\\n4 8\\n1 3\\n2 5\\n4 5\\n6 3\\n6 3\\n6 2\\n4 1\\n3 5\\n5 4\\n1 6\\n3 4\\n1 5\\n5 4\\n6 2\\n4 8\\n1 5\\n4 6\\n6 4\\n6 6\\n6 6\\n4 4\\n1 7\\n4 7\\n1 3\\n5 1\\n3 2\\n3 3\\n4 2\\n4 5\\n1 1\\n1 2\\n5 5\\n2 5\\n6 2\\n1 4\\n4 3\\n5 1\\n5 1\\n5 1\\n5 1\\n5 4\\n6 2\\n1 2\\n3 6\\n5 3\\n2 2\\n5 5\\n5 4\\n5 2\\n1 4\\n3 7\\n6 7\\n1 6\\n3 7\\n6 5\\n4 4\\n6 4\\n3 7\\n5 2\\n6 4\\n1 2\\n3 5\\n1 6\\n1 6\\n6 3\\n3 7\\n4 5\\n4 5\\n1 6\\n6 3\\n1 2\\n2 3\\n4 6\\n2 5\\n4 3\\n6 6\\n6 6\\n1 4\\n3 5\\n3 5\\n2 6\\n6 6\\n3 7\\n6 5\\n5 3\\n2 5\\n6 5\\n6 7\\n4 2\\n5 7\\n2 5\\n3 6\\n5 4\\n6 4\\n5 5\\n6 5\\n2 4\\n5 6\\n5 4\\n6 7\\n2 5\\n6 5\\n3 6\\n6 5\\n5 4\\n2 4\\n6 6\\n6 5\\n5 2\\n2 4\\n2 4\\n5 3\\n4 5\\n3 7\\n4 5\\n4 5\\n4 5\\n5 5\\n4 7\\n5 6\\n6 5\\n2 6\\n3 5\\n6 6\\n5 5\\n4 5\\n6 5\\n5 4\\n3 7\\n5 2\\n6 3\\n5 2\\n2 5\\n4 3\\n4 3\\n5 1\\n2 6\\n3 4\\n2 5\\n4 3\\n4 4\\n3 7\\n4 5\\n5 6\\n3 6\\n3 5\\n4 5\\n4 6\\n1 2\\n5 7\\n5 2\\n4 5\\n5 4\\n4 5\\n4 6\\n6 5\\n4 5\\n4 6\\n3 5\\n4 4\\n5 6\\n2 4\\n4 6\\n4 5\\n5 6\\n4 7\\n5 5\\n5 4\\n4 6\\n5 6\\n1 6\\n2 4\\n4 5\\n5 6\\n4 6\\n5 2\\n6 6\\n5 5\\n4 4\\n5 5\\n6 2\\n1 6\\n4 5\\n3 5\\n5 3\\n2 6\\n3 5\\n1 6\\n2 4\\n6 6\\n5 6\\n6 4\\n5 6\\n5 4\\n4 6\\n1 4\\n3 7\\n6 7\\n3 6\\n4 4\\n3 6\\n5 6\\n6 4\\n6 6\\n3 4\\n",
        "num_ids_2": 70,
        "num_ids_4": 1364
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '0 0 1 2'\nassert solution('10 4') == '5 4 0 5 3 3 9 0 2 5'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"0 0 1 2\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 2\\n\"\n    \"10 4 10 15\\n\"\n    \"1 2\\n\"\n    \"4 3\"\n) == \"0 0 1 2\\n\"\n\nassert solution(\n    \"10 4\\n\"\n    \"5 4 1 5 4 3 7 1 2 5\\n\"\n    \"4 6\\n\"\n    \"2 1\\n\"\n    \"10 8\\n\"\n    \"3 5\\n\"\n) == \"5 4 0 5 3 3 9 0 2 5\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"0 0 1 2\", \"First\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\", \"Second\"\nassert solution(\"10 8\") == \"5 4 0 5 3 3 9 0 2 5\", \"Third\"\nassert solution(\"5 4\") == \"0 0 1 2\", \"Fourth\"\nassert solution(\"4 6\") == \"5 4 0 5 3 3 9 0 2 5\", \"Fifth\"\n\n\"\"\"\n\nimport sys\nfrom math import factorial as f",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"NO\"\nassert solution(\"1 2 3 4 5 6\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 2 3\\n') == 'YES'\nassert solution('3 3\\n1 2 3\\n') == 'YES'\nassert solution('3 2\\n1 2 3\\n') == 'NO'\nassert solution('3 2\\n1 3 2\\n') == 'NO'\nassert solution('3 2\\n1 3 2\\n') == 'NO'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1 2 3\") == \"abb\"\nassert solution(\"1 3 2\") == \"abb\"\nassert solution(\"1 2 3 4 5\") == \"no\"\nassert solution(\"a b c d e f g\") == \"no\"\n\n\n\"\"\"\n\nfrom itertools import permutations\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"NO\"\nassert solution([\"NO\",\"NO\",\"NO\"]) == \"NO\"\n\n\n\"\"\"\n\n\nimport heapq\nfrom collections import defaultdict",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"NO\"\nassert solution(\"3 1\") == \"YES\"\nassert solution(\"3 2\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\n1 2 3\\n') == 'YES'\nassert solution('1 2\\n1 3 2\\n') == 'YES'\nassert solution('3 2\\n1 2 3\\n') == 'NO'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\") == \"YES\", \"Test 1\"\nassert solution(\"3 10\") == \"NO\", \"Test 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'abb'\nassert solution('2 1 3') == 'ab'\nassert solution('2 3 1') == 'ab'\nassert solution('4 1 3 2') == 'ab'\nassert solution('5 1 5 2 3') == 'ab'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"43\"\nassert solution(\"4\") == \"69\"\nassert solution(\"6\") == \"6\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '43'\nassert solution('4') == '69'\nassert solution('6') == '6 1 3 5 2 4'\nassert solution('2') == '3 2 1'\nassert solution('10 10 10 10 10') == '64 1 3 5 2 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '43'\nassert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '64'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"43\"\nassert solution(\"4\\n10 10 10 10\\n\") == \"64\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\"\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 10 20 10 20\n3 5 4 5 4 5''') == '43 1 3 5 2 4'\nassert solution('''4 6 7 8 9\n7 3 5 4 2 1''') == '6 1 3 5 4 2 7'\nassert solution('''2\n5 4\n5 4''') == '2 1'\nassert solution('''1\n1''') == '1'\nassert solution('''2\n1 2''') == '2 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == str(min(map(int, stdin.split()))) +'' + str(min(stdin.split()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '43'\nassert solution(input()) == '2 1 4 3 5 2 4'\nassert solution(input()) == '69'\nassert solution(input()) == '6 1 3 5 2 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n20 10 20\n''') == '43'\nassert solution('''\n4\n10 10 10 10\n''') == '69'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''\n2\n1 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n10 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '69'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('100') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n4 2 5 1 3\") == \"3\"\nassert solution(\"6\\n2 1 5 3 4\") == \"4\"\nassert solution(\"7\\n4 5 1 3 2\") == \"4\"\nassert solution(\"8\\n4 2 5 1 3 7\") == \"2\"\nassert solution(\"9\\n4 3 2 5 1 7\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n5 2 1 3') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 2 5 1 3\\n') == '3'\nassert solution('6\\n7 8 9 10 1 2 3\\n') == '4'\nassert solution('5\\n7 8 9 10 1 2 3\\n') == '3'\nassert solution('1\\n4 2 5 1 3\\n') == '1'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n4 2 5 1 3') == \"3\"\nassert solution('5\\n5 2 5 1 3') == \"3\"\nassert solution('5\\n5 3 2 5 1') == \"3\"\nassert solution('5\\n3 2 5 1 3') == \"2\"\nassert solution('5\\n1 2 3 4 5') == \"5\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('2\\n10 8 9 2 3') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '3'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4 2 5 1 3\n''') == '3'\nassert solution('''\n2\n1 4 2\n''') == '1'\nassert solution('''\n4\n4 3 2 5 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"9\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n4 2 5 1 3 4') == '4'\nassert solution('5\\n4 2 5 1 3 4 5') == '3'\n",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n') == '1'\nassert solution('2\\n') == '2'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 3\\n') == '1'\nassert solution('5\\n3 3 3 3 3\\n') == '4'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '2'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 3 3 3') == '1'\nassert solution('4\\n3 3 3 3') == '2'\nassert solution('5\\n4 2 4 2 4') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\nassert solution(input(True)) == '1'\nassert solution(input(False)) == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('1') == '2'\nassert solution('7') == '3'\nassert solution('99') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '9'\nassert solution('6\\n1 2 3 4 5') == '6'\n",
        "num_ids_2": 39,
        "num_ids_4": 56
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('5\\n3 3 3 3 2') == '2'\nassert solution('8\\n1 2 4 5 6 7 8') == '7'",
        "num_ids_2": 33,
        "num_ids_4": 52
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 2 3 4 5\n''') == '1'\nassert solution('''\n0 0 2 2 3\n''') == '2'\nassert solution('''\n1 0 2 2 3\n''') == '3'\nassert solution('''\n1 1 1 1 1\n''') == '4'\nassert solution('''\n2 2 2 2 2\n''') == '3'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"1 2 3 4 5\") == \"1\"\nassert solution(\"2 4 3 1\") == \"4\"\nassert solution(\"1 2 1 1 1\") == \"1\"\nassert solution(\"3 3 2 3\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 4 5\") == \"1\"\nassert solution(\"0 2 4 3\") == \"1\"\nassert solution(\"1 2 4 3\") == \"2\"\nassert solution(\"1 2 3 4\") == \"2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 2 1 3 4 5\") == \"2\"\nassert solution(\"2 1 3 4 5 0\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 1 2 3 4 5') == '5'\nassert solution('-1 -2 3 -4 5') == '4'\nassert solution('4 -1 -2 3 5') == '3'\nassert solution('4 -1 5 -2 3') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 1 0 3 2') == '4'\nassert solution('1 1 2 2 1') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 0 0 1 0') == '2'\nassert solution('0 0 0 1 0 1 0') == '2'\nassert solution('0 0 0 1 0 0 0 1') == '2'\nassert solution('0 0 0 0 1 0 0 0 1') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 5 9 3 3') == '3'\nassert solution('1 5 8 3 2') == '4'\nassert solution('0 2 4 7 5') == '2'\nassert solution('1 5 9 7 6') == '5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\n\n=====\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '0'\nassert solution('3 5') == '0'\nassert solution('2 3') == '0'\nassert solution('8 3') == '1'\nassert solution('2 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"0\"\n\n\"\"\"\n\nH, W = map(int, input().split())\n\nH_pieces = H//2\nW_pieces = W//2",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 2') == '1'\nassert solution('1 1') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 5]) == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\nassert solution('2 5') == '1'\nassert solution('3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '0'\nassert solution('1 1') == '1'\nassert solution('2 2') == '0'\nassert solution('3 3') == '1'\nassert solution('4 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5') == '0'\nassert solution('5 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 10 100\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n2\n1 1\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 10 100\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"No\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['2', '1 2', '2', '1', '2']) == 'No'\nassert solution(['4', '1 2', '2', '1', '2']) == 'Yes'\nassert solution(['2', '3 2', '3 2', '3 2', '3 2', '3 2', '3 2', '3 2']) == 'Yes'\nassert solution(['3', '1 2', '1 2', '1 2', '1 2', '1 2', '1 2']) == 'No'\n",
        "num_ids_2": 50,
        "num_ids_4": 126
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"1 1 1 1 1\") == \"Yes\"\nassert solution(\"3 3 3\") == \"Yes\"\nassert solution(\"4 4 4\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(['3', '1 10 100']) == 'Yes'\nassert solution(['4', '1 2 3', '1 4 5']) == 'No'\nassert solution(['4', '1 2 3', '1 4 5', '3 5 8']) == 'Yes'\n",
        "num_ids_2": 39,
        "num_ids_4": 66
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 10 100') == 'Yes'\nassert solution('5') == 'No'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"xy\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\nassert solution(\"asdf\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"yx\"\n) == \"Yes\"\nassert solution(\n    \"axy\"\n) == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"yx\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"xy\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"yx\"\n) == \"Yes\"\nassert solution(\n    \"axy\"\n) == \"No\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''x\na''') == 'Yes'\nassert solution('''xy\nxya''') == 'Yes'\nassert solution('''yx\naxy''') == 'No'\nassert solution('''x\na''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('10 2 1') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5 1') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('2 3 1') == 'NO'\nassert solution('1 1 1') == 'YES'\nassert solution('10 10 10') == 'NO'\nassert solution('1') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\n\"\"\"\n\nfrom math import gcd\n\nA, B, C = map(int, input().split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\n\n\"\"\"\n\nimport math\nfrom collections import namedtuple\n\n\nclass Number:\n    def __init__(self, num):\n        self.num = num\n\n    def __str__(self):\n        return self.num\n\n    def __add__(self, num):\n        return Number(self.num + num.num)\n\n    def __sub__(self, num):\n        return Number(self.num - num.num)\n\n    def __mul__(self, num):\n        return Number(self.num * num.num)\n\n    def __truediv__(self, num):\n        return Number(self.num / num.num)\n\n    def __floordiv__(self, num):\n        return Number(math.floor(self.num / num.num))\n\n    def __pow__(self, num):\n        return Number(math.pow(self.num, num.num))\n\n    def __lt__(self, num):\n        return self.num < num.num\n\n    def __le__(self, num):\n        return self.num <= num.num\n\n    def __eq__(self, num):\n        return self.num == num.num\n\n    def __ne__(self, num):\n        return self.num!= num.num\n\n    def __ge__(self, num):\n        return self.num >= num.num\n\n    def __gt__(self, num):\n        return self.num > num.num\n\n    def __neg__(self):\n        return Number(-self.num)\n\n    def __abs__(self):\n        return Number(abs(self.num))\n\n    def __invert__(self):\n        return Number(~self.num)\n\n    def __complex__(self):\n        return Number(complex(self.num))\n\n    def __float__(self):\n        return float(self.num)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 1 3') == 'YES'\nassert solution('10 1 10') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('9 10 13') == 'NO'\n\n\"\"\"\nimport math\n\na, b, c = list(map(int, stdin.split(' ')))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 10 1\") == \"NO\"\nassert solution(\"3 5 0\") == \"YES\"\nassert solution(\"1 100 100\") == \"YES\"\nassert solution(\"1 0 1\") == \"NO\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"6 5 0\") == \"NO\"\nassert solution(\"7 9 1\") == \"YES\"\nassert solution(\"7 9 2\") == \"NO\"\nassert solution(\"7 9 3\") == \"YES\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"7 6 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"5 10\") == \"5\"\nassert solution(\"50 50\") == \"50\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"5 2\") == \"5\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"100 100\") == \"2040\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"5 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 4\") == \"5\"\nassert solution(\"2 9\") == \"81\"\nassert solution(\"4 4\") == \"16\"\nassert solution(\"5 5\") == \"25\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == \"1\"\nassert solution('1 1') == \"1\"\nassert solution('2 2') == \"1\"\nassert solution('2 2') == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 0\") == \"0\"\nassert solution(\"1 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5 1\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"1 1 1\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 1') == '3'\nassert solution('10 7 5') == '2'\nassert solution('5 3 2') == '1'\nassert solution('5 10 7') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"16 4 4\") == \"4\"\nassert solution(\"12 4 3\") == \"3\"\nassert solution(\"3 3 4\") == \"2\"\nassert solution(\"10 8 6\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([13, 3, 1]) == \"3\"\nassert solution([10, 10, 10]) == \"0\"\nassert solution([10, 10, 50]) == \"0\"\nassert solution([10, 10, 50]) == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"13 3 1\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 2 1\") == \"2\"\nassert solution(\"8 2 1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13 3 1') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n'''\n\nimport sys\n\nX, Y, Z = list(map(int, sys.stdin.read().split()))\n\nY += 2 * Z\n\nY = max(Y, X + Z)\n\nY -= Z\n\nY = max(Y, X)\n\nY -= X\n\nprint(Y)",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 0\") == \"0\"\nassert solution(\"10 2 3\") == \"1\"\nassert solution(\"10 3 2\") == \"1\"\nassert solution(\"7 3 1\") == \"1\"\nassert solution(\"5 3 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0\") == '2'\nassert solution(\"3 1\") == '1'\nassert solution(\"1 3\") == '0'\nassert solution(\"4 2\") == '0'\nassert solution(\"0 4\") == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 0\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"0 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 2, 1, 3, 1, 4, 2, 5, 5]) == 2\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\") == \"2\"\nassert solution(\"3\\n4 1\\n5 3\\n1 3\") == \"1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5') == '2'\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"3 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '2 4\\n0 3\\n') == '7'\nassert solution(\n    '1 2\\n1 1\\n') == '1'\nassert solution(\n    '1 1\\n1 1\\n') == '0'\nassert solution(\n    '2 4\\n1 2\\n2 4\\n3 4\\n2 3\\n3 2\\n') == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '7'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\n0 3\\n') == '7'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"7\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"7\"\nassert solution(\"2 3\") == \"7\"\nassert solution(\"3 5\") == \"14\"\nassert solution(\"4 6\") == \"14\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '7'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '7'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '2'",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '2'\n",
        "num_ids_2": 95,
        "num_ids_4": 148
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\nassert solution('''10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n\nimport re\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n') == '1'\nassert solution('10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n') == '0'",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == \"1\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\nL 100\nR 100000\nR 123\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\nassert solution('''\n1\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '1'\nassert solution('''\n1\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\nassert solution('''\n1\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\"\nassert solution(\"6\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    1\n    10\n    25\n    30\n    14\n    27\n    1000000000000000000\n    ''') == '6'\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n1000000000000000000\n''') == \"8\"\nassert solution('''\n1\n3\n''') == \"2\"\nassert solution('''\n10\n20\n1000000000000000000\n''') == \"2\"\n\nassert solution('''\n10\n1000000000000000000\n1000000000000000000\n''') == \"2\"\n\nassert solution('''\n1\n1000000000000000000\n1000000000000000000\n''') == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000') == '4'\nassert solution('2\\n5\\n8\\n4\\n2\\n4\\n2\\n4\\n') == '6'\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n20\n25\n30\n14\n27\n1000000000000000000\n''') == '4'\nassert solution('''\n7\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\nassert solution('''\n7\n1\n10\n20\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\nassert solution('''\n7\n1\n10\n20\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000') == '4'\nassert solution('5\\n1\\n4\\n3\\n2\\n1') == '6'\nassert solution('5\\n1\\n4\\n3\\n2\\n1') == '-1'\n",
        "num_ids_2": 58,
        "num_ids_4": 84
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1\\n25\\n30\\n14\\n27\\n1000000000000000000') == '6'\nprint(solution('1\\n1\\n25\\n30\\n14\\n27\\n1000000000000000000'))\n\n\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000') == '6'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"30\") == \"6\"\nassert solution(\"1000000000000000000\") == \"72\"\nassert solution(\"0\") == \"0\"\nassert solution(\"9\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '4'\nassert solution('25') == '6'\nassert solution('30') == '6'\nassert solution('14') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\" * 2 + \"NO\" + \"YES\" * 2\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"NO\"\nassert solution([\n'3',\n'3',\n'1 1 3',\n'4',\n'1 1 2 1',\n'2',\n'11 11',\n'1'\n]) == \"YES\"\nassert solution([\n'3',\n'3',\n'1 1 3',\n'4',\n'1 1 2 1',\n'2',\n'11 11',\n'1'\n]) == \"YES\"\nassert solution([\n'3',\n'3',\n'1 1 3',\n'4',\n'1 1 2 1',\n'2',\n'11 11',\n'1'\n]) == \"NO\"\nassert solution([\n'3',\n'3',\n'1 1 3',\n'4',\n'1 1 2 1',\n'2',\n'11 11',\n'1'\n]) == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 20
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"YES\"\nassert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"NO\"\nassert solution('''3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == \"YES\"\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == \"NO\"\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == \"YES\"\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == \"YES\"\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\nassert solution('1') == 'NO'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES'\nassert solution('''\n4\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\nassert solution('''\n1\n3\n1 2 3\n1 2 2 1\n2\n1\n2\n''') == 'YES'\nassert solution('''\n1\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"100\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 4\nassert solution('1\\nabacaba\\nbacabaa\\n') == 0",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nzcabd\\ndbacz\\n\") == \"4\"\nassert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\dbacz\\n\") == \"0\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == output\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nabacaba\\nbacabaa\\n') == '4'\nassert solution('2\\nzcabd\\dbacz\\n') == '0'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nabacaba\\nbacabaa') == 4\n\n\"\"\"\n\nn = int(input())\na = input()\nb = input()\n\nswaps = 0\n\nfor i in range(n):\n    if a[i]!= b[i]:\n        if i % 2 == 0:\n            a, b = b, a\n            swaps += 1\n        else:\n            a, b = a, b\n            swaps += 2\n\nprint(swaps)\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nzcabd\ndbacz''') == '0'\nassert solution('''4\nzcabd\ndbacz''') == '1'\nassert solution('''3\nzcabd\ndbacz''') == '2'\nassert solution('''2\nzcabd\ndbacz''') == '4'\nassert solution('''1\nzcabd\ndbacz''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nabacaba\\nbacabaa\") == \"4\"\nassert solution(\"6\\nzcabd\\dbacz\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 0\nassert solution('7') == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 3') == '8'\nassert solution('1 10 5') == '198'\nassert solution('1000000000 1 6') == '2999999997'\nassert solution('1 1 1000000000') == '0'\nassert solution('1 1 999999999') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999''') == '8'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999''') == '198'\nassert solution('''7\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999''') == '-17'\nassert solution('''8\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999''') == '2999999997'\nassert solution('''9\n5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n1 1 999999999''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3\n5 2 3\n1 10 5\n1 1000000000\n1 1 999999999\n1 1 999999999\n''') == '8198'\n\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3') == \"8\"\nassert solution('100 1 4') == \"198\"\nassert solution('1 10 5') == \"2999999997\"\nassert solution('1000000000 1 6') == \"0\"\nassert solution('1 1 1000000000') == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"1 10 5\") == \"198\"\nassert solution(\"1 1 1000000000\") == \"2999999997\"\nassert solution(\"1 1 999999999\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n\") == \"198\\n-17\\n2999999997\\n0\\n1\\n\"\nassert solution(\"2\\n5 2 3\\n1 100 5\\n1 1 999999999\\n\") == \"0\\n0\\n1\\n\"\nassert solution(\"1\\n100 2 3\\n1 1000000000\\n1 1 999999999\\n\") == \"-17\\n0\\n1\\n\"\nassert solution(\"1\\n10 2 3\\n1 1 1000000000\\n1 1 999999999\\n\") == \"2\\n2\\n0\\n\"\n\n'''",
        "num_ids_2": 102,
        "num_ids_4": 177
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 10\n1 1 10''') == '198'\nassert solution('''5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''5\n1 1\n1 1\n''') == '0'\nassert solution('''5\n100 1\n1 10\n1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''1\n100 1\n1 1\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 32
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 2 3\n3 4 5\n5 4 3\n5 4 3\n''') == '198'\nassert solution('''\n5\n1 2 3\n3 4 5\n5 4 3\n5 4 3\n''') == '2999999997'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\n\nimport io\nimport os\nimport sys\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"1 10 5\") == \"198\"\nassert solution(\"1 1 1000000000\") == \"2999999997\"\nassert solution(\"1 1 999999999\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\") == \"3\\n\"\nassert solution(\"10\\n1000\") == \"27\\n\"\nassert solution(\"1000000000\\n14\") == \"1350851717672992089\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 55
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '51'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"100\") == \"100\"\nassert solution(\"1000000000000000000\") == \"10\"\nassert solution(\"15\") == \"27\"\nassert solution(\"1000000000000000000\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\nassert solution('''\n1\n3\n9\n13\n27\n6561\n19683\n1350851717672992089\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\") == \"3\"\nassert solution(\"1000000000000000000\\n1000000000000000000\") == \"27\"\nassert solution(\"1\\n6\") == \"9\"\nassert solution(\"1000000000000000000\\n10000\") == \"19683\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10\n15\n10\n1\n9\n100\n99999999\n''') == '10'\n\nassert solution('''\n1\n10\n15\n10\n1\n9\n100\n99999999\n''') == '10'\n\nassert solution('''\n1\n100\n99999999\n''') == '10'\n\nassert solution('''\n1\n10\n15\n10\n1\n9\n100\n99999999\n''') == '10'\n\nassert solution('''\n1\n100\n99999999\n''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"9\"\nassert solution(input()) == \"13\"\nassert solution(input()) == \"27\"\nassert solution(input()) == \"6561\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\nassert solution(\"1\\n2\") == \"9\"\nassert solution(\"6\\n13\") == \"27\"\nassert solution(\"3620\\n10000\") == \"6561\"\nassert solution(\"1000000000000000000\\n1000000000000000000\") == \"19683\"",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5\n10\n1\n5\n7\n''') == '5'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '5'\nassert solution('''\n100\n1000000000000000000\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '3\\n9\\n13\\n19\\n29\\n41\\n51\\n71\\n89\\n109\\n121\\n131\\n151\\n161\\n171\\n191\\n211\\n229\\n241\\n251\\n261\\n271\\n281\\n309\\n331\\n341\\n361\\n371\\n381\\n401\\n433\\n451\\n461\\n471\\n481\\n491\\n501\\n511\\n521\\n531\\n551\\n561\\n571\\n581\\n601\\n611\\n621\\n631\\n641\\n651\\n671\\n681\\n691\\n701\\n711\\n721\\n731\\n761\\n781\\n801\\n811\\n821\\n831\\n841\\n851\\n861\\n881\\n901\\n911\\n921\\n931\\n951\\n961\\n981\\n991\\n1011\\n1021\\n1031\\n1041\\n1051\\n1061\\n1071\\n1081\\n1091\\n1101\\n1111\\n1131\\n1141\\n1151\\n1161\\n1171\\n1181\\n1191\\n1201\\n1211\\n1221\\n1231\\n1241\\n1251\\n1261\\n1271\\n1281\\n1291\\n1301\\n1311\\n1321\\n1331\\n1341\\n1351\\n1361\\n1371\\n1381\\n1391\\n1401\\n1411\\n1421\\n1431\\n1441\\n1451\\n1461\\n1471\\n1481\\n1491\\n1501\\n1511\\n1521\\n1531\\n1541\\n1551\\n1561\\n1571\\n1581\\n1591\\n1601\\n1611\\n1621\\n1631\\n1641\\n1651\\n1661\\n1671\\n1681\\n1691\\n1701\\n1711\\n1721\\n1731\\n1741\\n1751\\n1761\\n1771\\n1781\\n1791\\n1801\\n1811\\n1821\\n1831\\n1841\\n1851\\n1861\\n1871\\n1881\\n1891\\n1901\\n1911\\n1921\\n1931\\n1941\\n1951\\n1961\\n1971\\n1981\\n1991\\n2001\\n2011\\n2021\\n2031\\n2041\\n2051\\n2061\\n2071\\n2081\\n2091\\n2101\\n2111\\n2112\\n2121\\n2131\\n2141\\n2151\\n2161\\n2171\\n2181\\n2191\\n2211\\n2221\\n2231\\n2241\\n2251\\n2261\\n2271\\n2281\\n2291\\n2301\\n2309\\n2321\\n2331\\n2341\\n2351\\n2361\\n2371\\n2381\\n2391\\n2401\\n2411\\n2421\\n2431\\n2441\\n2451\\n2461\\n2471\\n2481\\n2491\\n2501\\n2511\\n2521\\n2531\\n2541\\n2551\\n2561\\n2571\\n2581\\n2591\\n2601\\n2611\\n2621\\n2631\\n2641\\n2651\\n2661\\n2671\\n2681\\n2691\\n2701\\n2711\\n2721\\n2731\\n2741\\n2751\\n2761\\n2771\\n2781\\n2791\\n2801\\n2809\\n2821\\n2831\\n2841\\n2851\\n2861\\n2871\\n2881\\n2891\\n2901\\n2911\\n2921\\n2931\\n2941\\n2951\\n2961\\n2971\\n2981\\n2991\\n3011\\n3021\\n3031\\n3041\\n3051\\n3061\\n3071\\n3081\\n3091\\n3121\\n3131\\n3141\\n3151\\n3161\\n3171\\n3181\\n3191\\n3211\\n3221\\n3241\\n3251\\n3261\\n3271\\n3281\\n3291\\n3301\\n3307\\n3313\\n3321\\n3331\\n3341\\n3351\\n3361\\n3371\\n3381\\n3391\\n3401\\n3411\\n3421\\n3431\\n3441\\n3451\\n3461\\n3471\\n3481\\n3491\\n3501\\n3511\\n3521\\n3531\\n3541\\n3551\\n3561\\n3571\\n3581\\n3591\\n3601\\n3611\\n3621\\n3631\\n3641\\n3651\\n3661\\n3671\\n3681\\n3691\\n3701\\n3711\\n3721\\n3731\\n3741\\n3751\\n3761\\n3771\\n3781\\n3791\\n3801\\n3809\\n3821\\n3831\\n3841\\n3851\\n3861\\n3871\\n3881\\n3891\\n3901\\n3911\\n3921\\n3931\\n3941\\n3951\\n3961\\n3971\\n3981\\n3991\\n4011\\n4021\\n4031\\",
        "num_ids_2": 1462,
        "num_ids_4": 1462
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"70\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"77\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"177177\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"999999999000000000\"\nassert solution(\"7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\") == \"999999999\"\n",
        "num_ids_2": 126,
        "num_ids_4": 257
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000') == '77\\n177177\\n999999999000000000\\n999999999000000000\\n55\\n10'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '70'\nassert solution('10 10 8 5 3') == '77'\nassert solution('12 8 8 7 2') == '177177'\nassert solution('1000000000 1000000000 1 1 1') == '999999999000000000'\nassert solution('1000000000 1000000000 1 1 1000000000') == '999999999'\n",
        "num_ids_2": 24,
        "num_ids_4": 60
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"177\"\nassert solution(\"6\") == \"1177\"\nassert solution(\"7\") == \"9999\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 10 8 5 3\") == \"70\"\nassert solution(\"12 8 8 7 2\") == \"77\"\nassert solution(\"12343 43 4543 39 123212\") == \"999999999000000000\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"999999999000000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 69
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"70\"\nassert solution(input_string_2) == \"77\"\nassert solution(input_string_3) == \"177177\"\nassert solution(input_string_4) == \"999999999000000000\"\nassert solution(input_string_5) == \"999999999\"\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\nassert solution('''\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == '55'\nassert solution('''\n10 11 2 1 5\n10 11 9 1 10\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1\"\n    \"10 10 8 5 3\"\n    \"12 8 8 7 2\"\n    \"12343 43 4543 39 123212\"\n    \"1000000000 1000000000 1 1 1\"\n    \"1000000000 1000000000 1 1 1000000000\"\n    \"10 11 2 1 5\"\n) == \"70\"\nassert solution(\n    \"2\"\n    \"10 10 8 5 3\"\n    \"12 8 8 7 2\"\n    \"12343 43 4543 39 123212\"\n    \"1000000000 1000000000 1 1 1\"\n    \"1000000000 1000000000 1 1 1000000000\"\n    \"10 11 2 1 5\"\n) == \"77\"\nassert solution(\n    \"3\"\n    \"10 11 2 1 5\"\n    \"10 11 9 1 10\"\n) == \"55\"\nassert solution(\n    \"4\"\n    \"10 11 2 1 5\"\n    \"10 11 9 1 10\"\n    \"999999999000000000 1000000000 1 1 1\"\n    \"1000000000 1000000000 1 1 1000000000\"\n    \"10 11 2 1 5\"\n) == \"999999999000000000\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"77\"\nassert solution(\"1\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\") == \"70\"\nassert solution(\"1\\n10 11 2 1 5\\n10 11 9 1 10\") == \"55\"\nassert solution(\"1\\n10 11 2 1 5\\n10 11 9 1 10\") == \"70\"\n",
        "num_ids_2": 112,
        "num_ids_4": 160
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n1 2\n9 9\n1 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"2 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3\\n2 4\\n') == '0'\nassert solution('1 4\\n2 8\\n') == '2'\nassert solution('3 5\\n5 1\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\nassert solution('9 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '2'\nassert solution('9 3') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\\n3 4\") == \"0\"\nassert solution(\"2 3\\n10 10\") == \"1\"\nassert solution(\"2 4\\n7 4\") == \"2\"\nassert solution(\"9 3\\n\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"10 10\") == \"1\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2 3') == '1'\nassert solution('10 10') == '0'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('11') == '11'\nassert solution('1') == '1'\nassert solution('111') == '111'\nassert solution('22') == '22'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '4'\nassert solution('3') == '1'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n22\\n9999\\n1\\n777') == '13'\nassert solution('2\\n11\\n22\\n22\\n22') == '2'\nassert solution('3\\n1\\n1\\n1') == '0'\nassert solution('4\\n1\\n1\\n1\\n1') == '2'",
        "num_ids_2": 44,
        "num_ids_4": 85
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"22\") == \"2\"\nassert solution(\"9999\") == \"3\"",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1', 'First'\nassert solution('2') == '2', 'Second'\nassert solution('3') == '3', 'Third'\nassert solution('4') == '4', 'Fourth'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n999\n1\n''') == '13'\nassert solution('''\n10\n1111\n1\n''') == '1'\nassert solution('''\n3\n22\n2\n''') == '1'\nassert solution('''\n10\n1\n1\n''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1\n11\n''') == '1'\nassert solution('''4\n22\n9999\n1\n777\n''') == '13'\nassert solution('''5\n22\n99999\n1\n777\n''') == '90'\nassert solution('''6\n22\n99999\n1\n77\n''') == '66'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n22\\n9999\\n1') == '13'\nassert solution('2\\n2\\n111\\n1') == '1'\nassert solution('3\\n3\\n2\\n1') == '1'\nassert solution('4\\n4\\n1\\n1') == '2'\nassert solution('5\\n5\\n1\\n1') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"90\"\nassert solution(stdin=\"10\\n999\") == \"0\"\nassert solution(stdin=\"1\\n22\") == \"1\"\nassert solution(stdin=\"9\\n777\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n\nassert solution(\"3\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''\n4\n6\n2 2 2 2 2\n5\n2 2 2\n''') == 'NO'\nassert solution('''\n5\n5\n1 1 1 1 1\n2\n2 2 2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n5\\n2 3 1 3 2') == 'YES\\n2 6'\nassert solution('3\\n1\\n5\\n5') == 'NO'\nassert solution('4\\n6\\n2 2 2 2 2') == 'YES\\n2 2'\nassert solution('4\\n4\\n2 2 2 2') == 'NO'\n",
        "num_ids_2": 43,
        "num_ids_4": 86
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n5\\n2 3 1 3 2\") == \"YES\\n2 6\\n1 2\\n\"\nassert solution(\"3\\n1\\n5\\n5\") == \"NO\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\n\"\n    \"5\\n\"\n    \"2 3 1 3 2\\n\"\n    \"6\\n\"\n    \"1 1 2 2 2 1\\n\"\n) == \"YES\\n\"\n\nassert solution(\n    \"3\\n\"\n    \"1\\n\"\n    \"5\\n\"\n    \"5\\n\"\n    \"1 1 1 1 1\\n\"\n    \"2\\n\"\n    \"2 3\\n\"\n) == \"NO\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('[3, -1, 0, 2]') == 6\nassert solution('[2, -3, -1, 5, -4]') == 13\nassert solution('[2, -3, -1, 5, -4]') == 14\n",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"[4,2,3]\") == 5\nassert solution(\"[3,-1,0,2]\") == 6\nassert solution(\"[2,-3,-1,5,-4]\") == 13\n\n\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"[4,2,3]\\n\") == 5\nassert solution(\"[3,-1,0,2]\\n\") == 6\nassert solution(\"[2,-3,-1,5,-4]\\n\") == 13",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13\nassert solution([-8,5,-2,0,-1,5,-7,0,3,1,2,-3,4], 10) == 17",
        "num_ids_2": 30,
        "num_ids_4": 83
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"[2,-3,-1,5,-4]\") == 13\nassert solution(\"[4,2,3]\") == 5\nassert solution(\"[3,-1,0,2]\") == 5\nassert solution(\"[2,-3,-1,5,-4]\") == 13\nassert solution(\"[5,4,3,2,-1]\") == 8\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[4,2,3]') == 5\nassert solution('[3,-1,0,2]') == 6\nassert solution('[2,-3,-1,5,-4]') == 13\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5\nassert solution('''\n3 -1 0 2\n3\n''') == '6\nassert solution('''\n2 -3 -1 0 2\n2\n''') == '6\nassert solution('''\n2 -3 -1 0 2\n3\n''') == '13\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 3') == 6\nassert solution('1 -3 2') == 1\nassert solution('5 -2 1') == 3\nassert solution('-4 5 -2 1') == 7\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2 3\n1\n''') == '5'\nassert solution('''\n3 -1 0 2\n1\n''') == '5'\nassert solution('''\n2 -3 -1 0 2\n1\n''') == '6'\nassert solution('''\n2 -3 -1 0 2\n2\n''') == '6'\nassert solution('''\n1 2 3\n1\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'true'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"true\"\n\n'''\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        s=sum(A)\n        if s%3!=0:\n            return False\n        else:\n            m=s//3\n            n=0\n            for i in A:\n                n+=i\n                if n==m:\n                    return True\n            return False\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'false'\nassert solution('2') == 'true'\nassert solution('3') == 'true'\nassert solution('4') == 'false'\nassert solution('5') == 'true'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n[0,2,1,-6,6,-7,9,1,2,0,1]\n\"\"\") == \"true\"\nassert solution(\"\"\"\n[0,2,1,-6,6,7,9,-1,2,0,1]\n\"\"\") == \"false\"\nassert solution(\"\"\"\n[3,3,6,5,-2,2,5,1,-9,4]\n\"\"\") == \"true\"\nassert solution(\"\"\"\n[-2,1,-3,4,-1,2,1,-5,4]\n\"\"\") == \"false\"\nassert solution(\"\"\"\n[0,2,1,-6,6,-7,9,1,2,0,1]\n\"\"\") == \"true\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'true'\nassert solution('0') == 'false'\nassert solution('0\\n1') == 'false'\nassert solution('5\\n5') == 'false'\nassert solution('3\\n-9\\n6') == 'true'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"0 2 1 -6 6 -7 9 1 2 0 1\"\n    ) == \"true\"\nassert solution(\n    \"0 2 1 -6 6 -7 9 1 2 0 1\"\n    ) == \"false\"\nassert solution(\n    \"3 3 6 5 -2 2 5 1 -9 4\"\n    ) == \"true\"\nassert solution(\n    \"3 3 6 5 -2 2 5 1 -9 4\"\n    ) == \"false\"\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        # part1,part2,part3 = [],[],[]\n        # for i in range(len(A)):\n        #     part1.append(A[i])\n        #     part2.append(A[i])\n        #     part3.append(A[i])\n        # part1.sort()\n        # part2.sort()\n        # part3.sort()\n        # part1_sum = sum(part1)\n        # part2_sum = sum(part2)\n        # part3_sum = sum(part3)\n        # if part1_sum == part2_sum == part3_sum:\n        #     return True\n        # else:\n        #     return False\n        for i in range(len(A)):\n            if A[i]!=A[i+1]:\n                if sum(A[0:i+1])==sum(A[i+1:]):\n                    return True\n        return False",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"true\" or solution(input) == \"false\"\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        n = len(A)\n        if n < 3:\n            return False\n        if n == 3:\n            return A == [0, 0, 0]\n\n        zero_sum, cur_sum, total_sum = 0, 0, sum(A)\n        for i in range(n):\n            cur_sum += A[i]\n            if cur_sum == zero_sum:\n                zero_sum = cur_sum\n                cur_sum = 0\n                continue\n            elif cur_sum == total_sum - zero_sum:\n                zero_sum = cur_sum\n                cur_sum = 0\n                continue\n            else:\n                return False\n        return True\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total_sum = sum(A)\n        target = total_sum / 3\n        if target == 0:\n            return True\n\n        def _search(nums, target, start, end):\n            if start == end:\n                return start == end and target == 0\n\n            mid = (start + end) // 2\n            left_sum = nums[start: mid]\n            right_sum = nums[mid: end]\n            if target == sum(left_sum) and target == sum(right_sum):\n                return _search(nums, target, start, mid) or _search(nums, target, mid + 1, end)\n            elif target > sum(left_sum) or target < sum(right_sum):\n                return False\n            elif target < sum(left_sum):\n                return _search(nums, target, start, mid)\n            else:\n                return _search(nums, target, mid + 1, end)\n\n        return _search(A, target, 0, len(A))\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total_sum = sum(A)\n        target = total_sum / 3\n        if target == 0:\n            return True\n\n        def _search(nums, target, start, end):\n            if start == end:\n                return start == end and target == 0\n\n            mid = (start + end) // 2\n            left_sum = sum(nums[:mid])\n            right_sum = sum(nums[mid:])\n            if left_sum == target and right_sum == target:\n                return _search(nums, target, start, mid) or _search(nums, target, mid + 1, end)\n            elif left_sum > target or right_sum < target:\n                return False\n            elif left_sum < target:\n                return _search(nums, target, start, mid)\n            else:\n                return _search(nums, target, mid + 1, end)\n\n        return _search(A, target, 0, len(A))\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total_sum = sum(A)\n        target = total_sum / 3\n        if target == 0:\n            return True\n\n        def _search(nums, target, start, end):\n            if start == end:\n                return start == end and target == 0\n\n            mid = (start + end) // 2\n            left_sum = sum(nums[:mid])\n            right_sum = sum(nums[mid:])\n            if left_sum == target and right_sum == target:\n                return _search(nums, target, start, mid) or _search(nums, target, mid + 1, end)\n            elif left_sum > target or right_sum < target:\n                return False\n            elif left_sum < target:\n                return _search(nums, target, start, mid)\n            else:\n                return _search(nums, target, mid + 1, end)\n\n        return _search(A, target, 0, len(A))\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total_sum = sum(A)\n        target = total_sum / 3\n        if target == 0:\n            return True\n\n        def _search(nums, target, start, end):\n            if start == end:\n                return start == end and target == 0\n\n            mid = (start + end) // 2\n            left_sum = sum(nums[:mid])\n            right_sum = sum(nums[mid:])\n            if left_sum == target and right_sum == target:\n                return _search(nums, target, start, mid) or _search(nums, target, mid + 1, end)\n            elif left_sum > target or right_sum < target:\n                return False\n            elif left_sum < target:\n                return _search(nums, target, start, mid)\n            else:\n                return _search(nums, target, mid + 1, end)\n\n        return _search(A, target, 0, len(A))\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total_sum = sum(A)\n        target = total_sum / 3\n        if target == 0:\n            return True\n\n        def _search(nums, target, start, end):\n            if start == end:\n                return start == end and target == 0\n\n            mid = (start + end) // 2\n            left_sum = sum(nums[:mid])\n            right_sum = sum(nums[mid:])\n            if left_sum == target and right_sum == target:\n                return _search(nums, target, start, mid) or _search(nums, target, mid + 1, end)\n            elif left_sum > target or right_sum < target:\n                return False\n            elif left_sum < target:\n                return _search(nums, target, start, mid)\n            else:\n                return _search(nums, target, mid + 1, end)\n\n        return _search(A, target, 0, len(A))\n\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        total_sum = sum(A)\n        target = total_sum / 3\n        if target == 0:\n            return True\n\n        def _search(nums, target, start, end):\n            if start == end:\n                return start == end and target == 0\n\n            mid = (start + end) // 2\n            left_sum = sum(nums[:mid])\n            right_sum = sum(nums[mid:])\n            if left_sum == target and right_sum == target:\n                return _search(nums, target, start, mid) or _search(nums, target, mid + 1, end)\n            elif left_sum > target or right_sum < target:\n                return False\n            elif left_sum < target:\n                return _search(nums, target, start, mid)\n            else:\n                return _search(nums, target, mid +",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"0 2 1 -6 6 -7 9 1 2 0 1\") == \"true\"\nassert solution(\"3 3 6 5 -2 2 5 1 -9 4\") == \"false\"\n",
        "num_ids_2": 44,
        "num_ids_4": 65
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == True\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == False\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == True\n\n\n\n2. Write a function:",
        "num_ids_2": 56,
        "num_ids_4": 82
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\", \"test case 1\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\", \"test case 2\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\", \"test case 3\"\nassert solution(\"[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
        "num_ids_2": 74,
        "num_ids_4": 1715
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\nbeat\nvet\nbeet\nbed\nvet\nbet\nbeet\n''') == \"beet and vet\"\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet\"\n\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\n'\n                'beat\\n'\n                ':') == 'beat'\nassert solution('7\\n'\n                'beat\\n'\n                ':') == 'beat'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beet and vet'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\nbeat\nvet\nbeet\nbed\n\"\"\") == \"beat and vet\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\") == \"beet and vet are written on two sheets each, while beat, bed, and bet are written on one vote each.\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n\n=======================\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 'beet'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\") == \"beet and vet\"\n\n'''\n\nn = int(stdin.readline())\nmax_votes = 0\nmax_string = \"\"\nstrings = []\n\nfor i in range(1,n+1):\n    votes = int(stdin.readline())\n    if(votes > max_votes):\n        max_votes = votes\n        max_string = stdin.readline().strip()\n    else:\n        pass\n\nprint(max_string)\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"1\") == \"8\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n4 8\n''') == '8'\nassert solution('''\n3\n7 9 8\n''') == '30'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8'\nassert solution('4 8') == '8'\nassert solution('3') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '9'\nassert solution('1') == '2'\nassert solution('2') == '4'\nassert solution('4') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    4 2 2\n    ''') == '8'\n\nassert solution('''\n    2\n    10 10\n    ''') == '20'\n\nassert solution('''\n    4\n    7 5 4 7\n    ''') == '26'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '8'\nassert solution('1') == '4'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\"\n) == \"6\"\nassert solution(\n    \"2\"\n) == \"2\"\nassert solution(\n    \"4\"\n) == \"8\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '84'\nassert solution('1234') == '84'\nassert solution('1') == '84'\nassert solution('1234') == '84'\nassert solution('1') == '84'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '84'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"84\"\nprint(\"You have\", solution(stdin), \"yens left after buying a cake.\")\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '1084'\nassert solution('01234') == '84'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\nassert solution('123') == '84'\nassert solution('100') == '84'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '84'\nassert solution('100') == '84'\nassert solution('1') == '84'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"1084\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"10\"\nassert solution(\"15\") == \"70\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '8'\n\"\"\"\n\nimport math\n\nN, M = map(int, input().split())\n\ncount = 0\n\nfor i in range(N):\n    for j in range(M):\n        if i == j:\n            continue\n        if 2 * (i + j) > N:\n            break\n        count += math.factorial(N + M) // math.factorial(N + M - (i + j)) // math.factorial(i) // math.factorial(j) % (10**9 + 7)\nprint(count)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 2') == '12'\nassert solution('1 1') == '1'\nassert solution('5 1') == '1'\nassert solution('6 1') == '1'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"8\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"8\"\nassert solution(\"2 1\") == \"8\"\nassert solution(\"2 2\") == \"8\"\nassert solution(\"3 1\") == \"8\"\nassert solution(\"3 2\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"8\"\nassert solution(\"2 2\") == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"8\"\nassert solution(\"2 2\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 5') == '178'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '20'\nassert solution('4 5') == '24'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"1 2\") == \"POSSIBLE\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 2\n1 2\n2 3\n''') == \"POSSIBLE\"\nassert solution('''1 5\n1 4\n1 3\n1 2\n2 3\n''') == \"IMPOSSIBLE\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"IMPOSSIBLE\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 2\n1 2\n2 3\n\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"\n5 1\n1 5\n2 4\n2 6\n3 7\n3 8\n3 9\n4 10\n\"\"\") == \"POSSIBLE\"\n\nassert solution(\"\"\"\n3 2\n1 2\n2 3\n\"\"\") == \"IMPOSSIBLE\"\n\nassert solution(\"\"\"\n6 4\n1 2\n3 4\n5 6\n7 8\n9 10\n11 12\n\"\"\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"POSSIBLE\"\nassert solution(\"3 3\\n1 2\\n2 3\\n3 4\\n3 5\\n4 5\") == \"IMPOSSIBLE\"\nassert solution(\"3 1\\n1 2\\n2 3\") == \"IMPOSSIBLE\"",
        "num_ids_2": 55,
        "num_ids_4": 77
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"5 5\") == \"POSSIBLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n1 2\n2 3\n''') == 'POSSIBLE'\nassert solution('''\n1 2\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n1 2\n3 2\n''') == 'IMPOSSIBLE'\n\n\"\"\"\nhttps://www.hackerrank.com/challenges/boat-block/problem\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"3 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\") == \"POSSIBLE\"\nassert solution(\"3 2\") == \"IMPOSSIBLE\"\nassert solution(\"6 2\") == \"POSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'POSSIBLE'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('5 10') == 'POSSIBLE'\n\n\"\"\"\n\nimport itertools\nfrom functools import reduce\nfrom collections import defaultdict\n\nN, M = map(int, stdin.readline().split())\n\nnum_pairs = list(itertools.combinations_with_replacement(range(1, N + 1), 2))\n\ngraph = defaultdict(set)\nfor i in range(1, N + 1):\n    a, b = map(int, stdin.readline().split())\n    graph[i] = graph[a] | graph[b]\n\nisland_pair_set = set()\nfor a, b in num_pairs:\n    if (a, b) in island_pair_set:\n        continue\n    island_pair_set.add((a, b))\n    if (a, b) in graph:\n        island_pair_set |= graph[a] | graph[b]",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"a\") == \"a\"\nassert solution(\"atcoder\") == \"acdr\"\nassert solution(\"atcoder\") == \"acdr\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abcdefgh') == 'abcdefg'\nassert solution('hello world') == 'elwor'\nassert solution('hello world!') == 'elwor!'\nassert solution('1234') == '234'\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('Python') == 'tHtP'\nassert solution('Leetcode') == 'LleEt'\nassert solution('abcd') == 'abcd'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('atcoder') == 'acdr'\nassert solution('abc') == 'abcd'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"acdr\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"a\") == \"a\"\nassert solution(\"\") == \"\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"xyz\"\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('abb') == 'NO'\nassert solution('a') == 'NO'",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng banana apple\") == \"YES\"\nassert solution(\"rng goat banana apple\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n\nassert solution('pqr lmn kop') == 'NO'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('abc def') == 'NO'\nassert solution('a b c') == 'NO'\nassert solution('a b c d') == 'NO'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng man banana') == 'NO'\n\"\"\"\n\na = input()\nb = input()\nc = input()\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('rng gorilla apple') == 'YES'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('rng rng gorilla apple') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng zebra goby\") == \"NO\"\nassert solution(\"rng zebra goby duck\") == \"YES\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng rng gorilla apple\") == \"YES\"\nassert solution(\"rng rng rng gorilla apple\") == \"YES\"\nassert solution(\"rng rng rng rng gorilla apple\") == \"YES\"\nassert solution(\"rng rng rng rng rng gorilla apple\") == \"YES\"\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'GREATER'\nassert solution('10') == 'LESS'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"LESS\"\nassert solution(\"-10\") == \"GREATER\"\nassert solution(\"5\") == \"EQUAL\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\") == \"LESS\", \"You failed the Less Than test!\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('36\\n24') == 'GREATER'\nassert solution('1\\n2') == 'LESS'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"EQUAL\"\nassert solution(\"1\") == \"LESS\"\nassert solution(\"1 2\") == \"GREATER\"\nassert solution(\"1 2 3\") == \"LESS\"\nassert solution(\"1 2 3 4\") == \"GREATER\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == 'GREATER'\nassert solution('20') == 'LESS'\nassert solution('16') == 'EQUAL'\nassert solution('22') == 'LESS'\n\n----Sample Test Case----\nSample Input 1\nSample Output 1\n\nSample Input 2\nSample Output 2\n\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '36\\n24\\n'\n    ) == 'GREATER'\nassert solution(\n    '1\\n4\\n'\n    ) == 'LESS'\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"GREATER\"\nassert solution(\"2\") == \"LESS\"\nassert solution(\"3\") == \"EQUAL\"\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'GREATER'\nassert solution('2') == 'LESS'\nassert solution('3') == 'EQUAL'\n\n'''\n\nimport math",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"GREATER\"\nassert solution(input()) == \"LESS\"\nassert solution(input()) == \"EQUAL\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('8') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''\n2\napple\norange\napple\n0\ngrape\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('10') == '2'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\napple\norange\napple\n1\ngrape\n''') == '2'\nassert solution('''\n2\napple\norange\napple\n1\ngrape\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(Takahashi()) == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''A''') == 'T'\nassert solution('''C''') == 'G'\nassert solution('''G''') == 'A'\nassert solution('''T''') == 'C'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('G') == 'C'\nassert solution('C') == 'G'\nassert solution('T') == 'A'\n\nstdin = \"G\"\nprint(solution(stdin))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"C\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solution.__doc__) == \"T\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3 2 2 4 1\") == \"14\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"14\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '14'\nassert solution('1') == '1'\n\"\"\"\n\nn = int(input())\narr = [list(map(int, input().split())) for _ in range(n)]",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n2 2 2 4 1') == 14\n\n\"\"\"\n\nn = int(input())\n\ncandy = []\n\nfor i in range(1, n+1):\n    candy.append(list(map(int, input().split())))\n\nans = 0",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"3\") == \"6\"\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 2 4 1\") == \"14\"\nprint(solution(input()))\n\n\"\"\"\n\nimport sys\nfrom functools import lru_cache\n\nsys.setrecursionlimit(100000)\n\n@lru_cache\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3 2 2 4 1\") == \"14\"\nassert solution(\"5\\n1 2 2 2 1\") == \"15\"\nassert solution(\"5\\n3 2 2 4 1\\n1 2 2 2 1\") == \"14\"\nassert solution(\"5\\n1 2 2 2 1\\n3 2 2 4 1\") == \"15\"",
        "num_ids_2": 34,
        "num_ids_4": 82
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 2 4 1\\n1 2 2 2 1') == '14'\nassert solution('6\\n3 2 4 1 1 2') == '7'\nassert solution('100\\n1 1 1 1 1 1 1 1 1 1 1') == '100'\nassert solution('10\\n10 10 10 10 10 10 10 10 10 10') == '10'",
        "num_ids_2": 42,
        "num_ids_4": 87
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '14'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == 14\nassert solution(\"10\") == 10\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 4') == '1'\nassert solution('5 2') == '2'\n\n[exec(line) for line in open('input.txt').read().splitlines()]\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\nassert solution('4 3') == '2'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3\n2 2 2\n''') == '1'\n\nassert solution('''6 6\n2 2 2 2 2 2\n''') == '2'\n\nassert solution('''15 15\n
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 2') == '2'\nassert solution('10 3') == '3'\nassert solution('1000000000 10') == '10000000000'\n\"\"\"\n\nimport sys\nsys.path.append('..')\nfrom datastructures.linkedlist.linkedlist import LinkedList, Node\nfrom collections import deque\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == '1'\nassert solution('7 3') == '4'\nassert solution('4 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"No\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 2\") == \"Yes\", \"Your solution is wrong\"\nassert solution(\"2 2 1\") == \"No\", \"Your solution is wrong\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n1 1 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"0 1 0\\n1 2 1\\n1 1 0\\n\") == \"No\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1') == 'No'\n\"\"\"\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nc1, c2, c3 = a\na1, a2, a3 = b\nb1, b2, b3 = b",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 0 1\n2 1 2\n1 0 1''') == 'Yes', 'Takahashi is correct'\nassert solution('''0 0 0\n0 0 0\n0 0 0''') == 'Yes', 'Takahashi is correct'\nassert solution('''0 0 0\n0 0 0\n0 0 0''') == 'No', 'Takahashi is incorrect'\nassert solution('''1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1''') == 'No', 'Takahashi is incorrect'\nassert solution('''1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1\n2 1 2\n1 0 1''') == 'No', 'Takahashi is incorrect'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'No'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"2 2 2\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"2 2 2\\n1 1 1\\n0 0 0\") == \"Yes\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nassert solution(\"ABC\") == \"ARC\"\nassert solution(\"ABC\") == \"ARC\"\n\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ARC'\nprint(solution('ABC'))\nassert solution('ARC') == 'ABC'\nprint(solution('ARC'))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"6\"\nassert solution(\"4 9 5\") == \"2\"\nassert solution(\"1 4 3 5\") == \"3\"\nassert solution(\"3 4\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 2\") == \"3\"\nassert solution(\"2 2 4\") == \"0\"\nassert solution(\"3 1 1\") == \"2\"\nassert solution(\"4 8 2\") == \"3\"\nassert solution(\"2 3 8\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 8 2') == '3', 'Test 1 fail'\nassert solution('0 5 2') == '0', 'Test 2 fail'\nassert solution('0 10 5') == '5', 'Test 3 fail'\nassert solution('10 1 1') == '3', 'Test 4 fail'\nassert solution('0 0 0') == '0', 'Test 5 fail'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 8 2') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 8 2') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 9 3\\n\") == \"3\"\nassert solution(\"10 9 3\\n\") == \"3\"\nassert solution(\"10 5 7\\n\") == \"1\"\nassert solution(\"7 5 7\\n\") == \"2\"\nassert solution(\"2 10 7\\n\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('1 1 2') == '2'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 8 2\n''') == '3'\nassert solution('''0 1 2\n''') == '3'\nassert solution('''0 1 2\n''') == '3'\nassert solution('''0 0 0\n''') == '3'\nassert solution('''1 1 1\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == \"Christmas\"\nassert solution(22) == \"Christmas Eve Eve Eve Eve\"\nassert solution(24) == \"Christmas Eve Eve Eve\"\nassert solution(25) == \"Christmas\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '12'\n\nassert solution('22') == '22'\n\nassert solution('23') == '23'\n\nassert solution('24') == '24'\n\nassert solution('25') == '25'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"Happy New Year\"\nassert solution(\"19\") == \"Happy New Year\"\nassert solution(\"24\") == \"Christmas Eve\"\nassert solution(\"23\") == \"Christmas Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('25') == 'Christmas'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('25') == 'Christmas'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''12\n18\n''') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('''25\n''') == 'Christmas'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(10) == 'Christmas Eve'\nassert solution(20) == 'Christmas Eve Eve'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == \"Christmas\"\nassert solution('24') == \"Christmas Eve\"\nassert solution('23') == \"Christmas Eve Eve\"\nassert solution('22') == \"Christmas Eve Eve Eve\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\n\n'''\nfrom collections import Counter\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '5'\nassert solution('100') == '50'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '4'\nassert solution('10') == '2'\nassert solution('100') == '4'\nassert solution('1000') == '8'\nassert solution('10000') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '4'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('10') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"100\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('8') == '4'\nassert solution('15') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('8') == '3'\nassert solution('16') == '4'\nassert solution('64') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"10 5 4 4\") == \"Yes\"\nassert solution(\"10 5 4\") == \"Yes\"\nassert solution(\"10 10 10 10\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 5 5 5\") == \"Yes\"\nassert solution(\"15 10 10 5\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('3 3 7 5') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"4 2 3 1\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('-5 -3 -1 -2') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('1 2 3 3') == 'Yes'\nassert solution('1 2 3 4') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('3 3 2 2') == 'No'\nassert solution('4 2 3 2') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1') == 'Yes'\nassert solution('1 2 2 3') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 5 5 5\"\n) == \"Yes\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nassert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('atcoder beginner contest') == 'ABC', solution('atcoder beginner contest')\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''atcoder\nbeginner\ncontest''') == 'ABC'\nassert solution('''aTCoRe\nbeGinEr\ncoEnT''') == 'ABC'\nprint('Solution:')\nprint(solution(input()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''atcoder\n    beginner\n    contest''') == 'ABC'\nassert solution('''atcoder\n    beginner\n    contest\n    AtCoder''') == 'ABC'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('hello') == 'HELLO'\nassert solution('world') == 'WORLD'\nassert solution('Hello World!') == 'HELLOW'\nassert solution('a!b:c@') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder', 'beginner', 'contest') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\nprint(\"PASSED\")\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('50 500 120') == 'No'\nassert solution('100 50 200') == 'Yes'\nassert solution('500 500 500') == 'Yes'\nassert solution('100 200 200') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('0 0 0') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('100 100 120') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('200 50 50') == 'No'\nassert solution('100 50 120') == 'No'\nassert solution('100 50 120') == 'Yes'\nassert solution('500 50 100') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('50 100 120') == 'Yes', 'Test 1 failed'\nassert solution('100 50 120') == 'No', 'Test 2 failed'\nassert solution('50 10 120') == 'No', 'Test 3 failed'\nassert solution('100 50 20 120') == 'Yes', 'Test 4 failed'\nassert solution('120 50 20 120') == 'Yes', 'Test 5 failed'\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"0 100 120\") == \"No\"\nassert solution(\"10 50 100 120\") == \"Yes\"\nassert solution(\"120 50 100\") == \"No\"\nassert solution(\"120 50 120\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"50 100 120\"\n) == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10 20') == 'Yes'\nassert solution('15 30 40') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 8\n7 9 8 9\n''') == '5'\nassert solution('''4 9\n7 9 8 9\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 8\n7 9 8 9\n''') == '5'\nassert solution('''4 8\n7 9 8 9\n''') == '1'\nassert solution('''4 8\n7 9 8 9\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 8') == '5'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"4 8\") == \"5\"\n\nSample Test Standard Output 2:\n\nTak has N cards. On the i-th (1 \\leq i \\leq N) card is written an integer x_i.\nHe is selecting one or more cards from these N cards, so that the average of the integers written on the selected cards is exactly A.\nIn how many ways can he make his selection?\n\n-----Constraints-----\n - 1 \\leq N \\leq 50\n - 1 \\leq A \\leq 50\n - 1 \\leq x_i \\leq 50\n - N,\\,A,\\,x_i are integers.\n\n-----Partial Score-----\n - 200 points will be awarded for passing the test set satisfying 1 \\leq N \\leq 16.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\nN A\nx_1 x_2... x_N\n\n-----Output-----\nPrint the number of ways to select cards such that the average of the written integers is exactly A.\n\n-----Sample Input-----\n4 8\n7 9 8 9\n\n-----Sample Output-----\n5\n\n - The following are the 5 ways to select cards such that the average is 8:\n - Select the 3-rd card.\n - Select the 1-st and 2-nd cards.\n - Select the 1-st and 4-th cards.\n - Select the 1-st, 2-nd and 3-rd cards.\n - Select the 1-st, 3-rd and 4-th cards.\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"9 9\") == \"0\"\nassert solution(\"7 4\") == \"6\"\nassert solution(\"6 9\") == \"6\"\nassert solution(\"7 8\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"7 9 8 9\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 8') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 8\n7 9 8 9''') == '5'\nassert solution('''4 8\n7 9 8 9''') == '4'\nassert solution('''4 8\n7 9 8 9''') == '3'\nassert solution('''4 8\n7 9 8 9''') == '2'\nassert solution('''4 8\n7 9 8 9''') == '1'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8') == '5'\nassert solution('1 1 1 1 1 1 1 1 1 1 1') == '1'\nassert solution('2 2 2 2 2 2 2 2 2 2 2') == '3'",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"6 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == input()\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"4 2 1 3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n1\n1 2 3\n\"\"\"\n) == \"1 2 3\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2 3 4\") == \"4 2 1 3\"\nassert solution(\"2\\n1 2 3\") == \"2 1 1 2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2 3 4''') == '4 2 1 3'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\nassert solution('4\\n1 2 3 4') == '4 2 1 3'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2 2\"\nassert solution(\"4\") == \"4 2 1 3\"\nassert solution(\"5\") == \"5 1 2 3 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4 2 1 3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4 2 1 3'\nassert solution('5') == '4 2 1 3 5'\nassert solution('6') == '4 2 1 3 5 6'\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"3\\n3 5 7\") == \"3 5 7\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3') == 'No'\nassert solution('10\\n1\\n2') == 'Yes'\nassert solution('100\\n1\\n3') == 'Yes'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 3\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"10 10\") == \"Yes\"\nassert solution(\"5 1\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 4\\n5 6 7\\n6 8 9\\n7 8 9\") == \"No\"\nassert solution(\"10 5\\n4 5 6\\n6 7 8\\n7 8 9\\n9 9 8\") == \"Yes\"",
        "num_ids_2": 42,
        "num_ids_4": 73
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 3\n4 5 6\n''') == 'Yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 3\\n4 5 6') == 'Yes'\nassert solution('15 3\\n12 6 9 13\\n') == 'No'\nassert solution('8 7\\n5 9 10\\n') == 'Yes'\nassert solution('6 6\\n4 4 4\\n') == 'Yes'\nassert solution('9 9\\n6 6 6\\n') == 'No'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\\n4 5 6\") == \"Yes\"\nassert solution(\"5 2\\n2 1 5 7 8\\n\") == \"Yes\"\nassert solution(\"10 3\\n5 5 6\\n\") == \"No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('12 3') == 'No'\nassert solution('1000 10') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('10 2') == 'No'\n\"\"\"\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"7\"\nassert solution(\"abaabab\") == \"4\"\nassert solution(\"abaabab\") == \"4\"\nassert solution(\"abaababa\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 9\nassert solution('abaabab') == 7\nassert solution('abaaba') == 4\nassert solution('abbba') == 4\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abc') == '2'\nassert solution('abcdef') == '2'\nassert solution('abcabcabc') == '3'\nassert solution('a') == '1'\nassert solution('ab') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '', 'Invalid test case'\nassert solution('abaababaab') == '6', 'Invalid test case'\nassert solution('abaababaa') == '4', 'Invalid test case'\nassert solution('abaabab') == '3', 'Invalid test case'\nassert solution('abaababa') == '2', 'Invalid test case'\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '8'\nassert solution('abaabab') == '7'\nassert solution('abaaba') == '7'\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('abc') == ''\nassert solution('aba') == ''\nassert solution('abaabab') == '6'\nassert solution('abcdeabc') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abaababaab\") == 6\nassert solution(\"abaababaa\") == 3\nassert solution(\"abaababa\") == 2\nassert solution(\"abaabab\") == 1\nassert solution(\"abaaba\") == 2\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abaababaab\") == \"6\"\n\nS = stdin()\nlength = 0\nfor i in range(len(S)):\n    if S[i] == \"a\" and length == 0:\n        length += 1\n    elif S[i] == \"a\" and length!= 0:\n        length -= 1\n    else:\n        length += 1\nprint(length)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abaababaab') == 6\nassert solution('abaababaa') == 1\nassert solution('abaababa') == 2\nassert solution('abaabab') == 3\nassert solution('abaaba') == 3\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '5'\nassert solution('abaabab') == '4'\nassert solution('abaaba') == '3'\nassert solution('aba') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bac\") == \"No\"\nassert solution(\"bac\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'\n\"\"\"\n\ns = stdin.strip()\nc = s[1] + s[0]\nb = s[2] + s[1]\na = s[0] + s[2]\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('ac') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('bac') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('cab') == 'No'\nassert solution('baa') == 'Yes'\n\n'''\n\ns = stdin",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('acc') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(solution(\"bac\")) == \"Yes\"\nassert solution(solution(\"bca\")) == \"No\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('ab') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"1\"\nassert solution('5') == \"646\"\nassert solution('3') == \"20\"\nassert solution('1000000') == \"757402647\"",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''\n1\n1000000\n1000000\n''') == '757402647'\nassert solution('''\n1\n1000000\n1000000\n''') == '20'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4\") == \"\"\nassert solution(\"2\") == \"20\"\n",
        "num_ids_2": 15,
        "num_ids_4": 25
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n1\\n1') == '1'\nassert solution('2\\n1\\n1') == '1'\nassert solution('1\\n1000000\\n1000000') == '1000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 51
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''\n1\n1000000\n1000000\n''') == '757402647'\nassert solution('''\n5\n2\n3\n4\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''1\n3\n9 7 2 8 4\n''') == '20'\nassert solution('''3\n9\n4 2 6 8\n''') == '12'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 8 7 2 4\\n9 7 2 9 3\\n') == '646'\nassert solution('3\\n3 2\\n4 2') == '10'\nassert solution('100\\n7 100\\n
        "num_ids_2": 44,
        "num_ids_4": 1578
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '646'\nassert solution('1') == '757402647'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n1000000\n1000000\n''') == '757402647'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1000000\n1000000\n''') == '757402647'\nassert solution('''\n1\n100\n''') == '100'\nassert solution('''\n4\n4 4 4\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\n''') == '7'\n\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\n''') == '17'\n\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n'''\n\n\n\nfrom itertools import product",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '7'\nassert solution('''\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'\nassert solution('''\n5 1 4\n2 5 7 4 6\n5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 8 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n''') == '17'\n\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n''') == '17'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\n\"\"\") == \"17\"\n\nassert solution(\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\n\"\"\") == \"17\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 4 5') == '17'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"17\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1 4\") == \"17\"\nassert solution(\"7 4 8\") == \"17\"\nassert solution(\"5 1 4\") == \"17\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 4 5\\n2 5 4 2 6 3 1\\n2 1\\n6 5\\n2 1\\n3 1\") == \"7\"\nassert solution(\"9 4 8\\n6 8 5 1 8 1 1 2 1\\n9 2\\n8 4\\n5 3\\n9 7\") == \"17\"\nassert solution(\"5 1 4\\n2 5 7 4 6\\n5 4\\n\") == \"17\"\n",
        "num_ids_2": 76,
        "num_ids_4": 101
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\n''') == '17'\nassert solution('''9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\n''') == '17'\nassert solution('''5 1 4\n2 5 7 4 6\n5 4\n\n''') == '17'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7''') == '2'\nassert solution('''7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7''') == '1'\nassert solution('''7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([7]) == '0'\nassert solution([7, 1, 2, 3, 4, 5, 6, 7]) == '1'\nassert solution([7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7]) == '2'\nassert solution([7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7]) == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 138
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '1'\nassert solution('7') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([7]) == \"2\"\nassert solution([7, 1, 2, 3, 4, 5, 6, 7]) == \"0\"\nassert solution([7, 1, 2, 3, 4, 5, 6, 7, 3, 4, 5, 6, 7]) == \"1\"\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == \"2\"\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == \"1\"\nassert solution('''\n7\n1 2\n2 3\n3 4\n3 5\n3 6\n3 7\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\"\n) == \"2\"\nassert solution(\n    \"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\"\n) == \"1\"\nassert solution(\n    \"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n5 7') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '0'\nassert solution('7') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n\") == \"2\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"0\"\nassert solution(\"7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n\") == \"1\"\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n\"\"\") == \"1999999999\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 7\") == \"10\"\nassert solution(\"4 12\") == \"1999999999\"\nassert solution(\"2 1000000000\") == \"1000000001\"\nassert solution(\"7 97\") == \"1\"\nassert solution(\"1000000000 1000000000\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '1115'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 7') == '10'\nassert solution('4 12') == '1999999999'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '113'\nassert solution('1000000000 1000000000') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n1000000000\n100000000\n''') == '1'\nassert solution('''\n1000000001\n1000000001\n''') == '1'\nassert solution('''\n99999999\n100000000\n''') == '1999999999'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n5\n3\n1\n2''') == '4'\nassert solution('''3\n5\n4\n1\n2''') == '10'\nassert solution('''2\n7\n5\n1\n2''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000001\n2 1\n''') == '1999999999'\nassert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000001\n2 1\n''') == '113'\nassert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000001\n2 1\n''') == '1'\nprint('All tests passed!')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1000000001\"\nassert solution() == \"1999999999\"\nassert solution() == \"113\"\n",
        "num_ids_2": 20,
        "num_ids_4": 28
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 7\n4 12\n2 1000000000\n7 97\n1000000001\n2 1''') == '1999999999'\nassert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000001\n2 1''') == '1000000001'\nassert solution('''2 5\n6 3\n2 10\n7 1\n1 1000000000\n2 1''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n1\n2\n''') == '1999999999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n\nprint(solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7 2\n1 2 3 2 1 3 2\n\"\"\") == \"2 1 3 2\"\nassert solution(\"\"\"\n10 4\n2 3 3 1 1 2 1 2 3 3\n\"\"\") == \"3 1 2 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution(\"2 2\") == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 2\n1 2 3 2\n1 3 2''') == '2'\nassert solution('''7 2\n1 2 3 2 1 3 2\n1 3 2''') == '3'\nassert solution('''10 4\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1 2 3 3\n2 3 3 1 1 2 1",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 2 1 3 2 3'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2 1 2 1 2 3'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '2 1 2 1 3 2 1 3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 2 3\n''') == '2 1'\n\nassert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n\nassert solution('''\n12 4\n1 2 3 2 1 3 2 1 2 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '263'\nassert solution('3') == '327'\nassert solution('4') == '49'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\nprint(solution('''\n4\n1 4\n1 2\n2 4\n3 4\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3\n2\n3 2\n2 3\n4\n2 4\n3 5\n5\n2 1\n1 2\n2 2\n1 3\n1 5\n''') == '263'\nassert solution(\n'''\n2\n3\n1 2\n2 3\n1 3\n''') == '1'\nassert solution(\n'''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '263'\nassert solution(\n'''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n\"\"\") == 263\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n'''\n\n\n\n\n'''\n\nimport sys\nimport io\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n\n'''\n\n------SOLUTION------\n\n### Write solution here!\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''abacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n\n''') == '3'\nassert solution('''dfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n\n''') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abacaba') == '3'\nassert solution('dfcbbcfeeedbaea') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'\nassert solution('''abcd''') == ''\nassert solution('''bbaa''') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 62
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nprint(\"All passed!\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''abacaba''') == '3'\nassert solution('''dfcbbcfeeedbaea''') == '5'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution('abacaba') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '154873296'\nassert solution('2') == '336592714'\nassert solution('3') == '412958357'\nassert solution('4') == '0'\nassert solution('5') == '247189563'",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873296'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412958357\\n631457992\\n998236471\\n247789563'\n",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n3\") == \"Not solvable\"\nassert solution(\"1\") == \"154873296\"\nassert solution(\"2\\n3\") == \"Not solvable\"\nassert solution(\"4\\n6\") == \"Not solvable\"\nassert solution(\"1\\n3\") == \"Not solvable\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"154873396\"\nassert solution(\"2\") == \"336592714\"\nassert solution(\"3\") == \"729645835\"\nassert solution(\"4\") == \"863725145\"\nassert solution(\"5\") == \"979314628\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n9 8\\n9 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n9 8\\n9 8\\n\"\nassert solution(\"1\\n1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n9 8\\n9 8\\n\") == \"1 2\\n3 4\\n5 6\\n7 8\\n9 8\\n9 8\\n9 8\\n\"\n",
        "num_ids_2": 134,
        "num_ids_4": 134
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\"\n) == \"154873396\"\nassert solution(\n\"\"\"\n386592714\n154873296\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\"\n) == \"336592714\"\nassert solution(\n\"\"\"\n154873296\n729641835\n386592714\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\"\n) == \"412958357\"\nassert solution(\n\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\"\n) == \"987236471\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('154873296') == '154873296'\nassert solution('386592714') == '386592714'\nassert solution('729641835') == '729641835'\nassert solution('863725149') == '863725149'\nassert solution('975314628') == '975314628'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('2') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('3') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('4') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\nassert solution('5') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563'\n",
        "num_ids_2": 124,
        "num_ids_4": 248
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '6'\n\nassert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '8'\n\nassert solution('''\n4 4\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '-1'\n\nassert solution('''\n4 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '9'\n\nassert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n1 2 1 3\n1 4\n1 6\n2 4\n4 5\n4 6\n5 7\n6 7\n7 8''') == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n9 8\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n9 10\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"8\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"8\"\n\nassert solution(\"\"\"\n6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"9\"\n\nassert solution(\"\"\"\n5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '3'\nassert solution('''\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '6'\nassert solution('''\n2 4\n3 1\n1 2\n1 3\n2 1\n\n''') == '-1'\nassert solution('''\n3 3\n1 3\n2 1\n\n''') == '-1'\nassert solution('''\n3 3\n1 3\n2 1\n\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\nassert solution(r\"\"\"\n10 1\n10 1\n10 3\n10 2\n10 3\n10 4\n10 5\n10 6\n10 7\n10 8\n10 9\n\"\"\") == \"9\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n9 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\nassert solution(\"101 101 101 3\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'YES\\nYES\\nNO\\nNO\\nYES'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''6 3 4 5\n12 13 14 5\n5 1 1 1\n8 11 10 4\n13 4 7 8\n2 6 5 4\n''') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('3 2 1 100000000') == 'NO'\nassert solution('10 20 15 14') == 'YES'\nassert solution('101 101 101 3') == 'NO'",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 2 8') == 'YES'\nassert solution('100 101 102 105') == 'YES'\nassert solution('10 20 15 14') == 'NO'\nassert solution('101 101 101 3') == 'YES'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"101 101 101 3\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n3 2\\n100 101 102 105\") == \"YES\"\nassert solution(\"5\\n3 2\\n8\\n\") == \"NO\"\nassert solution(\"10\\n20\\n15\\n14\\n101 101 101 3\\n\") == \"YES\"",
        "num_ids_2": 39,
        "num_ids_4": 66
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES', \"10\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4') == '3 4 6 5'\nassert solution('5 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\nassert solution('5 10') == '9 8 12 6 8'\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n1 2 3 4\n''') == \"3 4 6 5\"\nassert solution('''\n5 5\n2 1 5 3 5\n''') == \"9 8 12 6 8\"\nassert solution('''\n2 10\n1 2 1 1 2 2 2 2 2 2\n''') == \"3 3\"\nassert solution('''\n2 4\n1 2 1 1 2 2 2 2 2 2\n''') == \"3 3\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"3 4 6 5\", \"Wrong!\"\nassert solution(\"5 5\") == \"9 8 12 6 8\", \"Wrong!\"\nassert solution(\"2 10\") == \"3 3\", \"Wrong!\"",
        "num_ids_2": 37,
        "num_ids_4": 53
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == '3 4 6 5'\nassert solution('5 5') == '9 8 12 6 8'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 4') == '3 4 6 5'\nassert solution('5 5') == '9 8 12 6 8'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 4\n1 2 3 4\n\n\"\"\") == \"3 4 6 5 \n\nassert solution(\"\"\"\n5 5\n2 1 5 3 5\n\n\"\"\") == \"9 8 12 6 8 \n\nassert solution(\"\"\"\n2 10\n1 2 1 1 2 2 2 2 2 2\n\n\"\"\") == \"3 3 \n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n2 1 5 3 5\\n') == '3 3\\n'\nassert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"3 4 6 5\"\nassert solution(\"5 5\") == \"9 8 12 6 8\"\nassert solution(\"2 10\") == \"3 3\"",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4') == '3 4 6 5 \nassert solution('5 5') == '9 8 12 6 8 \nassert solution('2 10') == '3 3 \n",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n2 1 5 3 5\\n') == '3 3\\n'\nassert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5\\n'\nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2 2\\n') == '9 8 12 6 8\\n'",
        "num_ids_2": 47,
        "num_ids_4": 79
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"YES\"\nassert solution(\"1 3\") == \"YES\"\nassert solution(\"1 4\") == \"YES\"\nassert solution(\"2 5\") == \"YES\"\nassert solution(\"2 6\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''2 4\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''2 3\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''2 2\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''2 5\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n3 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n3 4\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n3 5\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n2 1\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 6\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\nassert solution('10 6\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\nassert solution('10 6\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'NO'\nassert solution('''\n4 7\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'NO'\nassert solution('''\n4 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\n''') == 'YES'\n\n'''\nInput\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\nOutput\nYES\nYES\nYES\nYES\nNO\nNO\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO\\n'\n",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\"\nassert solution(\"4\\n5\\n1 2 2 1 3\\n3\\n1 1 1\") == \"NO\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\nassert solution('''\n1\n1 1\n''') == 'NO'\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\n\"\nassert solution(\"5\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\n\"\nassert solution(\"6\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\n\"\nassert solution(\"10\") == \"NO\\n\"\nassert solution(\"2\") == \"YES\\n1 2\\n\"\n\nstdin = \"\"\"\n2\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\"\nprint(solution(stdin))\n",
        "num_ids_2": 56,
        "num_ids_4": 96
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3\n1 2 2\n4\n1 1 1\n''') == 'NO'\n\nassert solution('''\n5\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\n\nassert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\n\n\n\n---Input Sample---\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\n---Output Sample---\nYES\n1 3\n3 5\n5 4\n1 2\nNO\nYES\n1 2\n2 3\n3 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n1 2\n1 3\n1 4\nYES\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\n\nassert solution([\n    '4\\n',\n    '5\\n',\n    '1 2 2 1 3\\n',\n    '3\\n',\n    '1 1 1\\n',\n    '4\\n',\n    '1 1000 101 1000\\n',\n    '4\\n',\n    '1 2 3 4\\n'\n]) == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n5\\n1 2 2 1 3\\n3\\n1 1 1') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110', 'First example'\nassert solution('''\n2\n4 3\n1101\n1101\n''') == '1101', 'Second example'\nassert solution('''\n1\n10 2\n1101100\n''') == '1101100', 'Third example'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"01011110\"\nassert solution(\"4\") == \"0101111\"\nassert solution(\"7\") == \"0011111\"\n\n\"\"\"\nimport sys\n\nstdin = sys.stdin.read()\nn, k = list(map(int, stdin.split()))\ns = stdin[1:n]\nprint(s)\n\nl = []\nl.append(s[0])\nl.append(s[1])\n\ncnt = 0\n\nwhile 1:\n    for i in range(len(s)):\n        if l[i] == s[i]:\n            cnt += 1\n        else:\n            l[i] = s[i]\n            l[i + 1] = s[i + 1]\n            cnt = 1\n            break\n    if cnt >= k:\n        break\n\nprint(l)",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"01011110\"\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n\n''') == '01011110'\nassert solution('''3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n\n''') == '01011110'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''3\n8 5\n11011010\n7 9\n1111100\n''') == '0101111'\nassert solution('''10\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\nassert solution('''6\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\nassert solution('''5\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n''') == '0101111'\nassert solution('''\n3\n3 4\n11011010\n7 9\n1111100\n''') == '0011111'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n''') == '0111110'\nassert solution('''\n3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n''') == '0111111'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110', 'Wrong result'\nassert solution('''\n3 2\n11010\n11011\n11010\n''') == '01011110', 'Wrong result'\n\nassert solution('''\n4 2\n110111\n110110\n110111\n110110\n''') == '01011110', 'Wrong result'\n\n'''\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 5') == '01011110'\nassert solution('100 9') == '0101111'\nassert solution('10000 9') == '011000010'",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 5\") == \"01011110\"\nassert solution(\"7 9\") == \"0101111\"\nassert solution(\"11011010\") == \"0011111\"\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''5 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n\n''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"11 11\\n\"\n    \"9 11\\n\"\n    \"7 8\\n\"\n    \"8 9\\n\"\n    \"7 8\\n\"\n) == \"3\\n\"\n\nassert solution(\n    \"5 1\\n\"\n    \"29 30\\n\"\n    \"30 30\\n\"\n    \"29 29\\n\"\n    \"28 30\\n\"\n    \"30 30\\n\"\n) == \"4\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3\\n1 4 7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '4'\nassert solution('7 2') == '1 4 7'\nassert solution('7 3') == '1 4 7'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2\\n1 3\\n1 3') == '4\\n1 2 3'\nassert solution('5 1\\n2 3\\n2 3\\n2 2\\n3 3\\n4 4') == '5\\n1 2 3 4'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"6 1\") == \"4\"\nprint(solution(input))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == \"4\"\nassert solution('6 1') == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2\\n11 11') == '3'\nassert solution('5 1\\n2 3') == '4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution() == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example_input_1) == '3', 'Not quite done'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1'\nassert solution('1 2 4') == '3'\nassert solution('2 2 2') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n2\n2 1\n-100 2 3\n''') == '3'\n\nassert solution(\n'''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n\nassert solution(\n'''\n3\n1 3 2\n-100 2 3\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n\n''') == '19'\nassert solution('''\n2\n2 1\n-3 0\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(t1) == \"3\"\nassert solution(t2) == \"19\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1 3 2\n-100 2 3\n''') == '3'\n\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n\nassert solution('''\n2\n2 1\n-3 0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '18'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"21 7 15 21 3\"\nassert solution(input()) == \"1 3 3\"\nassert solution(input()) == \"1 3 3\"\n\ninput = ['5 6', '1 2 1', '3 2 3', '2 4 1', '4 5 2', '5 7 4', '3 6 2', '5 2 3 4 1']\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''\n5 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '1 3 3'\nassert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''\n1 2\n1 2\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\n\"\"\") == \"21 7 15 21 3\"\nassert solution(\"\"\"\n5 5\n1 2 1\n2 3 2\n1 3 2\n3 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\n\"\"\") == \"0 0 \nassert solution(\"\"\"\n1 2\n1 2\n\n\"\"\") == \"0 0 \n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"21 7 15 21 3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\") == \"21 7 15 21 3\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3'\n\n\n'''\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''1 2\n1 2\n''') == '0 0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1''') == '21 7 15 21 3', 'First example'\nassert solution('''1 2\n1 2\n\n1 2\n''') == '0 0', 'Empty tree'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == \"21 7 15 21 3\"\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 2\n''') == \"1 3 3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 5\") == \"21 7 15 21 3\"\nassert solution(\"1 2\") == \"0 0\"\nassert solution(\"3 3\") == \"1 3 3\"\n\"\"\"\n\nn, m = list(map(int, input().split()))\n\ngraph = {i:[] for i in range(1, n + 1)}\nfor _ in range(n - 1):\n    u, v, w = map(int, input().split())\n    graph[u].append([v, w])\n    graph[v].append([u, w])\n\nq = list(map(int, input().split()))\nfor i in range(m):\n    res = 0\n    for j in range(1, n + 1):\n        if j not in graph[q[i]]:\n            for k in range(1, n + 1):\n                if j in graph[k]:\n                    res += 1\n    print(res)\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5''') == 'NO'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5''') == 'YES'\nassert solution('''5\n1 2\n3\n5 5 5 5''') == 'YES'\nassert solution('''5\n1 2\n3\n1 3 4 4''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"100\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n2\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n2\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\nassert solution([3,2,1,2,1]) == \"NO\"\nassert solution([1,2,3,2,1]) == \"YES\"\nassert solution([1,1,1]) == \"YES\"\nassert solution([]) == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n2\\n') == \"YES\", \"Just testing\"\nassert solution('1\\n2\\n3\\n4\\n') == \"NO\"\nassert solution('10\\n10\\n10\\n10\\n') == \"YES\"\n\n'''",
        "num_ids_2": 46,
        "num_ids_4": 67
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1''') == 'YES', 'Should be YES'\nassert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1''') == 'NO', 'Should be NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n1010\\n\") == \"12\"\nassert solution(\"4 5\\n1001\\n\") == \"11\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"4 4\", \"1001\", \"1101\"]) == \"11\"\nassert solution([\"4 5\", \"1001\", \"10101\"]) == \"12\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4\\n1010\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\n1010\n1101\n''') == '12'\nassert solution('''\n4 5\n1001\n10101\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1010\\n') == '12'\nassert solution('4 5\\n1001\\n10101\\n') == '11'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"3 2\\n\"\n    \"1010\\n\"\n    \"1111\"\n) == \"12\"\n\nassert solution(\n    \"3 5\\n\"\n    \"1001\\n\"\n    \"10101\"\n) == \"11\"\n\nassert solution(\n    \"4 5\\n\"\n    \"1001\\n\"\n    \"10101\"\n) == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(examples[0]) == \"12\"\nassert solution(examples[1]) == \"11\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1010\\n1101\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\") == \"11\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"4 5\") == \"11\"\nassert solution(\"4 5\") == \"12\"\n\n\n\"\"\"\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'NO'\nassert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'YES'\n'''\n    return\n\n\n'''\n## Code\n\n```python\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n4\n6\n8\n10''') == 'NO'\nassert solution('''5\n4\n6\n8\n10''') == 'YES'\nassert solution('''3\n5\n6\n8\n10''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4\\n6\") == \"NO\"\nassert solution(\"1\\n10\\n\") == \"YES\"\nassert solution(\"1\\n5\\n\") == \"YES\"\nassert solution(\"1\\n20\\n\") == \"NO\"\nassert solution(\"2\\n20\\n\") == \"YES\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"6\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"10\") == \"YES\"\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"NO\", \"WA\"\nassert solution(\"2\") == \"YES\", \"WA\"\nassert solution(\"4\") == \"NO\", \"WA\"\nassert solution(\"4\") == \"YES\", \"WA\"\nassert solution(\"6\") == \"NO\", \"WA\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n4\\n2\\n4\\n3\\n\") == \"NO\"\nassert solution(\"1\\n10\\n4\\n5\\n6\\n8\\n\") == \"YES\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n2\n3\n5\n''') == \"YES\\n2 4 1 5\\nNO\\n2 4 6 8 1 3 5 11\\nNO\\n\"\nassert solution('''\n4\n1\n2\n3\n''') == \"NO\\nYES\\n2 4 1 2\\nNO\\nYES\\n2 4 3 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'YES\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\\nNO\\n'''\n\n'''\n4\n3\n1\n1\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n4') == '2 4 1 5'\nassert solution('3\\n10') == 'NO'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\n10\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n7\n2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n10\n10\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n7\n7\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3\n5\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"5\"\nassert solution() == \"1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '5'\n\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n5\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '1'\nassert solution('''2\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '0'\nassert solution('''3\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n\"\"\") == \"5\"\nassert solution(\"\"\"\n\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\n\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n3\\n0\\n4\\n0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n3\") == \"1\"\nassert solution(\"1\\n2\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\nassert solution([9, 3, 1, 4, 1, 5, 9, 2, 6, 5]) == \"4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4', 'Wrong'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3', 'Wrong'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n\"\"\") == \"4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '3'\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '2'\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '4'\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n10\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n5\n5\n1 4\n2 5\n2 3\n3 4\n4 3\n4 4\n6 8\n7 7\n''') == '1'\nassert solution('''\n2\n10\n1 5\n2 4\n2 3\n3 4\n4 4\n6 8\n7 7\n''') == '2'\nassert solution('''\n3\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n3\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"4\"\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"3\"\nassert solution('''\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"4\"\nassert solution('''\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"2\"\nassert solution('''\n6\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\n\nassert solution('''\n2\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == \"3\"\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == \"4\"\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == \"2\"\nassert solution('''4\n1 5\n2 4\n2 3\n3 4\n5''') == \"7\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"3\"\nassert solution('''\n5\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"4\"\nassert solution('''\n5\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n23 55\\n23 0\\n0 1\") == \"60\"\nassert solution(\"2\\n23 0\\n23 59\") == \"1439\"\nassert solution(\"3\\n4 20\\n23 59\") == \"1180\"\nassert solution(\"4\\n23 59\\n23 0\") == \"1\"",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"60\"\nassert solution(\"\"\"\n2\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"1439\"\nassert solution(\"\"\"\n3\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"1180\"\nassert solution(\"\"\"\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n23 55\n23 0\n0 1\n4 20\n23 59''') == '61'\nassert solution('''5\n0 1\n4 20\n23 59\n23 0\n''') == '1439'\nassert solution('''6\n0 0\n0 0\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"1\") == '60'\nassert solution(\"2\") == '1439'\nassert solution(\"3\") == '1180'\nassert solution(\"4\") == '1'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1180'\nassert solution('1') == '1'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '60'\nassert solution(input) == '1439'\nassert solution(input) == '1180'\nassert solution(input) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '1'\nassert solution('''\n0\n0 0\n''') == '1439'\nassert solution('''\n1\n0 0\n''') == '0'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"60\\n1439\\n1180\\n1\\n\"\nassert solution('''\n1\n0\n0\n2\n''') == \"1\\n2\\n\"\nassert solution('''\n2\n15\n7\n16\n''') == \"1439\\n1180\\n\"\nassert solution('''\n3\n30\n0\n40\n''') == \"30\\n40\\n\"\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n\") == \"60\\n1439\\n1180\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '60'\nassert solution('''\n5\n0 0\n0 1\n0 1\n4 20\n23 59\n''') == '1439'\nassert solution('''\n1\n0 0\n0 1\n4 20\n23 59\n''') == '1'\nassert solution('''\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '60'\nassert solution('''\n5\n4 20\n23 59\n''') == '1180'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '4 3 2'\nassert solution('8') == '4 6'\nassert solution('10') == '4 6 7'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 4\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR''') == '''1 2\n1 4\n3 4\n'''\n\n'''\n\n4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\nOutput\n1 2\n1 4\n3 4\n-1\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"LLR\") == \"L\"\nassert solution(\"RRU\") == \"R\"\nassert solution(\"RULU\") == \"R\"\nassert solution(\"LLUD\") == \"U\"\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n4\\nLRUD\\n\") == \"1 2\"\nassert solution(\"5\\n5\\nLLDDR\\n\") == \"1 4\"\nassert solution(\"4\\n6\\nRURUD\\n\") == \"1 4\"\nassert solution(\"4\\n5\\nRRUUD\\n\") == \"3 4\"\nassert solution(\"4\\n10\\nRRRDDD\\n\") == \"3 4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 83
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n4\nLRUD\n4\nLURD\n5\nRRUDU\n5\nLLDDR\n\"\"\") == \"1 4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n4\nLLRDR\n''') == '1 4'\nassert solution('''\n2\n5\nRDRD\n''') == '1 4'\nassert solution('''\n4\n4\nLLRUD\n''') == '1 2'\nassert solution('''\n4\n5\nRURDD\n''') == '2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"1 4\") == \"3 4\"\nassert solution(\"3 4\") == \"-1\"\nassert solution(\"5 1\") == \"3 4\"\nassert solution(\"3 4\") == \"-1\"\n\nstdin = \"\"\"\n3\nLURD\n4\nLURD\n3\nRRUDU\n5\nLLDDR\n5\nRRDDR\n\"\"\"\n\nfor solution_function in (solution):\n    print(solution_function(''))\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 2\"\nassert solution() == \"1 4\"\nassert solution() == \"3 4\"\nassert solution() == \"-1\"\nassert solution() == \"5 4\"\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '1 4'\nassert solution('1\\n4\\nLRUD\\n4\\nLURD\\n5\\nRRUDU\\n5\\nLLDDR\\n') == '1 4'\nassert solution('5\\n10\\n
        "num_ids_2": 88,
        "num_ids_4": 1194
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''2\n3\n4\n5\n''') == '0'\nassert solution('''3\n3\n4\n5\n''') == '1'\nassert solution('''5\n4\n4\n4\n4\n''') == '2'\nassert solution('''1\n1\n1\n1\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n4 2 4 1 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''\n4\n6 3 2 2\n2\n1 2 2\n3\n5\n''') == '1'\nassert solution('''\n1\n2\n4\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''\n6\n2 1 3 4 5 6\n6\n1 2 3 4 5 6\n2\n1 1 1 3\n1\n1\n5\n6\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"3\"\nassert solution('''\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"0\"\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"0\"\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"1\"\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"7\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"7\") == \"3\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4 2 4 1 4 3\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''\n1\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution('''\n2\n2 2\n2 2\n''') == \"1\"\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == \"1\"\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n4\\n1 2 1\\n3') == '3\\n1\\n0'\nassert solution('3\\n4\\n2 1 2\\n3') == '1\\n0\\n2'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1\n0\n''') == '0'\n\nassert solution('''\n9\n4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n\n''') == '121'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8''') == '121'\nassert solution('''1\n1337''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121', 'wrong solution'\nassert solution('''\n1\n1337\n''') == '0', 'wrong solution'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    3\n    4 1 7 10 1 6 5\n    1 2\n    2 3\n    1 4\n    1 5\n    5 6\n    5 7\n    5 8\n    ''') == '121'\nassert solution('''\n    1\n    1337\n    ''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n7 5 3\\n1 2\\n2 3\\n1 4\\n1 5\\n5 6\\n5 7\\n5 8') == '121'\nassert solution('1\\n1337') == '0'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n9 4 1 7 10 1 6 5\\n1 2') == '121'\nassert solution('1\\n1337') == '0'\nprint(solution(open(0)))\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n''') == '121'\nassert solution('''\n1\n1337\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n8\n9 4 1 7 10 1 6 5\n1 2\n2 3\n1 4\n1 5\n5 6\n5 7\n5 8\n\"\"\") == \"121\"\nassert solution(\"\"\"\n1\n1337\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '0'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '0'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '227'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n4 3\\n1 2 1 3\") == \"6\"\nassert solution(\"10\\n6 7\\n8 9\\n10 10\\n15 10\\n20 50\") == \"227\"\nassert solution(\"5\\n10 25\\n6 8\\n\") == \"0\"\nassert solution(\"5\\n3 4\\n1 2 1 3\") == \"18\"\n",
        "num_ids_2": 50,
        "num_ids_4": 90
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6'\nassert solution('''\n3 3\n3 1 5 1\n6 7 4\n8 9\n\n''') == '0'\nassert solution('''\n1 2\n3\n2\n\n''') == '2'\nassert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n\n''') == '6'\nassert solution('''\n5 10\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '18'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == \"6\"\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == \"227\"\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == \"8\"\nassert solution('''\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4\n1 2 1 3''') == '6'\nassert solution('''5 10\n8 7 1 8 3 7 5 10 8 9''') == '227'\nassert solution('''5 10\n20 100 50 20 100500''') == '8'\nassert solution('''5 10\n1 2 3 4 5 6 7 8''') == '0'\nassert solution('''5 10\n1 2 3 4 5 6 7 8''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"0\"\nassert solution(\"4 3\") == \"1\"\nassert solution(\"10 6\") == \"18\"\nassert solution(\"5 10\") == \"227\"\nassert solution(\"8 8\") == \"0\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\n\nassert solution('''\n5\n10 4\n10 8 9 1 2 3 4 5 6\n3 5 6 8 1 2 3\n7 9 1 2 3 5 6\n1 9 1 9 1 2 3\n1 2 1 3 4 5 6\n1 2 2 3 4 5 6\n1 1 2 2 3 4 5\n2 1 2 3 4 5 6\n''') == '227'\n\nassert solution('''\n5\n8 5\n1 1 1 1 1 1 1 1\n1 2 2 2 2 2 2 2 2 2\n1 3 3 3 3 3 3 3 3 3\n1 4 4 4 4 4 4 4 4 4 4\n1 5 5 5 5 5 5 5 5 5 5\n1 6 6 6 6 6 6 6 6 6 6\n1 7 7 7 7 7 7 7 7 7 7 7\n1 8 8 8 8 8 8 8 8 8 8 8 8\n1 9 9 9 9 9 9 9 9 9 9 9 9\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2 1\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1,2,3]) == \"1\"\nassert solution([1,2]) == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763\n764\n765\n766\n767\n768\n769\n770\n771\n772\n773\n774\n775\n776\n777\n778\n779\n780\n781\n782\n783\n784\n785\n786\n787\n788\n789\n790\n791\n792\n793\n794\n795\n796\n797\n798\n799\n800\n801\n802\n803\n804\n805\n806\n807\n808\n809\n810\n811\n812\n813\n814\n815\n816\n817\n818\n819\n820\n821",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('[1,2,3]\\n[1,1]') == '1'\nassert solution('[1,2]\\n[1,2,3]') == '2'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1,2,3], [1,1]) == 1\nassert solution([1,2], [1,2,3]) == 2",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1,2,3', '1,1') == '1'\nassert solution('1,2', '1,2,3') == '2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n5\n''') == '5'\nassert solution('''\n33\n''') == '''\n3\n3\n3\n1\n1\n'''\nassert solution('''\n4\n''') == '''\n4\n3\n3\n1\n1\n'''\n'''\n3\n4\n7\n12\n21\n'''\nassert solution('''\n5\n''') == '''\n5\n4\n3\n2\n1\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\\n2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n1\n1\n''') == '1\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 3 3 1'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1]) == [1]\nassert solution([1,1,1,1,1]) == [1,1,1,2,3,1]\nassert solution([2,2,2,2,2]) == [1,2,3,4,5,6,7,8,9,10]\nassert solution([3,2,1,4,3,4,6,5,5,4,3,2,1]) == [1,2,3,4,6,9,12,12,14,14,12,10,8,7,5,4,3,2,1]\n",
        "num_ids_2": 38,
        "num_ids_4": 144
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1\\n2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"1 3 3 1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"5\\n4\\n3\\n2\\n1\"\n\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        \"\"\"\n        :type rowIndex: int\n        :rtype: List[int]\n        \"\"\"\n        res = [1]\n        for i in range(rowIndex):\n            row = []\n            for j in range(i+1):\n                row.append(res[j] + res[j+1])\n            res = row\n        return res\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n4 1\n5 3 1\n6 3 1 2 1\n7 6 1 3 1 2 1 3 1\n8 7 6 1 3 1 2 1 3 1 2 1\n9 8 7 6 1 3 1 2 1 3 1 2 1 3 1\n10 9 8 7 6 1 3 1 2 1 3 1 2 1 3 1 2 1 3\n11 10 9 8 7 6 1 3 1 2 1 3 1 2 1 3 1 2 1 3 1 2 1 3\n12 11 10 9 8 7 6 1 3 1 2 1 3 1 2 1 3 1 2 1 3 1 2 1 3 1 2 1 3\n''') == '''1\n3\n1 3 1\n3 3 1 2 1\n1 3 3 2 1 1\n'''\nassert solution('''\n3\n4 1\n5 3 1\n6 3 1 2 1\n''') == '''1\n3\n3 1\n3 1 2 1\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\n'''\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        x = bin(n)[2:]\n        x = x.replace('0',' ').split()\n        count = 0\n        for i in x:\n            count += int(i)\n        return count\n        \n    \n    \n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example1) == 3\nassert solution(example2) == 1\nassert solution(example3) == 31\nassert solution(example4) == 1\nassert solution(example5) == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"00000000000000000000000000001011\") == \"3\"\nassert solution(\"00000000000000000000000010000000\") == \"1\"\nassert solution(\"111111111111111111111111111111101\") == \"31\"\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s1) == \"3\"\nassert solution(s2) == \"1\"\nassert solution(s3) == \"31\"\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('11111111111111111111111111111101') == '31'\nassert solution('111111111111111111111111111111100') == '31'\nassert solution('111111111111111111111111111111001') == '31'\n",
        "num_ids_2": 20,
        "num_ids_4": 56
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''00000000000000000000000000001011''') == '3'\nassert solution('''00000000000000000000000010000000''') == '1'\nassert solution('''111111111111111111111111111111101''') == '31'\n'''\n",
        "num_ids_2": 33,
        "num_ids_4": 54
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1,2,3\") == \"1,2,4\"\nassert solution(\"4,3,2,1\") == \"4,3,2,2\"\nassert solution(\"101\") == \"11\"\n",
        "num_ids_2": 40,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n[4,3,2,1]\n''') == '''[4,3,2,2]'''\n'''\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        for i in range(len(digits) - 1, -1, -1):\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            else:\n                digits[i] = 0\n        digits.insert(0, 1)\n        return digits\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1,2,3]) == [1,2,4], 'Error'\nassert solution([4,3,2,1]) == [4,3,2,2], 'Error'\nassert solution([0]) == [1], 'Error'\nassert solution([9,9,9]) == [1,0,0,0], 'Error'\n\nstdin = \"\"\"\n0\n\"\"\"\n\nstdin = \"\"\"\n1\n\"\"\"\n\nstdin = \"\"\"\n2\n\"\"\"\n\nstdin = \"\"\"\n3\n\"\"\"\n\nstdin = \"\"\"\n4\n\"\"\"\n\nstdin = \"\"\"\n5\n\"\"\"\n\nstdin = \"\"\"\n6\n\"\"\"\n\nstdin = \"\"\"\n7\n\"\"\"\n\nstdin = \"\"\"\n8\n\"\"\"\n\nstdin = \"\"\"\n9\n\"\"\"\n\nstdin = \"\"\"\n10\n\"\"\"\n\nstdin = \"\"\"\n99\n\"\"\"\n\nstdin = \"\"\"\n100\n\"\"\"\n\nstdin = \"\"\"\n1000\n\"\"\"\n\nstdin = \"\"\"\n9999\n\"\"\"",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1,2,3') == '1,2,4'\nassert solution('4,3,2,1') == '4,3,2,2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\nassert solution(\"[1,2,3,4]\") == \"[1,2,3,5]\"\n",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1,2,3') == '1,2,4'\nassert solution('4,3,2,1') == '4,3,2,2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('12') == '13'\nassert solution('123') == '124'\nassert solution('4193 with words') == '4193'\nassert solution('42') == '43'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1, 2, 3]) == [1, 2, 4]\nassert solution([4, 3, 2, 1]) == [4, 3, 2, 2]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\", \"First\"\nassert solution(\"3 1\") == \"4\", \"Second\"\nassert solution(\"-3 -1\") == \"-4\", \"Third\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 1\") == \"4\"\nassert solution(\"3 1\") == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '2', 'TEST FAILED'\nassert solution('1 1') == '2', 'TEST FAILED'\nassert solution('3 4') == '7', 'TEST FAILED'\nassert solution('9 10') == '25', 'TEST FAILED'\nassert solution('6 9') == '10', 'TEST FAILED'",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"3 1\"\"\") == \"4\"\nassert solution(\"\"\"4 1\"\"\") == \"4\"\nassert solution(\"\"\"2 3\"\"\") == \"5\"\nassert solution(\"\"\"3 2\"\"\") == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 1\n7 7\n''') == '10'\n\nassert solution('''3 2\n6 9\n''') == '15'\n\nassert solution('''5 1\n1 2\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n1 2\n''') == '3'\nassert solution('''8 4\n8 9\n''') == '12'\nassert solution('''15 14\n7 6\n''') == '9'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1''') == '4', 'TEST ERROR: test_solution_01'\nprint(solution('''3 1'''))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2 3\n\"\"\") == \"4\"\nassert solution(\"\"\"1 2\n\"\"\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '4', \"Wrong\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"10 20\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"4 3\") == \"3\"\nassert solution(\"0 0\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"3 10\") == \"4\"\nassert solution(\"4 5\") == \"3\"\n\"\"\"\n\nN, D = map(int, stdin.readline().split())\npoints = list()\n\nfor _ in range(N):\n    points.append(tuple(map(int, stdin.readline().split())))\n\npoints.sort(key = lambda x: (x[0]**2 + x[1]**2)**0.5)",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n0 5\n-2 4\n3 4\n4 -4\n''') == '3'\nassert solution('''4 5\n0 5\n-2 4\n3 4\n4 -4\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '1'\nassert solution('4 5') == '3'\n\"\"\"\n\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '1', 'Wrong answer'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '1\\n2\\n1'\nassert solution('4 3') == '3\\n4\\n3'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\") == \"3\"\nassert solution(\"4 5\") == \"3\"\n\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"3\"\n\n=========================",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\nassert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"9\") == \"No\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'Yes'\nassert solution('100') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('10') == 'No'\nassert solution('1000000') == 'No'\nassert solution('123456789') == 'Yes'\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"No\"\nassert solution(\"10\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"321\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yes'\nassert solution('12') == 'Yes'\nassert solution('10') == 'No'\nassert solution('10') == 'No'\n\n'''\n\nn = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"123\") == \"No\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\", \"test 1 fail\"\nassert solution(\"123\") == \"No\", \"test 2 fail\"\nassert solution(\"1234\") == \"Yes\", \"test 3 fail\"\nassert solution(\"12345\") == \"No\", \"test 4 fail\"\nassert solution(\"1234567\") == \"Yes\", \"test 5 fail\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'No'\nassert solution('4') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"5\") == \"8\"\nassert solution(\"7\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5 5 -1\\n\") == \"12 8 10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 5, -1]) == '12'\nassert solution([3, 5, -2]) == '8'\nassert solution([3, 5, -3]) == '10'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '12'\nassert solution('2') == '8'\nassert solution('3') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 5 -1\\n') == '12\\n8\\n10'\n\nprint(solution('2\\n3 5 -1\\n'))\n\"\"\"\n\n\nimport sys\n\nN = int(sys.stdin.readline())\ndata = list(map(int, sys.stdin.readline().split()))\n\ncost = 0\n\nfor i in range(1, N):\n    cost += abs(data[i] - data[i-1])\n    # print(cost)\n    # print(data[i], data[i-1])\n\nprint(cost)",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"12\"\nassert solution(\"3 5 -1\") == \"8\"",
        "num_ids_2": 17,
        "num_ids_4": 30
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"12\\n8\\n10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n3 5 -1\n\"\"\") == \"12\"\nassert solution(\"\"\"\n3\n1 2 1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n1\n2 3 4 5\n\"\"\") == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '10'\nassert solution('1') == '1'\n\"\"\"\n\nimport sys\n\nsys.setrecursionlimit(10**5)\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBBBW') == '2'\nassert solution('WWBBB') == '1'\nassert solution('BBWWWW') == '5'\nassert solution('WWWWBB') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BWBWW\") == \"2\"\nassert solution(\"WWWWWW\") == \"1\"\nassert solution(\"WWBBBB\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"AABWW\") == \"0\"\nassert solution(\"BWWWW\") == \"4\"\nassert solution(\"WWWWWW\") == \"9\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"BBBWW\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('WBWBWBW') == '4'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('FFF') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('2 10') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 4\n\n\"\"\") == \"Yes\"\n\nassert solution(\n\"\"\"\n1 2\n\n\"\"\") == \"No\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 21\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 21\") == \"Yes\"\nassert solution(\"2 5\") == \"No\"\nassert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'Yes'\nassert solution('1 21') == 'Yes'\nassert solution('1 1') == 'No'\n\n\"\"\"\n\na, b = stdin.split(' ')\na = int(a)\nb = int(b)",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 21\n''') == 'Yes'\nassert solution('''\n1 17\n''') == 'No'\nassert solution('''\n5 11\n''') == 'No'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 21') == 'Yes', \"Should be 'Yes'\"\nassert solution('1 1') == 'No', \"Should be 'No'\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 21\\n\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 21\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('12') == '5'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution('7\\n3 1 4 1 5 9 2\\n') == '4'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"3 1 4 1 5 9 2\") == \"4\"\n\n-----------------------------------------------------\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert solution(\"7\") == \"4\"\nassert solution(\"3 1 4 1 5 9 2\") == \"4\"\n\n-----------------------------------------------------\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass\n\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"5\\n3 2 5 2 9 5 2\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '4'\nassert solution('3 1 4 1 5 9 2') == '5'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"7\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3 1 4 1 5 9 2\n''') == '4'\nassert solution('''2\n3 2\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n3 1 4 1 5 9 2') == '4'\nassert solution('7\\n3 1 4 1 5 9 2') == '6'\nassert solution('10\\n3 1 4 1 5 9 2') == '7'\nassert solution('20\\n3 1 4 1 5 9 2') == '8'\nassert solution('100\\n3 1 4 1 5 9 2') == '5'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n3 1 4 1 5 9 2') == '4'\nassert solution('7\\n3 1 4 1 5 9 2') == '5'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"6\"\nassert solution(\"10\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"9\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('3') == '0'\nassert solution('100') == '100'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"5\"\nassert solution(\"3\") == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '5'\n\n\"\"\"\n\nN = int(input())\nA = int(input())\n\nprint(A*(A-1)//2)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 6') == 'YES'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\nassert solution(\"2 4 9\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('2 8 6') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('4 2 6') == 'NO'\nassert solution('1 2 3') == 'NO'\n\"\"\"\nfrom math import sqrt\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 4\") == \"YES\"\nassert solution(\"2 4 5\") == \"NO\"\nassert solution(\"2 5 4\") == \"YES\"\nassert solution(\"5 4 2\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('1 2 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('3 4 1') == 'NO'\nassert solution('2 4 6') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 3\") == \"YES\"\nassert solution(\"2 2 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('10 5 1') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 3 1\") == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('29') == \"Yes\"\nassert solution('123') == \"No\"\nassert solution('145') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('29') == 'Yes'\nassert solution('34') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29') == 'Yes'\nassert solution('1') == 'No'\nassert solution('0') == 'No'\nassert solution('-1') == 'No'\nassert solution('-9') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n29\n''') == \"Yes\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"Yes\"\nassert solution(\"18\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('29') == 'Yes', \"29\"\nassert solution('16') == 'No', \"16\"\nassert solution('11') == 'Yes', \"11\"\nassert solution('23') == 'No', \"23\"\nassert solution('12') == 'No', \"12\"\n\nstdin = input()\nprint(solution(stdin))\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"29\"\"\") == \"Yes\"\nassert solution(\"\"\"33\"\"\") == \"No\"\nassert solution(\"\"\"100\"\"\") == \"Yes\"\nassert solution(\"\"\"233\"\"\") == \"Yes\"\nassert solution(\"\"\"3322\"\"\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('29') == 'Yes'\nassert solution('100') == 'No'\nassert solution('48') == 'Yes'\nassert solution('65') == 'Yes'\nassert solution('0') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(1) == 'Yes'\nassert solution(2) == 'No'\nassert solution(3) == 'No'\nassert solution(4) == 'No'\nassert solution(5) == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == 'No'\nassert solution('23') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('43') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3\") == \"1\"\n\nimport time\n\nstart = time.time()\nsolution(stdin)\nprint(time.time() - start)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 3\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('5 5 5') == '2'\nassert solution('3 1 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('15 20 50 0 100 -100 -1 -2') == '99'\nassert solution('5 3 3') == '1'\nassert solution('20 10 10') == '20'\nassert solution('10 10 10') == '1'\n\"\"\"\nimport math\n",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"5 3 3\") == \"1\"\nassert solution(\"1 2 4\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 1') == '0'\nassert solution('1 1 2') == '0'\nassert solution('1 2 1') == '1'\nassert solution('1 3 3') == '1'\nassert solution('1 4 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'Yes'\n\"\"\"\n\n\nfrom typing import List\nfrom collections import defaultdict\n\nH = int(input())\nW = int(input())\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('8 8') == 'Yes'\nassert solution('3 3') == 'No'\nassert solution('5 5') == 'No'\n'''\n\nfrom itertools import product",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 2') == 'No'\nassert solution('2 2') == 'No'\nassert solution('4 2') == 'No'\nassert solution('5 5') == 'Yes'\n\n'''\n\nfrom collections import defaultdict\n\nclass Solution:\n    def square(self, h, w, s):\n        if h > 0 and w > 0:\n            if s == '#':\n                return 1\n            elif s == '.':\n                return 0\n            else:\n                return float('inf')\n        return float('inf')\n    \n    def solve(self, H, W, s):\n        g = defaultdict(list)\n        for i in range(H):\n            for j in range(W):\n                g[(i, j)].append(self.square(i, j, s[i][j]))\n        if (0, 0) in g:\n            return 'Yes'\n        for i in range(H):\n            for j in range(W):\n                if (i, j) in g:\n                    g[(i, j)].append(self.square(i, j, s[i][j]))\n        g[(0, 0)] = 0\n        for k in range(1, H + 1):\n            for l in range(1, W + 1):\n                if (k - 1, l) in g and (k, l - 1) in g:\n                    g[(k, l)] = min(g[(k - 1, l)], g[(k, l - 1)])\n                elif (k - 1, l) in g:\n                    g[(k, l)] = min(g[(k - 1, l)], g[(k, l - 1)])\n                elif (k, l - 1) in g:\n                    g[(k, l)] = min(g[(k - 1, l)], g[(k, l - 1)])\n        if len(g[(H, W)]) == 0:\n            return 'No'\n        else:\n            return 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'Yes','sample input'\nassert solution('1 1') == 'Yes','sample input'\nassert solution('5 5') == 'Yes','sample input'\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 3\n.#.\n###\n.#.\n\n''') == 'Yes'\nassert solution('''\n5 6\n.#.\n###\n.###\n.#.\n..#.\n###.\n\n''') == 'No'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n..\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 2') == 'No'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"3 3\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('2 2') == 'No'\n\"\"\"\n\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('20 50 10') == 'No'\nassert solution('5 20 20') == 'Yes'\nassert solution('15 15 20') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"10 10 10\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('25 20 10') == 'No'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 5 2') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 2 3') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('20 20 20') == 'No'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"10 20 30\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"20 10 20\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('1 1 1 1') == 'Balanced'\nassert solution('1 2 3 1') == 'Right'\nassert solution('8 9 7 2') == 'Right'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 8 7 1\n''') == 'Left'\nassert solution('''\n3 8 7 1\n''') == 'Left'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 2 2\") == \"Left\"\nassert solution(\"2 3 2 2\") == \"Right\"\nassert solution(\"8 1 2 2\") == \"Left\"\nassert solution(\"6 8 2 2\") == \"Right\"\nassert solution(\"10 10 8 2\") == \"Left\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"5 5 5 5\") == \"Left\"\nassert solution(\"3 5 7 1\") == \"Left\"\nassert solution(\"5 5 3 1\") == \"Left\"\nassert solution(\"7 8 7 1\") == \"Left\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 2 1') == 'Left'\nassert solution('3 8 7 1') == 'Left'\nassert solution('2 1 4 5') == 'Right'\nassert solution('2 6 5 4') == 'Left'\nassert solution('1 1 1 2') == 'Balanced'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 8 7 2\") == \"Right\"\nassert solution(\"1 2 3 4 5\") == \"Left\"\nassert solution(\"3 5 4 2\") == \"Right\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 8 7 1\n''') == 'Left'\nassert solution('''2 4 4 1\n''') == 'Left'\nassert solution('''4 5 4 1\n''') == 'Left'\nassert solution('''1 4 4 1\n''') == 'Right'\nassert solution('''2 4 4 1\n''') == 'Right'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 8 7 1') == 'Left'\nassert solution('12 2 5 1') == 'Left'\nassert solution('6 7 7 7') == 'Right'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 2 2 1\") == \"Left\"\nassert solution(\"3 2 1 2\") == \"Left\"\nassert solution(\"3 2 1 1\") == \"Left\"\nassert solution(\"2 6 9 3\") == \"Left\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 8, 7, 1]) == 'Left'\nassert solution([9, 1, 3, 1]) == 'Left'\nassert solution([3, 7, 1, 1]) == 'Left'\nassert solution([8, 1, 3, 1]) == 'Left'\nassert solution([7, 1, 3, 1]) == 'Left'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"2\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2\") == \"8\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '10'\n\n\"\"\"\n\nimport sys\n\nsys.stdin = open('input.txt')\n\nN = int(input())\n\nshops = [list(map(int, input().split())) for i in range(N)]\n\nmax_profit = 0\n\nfor i in range(N):\n    if shops[i][0] == 1:\n        for j in range(1, N):\n            for k in range(1, N):\n                if shops[i][j] == 1 and shops[i][k] == 1:\n                    max_profit = max(max_profit, shops[i][0] * shops[i][j] + shops[i][k] * shops[i][N] - shops[i][N])\n                    # shops[i][0] = 1\n\nprint(max_profit)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"17\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"19\"",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n1 0 0 0 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\"\"\"\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        pass",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n\nassert solution('''2\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '13'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('10') == '0'\nassert solution('20') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"3 4 5 6 7 8 9 -2 -3 4 -2\") == \"13\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '8'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '8'\nassert solution('3') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('5 4') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('5 2') == 'No'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5\") == \"No\"\nassert solution(\"3 4\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n269-6650\") == \"Yes\"\nassert solution(\"10 3\\n23456789\") == \"No\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 8\") == \"Yes\"\nassert solution(\"9 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == 'Yes'\nassert solution('1 5') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n269-6650\n''') == 'Yes'\nassert solution('''1\n2\n''') == 'No'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4\\n269-6650\\n\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 2 7') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 6\") == \"1\"\nassert solution(\"3 2 6\") == \"2\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"2 5 10\") == \"1\"\nassert solution(\"1 1 5\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == \"1\"\nassert solution('3 3 4') == \"0\"\nassert solution('2 2 1') == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 6') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 2 1\") == \"3\"\nassert solution(\"3 2 2\") == \"2\"\nassert solution(\"4 3 3\") == \"1\"\nassert solution(\"4 3 4\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(example_stdin) == \"1\"\nassert solution(input) == \"5\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 5\") == \"1\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"3 3 5\") == \"2\"\nassert solution(\"5 5 4\") == \"1\"\nassert solution(\"5 7 4\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\\n\") == \"1\"\nassert solution(\"7 2 9\\n\") == \"5\"\nassert solution(\"7 2 10\\n\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('5 3 8') == '2'\nassert solution('10 1 10') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"4 3 8\") == \"2\"\nassert solution(\"4 6 3\") == \"1\"\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n3) Write a program to calculate the volume of a cylinder with diameter of 10 and radius of 3.\n\n--------Input---------\nThe input is given from Standard Input in the following format:\nRadius Radius\n\n--------Output---------\nThe output is to be printed in the following format:\nVolume Cylinder = 3.14 x Radius x Radius x 2\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n4) Write a program to calculate the total amount of all types of coins in a given number. The input format of the program is:\nn\n\n---> Program should prompt the user to enter a number.\n---> If the number is 1 to 10, then print a table of coins and their corresponding amounts.\n---> If the number is 11 to 50, then print a table of coins and their corresponding amounts.\n---> If the number is 51 to 100, then print a table of coins and their corresponding amounts.\n---> If the number is more than 100, then print \"Please enter an integer between 1 and 100\"\n\n----Explanation------\nInput 1: n = 5\nOutput 1: n = 5\n    5 = 5\n    5 = 1 + 2 + 5\n    5 = 2 + 5\n    5 = 5\n    5 = 1 + 5\n    5 = 2 + 5\n    5 = 5\n\nInput 2: n = 2\nOutput 2: n = 2\n    2 = 2\n    2 = 2\n    2 = 2\n    2 = 2\n    2 = 2\n\nInput 3: n = 13\nOutput 3: n = 13\n    13 = 13\n    13 = 13\n    13 = 13\n    13 = 13\n    13 = 13\n    13 = 13\n\nInput 4: n = 50\nOutput 4: n = 50\n    50 = 50\n    50 = 50\n    50 = 50\n    50 = 50\n    50 = 50\n    50 = 50\n    50 = 50\n\nInput 5: n = 61\nOutput 5: n = 61\n    61 = 61\n    61 = 61\n    61 = 61\n    61 = 61\n    61 = 61\n    61 = 61\n    61 = 61\n    61 = 61\n\nInput 6: n = 101\nOutput 6: n = 101\n    101 = 101\n    101 = 101\n    101 = 101\n    101 = 101\n    101 = 101\n    101 = 101\n    101 = 101\n    101 = 101\n    101 = 101\n\nInput 7: n = 60000\nOutput 7: n = 60000\n    60000 = 60000\n    60000 = 60000\n    60000 = 60000\n    60000 = 60000\n    60000 = 60000\n    60000 = 60000\n    60000 = 60000\n    60000 = 60000\n    60000 = 60000\n\nInput 8: n = 1000000\nOutput 8: n = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n    1000000 = 1000000\n\nInput 9: n = 1250\nOutput 9: n = 1250\n    1250 = 1250\n    1250 = 1250\n    1250 = 1250\n    1250 = 1250\n    1250 = 1250\n    1250 = 1250\n    1250 = 1250\n    1250 = 1250\n    1250 = 1250\n\n------------------------------------------------------------------------------------------------------------------------------------------------\n5) Write a program to calculate the number of positive and negative integers less than or equal to n in Fibonacci series.\n\n---> Program should prompt the user to enter a positive integer.\n---> If the number is 1, then print the following output:\n--->     The number of positive integers less than or equal to n is 0\n---> If the number is 2, then print the following output:\n--->     The number of positive integers less than or equal to n is 0\n---> If the number is 3, then print the following output:\n--->     The number of positive integers less than or equal to n is 1\n---> If the number is 4, then print the following output:\n--->     The number of positive integers less than or equal to n is 2\n---> If the number is 5, then print the following output:\n--->     The number of positive integers less than or equal to n is 3\n---> If the number is 6, then print the following output:\n--->     The number of positive integers less than or equal to n is 5\n---> If the number is 7, then print the following output:\n--->     The number of positive integers less than or equal to n is 7\n---> If the number is 8, then print the following output:\n--->     The number of positive integers less than or equal to n is 9\n---> If the number is 9, then print the following output:\n--->     The number of positive integers less than or equal to n is 10\n---> If the number is 10, then print the following output:\n--->     The number of positive integers less than or equal to n is 11\n---> If the number is 11, then print the following output:\n--->     The number of positive integers less than or equal to n is 12\n---> If the number is 12, then print the following output:\n--->     The number of positive integers less than or equal to n is 13\n---> If the number is 13, then print the following output:\n--->     The number of positive integers less than or equal to n is 14\n---> If the number is 14, then print the following output:\n--->     The number of positive integers less than or equal to n is 15\n---> If the number is 15, then print the following output:\n--->     The number of positive integers less than or equal to n is 16\n---> If the number is 16, then print the following output:\n--->     The number of positive integers less than or equal to n is 17\n---> If the number is 17, then print the following output:\n--->     The number of positive integers less than or equal to n is 18\n---> If the number is 18, then print the following output:\n--->     The number of positive integers less than or equal to n is 19\n---> If the number is 19, then print the following output:\n--->     The number of positive integers less than or equal to n is 20\n---> If the number is 20, then print the following output:\n--->     The number of positive integers less than or equal to n is 21\n---> If the number is 21, then print the following output:\n--->     The number of positive integers less than or equal to n is 22\n---> If the number is 22, then print the following output:\n--->     The number of positive integers less than or equal to n is 23\n---> If the number is 23, then print the following output:\n--->     The number of positive integers less than or equal to n is 24\n---> If the number is 24, then print the following output:\n--->     The number of positive integers less than or equal to n is 25\n---> If the number is 25, then print the following output:\n--->     The number of positive integers less than or equal to n is 26\n---> If the number is 26, then print the following output:\n--->     The number of positive integers less than or equal to n is 27\n---> If the number is 27, then print the following output:\n--->     The number of positive integers less than or equal to n is 28\n---> If the number is 28, then print the following output:\n--->     The number of positive integers less than or equal to n is 29\n---> If the number is",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\nassert solution(\"10 1\") == \"1 9 5 7 8 10\"\nassert solution(\"1 10 5\") == \"1 9 6 7 8 10\"\nassert solution(\"5 8 3\") == \"5 6 7 8 9 10\"\n",
        "num_ids_2": 31,
        "num_ids_4": 65
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 8 2') == '3\\n4\\n7\\n8'\nassert solution('5 5 3') == '5\\n5\\n4\\n3\\n2\\n1'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 8 2\") == \"3\\n4\\n7\\n8\"\nassert solution(\"1 9 10 5 4\") == \"1\\n4\\n5\\n9\\n10\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\nassert solution(\"10 10 2\") == \"10 9 8 7 6 5 4 3 2 1\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 8 2') == '3'\nassert solution('1 5 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"1 9 2\") == \"1\"\nassert solution(\"1 9 2\") == \"1\"\nassert solution(\"1 5 2\") == \"1\"\nassert solution(\"4 5 2\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2 3 4 5\n10 10 20 30 40''') == '''10\n20\n30\n40\n50\n60\n70\n80\n90\n100'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 3') == \"1 2\"\nassert solution('5 3 2') == \"3 2\"\nassert solution('5 2 3') == \"2 3\"\nassert solution('6 2 2') == \"2 2\"\nassert solution('1 1 1') == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder s Contest\") == \"AxC\"\nassert solution(\"AtCoder s Contest\") == \"AxC\"\nassert solution(\"AtCoder Contest\") == \"AtC\"\nassert solution(\"AtCoder Contest\") == \"AtC\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AtCoder s Contest') == 'ABC'\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ACO\"\nassert solution(\"AtCoder Beginner Contest\") == \"ATC\"\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AtCoder Beginner Contest') == 'ABC', f'Expected: ABC, Actual: {solution(\"AtCoder Beginner Contest\")}'\nprint(f'Expected: ABC, Actual: {solution(\"AtCoder Beginner Contest\")}')\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AtCoder s Contest') == 'AXC'\nassert solution('AtCoder Beginner Contest') == 'AXC'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder PRC\") == \"ARC\"\nassert solution(\"AtCoder SPO\") == \"ASC\"\nassert solution(\"AtCoder MSO\") == \"AMSO\"\nassert solution(\"AtCoder Beginner\") == \"ABC\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder s Contest\") == \"AXC\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(snake_case(input())) == solution(snake_case(input()))\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Wrong answer!\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 4') == 'YES', 'This should be true'\nassert solution('3 1 4') == 'NO', 'This should be false'\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"2 1 3\") == \"NO\"\nassert solution(\"1 2 4\") == \"YES\"\nassert solution(\"2 1 4\") == \"NO\"\nassert solution(\"1 2 3 4\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('10 8 5') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 5 4\n\"\"\") == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 4\") == \"YES\"\nassert solution(\"3 5 4\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 1 2\") == \"NO\"\nassert solution(\"1 5 5\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 4') == 'YES'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 4\") == \"YES\"\nassert solution(\"6 9 9\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5 4') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 4\") == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n2\n3''') == '3'\n\nassert solution('''1 1\n2\n4''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"83\"\nassert solution(\"1 1\") == \"84\"\nassert solution(\"3 5\") == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"83\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '1 2'\nassert solution('1 2 3') == '1 2 3'\nassert solution('1 2 3 4') == '1 2 3 4'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 2') == '1'\nassert solution('3 2') == '3'\nassert solution('4 2') == '4'\nassert solution('3 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"4 5\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"1 4\") == \"4\"\nassert solution(\"1 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100 17') == \"83\"\nassert solution('1000 10') == \"900\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '3'\nassert solution('2 3') == '4'\n\nX, t = stdin.split(' ')\nX, t = int(X), int(t)\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1000000000000\\n') == '1000000000000000000'\nassert solution('3\\n100000000000000000\\n') == '1000000000000000000'\nassert solution('3\\n1000000000000000\\n') == '-1'\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1000000000000000000\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('3\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000') == '-1'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"1\") == \"1000000000000000000\"\nassert solution(\"10\") == \"1000000000000000000\"\nassert solution(\"10**18\") == \"1000000000000000000\"\nassert solution(\"10**19\") == \"1000000000000000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '-1'\nassert solution(input()) == '1000000000000000000'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1000000000 1000000000\n\n''') == '1000000000000000000', 'First Test Case'\nassert solution('''\n3\n1000000000000 1000000000\n\n''') == '1000000000000000000', 'Second Test Case'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n1\n2''') == '1'\nassert solution('''2\n1\n2''') == '-1'\nassert solution('''3\n1\n2\n3''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1000000000 1000000000') == '1000000000000000000'\nassert solution('3\\n1000000000 1000000000\\n1000000000 1000000000\\n1000000000 1000000000') == '-1'",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n1000000000 1000000000''') == '1000000000000000000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"10\"\nassert solution('100') == \"100\"\nassert solution('1000000000') == \"1000000000000000000\"\n\"\"\"\n\nn = int(input())\nnum = list(map(int, input().split()))\nmax_num = (1 << 32) - 1",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8\") == \"Yes\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"111\") == \"No\"\nassert solution(\"1000\") == \"Yes\"\nassert solution(\"112\") == \"No\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2020') == 'Yes'\nassert solution('2019') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'Yes'\nassert solution('9000') == 'No'\nassert solution('15000') == 'Yes'\nassert solution('5') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('123') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2018\\n218') == 'Yes'\nassert solution('2018\\n59') == 'No'\nassert solution('2018\\n0') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Yes'\nassert solution('2') == 'No'\nassert solution('0') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == 'Yes'\nassert solution('5') == 'Yes'\nassert solution('6') == 'No'\nassert solution('10') == 'No'\nassert solution('15') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20181') == 'Yes'\nassert solution('2018') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Yes'\nassert solution('1') == 'No'\n\"\"\"\n\nn, a = int(stdin.readline().strip()), int(stdin.readline().strip())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3 6') =='safe'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3') =='safe'\nassert solution('1 2 4') == 'dangerous'\nassert solution('1 2 5') == 'dangerous'\nassert solution('1 2 6') == 'dangerous'\nassert solution('3 2 1') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4, 3, 6]) == \"safe\"\nassert solution([2, 1, 1]) == \"dangerous\"\nassert solution([1, 1, 1]) == \"delicious\"\nassert solution([2, 1, 3]) == \"dangerous\"\nassert solution([1, 1, 2]) == \"delicious\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"X A B\n\n-----Input-----\n1 0 4\n\n-----Output-----\ndangerous\n\nHe has not found a food delicious at all, but he still got a stomachache. He would have to eat the food twice to avoid getting a stomachache.\n\n-----Input-----\n3 5 4\n\n-----Output-----\nsafe\n\nHe ate the food four days after the \"best-by\" date. It is delicious.\n\n\"\"\"):\n    print(\"\"\"X A B\n\n-----Input-----\n{X} {A} {B}\n\n-----Output-----\n{D}\n\nHe has not found a food delicious at all, but he still got a stomachache. He would have to eat the food twice to avoid getting a stomachache.\n\"\"\".format(X=stdin.split(\" \")[0],\n        A=stdin.split(\" \")[1],\n        B=stdin.split(\" \")[2]))\n\nassert solution(\"\"\"5 2 2\n\n-----Input-----\n2 4 6\n\n-----Output-----\ndangerous\n\nHe has not found a food delicious at all, but he still got a stomachache. He would have to eat the food twice to avoid getting a stomachache.\n\n-----Input-----\n1 3 2\n\n-----Output-----\nsafe\n\nHe ate the food three days after the \"best-by\" date. It is delicious.\n\"\"\"):\n    print(\"\"\"X A B\n\n-----Input-----\n{X} {A} {B}\n\n-----Output-----\n{D}\n\nHe has not found a food delicious at all, but he still got a stomachache. He would have to eat the food twice to avoid getting a stomachache.\n\"\"\".format(X=stdin.split(\" \")[0],\n        A=stdin.split(\" \")[1],\n        B=stdin.split(\" \")[2]))\n\nassert solution(\"\"\"10 3 6\n\n-----Input-----\n3 5 4\n\n-----Output-----\ndangerous\n\nHe has not found a food delicious at all, but he still got a stomachache. He would have to eat the food twice to avoid getting a stomachache.\n\n-----Input-----\n1 6 2\n\n-----Output-----\nsafe\n\nHe ate the food four days after the \"best-by\" date. It is delicious.\n\"\"\"):\n    print(\"\"\"X A B\n\n-----Input-----\n{X} {A} {B}\n\n-----Output-----\n{D}\n\nHe has not found a food delicious at all, but he still got a stomachache. He would have to eat the food twice to avoid getting a stomachache.\n\"\"\".format(X=stdin.split(\" \")[0],\n        A=stdin.split(\" \")[1],\n        B=stdin.split(\" \")[2]))",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1\") == \"safe\"\nassert solution(\"1 2 2\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 1\n''') =='safe'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 5\") == \"safe\"\nassert solution(\"1 2 6\") == \"dangerous\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"safe\"\nassert solution(\"2 1 4\") == \"dangerous\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') =='safe'\nassert solution('2 2 2') == 'dangerous'\nassert solution('3 3 3') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\nassert solution(\"2 2 2\") == \"dangerous\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"9\"\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '9'\nassert solution('3') == '9'\nassert solution('4') == '9'\nassert solution('6') == '9'\nassert solution('9') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('8') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '9'\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1\\n', solution('1\\n')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n\") == \"1\\n\"\nassert solution(\"5\\n\") == \"25\\n\"\nassert solution(\"10\\n\") == \"36\\n\"\nassert solution(\"15\\n\") == \"145\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"100\") == \"100\"\n\n\"\"\"\n\nN = int(input())\nsquare_list = []\n\nfor i in range(1, N+1):\n    square_list.append(i*i)\n    \nprint(max(square_list))\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3\n2 3\n1 1\n3 2\n\"\"\"\n) == \"10\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == \"10\"\nassert solution('5\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5') == \"8\"\nassert solution('10\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10') == \"12\"\nassert solution('50\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\\n6 6\\n7 7\\n8 8\\n9 9\\n10 10\\n11 11\\n12 12') == \"60\"",
        "num_ids_2": 52,
        "num_ids_4": 160
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '10'\nassert solution('3 2') == '10'\nassert solution('1 1') == '10'\nassert solution('3 2') == '11'\nassert solution('1 1') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"10\", \"First\"\nassert solution(\"2\") == \"10\", \"Second\"\nassert solution(\"3\") == \"10\", \"Third\"\n\n'''\n\nfrom math import gcd\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3\n2 3\n1 1\n3 2\n\n\"\"\") == \"10\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '10'\nassert solution('1 1') == '10'\nassert solution('3 2') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '1'\nassert solution('4') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '10'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3\n1 1\n3 2\n''') == \"10\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('abracadabra') == 'no'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('uncopyrightable') == \"yes\"\nassert solution('abcd') == \"no\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('aaaaaaaaaaaaa') == 'no'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('uncopyrightable') == 'yes'\nassert solution('testing') == 'no'\nprint('All tests passed!')\n\n\n\"\"\"\n\n\nimport math",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''uncopyrightable''') == 'yes'\nassert solution('''fadsf''') == 'no'\nassert solution('''this is not a string''') == 'no'\nassert solution('''A''') == 'yes'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"c\") == \"yes\"\nassert solution(\"a\") == \"no\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('uncopyrightable') == 'yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('1\\nWEEWW') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nWEEWW\n''') == '1'\nassert solution('''3\nWEEWW\nEW''') == '1'\nassert solution('''8\nWEEWWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEWEWEWEWEW\nEWEWEWEWEWEWEWEWEWEWEWEWEWEWEWEW''') == '2'\nassert solution('''3\nWEEWW\nWEEWW\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\nWEEWW\") == \"1\"\nassert solution(\"10\\nWEEWWEEWWWEEWWWEEWWEWEWW\") == \"2\"\nassert solution(\"20\\nWEEWWEEWEWWWWEWWEEWWWEWWW\") == \"2\"\nassert solution(\"50\\nWEEWWEEWWWWWEEWWWEWWEEWWWWW\") == \"1\"\nassert solution(\"1000\\nWEEWWEEWWWWWEEWWWEWEWWWWWWWWWWWWWWWWWWW\") == \"1\"",
        "num_ids_2": 41,
        "num_ids_4": 92
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('100') == '2'\nassert solution('1000') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"5\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nWEEWW') == '1'\nassert solution('5\\nWEEW') == '1'\nassert solution('3\\nWEEW') == '1'\nassert solution('10\\nWWWWEEWWWEWWEWWW') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 64
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nWEEWW') == '1'\n\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\nWEEWW\n''') == '1'\nassert solution('''\n6\nWEEEW\n''') == '1'\nassert solution('''\n6\nWEWEEW\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 4\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4''') == '2\\n2\\n1\\n1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('1 2') == '2'\nassert solution('1 4') == '1'\n'''\n\nimport itertools",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 4\") == \"2\"\nassert solution(\"2 5\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n''') == '2\\n2\\n1\\n1\\n'\nassert solution('''8 3\n1 2\n2 3\n1 4\n2 5\n3 6\n4 7\n3 8\n4 9\n''') == '4\\n4\\n3\\n3\\n'\nassert solution('''8 3\n1 2\n2 3\n1 4\n2 5\n3 6\n4 7\n3 8\n4 9\n''') == '1\\n1\\n1\\n1\\n'\nassert solution('''8 5\n1 2\n1 3\n1 4\n2 5\n2 6\n3 6\n3 7\n3 8\n4 9\n''') == '3\\n3\\n2\\n2\\n'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\nassert solution('10 20') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"4 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == '2\\n2\\n1\\n1'\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == '2\\n1\\n2\\n1'\nassert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == '1\\n1\\n1\\n1'\n",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2\\n2 3\\n1 4\\n') == '2\\n2\\n1\\n1'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('3\\n2\\n1\\n3\\n') == '30'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '30'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"4\") == \"30\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"3\\n5\\n20\\n15\") == \"30\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"5\"\nassert solution(\"8\") == \"0\"\nassert solution(\"10\") == \"25\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '25'\nassert solution('3') == '25'\nassert solution('1') == '0'\nassert solution('1') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"5\") == \"30\"\nassert solution(\"15\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"25\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '25'\nassert solution('4') == '0'\nassert solution('5') == '30'\nassert solution('10') == '30'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n10\\n15\") == \"25\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\naabbca') == '2'\nassert solution('5\\nabcd') == '1'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"12\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nab\\n\") == \"2\"\nassert solution(\"4\\naba\\n\") == \"2\"\nassert solution(\"5\\nabcab\\n\") == \"2\"\nassert solution(\"6\\nababca\\n\") == \"3\"\nassert solution(\"7\\nababca\\n\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nabbcd\") == \"2\"\nassert solution(\"4\\naabbcd\") == \"2\"\nassert solution(\"4\\nabcd\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nabcd\\n\") == \"2\\nabcd\"\nassert solution(\"2\\naabbca\\n\") == \"2\\naabbc\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\naabbca''') == '2'\nassert solution('''10\naabcabbca''') == '3'\nassert solution('''10\naaaaaaaaaaaaa''') == '3'\nassert solution('''5\naab''') == '1'\nassert solution('''4\naaaa''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"10\") == \"2\"\nassert solution(\"abababa\") == \"2\"\nassert solution(\"abcbdde\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"\nassert solution(\"Sunny\") == \"Sunny\"\nassert solution(\"Cloudy\") == \"Cloudy\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Sunny\\nSunny\\nSunny\\nSunny\\nSunny\\nSunny\\nSunny\\nSunny\\n') == 'Cloudy'\nassert solution('Sunny\\nCloudy\\nRainy\\nSunny\\nCloudy\\nSunny\\nCloudy\\n') == 'Sunny'\nassert solution('Sunny\\nSunny\\nSunny\\nSunny\\nSunny\\nSunny\\nCloudy\\n') == 'Cloudy'\nassert solution('Sunny\\nSunny\\nSunny\\nSunny\\nSunny\\nSunny\\nSunny\\n') == 'Sunny'",
        "num_ids_2": 80,
        "num_ids_4": 156
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Cloudy\"\n\"\"\"\n\nfrom sys import stdin",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Sunny\\n\") == \"Cloudy\"\nassert solution(\"Sunny\\nSunny\\n\") == \"Cloudy\"\nassert solution(\"Rainy\\n\") == \"Sunny\"\n\n---Submissions---\nSubmission 1\nfrom typing import List\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        return\n\nprint(Solution().solution(\"Sunny\\n\"))\nprint(Solution().solution(\"Sunny\\nSunny\\n\"))\nprint(Solution().solution(\"Rainy\\n\"))",
        "num_ids_2": 32,
        "num_ids_4": 46
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Rainy'\nassert solution('Rainy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Sunny\\n') == 'Cloudy'\nassert solution('Cloudy\\n') == 'Sunny'\nassert solution('Rainy\\n') == 'Sunny'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Sunny\\n\") == \"Cloudy\"\nassert solution(\"Cloudy\\n\") == \"Sunny\"\nassert solution(\"Rainy\\n\") == \"Rainy\"\nassert solution(\"Sunny\\nCloudy\\n\") == \"Cloudy\"\nassert solution(\"Sunny\\nCloudy\\n\") == \"Cloudy\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == 1, \"Test Case 1 Failed\"\nassert solution(2) == 120, \"Test Case 2 Failed\"\nassert solution(3) == 119, \"Test Case 3 Failed\"\nassert solution(4) == 119, \"Test Case 4 Failed\"\nassert solution(5) == 119, \"Test Case 5 Failed\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1 50\n1 2 10''') == '0.01'\nassert solution('''1 2 200\n3 3 100''') == '0.51'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin := input()) == '119'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('10 20 50') == '20'\nassert solution('10 20 120') == '20'\nassert solution('10 30 50') == '10'\nassert solution('10 30 120') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 17 120\\n') == '119'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('7 17 200') == '188'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 17 120\") == \"119\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 17 120') == '119'\nassert solution('1 1 1') == '1'\nassert solution('5 5 5') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7 120') == '119'\nassert solution('7 17 120') == '119'\nassert solution('8 8 8 8') == '8'\nassert solution('6 17 120') == '119'\n\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1 1\\n'\n) == '3800'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1900'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\n--------------------------------------",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 1\n1 1\n''') == '3800'\n\n'''\nPseudocode:\nStart with N = 1\n\nNow, if we are currently in the first attempt (first try) then\n- We need to solve N cases\n- We need to solve M cases where M \\leq N and M = 5\n- We need to solve M cases where M \\leq N and M > 5\n\nAfter the first attempt, we need to solve M cases where M = 5\n- If the code in M attempts fails to solve M cases, we need to try to solve M cases where M = 6, etc.\n- We need to solve M cases where M > 6\n\nOnce we successfully solve M cases, we can solve the remaining N - M cases.\n- If the code in N attempts fails to solve N - M cases, we need to try to solve N - M cases where N > 6, etc.\n- We need to solve N - M cases where N > 6\n\nWe have successfully solved all the N - M cases.\n\nWe need to print X, the expected value of the total execution time of the code, as an integer.\nIt can be proved that, under the constraints in this problem, X is an integer not exceeding 10^9.\n\n'''\n\n'''\nimport sys\nimport math\n\nn = int(sys.stdin.readline())\nm = int(sys.stdin.readline())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '3800'\nprint(solution(input))\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '3800'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '3800'\nassert solution('10 10') == '13440'\nassert solution('100 100') == '13440'\nassert solution('1000 1000') == '187280'\nassert solution('10000 10000') == '329560'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 3') == '4600'\nassert solution('1 2') == '5900'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"b\"\nassert solution(\"abc\") == \"b\"\nassert solution(\"aabb\") == \"b\"\nassert solution(\"abcd\") == \"b\"\nassert solution(\"aabcde\") == \"c\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == None\nassert solution('atcoderregularcontest') == 'b'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoderregularcontest') == 'b', \"Test #1 Failed\"\nassert solution('palegoldenrod') == 'a', \"Test #2 Failed\"\nassert solution('dwstfueeg') == None, \"Test #3 Failed\"\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('abc') == None\nassert solution('acb') == 'c'\nassert solution('ba') == 'c'\nassert solution('cb') == None\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"ATCODERREGULARCONTEST\") == \"B\"\nassert solution(\"atcoderregularcontest1\") == None\nassert solution(\"ATCODERREGULARCONTEST1\") == None\nassert solution(\"atcoderregularcontest2\") == None\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"b\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') is None\nassert solution('atcoderregularcontest') == 'b'\nassert solution('axcoderregularcontest') == 'b'\n",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"b\"\n\n-----------------------------------",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == None\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"atcoderregularcontest\") == \"b\"\nassert solution(\"\") == None\nassert solution(\"\") == None\nassert solution(\"a\") == None\nassert solution(\"\") == None\n",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"4 3 2 1\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2 4 4 3\n''') == '4 3 3 4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n2 4 4 3\\n\") == \"4 3 4\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4', \"Wrong solution\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 5 1\") == \"2\"\nassert solution(\"3 3 3\") == \"3\"\nassert solution(\"4 2 4 2\") == \"3\"\nassert solution(\"2 5 3 2\") == \"4\"\n\n\"\"\"\n\nn = int(input())\narray = list(map(int, input().split()))\n\nresult = []\nfor i in range(len(array)):\n    if (i + 1) % 2 == 1:\n        result.append(array[i])\n    else:\n        result.append(array[i - 1])\n\nprint('\\n'.join(map(str, result)))\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3 3 3 4 4'\nassert solution('10') == '3 3 3 4 4 3 4 3'\nassert solution('4') == '3 3 3 4 4'\nassert solution('3') == '3 3 3 4'\nassert solution('2') == '3 3'\n",
        "num_ids_2": 31,
        "num_ids_4": 58
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('10') == '4'\nassert solution('5') == '3'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3 4 5 4 3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2\n''') == '4', 'Wrong answer'\n\nassert solution('''5\n1\n''') == '0', 'Wrong answer'\n\nassert solution('''8\n1 2\n3 4\n5 6\n7 8\n''') == '9', 'Wrong answer'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '2'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('10') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '2'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n3 1 2 4 2 1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n2 1 3 2\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n5\n2 1 3 2 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n7\n1 1 3 5 4 5 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '2'\nassert solution('6 1 2 4 2 1') == '1 \\times 2 rectangle can be formed.'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 2 3 4 2') == '0'\nassert solution('2\\n1 2') == '1'\nassert solution('1\\n1') == '0'\nassert solution('1\\n2') == '0'\n",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'\nassert solution('10') == '0'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"5\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1') == '8'\nassert solution('10 1') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n7 1\\n2\\n5\") == \"8\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\") == \"16\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\\n\") == \"16\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\\n1\\n\") == \"16\"\nassert solution(\"3\\n7 1\\n2\\n5\\n10\\n1\\n2\\n\") == \"16\"\n",
        "num_ids_2": 43,
        "num_ids_4": 96
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10\\n') == '8'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('1\\n3\\n1\\n1\\n1\\n1\\n') == '1'\nassert solution('2\\n2\\n2\\n2\\n2\\n2\\n') == '2'\n",
        "num_ids_2": 52,
        "num_ids_4": 106
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n7 1\n2\n5\n10''') == '8'\nprint(solution(input()))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3]) == '8'\nassert solution([7, 1]) == '8'\nassert solution([2, 5]) == '4'\nassert solution([10, 2]) == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3\n    7 1\n    2\n    5\n    10\n    \"\"\") == \"8\"\n    \nassert solution(\n    \"\"\"\n    3\n    4 1\n    1\n    4\n    \"\"\") == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('3\\n7 1\\n2\\n5\\n10') == '8'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\nassert solution('4') == 4\nassert solution('5') == 5\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    4\n    2\n    2\n    100\n''') == \"2\"\nassert solution('''\n    5\n    2\n    2\n    100\n''') == \"2\"\nassert solution('''\n    20\n    2\n    2\n    100\n''') == \"1\"\nassert solution('''\n    30\n    2\n    2\n    100\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n5') == '1'\nassert solution('2\\n2\\n2\\n100\\n50') == '2'\nassert solution('2\\n2\\n2\\n100\\n100') == '1'\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 2, 100]) == '2'\nassert solution([2, 2, 50]) == '2'\nassert solution([2, 2, 50, 100]) == '2'\nassert solution([2, 2, 50, 50, 100]) == '2'\nassert solution([2, 2, 50, 50, 50, 100]) == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2\n2\n100\n''') == \"2\"\nassert solution('''\n2\n2\n2\n100\n''') == \"2\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3\n4\n''') == \"2\", \"Wrong answer with input: {}\".format(stdin)\nassert solution('''3\n4\n5\n6\n''') == \"4\", \"Wrong answer with input: {}\".format(stdin)\nassert solution('''5\n6\n7\n8\n9\n10\n''') == \"5\", \"Wrong answer with input: {}\".format(stdin)\nassert solution('''11\n12\n13\n14\n''') == \"0\", \"Wrong answer with input: {}\".format(stdin)\nassert solution('''16\n17\n18\n19\n20\n21\n22\n23\n24\n''') == \"1\", \"Wrong answer with input: {}\".format(stdin)\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2\n2\n100\n''') == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100') == '1'\nassert solution('0\\n1\\n1\\n100') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"-3 -2 -1\") == \"Yes\"\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('0 1 0') == 'No'\nassert solution('-10 20 30') == 'Yes'\nassert solution('-10 20') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 2\") == \"Yes\", \"Wrong answer\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 4 2\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('0 -1 -2') == 'No'\nassert solution('-2 -3 -4') == 'Yes'\n\n---Output---\nYes\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1,3,2]) == \"Yes\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"1 2 3\") == \"No\"\nassert solution(\"4 5 6\") == \"No\"\nassert solution(\"0 0 0\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 1\") == \"Yes\"\nassert solution(\"1 5 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 3, 2]) == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3 1000\n120\n100\n140\"\"\") == \"9\"\nassert solution(\"\"\"3 1000\n120\n100\n140\"\"\") == \"0\"\nassert solution(\"\"\"0 3\n1\n3\n4\"\"\") == \"0\"\nassert solution(\"\"\"0 3\n1\n2\n3\"\"\") == \"0\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('3 2\\n7\\n20\\n40') == '6'\n\n\"\"\"\nimport sys\nimport math",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 1000, 120, 100, 140]) == \"9\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('1\\n1\\n0\\n10\\n') == '0'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n120\\n100\\n140') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1000\") == \"9\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"6 1\") == \"6\"\nassert solution(\"4 1\") == \"3\"\nassert solution(\"5 1\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 1000\n120\n100\n140\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1000\n120\n100\n140\n''') == '9'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1000\\n120\\n100') == '9'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('5\\n240\\n60\\n120\\n60\\n60') == '4'\nassert solution('1\\n1') == '1'\nassert solution('0\\n2') == '0'\nassert solution('10\\n2\\n1') == '1'\n",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\napple\norange\napple\norange\napple\"\"\") == \"2\"\n\nassert solution(\"\"\"1\napple\n\"\"\") == \"0\"\n\nassert solution(\"\"\"2\napple\norange\napple\norange\n\"\"\") == \"1\"\n\nassert solution(\"\"\"2\napple\norange\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3\napple\napple\napple\n\"\"\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"3\", \"apple\", \"orange\", \"apple\"]) == \"2\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\napple\\norange\\ngreen\") == \"2\"\nassert solution(\"10\\napple\\norange\\ngreen\\napple\\norange\\ngreen\\napple\\norange\\nbanana\") == \"3\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\napple\\norange') == '2'\nassert solution('2\\napple\\norange') == '2'\n'''\n\nimport re\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\n\n## f(i) = #items of kind S_i\n## f(i) = #items of kind S_i + f(i-1)\n\n## f(i) = #items of kind S_i + f(i-1)\n## f(i) = #items of kind S_i + f(i-1)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(i-3) + f(i-4) +... + f(i-N)\n## f(i) = #items of kind S_i + f(i-1) + f(i-2) + f(",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'\n\n\"\"\"\nimport math\n\nn = int(input())\nli = list(map(int, input().split()))\n\na = set(li)\n\nprint(len(a), len(a))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''5\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''2\n2100\n''') == '1 1'\nassert solution('''5\n2100 2500 2700 2700\n''') == '1 1'\nassert solution('''6\n2100 2500 2700 2700\n2100 2700 2700\n''') == '1 2 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''10\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''100\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''200\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''300\n2100 2500 2700 2700\n''') == '2 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2000 2000 2000 2000 2000\n''') == '4 2'\nassert solution('''\n3\n2100 2000 2700 2700\n''') == '1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"2 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n300 500\\n400 600\\n1000 700') == '2 2'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2 2\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2 2\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == \"2 2\"\nassert solution('5') == \"2 2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"900\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('oxo') == '900'\nassert solution('oxxx') == '1000'\nassert solution('oxoox') == '1200'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('xoxo') == '900'\nassert solution('xooo') == '1000'\nassert solution('xoxxx') == '1900'\nassert solution('xoxxxx') == '2800'\nassert solution('oxoxox') == '1800'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '900'\nassert solution('ooo') == '900'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '700'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('xoxo') == '900'\nassert solution('ooxx') == '700'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '900'\nassert solution('ooxx') == '1000'\nassert solution('xxo') == '0'\nassert solution('xooxx') == '700'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('oxo') == '900'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"xoxo\") == \"900\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\nH H\n''') == 'H'\nassert solution(\n'''\nH D\n''') == 'D'\nassert solution(\n'''\nD D\n''') == 'D'\nassert solution(\n'''\nD H\n''') == 'H'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == 'H'\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"D H\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''H H''') == 'H'\nassert solution('''H D''') == 'D'\nassert solution('''D H''') == 'H'\nassert solution('''D D''') == 'D'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D D\") == \"D\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"D\"\nassert solution(\"D D\") == \"D\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"H H\"\n) == \"H\"\nassert solution(\n    \"D D\"\n) == \"D\"\nassert solution(\n    \"H D\"\n) == \"D\"\nassert solution(\n    \"D D\"\n) == \"D\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1012\") == \"1+1+2=7\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"123456789\") == \"1+2+3+4+5+6+7+8+9=27\"\n\"\"\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1334') == '-1+3-3=7'\nassert solution('991233') == '9+9+9+3=7'\n",
        "num_ids_2": 37,
        "num_ids_4": 57
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123') == '1+2+3=6'\nassert solution('1221') == '1+2+2+1=7'\nassert solution('1222') == '1+2+2+2=7'",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABCD') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1221') == '1+2+2=7'\nassert solution('1112') == '11+1=10'\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 51
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABCD') == '1+2+2+2=7'\nassert solution('ABCD') == '1-2-2-2=7'\nassert solution('ABCD') == '1+2-2-2=7'\nassert solution('ABCD') == '1+2+2-2=7'\nassert solution('ABCD') == '1-2+2-2=7'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"1220\") == \"1+2+2=7\"\nassert solution(\"1221\") == \"1+2=7\"\nassert solution(\"1222\") == \"1+2+2=7\"\nassert solution(\"1222\") == \"1+2+2=7\"\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 1 2 2\") == \"2\\n2\\n0\\n0\\n0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 1 2 2\n''') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2\\n2\\n0\\n0\\n0'\nassert solution('2') == '0\\n0\\n0\\n0\\n0'\n\"\"\"\n\nimport sys",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 1 2 2\") == '2'\nassert solution(\"5\\n1 1 2 2\") == '2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2') == '2'\nassert solution('5') == '0'\nassert solution('1 1 1 2 2 2 2 1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 1 2 2\\n') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 2 2') == '2'\nassert solution('5') == '0'\nassert solution('7') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == '0'\nassert solution(2) == '1'\nassert solution(3) == '2'\nassert solution(4) == '4'\nassert solution(5) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3\n2\n1''') == '3'\nassert solution('''10\n3\n2\n1''') == '7'\nassert solution('''1\n1\n1''') == '2'\nassert solution('''2\n2\n2''') == '2'\nassert solution('''10\n10\n4\n1\n2\n10\n5\n6''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"1\") == \"0\"\nassert solution(\"100\") == \"101\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"7\"\nassert solution(\"6\") == \"9\"\nassert solution(\"10\") == \"16\"\nassert solution(\"1\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '3'\nassert solution('6') == '3'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"15\") == \"18\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '3'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"-6\") == \"3\"\nassert solution(\"6\\n\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('10') == '3'\nassert solution('3') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Yes', \"Should be Yes\"\nassert solution('12') == 'No', \"Should be No\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4123\n-1213\n5333\n5612\n-1512''') == 'Yes'\nassert solution('''111\n-111\n555\n-555\n-555''') == 'No'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('12345') == 'No'\nassert solution('8888') == 'Yes'\nassert solution('9999') == 'Yes'\nassert solution('111') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1111') == 'No'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('1512') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1234') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1214') == 'No'\n\n---\n\nFind the number of 4-digit numbers with three or more consecutive\nsame digits. For example, the numbers 5566, 7797 and 56444 are four-digit numbers\nwhose 4-digit count is 3.\n\n---\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1112') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1118') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 5\n2 4\n3 6\n''') == '3'\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1 5\n2 4\n3 6''') == '3'\nassert solution('''3\n1 5\n2 4\n3 6''') == '2'\nassert solution('''3\n1 5\n2 4\n3 6''') == '1'\nassert solution('''3\n1 5\n1 3\n1 4''') == '1'\nassert solution('''1\n1 3\n1 4''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\n\"\"\"\nimport math\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1 5\\n2 4\\n3 6') == '3'\nassert solution('1\\n1\\n3\\n2\\n1\\n3\\n') == '2'\nassert solution('1\\n1\\n1\\n3\\n3\\n2\\n2\\n1\\n1\\n') == '1'\n",
        "num_ids_2": 49,
        "num_ids_4": 85
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n1 5\\n2 4\\n3 6\") == \"3\"\nassert solution(\"3\\n2 4\\n1 5\\n3 6\") == \"3\"\nassert solution(\"4\\n1 2\\n2 1\\n1 3\") == \"2\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2]) == \"3\"\nassert solution([3]) == \"4\"\nassert solution([4]) == \"4\"\n\"\"\"\n\nn = int(input())\nupper = []\nmiddle = []\nlower = []\nfor i in range(n):\n    upper.append(int(input()))\n    middle.append(int(input()))\n    lower.append(int(input()))",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A B') == '<'\nassert solution('C D') == '>'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('X Y') == '<'\nassert solution('A B') == '<'\nassert solution('D E') == '='\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '<'\nassert solution(input()) == '<'\nassert solution(input()) == '='\n",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A B') == '<'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"A B\"\n) == \"<\"\n\nassert solution(\n    \"A C\"\n) == \">\"\n\nassert solution(\n    \"A C D\"\n) == \"=\"\n\nassert solution(\n    \"C A\"\n) == \">\"\n\nassert solution(\n    \"D A\"\n) == \"<\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"<\", \"Error!\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \">\"\nassert solution(\"\") == \">\"\nassert solution(\"A B\") == \"<\"\nassert solution(\"A E\") == \"<\"\nassert solution(\"A F\") == \"<\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"A D\") == \"<\"\nassert solution(\"D A\") == \">\"\nassert solution(\"A B\") == \"=\"\nassert solution(\"A A\") == \"=\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A B') == '<'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '<'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"22\", \"2 2\"\nassert solution(\"3 5\") == \"11211\", \"3 5\"\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\n'.split()) == '11211'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"11211\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n\n''') == '11211'\nassert solution('''5 5\n.....\n.....\n.#..\n.....\n\n''') == '1#2#1'\nassert solution('''8 5\n.#.#.\n##..#\n..##.\n##.#.\n.#.#.\n##..#\n..##.\n''') == '1#2#1'\nassert solution('''6 5\n.....\n.....\n.##.\n.....\n\n''') == '1#1#1'\nassert solution('''1 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == \"11211\"\nassert solution('2 1') == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"3 1\") == \"11\"\nassert solution(\"4 5\") == \"21\"\nassert solution(\"3 3\") == \"111\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"11211\", \"Wrong!\"\nassert solution(\"1 2\") == \"1#2#1\", \"Wrong!\"\nassert solution(\"4 7\") == \"1711\", \"Wrong!\"\nassert solution(\"4 4\") == \"1111\", \"Wrong!\"\nassert solution(\"20 1\") == \"11111\", \"Wrong!\"\n",
        "num_ids_2": 35,
        "num_ids_4": 66
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5') == '11211', solution('3 5')\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input) == sample_output\nprint(solution(input))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5\\n\"\n..., \".....\\n\"\n..., \".....\\n\") == \"11211\\n\"\n\nclass Solution:\n    def solution(self, stdin):\n        pass\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 240\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"6 2 128\") == \"4\"\nassert solution(\"3 1 50\") == \"1\"\nassert solution(\"6 3 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"3 4 300\") == \"2\"\nassert solution(\"3 4 300\") == \"3\"\nassert solution(\"3 4 60\") == \"2\"\nassert solution(\"3 4 60\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('5 2 60') == '2'\nassert solution('4 5 240') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('3 3 240') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150\n''') == \"3\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150\n''') == '3'\nassert solution('''2 6 180\n40 100 80 20\n80 60 80 70\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"5 4 5 5\") == \"1\"\nassert solution(\"7 5 4 3\") == \"5\"\nassert solution(\"1000000000 50 10000000 1000 8\") == \"10000000\"\nassert solution(\"1000000000 50 10000000 1000 8\") == \"10000000\"\n",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"7 4 180\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n3 4 240\n60 90 120\n80 150 80 150\n\"\"\"\n) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1500 2000 1600 3 2\\n\") == \"7900\"\nassert solution(\"1000000000 1000 1000 1000 1000\\n\") == \"1000000000\"\nassert solution(\"1000010000 10000 10000 10000 10000\\n\") == \"1000000000000\"\n\n\"\"\"\n",
        "num_ids_2": 37,
        "num_ids_4": 56
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1500 2000 1600 100 2\") == \"8500\"\nassert solution(\"1500 2000 1600 100 2\") == \"8500\"\nassert solution(\"1500 2000 1600 100 2\") == \"8500\"\nassert solution(\"1500 2000 1600 100 2\") == \"8500\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1500 2000 1600 3 2\\n') == '7900'\nassert solution('1000000000 3\\n') == '100000000000'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('999999999 100 100 100 100') == '999999999 100 100 100 100'\nassert solution('0 0 0 0 0') == '0'\nassert solution('-1') == '-1'\nassert solution('-9999999999') == '-9999999999'\n",
        "num_ids_2": 37,
        "num_ids_4": 63
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"Pizza At\n3\nA-pizza\nB-pizza\nAB-pizza\n\"\"\"\n) == \"\"\"\n7900\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1500 2000 1600 3 2\\n\") == \"7900\"\nassert solution(\"1500 1500 1600 3 2\\n\") == \"7200\"\nassert solution(\"1500 1500 1200 3 2\\n\") == \"3200\"\nassert solution(\"1500 1500 1500 3 2\\n\") == \"7200\"\nassert solution(\"1500 1500 1500 1200 3 2\\n\") == \"4300\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 3 5\") == \"55\"\nassert solution(\"1500 2 1000 3 2\") == \"7900\"\nassert solution(\"3 1 3 5\") == \"55\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('3559 2086 2147 3 2578') == '108976'\nassert solution('4191 8753 4753 5252 6152') == '628536'\n",
        "num_ids_2": 35,
        "num_ids_4": 56
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '5'\nassert solution('15') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"3\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('20') == '4'\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"20\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '4'\nassert solution('6') == '4'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '6'\nassert solution('6') == '3'\nassert solution('7') == '2'\nassert solution('10') == '10'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"6\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '4'\nassert solution(input(input)) == '4'\n\n---",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n''') == '4'\nassert solution('''5\n''') == '5'\nassert solution('''10\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '9'\nassert solution('100') == '99'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '9'\nassert solution('6') == '16'\nassert solution('100') == '99'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\n''') == '9'\nassert solution('''3\n''') == '1'\nassert solution('''5\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('10') == '9'\nassert solution('6') == '2'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '9'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n10\n8\n8\n6''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4\\n10\\n8\\n8\\n6\\n'\n) == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 0\nassert solution('QWERTYASDFZXCV') == 5\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 5\n\nBy taking out the eighth through the last character, it is possible to construct QWERTY, which starts with Q and ends with E.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''QWERTYASDFZXCV''') == '5'\nassert solution('''QWERTZUIRTYASDFZXCV''') == '7'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nprint('test 1 passed!')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\nassert solution('QWERTYASDFZXCV') == '5'\nprint(solution(input()))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n4 2\n\"\"\") == \"1\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n8 12 40\n''') == '2'\n\nassert solution('''5\n8 12 40 2\n''') == '3'\n\nassert solution('''3\n8 12 40 1\n''') == '4'\n\nassert solution('''100\n3\n4 5 7 9\n''') == '999'\n\nassert solution('''100\n3\n1 2 3\n''') == '8'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"3\\n12 24 50\") == \"3\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '2'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"1\"\nassert solution(\"8\") == \"2\"\nassert solution(\"12\") == \"3\"\nassert solution(\"40\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"2\"\n\n'''\nimport sys\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"6\") == \"2\"\nassert solution(\"10\") == \"0\"\nassert solution(\"20\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n8 12 40\n''') == '2'\nassert solution('''\n5\n2 4 6 4\n''') == '3'\nassert solution('''\n5\n4 1 4 6\n''') == '3'\nassert solution('''\n10\n3 2 3 2 3 2 3 2 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == 6\nassert solution(2) == 8\nassert solution(3) == 18",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\n\n--------------------------------------------------\n\nExplanation of Input\n\nInput contains a single line of input (each line contains an integer N).\n\n--------------------------------------------------\n\nExplanation of Output\n\nOutput is the answer modulo 10^{9}+7.\n\n--------------------------------------------------\n\nExplanation of Example\n\nInput:\n3\n\nOutput:\n6\n\n--------------------------------------------------\n\nExplanation of Limitations\n\nLimitations\n\n- 2^31 \u2264 N \u2264 2^31 - 1\n\n--------------------------------------------------\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '1'\nassert solution('100') == '1'\nassert solution('1000') == '1'\nassert solution('10000') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '10'\nassert solution('10') == '26'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"3\",\n) == \"6\", \"Wrong answer!\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '6', \"Wrong\"\nassert solution('3') == '3', \"Wrong\"\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\", \"Wrong!\"\nassert solution(\"2\") == \"2\", \"Wrong!\"\nassert solution(\"3\") == \"3\", \"Wrong!\"\nassert solution(\"4\") == \"4\", \"Wrong!\"\nassert solution(\"5\") == \"5\", \"Wrong!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n''') == '6'\nassert solution('''10\n''') == '101'\nprint('Congratulations, have a nice day!')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"10\") == \"21\"\nassert solution(\"1000\") == \"3585\"\nassert solution(\"10000\") == \"54805\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n3\n2\n1\n''') == '2'\nassert solution('''5\n3 4 7 1\n''') == '6'\nassert solution('''1\n5\n1\n''') == '0'\nassert solution('''6\n2 4 1 6 8\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('6\\n2 1 4 3 1') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"5\"\nassert solution(\"9\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"10 1 2 9 2 6 8 3 7 4\") == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 1') == '2'\nassert solution('10\\n2 4 3') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('3 1') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"2 2\"\n\"\"\"\n\nimport math\nimport sys\n\nsys.setrecursionlimit(10 ** 6)\nINF = int(1e9)\nn, m = map(int, input().split())\np_data = [list(map(int, input().split())) for _ in range(n)]\ns_data = []\nfor i in range(n):\n    s_data.append(input().split())\ns_data.sort()\n\np_data.sort(key=lambda x: x[1])\n\ncount = 0\nfor i in range(n):\n    if p_data[i][0] == s_data[i][0]:\n        count += 1\n    else:\n        count += int(p_data[i][1])\n\npenalty = 0\nfor i in range(n):\n    penalty += int(s_data[i][1])\n\nprint(count, penalty)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"1 WA\") == \"1 1\"\nassert solution(\"1 AC\") == \"1 0\"\nassert solution(\"2 WA\") == \"2 2\"\nassert solution(\"2 AC\") == \"2 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('5 10\\n1 WA\\n1 WA\\n1 AC\\n1 WA\\n1 WA\\n2 WA\\n2 AC\\n2 WA') == '5 2'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"2 2\"\nassert solution(\"2 5\") == \"2 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'\nassert solution('7 6\\n3 AC\\n6 AC\\n3 WA\\n7 WA\\n1 AC\\n5 WA') == '2 1'\nassert solution('2 1\\n1 WA\\n1 AC\\n1 WA\\n1 WA') == '1 1'\nassert solution('1 2\\n2 AC\\n1 WA\\n2 AC\\n1 AC') == '2 1'\nassert solution('3 2\\n2 WA\\n1 AC\\n2 AC\\n1 AC') == '1 0'\n",
        "num_ids_2": 68,
        "num_ids_4": 124
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"\nassert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 1\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA') == '2 2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5\\n1 WA\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\nassert solution('2 5\\n1 WA\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\nassert solution('1 10\\n1 WA\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\nassert solution('''4 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n''') == '2 2'\nassert solution('''6 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n1 WA\n''') == '3 2'\nassert solution('''1 10\n1 WA\n1 AC\n1 WA\n1 WA\n1 WA\n''') == '1 1'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n') == '2 2'\nassert solution('3 5\\n1 WA\\n2 WA\\n2 AC\\n2 WA\\n') == '3 3'\nassert solution('100 50\\n1 WA\\n2 WA\\n2 AC\\n1 WA\\n') == '101 0'\n",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"0\"\nassert solution(\"4 1\") == \"4\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"5 2\") == \"4\"\nassert solution(\"3 0\") == \"3\"\nassert solution(\"4 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 2\n4 5 6''') == '5'\nassert solution('''1 1\n3 2 2''') == '2'\nassert solution('''2 4\n4 5 4''') == '4'\nassert solution('''6 5\n3 1 4 5 1''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"3 1\\n4 1 5\\n\"\n) == \"5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 1\n1 2 3 5 6 8 9 10\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('1 1') == '2'\nassert solution('3 2') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 2') == '2'\nassert solution('2 3') == '3'\nassert solution('4 2') == '2'\nassert solution('5 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1') == '5'\nassert solution('3 2') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\nassert solution('3') == '8'\nassert solution('4') == '4'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '16'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\nassert solution('10') == '10'\n\"\"\"\n\nfrom copy import deepcopy",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\n\"\"\"\n\nn = int(input())\nk = int(input())\nx = list(map(int, input().split()))\n\ndistance = 0\n\nfor i in range(n):\n    distance += max(0, x[i] - i)\n\nfor i in range(k):\n    distance += max(0, i - x[i])\n\nprint(distance)\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"3\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"2\") == \"16\"\nassert solution(\"100\") == \"5070\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"3\") == \"12\"\nassert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"16\"\n\"\"\"\n\nn = int(input())\nk = int(input())\n\nx = list(map(int, input().split()))\n\na = []\nb = []\n\nfor i in range(n):\n    if x[i] % 2 == 0:\n        a.append(x[i])\n    else:\n        b.append(x[i])\n\na = sorted(a)\nb = sorted(b)\n\nmin_a = 0\nmin_b = 0\n\nfor i in range(n):\n    if a[i]!= 0:\n        min_a += a[i]\n    if b[i]!= 0:\n        min_b += b[i]\n\nprint(min_a, min_b)",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '4'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10\\n2\\n') == '4'\nassert solution('1\\n10\\n3\\n') == '4'\nassert solution('1\\n10\\n4\\n') == '6'\nassert solution('2\\n10\\n3\\n') == '4'\nassert solution('2\\n10\\n5\\n') == '8'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '16'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"7\\n7\\n7\\n7\") == \"21\"\nassert solution(\"-1\\n-1\\n-1\\n-1\") == \"-1\"\nassert solution(\"1\\n1\\n1\\n1\") == \"2\"\nprint(\"all tests passed\")\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '220'\nassert solution('420') == '420'\n\n'''\n\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"\n\"\"\"\n\nfrom math import inf",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\nprint(solution('600\\n300\\n220\\n420'))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\nassert solution(\"220\") == \"300\"\nassert solution(\"420\") == \"420\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\"\nassert solution(\"600\\n220\\n420\\n\") == \"300 + 220 = 260\"\nassert solution(\"300\\n600\\n220\\n420\\n\") == \"300 + 220 = 260\"\nassert solution(\"600\\n300\\n220\\n420\\n\") == \"300 + 220 = 260\"\nassert solution(\"300\\n220\\n420\\n600\\n\") == \"300 + 220 = 260\"",
        "num_ids_2": 43,
        "num_ids_4": 93
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\\n\") == \"520\\n\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == input(2)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('600\\n300\\n220\\n420\\n') == '520'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"21\"\nassert solution(\"100\") == \"2533\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('6\\n1 3 6 5 4 2') == '5'\nassert solution('6\\n1 3 6 5 4 2') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 0') == '1'\nassert solution('3\\n1 1 2') == '2'\nassert solution('3\\n1 2 1') == '1'\nassert solution('3\\n1 2 2') == '1'\nassert solution('3\\n1 2 3') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '1'\nassert solution('10') == '0'\nassert solution('15') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('5\\n2 4 4 0 2') == '4'\nassert solution('5\\n2 4 4 0 2') == '0'\nassert solution('5\\n2 4 4 0 2') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 2 5''') == '84'\nassert solution('''1 0 0''') == '3'\nassert solution('''1 1 1''') == '0'\nassert solution('''20 8 10''') == '0'\nassert solution('''20 - 8 10''') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 2 5\") == 84\nassert solution(\"1 1\") == 10\nassert solution(\"1 100\") == 101\nassert solution(\"1 1000\") == 1001\nassert solution(\"1000 100\") == 1001\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 2 5\n2''') == '84'\nassert solution('''20 2 5\n3''') == ''''''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"1 10 3\") == \"14\"\nassert solution(\"1 10 10\") == \"100\"\nassert solution(\"1 10 5\") == \"95\"\nassert solution(\"1 10 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 5\") == 84\nassert solution(\"20 2 5\") == 84\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 1817
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5 2') == '84'\nassert solution('3 2 5') == '33'\nassert solution('6 3 3') == '5'\nassert solution('5 1 9') == '1'\nassert solution('100 9 5') == '8'\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"100 100 100\") == \"1000\"\nassert solution(\"2 2 5\") == \"11\"\nassert solution(\"5 5 5\") == \"25\"\nassert solution(\"100 100 100\") == \"10000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 2 5\") == \"84\"\nassert solution(\"10 2 5\") == \"40\"\nassert solution(\"2 2 5\") == \"25\"\nassert solution(\"5 2 5\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 2 5\") == 84\nassert solution(\"20 10 5\") == 18\nassert solution(\"20 2 1\") == 27\nassert solution(\"20 10 1\") == 36\nassert solution(\"20 0 0\") == 0\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 5\") == \"84\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABC100\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('100') == 'ABC100'\n\nprint(solution('''2\n10\n15\n20''')) == 'ABC20'\nprint(solution('''6\n10\n20\n30\n40\n50''')) == 'ABC50'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'ABC1000'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"ABC100\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'ABC'\nassert solution('100') == 'ABC'\n\nprint('PASSED')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'ABC2'\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100') == 'ABC100'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"2\") == \"ABC2\"\nassert solution(\"3\") == \"ABC3\"\nassert solution(\"4\") == \"ABC4\"\nassert solution(\"5\") == \"ABC5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"100\"\n) == \"ABC100\"\nassert solution(\n    \"10\"\n) == \"ABC10\"\nassert solution(\n    \"-1\"\n) == \"ABC-1\"\nassert solution(\n    \"0\"\n) == \"ABC\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"ABC1\"\nassert solution(\"2\") == \"ABC2\"\nassert solution(\"3\") == \"ABC3\"\nassert solution(\"4\") == \"ABC4\"\nassert solution(\"5\") == \"ABC5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"10 10\") == \"5\"\nassert solution(\"8 8\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"5 6\") == \"4\"\nassert solution(\"10 3\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n3\n5\n12\n18\n''') == '5'\nassert solution('''\n1 1\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n1 3\n5\n10\n''') == '6'\nassert solution('''\n1 2\n1\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n''') == '5'\nassert solution('''1 5\n''') == '5'\nassert solution('''1 2\n''') == '1'\nassert solution('''2 4\n''') == '5'\nassert solution('''3 4\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 1') == '1'\nassert solution('2 2') == '1'\nassert solution('5 6') == '5'\nassert solution('3 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''a b\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '5'\nassert solution('''a b\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '5'\nassert solution('''a b\n1 2\n1 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''a b\n1 2\n1 1\n1 2\n1 2\n1 2\n''') == '3'\nassert solution('''a b\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '5'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n3\\n2\\n') == '2'\nassert solution('5\\n1\\n2\\n3\\n') == '-1'\nassert solution('6\\n2\\n4\\n3\\n5\\n') == '2'\n\n\"\"\"",
        "num_ids_2": 43,
        "num_ids_4": 67
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3 1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n3\n1\n2\n''') == '2'\n\nassert solution('''\n4\n3\n1\n2\n''') == '-1'\n\nassert solution('''\n1\n2\n1\n2\n''') == '2'\n\nassert solution('''\n1\n2\n1\n1\n''') == '-1'\n\nassert solution('''\n10\n5\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '104'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('5') == '-1'\nassert solution('5') == '2'\nassert solution('5') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '-1', 'Sample Test Failed'\nassert solution('3') == '2', 'Sample Test Failed'\nassert solution('4') == '-1', 'Sample Test Failed'\nassert solution('5') == '1', 'Sample Test Failed'",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '-1'\nassert solution('5') == '2'\nassert solution('20') == '-1'\nassert solution('100') == '10'\nassert solution('1000000') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == -1\nassert solution(\"4\") == \"2\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '-1'\nassert solution('4') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n6\\n\") == \"1\"\nassert solution(\"1\\n6\\n\") == \"1\"\nassert solution(\"1\\n6\\n\") == \"1\"\nassert solution(\"1\\n6\\n\") == \"1\"\nassert solution(\"1\\n6\\n\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('2 3') == '2'\nassert solution('2 3 4') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('3') == '1'\nassert solution('1') == '2'\nassert solution('1000000000') == '1000000000'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n6\n2\n6\n''') == '1'\nassert solution('''\n2\n5\n5\n4\n4\n''') == '2'\nassert solution('''\n5\n2\n3\n4\n5\n''') == '3'\nassert solution('''\n8\n5\n5\n6\n3\n4\n4\n4\n''') == '2'\nassert solution('''\n3\n2\n5\n''') == '2'\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n4\n4\n7\n10''') == '1'\nassert solution('''5\n6\n7\n10\n8''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1\n2\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n2 2 2 2 2\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nprint('solution check passed')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n1 1 2 2 5') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\\n\") == \"1\"\nassert solution(\"5 2\\n1 1 1 2 2 5\\n\") == \"2\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"4 6\\n1 1 2 2 5\") == \"2\"\nassert solution(\"10 3\\n1 1 2 2 5\") == \"3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '1'\nassert solution('3 2') == '1'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == '1'\nassert solution('5 2\\n1 1 2 2 5\\n') == '1'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"4 5\n2 4 5 3 1\n\"\"\"\n) == \"1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 2\n1 1 2 2 5\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"6 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n4 2 1\n5 1 5\n6 1 2\n''') == 'Yes'\nassert solution('''\n1\n0 0\n2\n''') == 'No'\nassert solution('''\n5\n7 5 1\n8 5 2\n9 5 3\n10 5 4\n11 5 5\n12 5 6\n''') == 'Yes'\nassert solution('''\n2\n0 0\n1\n''') == 'No'\nassert solution('''\n4\n7 5 2\n8 5 1\n9 5 4\n10 5 3\n11 5 5\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1\\n') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n\"\"\"\n\nimport sys\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"Yes\", \"failing example\"\nassert solution(\"1\") == \"No\", \"failing example\"\nassert solution(\"2\") == \"Yes\", \"failing example\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n3 1 2\n6 1 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\n5 4 5 1 1\n6 4 2 1\n\"\"\") == \"No\"\nassert solution(\"\"\"\n5\n5 4 5 1 1\n1 2 1 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n6\n5 4 5 1 1\n6 4 2 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4\n3 3 2 2\n3 2 1 1\n\"\"\") == \"No\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == \"Yes\"\nassert solution('2') == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"5 1 1\") == \"Yes\"\nassert solution(\"5 1 1 2\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"6 1 1\") == \"Yes\"\nassert solution(\"3 2 1\") == \"No\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n4 2 2\n1 2 1\n2 1 2\n''') == 'Yes'\nassert solution('''\n6\n1 1 1\n1 1 2\n2 2 1\n1 1 1\n2 1 2\n1 2 1\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1 2\n1 3\n''') == 'No'\nassert solution('''\n2\n2 2\n1 3\n''') == 'Yes'\nassert solution('''\n3\n2 1 2\n6 2 1\n''') == 'No'\nassert solution('''\n4\n3 1 2\n5 2 1\n1 4 1\n''') == 'Yes'\nassert solution('''\n5\n1 1 1 1\n2 2 2 2\n1 3 1 2\n2 3 3 3\n1 3 1 3\n''') == 'Yes'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\\n\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '2'\nassert solution('-1 3') == '-2'\nassert solution('-1 -3') == '-2'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\\n\") == \"2\"\nassert solution(\"5 6\\n\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 1\") == \"2\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('1 2') == '1'\nassert solution('3 2') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"4 6\") == \"5\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"7 5\") == \"7\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 7\") == \"4\"\nassert solution(\"5 6\") == \"4\"\nassert solution(\"6 7\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7''') == '4'\n\"\"\"\n\n\nfrom collections import deque, defaultdict\n\nclass Graph:\n    def __init__(self, vertices):\n        self.V = vertices\n        self.graph = []\n        self.graph_matrix = [[0 for column in range(vertices)] for row in range(vertices)]\n\n    def add_edge(self, v1, v2, weight):\n        self.graph.append([v1, v2, weight])\n        self.graph_matrix[v1][v2] = weight\n        self.graph_matrix[v2][v1] = weight\n\n    def print_graph(self):\n        for row in self.graph_matrix:\n            print(row)\n\n    def _dfs(self, source, target, visited):\n        visited[source] = True\n        for i in range(len(self.graph_matrix[source])):\n            if self.graph_matrix[source][i] > 0 and not visited[i]:\n                self._dfs(i, target, visited)\n        return True if target in self.graph_matrix[source] else False\n\n    def is_reachable(self, source, target):\n        visited = []\n        return self._dfs(source, target, visited)\n\n    def find_negative_cycle(self):\n        negative_cycle = False\n        for i in range(self.V):\n            for j in range(self.V):\n                if self.graph_matrix[i][j] > 0 and self.is_reachable(i, j):\n                    negative_cycle = True\n        return negative_cycle\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\n'''",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 7') == '4'\nassert solution('10 10') == '1'\nassert solution('7 7') == '4'\nassert solution('13 20') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 7') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 7') == '4'\nassert solution('6 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n3 5\n4 5\n5 6\n6 4\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n1 2\n2 1\n\"\"\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\nassert solution(\"7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\\n\") == \"4\"\n",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"4 5 3\") == \"5\"\nassert solution(\"2 9 9\") == \"9\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == '7'\nprint('Hurray!')\n\"\"\"\n\nfrom sys import stdin\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 2 3\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\"5\",\"7\",\"5\"]) == \"7\"\nassert solution([\"5\",\"7\",\"5\",\"9\"]) == \"9\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin := \"1 2 3\") == \"1\", \"It is not 1\"\nassert solution(stdin := \"1 1 1\") == \"1\", \"It is not 1\"\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 1\") == \"1\"\nassert solution(\"5 7 5\") == \"7\"\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7 5\") == \"7\", \"Your function is not correct\"\nassert solution(\"1 1 1\") == \"1\", \"Your function is not correct\"\nassert solution(\"4 1 4\") == \"1\", \"Your function is not correct\"\n\"\"\"\n\nimport math\n\na,b,c = input().split()\n\na,b,c = int(a),int(b),int(c)",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"-10 -10 -10\") == \"-10\"\nassert solution(\"5 3 2\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '110 10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 5 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 10 20 15 200\n''') == '110 10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 2, 10, 20, 15, 200]) == \"110 10\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 10 20 15 200') == '110 10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\nassert solution(\"2 1 10 10 10 10\") == \"110 10\"\nassert solution(\"3 1 10 10 10 10\") == \"110 10\"\n\"\"\"\n\n\nimport sys\nfrom collections import Counter\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 10, 20, 15, 200]) == \"110 10\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 5 10 20 15 200') == '110 15'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('the quick brown fox') == 'tqbfx'\nassert solution('the quick brown fox jumps over the lazy dog') == 'tqbxfjmp'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 52
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('internationalization') == 'i18n'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"Test\") == \"test\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 30
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"aakash\") == \"a3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"latinization\") == \"latin\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'\nassert solution('internationalization') == 'i18n'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"a\") == \"a\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('language') == 'lang'\nassert solution('enl') == 'en'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\nprint(solution('i18n'))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n\"\"\"\nimport math\n\ngrid = input()\nrows, cols = int(len(grid) / 2), int(len(grid) / 2)\nn = 0\nfor i in range(rows):\n    for j in range(cols):\n        n += 1\n        if grid[i*2+1][j*2+1]!= grid[i*2][j*2]:\n            return \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('top') == 'YES'\nassert solution('pot') == 'YES'\nassert solution('') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'YES'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"pot\"\n) == \"YES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"pot\") == \"NO\"\nassert solution(\"top\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"pot\") == \"YES\", \"Should be YES\"\nassert solution(\"top\") == \"NO\", \"Should be NO\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aba') == 'b'\nassert solution('ab') == 'b'\nassert solution('abac') == 'b'\nassert solution('abcabc') == 'c'\nassert solution('abcabab') == 'c'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aba') == 'b'\nassert solution('aa') == 'a'\nassert solution('aaa') == 'a'\nassert solution('bbb') == 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcd') == 'cd'\nassert solution('abc') == 'c'\nassert solution('x') == ''\n",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcb') == 'ab'\nassert solution('abcb') == 'b'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aba') == 'b'\nassert solution('abcd') == 'c'\nassert solution('xy') == 'x'\nassert solution('abx') == 'b'\nassert solution('z') == 'z'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aba') == 'b'\nassert solution('abc') == 'a'\nassert solution('ac') == ''\nassert solution('acde') == 'c'\nassert solution('ABC') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''aba\n4''') == 'b'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"b\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abacabd\") == \"acabd\"\nassert solution(\"aabacb\") == \"aabacb\"\nassert solution(\"aaabcba\") == \"abcba\"\nassert solution(\"acbdbacd\") == \"acbdacd\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aba') == 'b'\nassert solution('abc') == 'c'\nassert solution('abcd') == 'c'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 5 2\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('5 5 2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''7 8 2\n1 1 1\n2 2 1\n4 4 1\n3 3 4\n4 5 2\n4 6 1\n4 7 2\n''') == '12'\nassert solution('''10 10 5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '100'\nassert solution('''20 20 5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '5000'\nassert solution('''40 40 5\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n''') == '10000'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 4 1\") == \"3\"\nassert solution(\"5 4 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == \"9\"\nassert solution('''5 3 2\n1 1 1\n3 3 4''') == \"9\"\nassert solution('''2 1 2\n2 2 2\n2 2 2''') == \"6\"\nassert solution('''3 3 2\n1 2 1\n2 2 2''') == \"6\"\nassert solution('''3 3 2\n1 1 2\n2 2 2''') == \"6\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('10 10 2') == '45'\nassert solution('20 20 3') == '45'\nassert solution('2 5 2') == '30'\nassert solution('9 7 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('6 2 6 4') == '20'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4\n''') == '9'\nassert solution('''4 8 3\n1 2 3\n2 3 3\n1 2 4\n''') == '18'\nassert solution('''5 4 2\n2 1 1\n3 3 4\n''') == '20'\nassert solution('''5 7 5\n3 1 4\n4 5 6\n5 7 3\n4 5 7\n6 7 8\n5 4 4\n''') == '19'\nassert solution('''5 7 5\n4 3 2\n6 5 8\n4 2 4\n2 4 6\n1 5 5\n4 5 4\n''') == '20'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 4 2\\n\"\n    \"2 1 1\\n\"\n    \"3 3 4\\n\"\n    ) == \"9\\n\"\n\n'''\n\n'''\nMethod 2:\nUsing y = H\nW = x = W - y\n'''\nfrom collections import deque\n\nclass Solution:\n    def rectangleArea(self, w: int, h: int, n: int) -> int:\n        # Time: O(N)\n        # Space: O(1)\n        dq = deque([(w, h, 0)])\n        dp = [(w, h, 0)]\n        \n        while dq:\n            w, h, cnt = dq.popleft()\n            for x, y in ((0, 1), (0, -1), (1, 0), (-1, 0)):\n                new_w = x + w\n                new_h = y + h\n                if new_w >= 0 and new_w <= w and new_h >= 0 and new_h <= h:\n                    if (new_w, new_h, cnt) not in dp:\n                        dp.append((new_w, new_h, cnt))\n                        dq.append((new_w, new_h, cnt + 1))\n        \n        return sum(h * w for w, h, cnt in dp)\n\n'''\nMethod 1:\n'''\n\n'''\nimport collections\nfrom math import sqrt\n\nclass Solution:\n    def rectangleArea(self, w: int, h: int, n: int) -> int:\n        # Time: O(N^2)\n        # Space: O(N)\n        res = 0\n        for i in range(1, n + 1):\n            x1, y1, count1 = w, h, i\n            x2, y2, count2 = w, h, i\n            while count1 > 0:\n                x1 -= 1\n                y1 += 1\n                count1 -= 1\n            while count2 > 0:\n                x2 += 1\n                y2 -= 1\n                count2 -= 1\n            res += y2 * x1\n        return res\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 5 2\n2 1 1\n3 3 4\n''') == '9', solution\nassert solution('''5 6 2\n2 2 3\n4 4 4\n5 5 2\n''') == '9', solution\nassert solution('''1 5 4\n1 2 1\n1 3 4\n''') == '9', solution\nassert solution('''1 5 4\n1 2 4\n1 3 1\n''') == '9', solution\nassert solution('''1 5 4\n1 2 4\n1 3 2\n''') == '9', solution\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n6 5 1\\n1 10 1') == '12\\n11\\n0'\nassert solution('2\\n10 2 3\\n6 10 1\\n1 10 1') == '7\\n8\\n0'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\\n0\\n0\"\nassert solution(\"2\") == \"11\\n11\\n0\"\nassert solution(\"3\") == \"11\\n11\\n0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 6, 5, 1, 10, 1]) == '12 11 0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"12\"\nassert solution(\"3\") == \"11\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"2\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n6 5 1\n1 10 1\n''') == '12'\nassert solution('''\n3\n10 3 1\n1 10 1\n''') == '11'\nassert solution('''\n10\n10 10 1\n1 10 1\n''') == '0'\nassert solution('''\n1\n10 10 1\n1 10 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(samples.sample1) == '1112'\nassert solution(samples.sample2) == '1213'\nassert solution(samples.sample3) == '1213'\nassert solution(samples.sample4) == '1213'\nassert solution(samples.sample5) == '1213'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"12\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"*.\\n*.\\n*.\\n*.\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '**\\n**'\nassert solution('2 3') == '***\\n***'\nassert solution('3 3') == '****\\n****'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"*\\n*.\\n*.\\n*\"\nassert solution(\"3 3\") == \"*\\n*.\\n*.\\n*\"\nassert solution(\"10 5\") == \"*\\n*.\\n*.\\n*.\\n*\\n*.\\n*.\\n*.\\n*.\\n*\"\nassert solution(\"8 7\") == \"*\\n*.\\n*.\\n*.\\n*.\\n*\\n*.\\n*.\\n*.\\n\"\nassert solution(\"4 3\") == \"*\\n*\\n*\\n*\\n\"",
        "num_ids_2": 40,
        "num_ids_4": 115
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2\\n.\\n*') == '***\\n*\\n**\\n*\\n***'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n.\\n.\\n') == '2 1\\n2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9'\nassert solution('1 1\\n.\\n.\\n') == '2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9'\nassert solution('2 2\\n.\\n.\\n') == '2 2\\n2 3\\n2 4\\n2 5\\n2 6\\n2 7\\n2 8\\n2 9'\n",
        "num_ids_2": 100,
        "num_ids_4": 148
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '*.\\n*.\\n*.\\n*.\\n'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n2 2\n*.\n.*\n\n\"\"\") == \"*****\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\".#.\\n..#\") == \"##\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \".\"\nassert solution(\"2\") == \"..\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n.\n.\n\n''') == '''\n.\n.\n.\n.\n'''\nassert solution('''3 3\n.*\n.\n.\n\n''') == '''\n.\n*\n.\n*\n.\n*\n.\n*\n.\n*\n.\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 6 1 4 5\") == \"YES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n5 3 1 6\\n') == 'NO'\nassert solution('3\\n1 2 3\\n') == 'YES'\nassert solution('3\\n1 1 3\\n') == 'YES'\nassert solution('5\\n5 1 2 3 4\\n') == 'YES'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"YES\", \"Wrong\"\nassert solution(\"5\") == \"NO\", \"Wrong\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 3 4\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2 6 1 4 5''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('5\\n5 2 4 3 6') == 'NO'\n\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('100') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n2 6 1 4 5\\n\") == \"YES\\n\"\nassert solution(\"5\\n3 2 1 4 5\\n\") == \"NO\\n\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    'test_input.txt') == '1\\n1\\n2\\n3\\n4\\n5\\n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"1\"\nassert solution(\"8\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2 3\n5\n1 2 3 4 5''') == '2'\nassert solution('''4\n1 2 3\n5\n1 2 3 4 5''') == '1'\nassert solution('''5\n1 2 3\n5\n1 2 3 4 5''') == '2'\nassert solution('''3\n1 2 3\n5\n1 2 3 4 5''') == '1'\nassert solution('''2\n1 2\n5\n1 2 3 4 5''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution() == '3'\nassert solution() == '4'\nassert solution() == '1'\nassert solution() == '2'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '1'\nassert solution('''\n5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '2'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '4'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3') == '2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 3 3\\n3') == '4'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3') == '2'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3') == '2'\nassert solution('5\\n1 2 2 1 2 1 1 2\\n3') == '2'\n",
        "num_ids_2": 87,
        "num_ids_4": 133
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n4\\n5\\n6\\n7\") == \"5\"\nassert solution(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"4\"\nassert solution(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n4\\n5\\n6\\n7\\n8\") == \"3\"\nassert solution(\"5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\") == \"2\"\n",
        "num_ids_2": 104,
        "num_ids_4": 226
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n5 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\nassert solution('5\\n5 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '3'\nassert solution('5\\n5 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '4'\nassert solution('5\\n5 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '1'\nassert solution('5\\n5 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3\\n1 3 3') == '2'\n",
        "num_ids_2": 102,
        "num_ids_4": 204
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n') == '2'\nassert solution('6\\n') == '3'\nassert solution('8\\n') == '4'\nassert solution('3\\n') == '1'\nassert solution('4\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n7 3\\n1 5\\n22 5\\n987 13\") == \"3\"\nassert solution(\"4\\n7 3\\n1 5\\n22 5\\n987 13\") == \"1\"\nassert solution(\"5\\n7 3\\n1 5\\n22 5\\n987 13\") == \"5\"\nassert solution(\"6\\n7 3\\n1 5\\n22 5\\n987 13\") == \"77\"\nassert solution(\"7\\n7 3\\n1 5\\n22 5\\n987 13\") == \"77\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5 3\\n1 5\\n22 5\\n987 13\\n\") == \"1\\n5\\n77\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n7 3\\n1 5') == '3'\nassert solution('2\\n5 3\\n1 5') == '1'\nassert solution('3\\n4 3\\n1 5') == '2'\nassert solution('4\\n5 3\\n1 5') == '1'\nassert solution('5\\n5 2\\n1 5') == '1'\n\n\n'''\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('2\\n6 3\\n1 2\\n5 3\\n12 3\\n9 3') == '1'\nassert solution('3\\n4 3\\n2 5\\n1 2\\n3 2\\n1 1') == '3'\nassert solution('4\\n6 3\\n3 4\\n4 1\\n2 4\\n1 2\\n1 3') == '3'",
        "num_ids_2": 56,
        "num_ids_4": 120
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n7 3\n1 5\n22 5\n987 13\n''') == \"1\"\nassert solution('''\n3\n7 3\n1 5\n22 5\n987 13\n''') == \"3\"\nassert solution('''\n3\n7 3\n1 5\n22 5\n987 13\n''') == \"3\"\nassert solution('''\n4\n7 3\n1 5\n22 5\n987 13\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('7') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''5\n10 10\n3 5\n9 8\n10 12\n9 12\n8 13\n9 10\n8 14\n7 15\n9 16\n''') == '1'\nassert solution('''5\n10 10\n3 5\n9 8\n10 12\n9 12\n8 13\n9 10\n8 14\n7 15\n9 16\n''') == '1'\nassert solution('''8\n5 5\n4 5\n5 5\n4 6\n5 7\n4 9\n4 10\n4 11\n5 12\n4 13\n5 14\n5 15\n4 16\n5 17\n5 18\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2 4\n4 5\n1\n5 6\n3''') == '2'\nassert solution('''1\n4 5\n2\n1\n3\n''') == '3'\nassert solution('''2\n2 5\n1\n''') == '1'\nassert solution('''5\n6\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5 2\n1 5\n22 5\n987 13''') == '3'\nassert solution('''4\n7 3\n1 5\n22 5\n987 13''') == '1'\nassert solution('''10\n5 2\n1 5\n5 5\n2 5\n2 5\n1 5\n22 5\n987 13''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''4\n7 3\n1 5\n22 5\n987 13\n''') == '1'\nassert solution('''5\n7 3\n1 5\n22 5\n987 13\n''') == '4'\nassert solution('''22\n7 3\n1 5\n22 5\n987 13\n''') == '77'\n\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0     0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0     2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '12'\nassert solution('2 3') == '21'\nassert solution('4 2') == '22'\nassert solution('3 4') == '34'\nassert solution('6 6') == '928'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 2 1 5 4 11 8 2 7 5 1 10 1 5 2'''\nassert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 2 1 5 4 11 8 2 7 5 1 10 1 5 2'''\nassert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 2 1 5 4 11 8 2 7 5 1 10 1 5 2'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n\"\"\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 '\nassert solution('2 8 3 2 9') == '26 10'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\nabca\\n1 3\\n10 5\\ncodeforces\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n\nassert solution(\"3 2\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\\n1 2 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"",
        "num_ids_2": 231,
        "num_ids_4": 231
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\nabca\n1 3\n10 5\ncodeforces''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n''')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"4 2\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"20 10 1 2 3 5 10 5 9 4\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n",
        "num_ids_2": 72,
        "num_ids_4": 116
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"36\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '0'\nassert solution(input) == '36'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n1 10\n3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n2\n100 100\n500 500\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 2\") == \"0\"\nassert solution(\"3 2 5\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2\n3\n''') == '0'\nassert solution('''\n8\n2 2 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '9999999994'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 4') == '0'\nassert solution('10 20 30') == '36'\nassert solution('5 5 5') == '0'\nassert solution('2 4 3') == '4'\nassert solution('1 1000000000 1000000000') == '1999999994'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n6 5 7\n3 9 5 2 6 9 8\n2 4 6 6 2\n2 4 5 3 5\n2 4 6 7\n3 3 2\n3 3 8\n''') == '-1'\nassert solution('''\n6 5 7\n3 9 5 2 6 9 8\n2 4 6 6 2\n2 4 5 3 5\n2 4 6 7\n3 3 2\n3 3 8\n''') == '0'\nassert solution('''\n10 3 5\n10 5 10 3\n1 2 3\n4 5 6\n7 8 9\n10 9 10\n4 5 7\n3 9 5\n3 3 8\n2 3 5\n''') == '-1'\nassert solution('''\n10 3 5\n10 5 10 3\n1 2 3\n4 5 6\n7 8 9\n10 9 10\n4 5 7\n3 9 5\n3 3 8\n2 3 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '0'\nassert solution('3 3 4') == '36'\nassert solution('10 20 30') == '1999999994'\nassert solution('5 5 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"0\"\nassert solution() == \"1999999994\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == \"YES\"\n\nassert solution('''\n5\n10 2 5 1 3\n3\n1 2 1 1\n4\n5 5 5 5\n6\n1 4 5 5\n''') == \"YES\"\nassert solution('''\n4\n10 2 5 1 3\n2\n1 2 1 1\n4\n5 5 5 5\n6\n1 4 5 5\n''') == \"NO\"\n\nassert solution('''\n5\n1 2 3 4 5\n4\n1 3 2 5\n3\n2\n1 1\n2\n3\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n11 14 16 12\n2\n1 8''') == \"YES\"\nassert solution('''4\n1 8''') == \"NO\"\nassert solution('''4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == \"YES\"\nassert solution('''6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8''') == \"YES\"\nassert solution('''1\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8''') == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == 'YES'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n2 2 4\\n1 1 1 1') == 'NO'\nassert solution('6\\n12 13\\n6\\n1 6 3 10 5 8') == 'YES'\nassert solution('4\\n2 2 3 4\\n1 1 1 1') == 'YES'\n",
        "num_ids_2": 46,
        "num_ids_4": 68
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n12\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n4\n12\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\"\"\") == \"YES\"\n\nassert solution(\"\"\"\n1\n4\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n3\n12\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\"\"\") == \"NO\"\n\nassert solution(\"\"\"\n5\n12\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == 'YES'\nassert solution('5\\n1 1 1 1 1') == 'YES'\nassert solution('3\\n1 2 5 6') == 'NO'\n\n\n\"\"\"\n",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"YES\"\nassert solution(\"5\\n6\") == \"NO\"\nassert solution(\"9\\n8\") == \"YES\"\nassert solution(\"5\\n8\") == \"NO\"\nassert solution(\"4\\n2\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 3 9 8 5\\n2\\n1 4\\n1 1\\n3') == \"YES\"\nassert solution('5\\n1 3 9 8 5\\n2\\n1 4\\n1 1\\n3') == \"NO\"\nassert solution('5\\n1 3 9 8 5\\n2\\n1 4\\n1 1\\n3') == \"YES\"\nassert solution('5\\n1 3 9 8 5\\n2\\n1 4\\n1 1\\n3') == \"NO\"\nassert solution('5\\n1 3 9 8 5\\n2\\n1 4\\n1 1\\n3') == \"YES\"\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n7\n4\n11 14 16 12\n2\n1 8\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\nassert solution('''\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''\n7\n4\n1 1 1 1\n4\n1 2 5 6\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'NO'\nassert solution('''\n7\n2\n1 2\n2\n12 13\n6\n1 6 3 10 5 8\n6\n1 12 3 10 5 8\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 4\\n1 2 5\\n2 3 4\\n1 4 3\\n4 3 7\\n3 5 2\\n1 5\\n5 3\\n\") == \"13\"\nassert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"\nassert solution(\"6 5 2\\n1 2 5\\n2 3 7\\n2 4 4\\n4 5 2\\n4 6 8\\n1 6\\n5 3\\n\") == \"22\"\n",
        "num_ids_2": 94,
        "num_ids_4": 141
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '13'\n\ninvalid:\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '13'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '22'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 4\") == \"13\"\nassert solution(\"10 10 10\") == \"100\"\nassert solution(\"1 1 1\") == \"1\"\nprint('check passed')",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"22\"\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == \"13\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('6 5 2') == '22'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n\"\"\") == \"22\"\nassert solution(\"\"\"\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\"\"\") == \"13\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n3') == '2\\n5\\n10'\nassert solution('6\\n20') == '2\\n5\\n10'\nassert solution('1\\n8') == '1\\n2'\nassert solution('8\\n10') == '1\\n2'\nassert solution('3\\n10') == '2\\n5\\n10'\n",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '3'\nassert solution('1\\n4\\n5') == '5'\nassert solution('1\\n4\\n5\\n6') == '6'\nassert solution('1\\n4\\n5\\n6\\n6') == '6'\nassert solution('1\\n6\\n2\\n3\\n4') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n3') == '5'\nassert solution('1\\n4') == '7'\nassert solution('1\\n5') == '9'\nassert solution('1\\n6') == '13'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('3620') == '6561'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '13'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('2') == '3'\nassert solution('4') == '9'\nassert solution('13') == '13'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\nassert solution(\"14\") == \"37\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == '3\\n'\nassert solution('1\\n3') == '3\\n'\nassert solution('1\\n5') == '5\\n'\nassert solution('1\\n15') == '15\\n'\nassert solution('1\\n31') == '31\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n5\n8\n10\n''') == '3'\nassert solution('''\n7\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n10') == '4\\n7\\n13\\n9\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3''') == '4 4 3 2 1 1 '\nassert solution('''6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '4 4 3 2 1 3 '\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"6\\n\"\n    \"5\\n\"\n    \"1 2 3 4 5\\n\"\n    \"3\\n\"\n    \"2 3 1\\n\"\n    \"6\\n\"\n    \"4 6 2 1 5 3\\n\"\n    \"1\\n\"\n    \"1\\n\"\n    \"4\\n\"\n    \"3 4 1 2\\n\"\n    \"5\\n\"\n    \"5 1 2 4 3\\n\"\n) == \"1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n4 4 4 1 4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\nassert solution('6\\n5\\n1 2 3 4 5\\n3\\n2 3 1') == '3 3 3 2 1 3'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1 1 1 1 1\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"3 3 3\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"2 2 2\"\nassert solution(\"6\\n5\\n1 2 3 4 5\\n3\\n2 3 1\") == \"1\"\n",
        "num_ids_2": 62,
        "num_ids_4": 120
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 2 3 4 5\") == \"1 1 1 1 1\"\nassert solution(\"6\\n4 6 2 1 5 3\") == \"3 3 3 3 3\"\nassert solution(\"6\\n4 6 2 1 5 3\") == \"3 3 3 3 3\"\nassert solution(\"4\\n2 4 1 2\") == \"2 2 2 2\"\nassert solution(\"4\\n3 2 1\") == \"2 2 2 2\"\n",
        "num_ids_2": 43,
        "num_ids_4": 84
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3 2 2 2 1 1\\n1\\n2 2 2 2\\n4 4 4 1 4\\n2 2 2 2 2\\n4 4 4 2\\n3 3 3 1 1\\n5 5 1 2 4 3'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n5 5 5 1 5\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1 1 1 1 1'\nassert solution('3') == '2 3 2 2'\nassert solution('4') == '1 2 1 2'\nassert solution('5') == '3 4 2 3'\nassert solution('3') == '1 2 1 2'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 6\n1 5\n''') == '8\nassert solution('''3 5\n0 3 1\n''') == '7\nassert solution('''6 6\n0 5\n0 5\n1 5\n1 6\n1 6\n0 5\n''') == '-1 2 6 4 0 3 \nassert solution('''4 4\n2 1\n0 2\n-1 -1\n1 0\n''') == '-2 2 2 -1 2 2 -1 2 \nassert solution('''10 5\n1 2\n1 4\n0 2\n0 1\n0 1\n1 2\n0 1\n1 1\n1 3\n1 4\n1 5\n''') == '-4 2 -1 2 3 -1 4 3 3 5 4 5 \n''')\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"3 5\") == \"5 -2 4 -1 2\"\nassert solution(\"2 5\") == \"5 -2 4 -1 2\"\nassert solution(\"3 5\") == \"5 -2 4 -1 2\"\nassert solution(\"5 8\") == \"5 -2 4 -1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 6\n1 5\n''') == '8'\nassert solution('''3 5\n0 3 1\n''') == '7 5 -2 4 -1 2'\nassert solution('''2 5\n1 3\n''') == '6 -1 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7 5 -2 4 -1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 5\n1 5\n\"\"\") == \"8\n\nassert solution(\"\"\"\n3 5\n0 3 1\n\"\"\") == \"7\n\"\"\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"3 5\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2 6\n1 5\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 5\n0 3 1\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 6\n1 5\n\nOutput\n8\n-1 2 6 4 0 3 \n''') == '7\\n5 -2 4 -1 2'\nassert solution('''\n3 5\n0 3 1\n\nOutput\n7\n5 -2 4 -1 2\n''') == '7\\n5 -2 4 -1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '5 -2 4 -1 2'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5') == '8'\nassert solution('2 6') == '-1 2 6 4 0 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'YES'\nassert solution('5') == 'NO'\nassert solution('4') == 'YES'\nassert solution('2') == 'YES'\nassert solution('1 0') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\nassert solution(\"4 3\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1 0\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"YES\"\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"NO\"\nassert solution('''1\n2\n0 1\n0 1''') == \"YES\"\nassert solution('''3\n5\n4 3\n2''') == \"YES\"\nassert solution('''1\n3\n0 1\n0 1''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3\\n1 2\\n3 3\") == \"YES\"\nassert solution(\"4 3\\n2 4\\n3 3\\n5 5\\n4 3\\n2\\n1 0\\n0 1\\n1\\n4 3\") == \"NO\"\n\n\"\"\"\n\n\nimport itertools\nimport collections",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n3 4\n0 1\n2''') == 'RUUURRRRUU'\n\nassert solution('''3\n1 2\n1 3\n0 0\n3 0''') == 'NO'\n\nassert solution('''3\n1 2\n1 3\n0 0\n3 0''') == 'YES'",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == \"YES\"\n\nassert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == \"NO\"\n\nassert solution('''\n4\n4\n2 3\n1 2\n1 3\n3 2\n\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n') == 'RUUURRRRUU'\nassert solution('1\\n2\\n3\\n') == 'NO'\nassert solution('4\\n3\\n2\\n1\\n') == 'YES'\nassert solution('4\\n3\\n2\\n') == 'YES'\nassert solution('5\\n5\\n5\\n') == 'YES'\n",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == \"YES\"\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\nassert solution('''\n2\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\nassert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\nassert solution('''\n4\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'NO'\n\n\n\n------SOLUTION-------",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n3\n1 3\n2 9\n13\n''') == '0'\nprint('You passed all the tests!')\n\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\n\nassert solution('''\n6\n4 2\n12 3\n20 5\n16 8\n1 1000000\n1\n''') == '14'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '0'\nassert solution('1 1') == '1'\nassert solution('500 4') == '1'\nassert solution('217871987498122 10') == '4'\nassert solution('100000000000000001 1') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('1000000000 1') == '0'\nassert solution('100000000000000001 1') == '8'\nassert solution('100000000000000001 1') == '8'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n3 2\n3 2\n6 3\n843 124 69\n22232223''') == '3'\nassert solution('''\n1 10\n5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '8'\nassert solution('2') == '0'\nassert solution('1') == '0'\nassert solution('500') == '0'\nassert solution('217871987498122') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '8\\n0\\n500\\n2128012501878\\n899999999999999999'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"6 9\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''1\n2\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '2'\nassert solution('''3\n1 0 0\n3\n1 1 0\n4\n1 1 1 1''') == '1'\nassert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n2 0 1 1\n3\n1 0 0\n4\n1 1 0\n5\n1 0 0\n''') == '4'\nassert solution('''5\n2 0 1 1 0\n3\n1 0 0\n4\n1 1 0\n5\n1 0 0\n''') == '3'\nassert solution('''5\n2 0 1 1 0\n3\n1 0 0\n4\n1 1 0\n5\n1 0 0\n''') == '2'\nassert solution('''5\n2 0 1 1 0\n3\n1 0 0\n4\n1 1 0\n5\n1 0 0\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\\n0 0 1 0 1 0 1\") == \"2\"\nassert solution(\"2\\n2\\n0 0\") == \"1\"\nassert solution(\"3\\n3\\n1 0\") == \"0\"\nassert solution(\"4\\n4\\n0 0 0 0\") == \"1\"\nassert solution(\"5\\n5\\n1 0 0 1 0\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"4\"\nassert solution(\"7\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '0'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''\n10\n0 1 2 3 4 5 6 7 8 9 10\n5\n1 1 1 1 1 1 1 1 1\n6\n1 1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1 1\n8\n1 1 1 1 1 1 1 1 1\n9\n1 1 1 1 1 1 1 1 1\n10\n1 1 1 1 1 1 1 1 1\n''') == '4'\nassert solution('''\n5\n1 1 1 1 1 1 1 1\n6\n1 1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1\n8\n1 1 1 1 1 1 1 1\n9\n1 1 1 1 1 1 1 1\n10\n1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n7\n0 0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 1\n5\n1 1 0 0 1\n''') == '4'\nassert solution('''\n2\n1 0\n4\n1 1\n5\n1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\nassert solution(input()) == '4'\nassert solution(input()) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '2'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '4'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '1'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '0'\nassert solution('''\n5\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() in [\"abcdaabc\", \"bababc\", \"abc\"]\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 3\n3 3\n5 2\n7 6\n1 1\n3 4\n6 2\n''') == 'cbcacab'\nassert solution('''\n10 2\n5 1\n4 1\n''') == 'abcd'\nassert solution('''\n10 1\n4 1\n''') == 'baabab'\nassert solution('''\n10 1\n''') == 'cbcaca'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n5 7\n4 6\n1 2\n1 3''') == 'acdbcac'\nassert solution('''4 4\n4 7\n6 2\n1 2\n1 3''') == 'abcd'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"cbcacab\"\nassert solution(\"4\") == \"abcd\"\nassert solution(\"6\") == \"baabab\"\n\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() in [\"cbcacab\", \"abcd\", \"baabab\"]\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"cbcacab\"\nassert solution(\"4\") == \"abcd\"\nassert solution(\"6\") == \"baabab\"\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n7 3\n4 4\n6 2\n\"\"\") == \"abcd\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"abcd\"\n\nassert solution(\"\"\"\n2\n4 3\n3 2\n\"\"\") == \"baabab\"\n\nassert solution(\"\"\"\n4\n4 4\n4 4\n3 2\n\"\"\") == \"baabab\"\n\nassert solution(\"\"\"\n2\n3 5\n3 6\n\"\"\") == \"bcbcaa\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"aba\"\nassert solution(\"4 4\") == \"ababab\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n4 4\\n2 5\") == \"abcd\"\nassert solution(\"5 4\\n5 5\\n4 4\") == \"abcd\"\nassert solution(\"5 5\\n5 5\\n4 4\") == \"abcd\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"aba\"\nassert solution() == \"bb\"\nassert solution() == \"aa\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\nassert solution('''\n1\n10\n1 1 1 1 1 1 1 1 1 1\n2\n1 1 1\n''') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('''\n1\n10\n1 1 1 1 1 1 1 1 1 1\n2\n1 1 1\n''') == '1 1 1 1 1 1 1 1 1 1'\nassert solution('''\n1\n10\n1 1 1 1 1 1 1 1 1 1\n2\n1 1 1\n''') == '1 1 1 1 1 1 1 1 1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '2 23 21'\nassert solution('''\n1\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '3 23 21'\nassert solution('''\n1\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '2 23 21'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\n10\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n\n''') == '23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 23 21'\nassert solution('''\n1\n7\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '1 1000 0'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 45 46'\nassert solution('''\n1\n7\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '1 1000 0'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n''') == '6 45 46'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '4 23 21'\nassert solution('''\n5\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '4 23 21'\nassert solution('''\n5\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '4 23 21'\nassert solution('''\n10\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '4 23 21'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1 1 1 1\n''') == '6 23 21\\n1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3\\n4 4 3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '23 21'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '13 21'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '0 0'\nassert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '21'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\n\n'''\n--- Part Two ---\nAlice and Bob take turns playing a game, with Alice starting first.\n\nIf a player starts out tied with the others, each player keeps alternating, alternating between playing that player's color and the other player's color.\n\nFor example, if R, G, and B represent Alice, Bob, and Carol (R = red, G = green, and B = blue),\nthen R plays first, alternating between playing R and B, then G, alternating between playing G and B, and so on.\n\nAlice and Bob take turns, alternating between each other.\nIf both players play optimally, every turn is played exactly once, and Alice and Bob get alternating colors forever.\n\nFor example, if R, G, and B represent Alice, Bob, and Carol (R = red, G = green, and B = blue),\nthen\nAlice plays red, then plays red, then plays G, and so on.\n\nHow many times does Alice and Bob play optimally?\n'''\n\nimport itertools\nfrom math import prod\nfrom functools import reduce\nfrom collections import deque\n\nimport aoc\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n\n\"\"\") == \"6 23 21\"\nassert solution(\"\"\"\n2\n3\n1 2\n7\n1 2 3\n\n\"\"\") == \"1 2 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nassert solution('''\n5\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '7'\nassert solution('''\n5\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '0'\nassert solution('''\n5\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '27'\nassert solution('''\n5\n1 1\n1 2\n1 3\n1 4\n1 5\n1 6\n''') == '39'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"27\"\nassert solution(\"\"\"\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"39\"\nassert solution(\"\"\"\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"11\"\nassert solution(\"\"\"\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"17\"\nassert solution(\"\"\"\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n\"\"\") == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '13'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4 5\\n1 2 5 4 3\\n3 4') == '6'\nassert solution('2 1\\n1 2\\n3 4') == '27'\nassert solution('2 1\\n1 2\\n3 4') == '39'\nassert solution('2 4\\n1 2 3 4\\n5 6') == '11'\nassert solution('4 4\\n1 2 3 4\\n5 6') == '17'\n",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '27'\nassert solution(input()) == '39'\nassert solution(input()) == '11'\nassert solution(input()) == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 1\n1 2\n3 4''') == '6'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5''') == '39'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3''') == '11'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3''') == '17'\nassert solution('''2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 2 1\n4 4 5 4''') == '27'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 2\\n7 6 18 6 16 18 1 17 17\\n6 9 3 10 9 1 10 1 5\\n\") == \"0 7 13 18 24 35 36 37 40 45\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 2\\n7 6 18 6 16 18 1 17 17') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1\\n3 2 3 1 3 3 1 4 1') == '0 2 4 7 8 11 13 14 16 17'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n\nassert solution('''\n10 10\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n\nassert solution('''\n10 5\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0 7 13 18 24 35 36 37 40 45\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('100 3') == '0 2 4 8 16'\nassert solution('10 1') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('10 5') == '0 2 4 7 8 11 13 14 16 17 18 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 7",
        "num_ids_2": 40,
        "num_ids_4": 75
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 2\n6 6 6 6\n1 2 1 2 2\n''') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n8 3\n4 4 5 5 5 5 5 4\n3 3 3 3 3 3 2 2\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n5 1\n2 2 1 1 2\n''') == '0 2 4 7 8 11 13 14 16 17'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == stdin\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n7\n6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5''') == '1318243536374045'\nassert solution('''10\n2\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3''') == '0 7 13 18 24 35 36 37 40 45'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100\") == \"aaabb\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"baaba\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"aaabb\"\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100') == 'aaabb'\nassert solution('5 1\\n5 2\\n5 8\\n5 10\\n3 1\\n3 2\\n20 100') == 'aabab'\n\"\"\"\nimport sys",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"aabab\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == \"aaabb\"\nassert solution(\"5 2\") == \"aabab\"\nassert solution(\"5 8\") == \"baaba\"\nassert solution(\"5 10\") == \"bbaaa\"\nassert solution(\"3 1\") == \"aaaaabaaaaabaaaaaaaa\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == \"aabb\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa', 'First'\nassert solution('''\n7 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaaaabaaaaabaaaaaaaa', 'Second'\nassert solution('''\n7 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'ababa', 'Third'\nassert solution('''\n7 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'bbaaa', 'Fourth'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"aabb\"\nprint(solution())\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n4\n5 1\n5 2\n5 8\n5 10\n\"\"\") == \"aaabb\"\nassert solution(\"\"\"\n1\n3 2\n5 1\n5 2\n\"\"\") == \"aaaaabaaaaabaaaaaaaa\"\nassert solution(\"\"\"\n7\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n\"\"\") == \"baaba\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n5 1\n5 3 4\n2 2\n''') == '1'\nassert solution('''\n10 1\n4 5 4 5 4\n4 1 4 1\n''') == '1'\nassert solution('''\n7 1\n3 4 4 5 2\n1 2 2\n''') == '1'\nassert solution('''\n20 1\n19 19 19 19 19\n1 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2\n2 2",
        "num_ids_2": 13,
        "num_ids_4": 25
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\n1\n5\n10\n1000000000\n1000000000\n5\n10\n1000000000\n1000000000\n5\n10\n1000000000\n1000000000\n5\n10\n''') == \"5\"\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"5\"\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"0\"\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == \"1\"\n\nassert solution('''\n5\n6\n10\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n5\n1000000000\n1000000000\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''\n6\n1\n5\n10\n15\n20\n''') == '10'\nassert solution('''\n10\n1\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10''') == '6'\nassert solution('''6 3\n1 1 2 3 5 6 7\n1 1 2 5 7 8 9 10\n2 1 3 7 9 11 12 13\n1 1 2 3 5 6 7''') == '2'\nassert solution('''4 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6\n1 2 3 4 5 6''') == '4'\nassert solution('''4 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n\n'''\nNote: In the above example, both platforms are placed correctly but there's only one point left. It can be proven that there are always more points left.\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''\n2 4\n1 1\n3 5\n6 7\n10 10\n1 3\n1 2\n''') == '1'\nassert solution('''\n3 2\n1 5\n4 9\n6 8\n''') == '1'\nassert solution('''\n1\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''\n10 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\nassert solution('''\n1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''\n10 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == '2'\nprint(solution(input_))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n\"\"\") == \"6\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '1'\nassert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '6'\nassert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '5'\nassert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '10'\nassert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10') == '0'\n",
        "num_ids_2": 100,
        "num_ids_4": 200
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3') == \"1\"\nassert solution('4 3') == \"0\"\nassert solution('1') == \"0\"\nassert solution('0') == \"0\"\nassert solution('3') == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\\n4\\n4\\n7\\n\"\n\nassert solution(\"4 3\\n1\\n2\\n1\\n2\\n\") == \"0\\n0\\n0\\n0\\n\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '7 3\\n'\n    '0\\n'\n    '1\\n'\n    '2\\n'\n    '2\\n'\n    '0\\n'\n    '0\\n'\n    '10') == '1\\n2\\n3\\n4\\n4\\n7\\n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 3\n0\n1\n2\n2\n0\n0\n10\n''') == '1'\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == '0'\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == '0'\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == '0'\nassert solution('''\n4 3\n1\n2\n1\n2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n') == '1\\n2\\n3\\n4\\n4\\n'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('5 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('6 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0\\n'\nassert solution('7 3\\n0\\n0\\n0\\n0\\n') == '1\\n2\\n3\\n4\\n4\\n'\n",
        "num_ids_2": 75,
        "num_ids_4": 147
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"2 0\") == \"2\"\n\nstdin = \"\"\"\n4 3\n1\n2\n1\n2\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0') == '1'\nassert solution('4 3\\n1\\n2\\n1\\n2') == '0'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n1\\n2') == '0'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '0'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2\\n1\\n2') == '0'",
        "num_ids_2": 52,
        "num_ids_4": 116
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 49 20 40 30 50 10 26 32 20 38 44 50 10'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n3 4 5\\n5 6 7') == '2 4\\n6 5\\n6 7'\nassert solution('2 3 4\\n3 5 6\\n5 6 7') == '2 4\\n2 5\\n3 4 6\\n3 5 6 7'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1 2\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == \"1 2 20 40 30 50 10 26 32 20 38 44 50 1 10 13 4 19 22 25 16 7\"\nassert solution('''\n1\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == \"1 20 50 6 20 50 5 3 8 9 13 22 1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 49 20 40 30 50 10\\n26 32 20 38 44 50 10\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 \\n20 40 30 50 10 \\n26 32 20 38 44 50 \\n8 23 18 13 3 \\n1 10 13 4 19 22 25 16 7 \\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49\\n20 40 30 50 10\\n26 32 20 38 44 50 \\n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 1\n''') == '1 1 1'\n\nassert solution('''\n6\n1 20 50\n2 20 50\n3 20 50\n5 20 50\n6 20 50\n''') == '6 20 50 20 40 30 50 10 26 32 20 38 44 50 8 23 18 13 3 1 10 13 4 19 22 25 16 7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22') == '1 49 20 40 30 50 10\\n26 32 20 38 44 50 10\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7'\nassert solution('5 12\\n25 23') == '5 12 25 23 12 12\\n5 12 25 23 12 12'",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 \n20 40 30 50 10\n26 32 20 38 44 50 \n8 23 18 13 3 \n1 10 13 4 19 22 25 16 7\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 1 49\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\\n\") == \"1 49\\n20 40 30 50 10\\n26 32 20 38 44 50\\n8 23 18 13 3\\n1 10 13 4 19 22 25 16 7\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n3 3 1 2\n\"\"\") == \"1 2 3\"\n\nassert solution(\n\"\"\"\n3 3 1\n\"\"\") == \"1 2 3\"\n\nassert solution(\n\"\"\"\n3\n\"\"\") == \"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\nhttps://www.hackerrank.com/challenges/sorting-containers-of-dynamic-sized-lists/problem\n\"\"\"\n\nimport heapq\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\nassert solution('9 9 9') == '9 8 7 6 5 4 3 2 1'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3 1 2''') == '1 2 3'\nprint(solution('''3 3 1 2'''))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"\nassert solution(\"3 3 1 2 1 1 1 1\") == \"1 1 1 1 2 3\"\nassert solution(\"10 3 2 1 1 3 4 5 6 7 8 9 10\") == \"1 2 3 4 5 6 7 8 9 10 10 9 8 7 6 5 4 3 2 1\"\nassert solution
        "num_ids_2": 37,
        "num_ids_4": 1832
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('3 1 2') == '1 2 3'\nassert solution('2 3 1') == '1 2 3'\nassert solution('4 3 2 1') == '1 2 3 4'\nassert solution('4 3 2 1 5') == '1 2 3 4 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"1 2 3\"\n\n\"\"\"\n\na,n=map(int,input().split())\n\nA=list(map(int,input().split()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n3\") == \"NO\"\nassert solution(\"2\\n4\") == \"YES\"\nassert solution(\"3\\n5\") == \"YES\"\nassert solution(\"3\\n4\") == \"NO\"\nassert solution(\"4\\n5\") == \"YES\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\nassert solution('''\n3\n4 6\n3 4 1\n6\n1 1 2\n''') == 'NO'\n\nassert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES', solution.__doc__\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2 3\\n4') == 'YES\\n'\nassert solution('3\\n3 3 3\\n4') == 'NO\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 3\\n4') == 'NO'\nassert solution('5\\n2 3\\n4') == 'YES'\nassert solution('5\\n3 3\\n4') == 'NO'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3\n5\n10\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"6\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4') == '3 1 4 2', \"Example\"\nassert solution('2\\n5') == '2 3 4 5 1', \"Example\"\nassert solution('3\\n4') == '1 3 2 4', \"Example\"\nassert solution('4\\n5') == '4 5 3 1 2', \"Example\"\nassert solution('5\\n6') == '1 2 5 3 4 6', \"Example\"\n",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"9 6 10 8 4 7 3 1 5 2\", \"Wrong\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n10') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('5\\n7') == '5 3 6 2 4 1 7'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\n2\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"4\\n3\") == \"3 1 4 2\"\nassert solution(\"6\\n8\") == \"8 7 6 5 4 3 2 1\"",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 2 3 4 5','solution failed'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('10') == '3 1 4 2 \nassert solution('4') == '5 3 6 2 4 1'\nassert solution('6') == '5 1 3 6 2 4 7 3 1 5 2'\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2\n''') == '3 2 1 5 4'\nassert solution('''\n5\n4\n''') == '4 2 5 3 1'\nassert solution('''\n6\n5\n''') == '6 5 3 4 2 1'\nassert solution('''\n7\n''') == '7 5 4 3 1 2 6'\nassert solution('''\n8\n''') == '8 5 6 4 3 2 1 7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '3 1 4 2'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n2\n1\n4\n4\n5\n6\n1\n2\n3\n\"\"\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"\"\"\n1\n0\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n5\n1\n4\n3\n2\n\"\"\") == \"5 1 4 3 2\"\nassert solution(\"\"\"\n10\n1\n\"\"\") == \"5 1 4 3 2\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n2\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n\"\"\"\n    ) == \"1\"\n    assert solution(\n\"\"\"\n2\n5\n2 5 8 1 4\n4\n1 5 8 4 2\n\"\"\"\n    ) == \"1\"\n    assert solution(\n\"\"\"\n2\n3\n0 1\n2\n\"\"\"\n    ) == \"2\"\n    assert solution(\n\"\"\"\n3\n3\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n\"\"\"\n    ) == \"3\"\n    assert solution(\n\"\"\"\n1\n1\n0\n\"\"\"\n    ) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n3 2 7 6\\n3\") == \"1\"\nassert solution(\"4\\n4 9 2 1 18 3 0\\n3\") == \"0\"\nassert solution(\"4\\n4 9 2 1 18 3 0\\n1\") == \"1\"\nassert solution(\"4\\n4 9 2 1 18 3 0\\n0\") == \"1\"\n",
        "num_ids_2": 41,
        "num_ids_4": 85
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n\") == \"1\\n1\\n0\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n\") == \"2\\n1\\n-1\\n0\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\\n\") == \"2\\n1\\n-1\\n0\"\n",
        "num_ids_2": 110,
        "num_ids_4": 167
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '2'\n\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '1'\n\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0''') == '-1'\n\nassert solution('''5\n5\n0 4 9 3 2 1 7 6\n3\n4\n6\n0\n6\n3\n7\n4\n8\n5\n2\n9\n6\n0\n1\n''') == '1'\n\nassert solution('''5\n5\n0 4 9 3 2 1 7 6\n3\n4\n6\n0\n6\n3\n7\n4\n8\n5\n2\n9\n6\n0\n1\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 7 6') == '1'\nassert solution('4') == '2'\nassert solution('4 5') == '-1'\nassert solution('5') == '0'\nassert solution('5 6') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n3 2 7 6\\n3\\n3 2 6\") == \"1\"\nassert solution(\"4\\n4\\n3 2 6\") == \"0\"\nassert solution(\"4\\n3\\n3 2 6\") == \"1\"\nassert solution(\"4\\n5\\n3 2 7 6\") == \"0\"",
        "num_ids_2": 45,
        "num_ids_4": 82
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"2\"\nassert solution(\"4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"1\"\nassert solution(\"3\\n5\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == \"0\"\n",
        "num_ids_2": 90,
        "num_ids_4": 135
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(t) == \"1\"\nassert solution(t) == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5\n2 3 4 6\n3\n4 6\n3\n7''') == '2'\n\nassert solution('''4\n5\n2 3 4 6\n3\n4 6\n3\n7''') == '1'\n\nassert solution('''4\n5\n2 3 4 6\n3\n4 6\n3\n7''') == '0'\n\nassert solution('''1\n1\n1\n1''') == '-1'\n\nassert solution('''4\n5\n2 3 4 6\n3\n4 6\n3\n7''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0 1 1 1 0 0 0 0 1\\n1 2') == '2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n    4\n    0 1 1 1 0 0 0 0 1\n    1 2\n    1 3\n    3 4\n    3 5\n    2 6\n    4 7\n    6 8\n    5 9\n    \"\"\") == \"2 2 2 2 2 1 1 0 2\"\nassert solution(\"\"\"\n    5\n    0 0 1 0\n    1 2\n    1 3\n    3 4\n    3 5\n    2 6\n    4 7\n    6 8\n    5 9\n    \"\"\") == \"0 -1 1 -1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2 2 2 2 2 1 1 0 2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 1 1 0 2'\nassert solution('''\n6\n0 0 1 0 0 0 0\n1 2\n1 3\n1 4\n2 5\n3 6\n3 7\n''') == '2 -1 1 -1 1 2 1 0 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2 2 2 2 2 1 1 0 2'\nprint(solution())\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n5\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\"\"\"\n) == \"\"\"2 2 2 2 2 1 1 0 2 \"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4\n0 0 1 0\n1 2\n1 3\n1 4''') == '2 2 2 2 1 1 0 2'\nassert solution('''6\n0 0 1 0 0 0 0 0\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9''') == '2 2 2 2 1 1 0 2 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1 1 -1 0 2 1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n0 1 1 1 0 0 0 0 1\\n1 2\\n1 3\\n3 4\\n3 5\\n2 6\\n4 7\\n6 8\\n5 9\\n\") == \"2 2 2 2 2 1 1 0 2 \"\nprint(solution(input()))\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2 2 2 2 2 1 1 0 2'\nassert solution() == '0 -1 1 -1'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n9\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2 '\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1 '\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n9\\n15\\n\") == \"2\"\nassert solution(\"4\\n8\\n16\\n\") == \"0\"\nassert solution(\"5\\n10\\n20\\n\") == \"-1\"\nassert solution(\"6\\n9\\n15\\n\") == \"3\"\nassert solution(\"7\\n18\\n27\\n\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '0'\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '36'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\") == \"0\"\nassert solution(\"1\") == \"-\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"-\"\nassert solution(\"12\") == \"12\"\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2\\n5\\n1\") == \"2\"\nassert solution(\"10\\n2\\n8\\n3\\n7\") == \"0\"\nassert solution(\"1\\n3\\n10\\n4\") == \"3\"\nassert solution(\"1\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n1\") == \"1\"\n",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"36\"\nassert solution(\"12345\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''6\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '2'\nassert solution('''5\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"36\"\nassert solution(\"12345\") == \"36\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1\n2\n3\n''') == '-1'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '36'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '2'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '36'\n\nassert solution('''\n7\n1\n2\n3\n12\n12345\n15116544\n387420489\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"G\") == \"1\"\nassert solution(\"RGB\") == \"3\"\nassert solution(\"GBG\") == \"2\"\nassert solution(\"GBGBGB\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"BGGGG\") == \"3\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"RBRGR\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '0'\nassert solution('8 1\\nBBBBBBBBBBBB\\n5 3\\nRRRRRRRRRR\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB') == '1'\nassert solution('8 10\\nBBBBBBBBBBBB\\n5 3\\nRRRRRRRRRR\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB') == '2'\nassert solution('6 10\\nBBBBBBBBBBBB\\n5 3\\nRRRRRRRRRR\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB') == '0'\nassert solution('2 10\\nBBBBBBBBBBBB\\n5 3\\nRRRRRRRRRR\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB\\n5 5\\nBBBBBBBBBBBB') == '1'\n",
        "num_ids_2": 135,
        "num_ids_4": 339
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 5\nRGRGB\n''') == '1'\nassert solution('''\n10 5\nRBGB\n''') == '2'\nassert solution('''\n10 5\nRGGB\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\nBGBR\n3\nRGGG\n4\nRGG\n5\nRG\n6\nGGR\n7\nGGR\n8\nGG\n9\nGG\n10\nGG\n11\nGGG\n12\nGGG\n13\nG\n14\nGG\n15\nGGG\n16\nGGG\n17\nGG\n18\nGGR\n19\nGGR\n20\nG\n21\nGGR\n22\nGGR\n23\nGGG\n24\nGGG\n25\nGGR\n26\nGGG\n27\nGGG\n28\nGGG\n29\nGGG\n30\nGGG\n31\nGGG\n32\nGGG\n33\nGGG\n34\nGGG\n35\nGGG\n36\nGGG\n37\nGGG\n38\nGGG\n39\nGGG\n40\nGGG\n41\nGGG\n42\nGGG\n43\nGGG\n44\nGGG\n45\nGGG\n46\nGGG\n47\nGGG\n48\nGGG\n49\nGGG\n50\nGGG\n51\nGGG\n52\nGGG\n53\nGGG\n54\nGGG\n55\nGGG\n56\nGGG\n57\nGGG\n58\nGGG\n59\nGGG\n60\nGGG\n61\nGGG\n62\nGGG\n63\nGGG\n64\nGGG\n65\nGGG\n66\nGGG\n67\nGGG\n68\nGGG\n69\nGGG\n70\nGGG\n71\nGGG\n72\nGGG\n73\nGGG\n74\nGGG\n75\nGGG\n76\nGGG\n77\nGGG\n78\nGGG\n79\nGGG\n80\nGGG\n81\nGGG\n82\nGGG\n83\nGGG\n84\nGGG\n85\nGGG\n86\nGGG\n87\nGGG\n88\nGGG\n89\nGGG\n90\nGGG\n91\nGGG\n92\nGGG\n93\nGGG\n94\nGGG\n95\nGGG\n96\nGGG\n97\nGGG\n98\nGGG\n99\nGGG\n100\nGGG\n101\nGGG\n102\nGGG\n103\nGGG\n104\nGGG\n105\nGGG\n106\nGGG\n107\nGGG\n108\nGGG\n109\nGGG\n110\nGGG\n111\nGGG\n112\nGGG\n113\nGGG\n114\nGGG\n115\nGGG\n116\nGGG\n117\nGGG\n118\nGGG\n119\nGGG\n120\nGGG\n121\nGGG\n122\nGGG\n123\nGGG\n124\nGGG\n125\nGGG\n126\nGGG\n127\nGGG\n128\nGGG\n129\nGGG\n130\nGGG\n131\nGGG\n132\nGGG\n133\nGGG\n134\nGGG\n135\nGGG\n136\nGGG\n137\nGGG\n138\nGGG\n139\nGGG\n140\nGGG\n141\nGGG\n142\nGGG\n143\nGGG\n144\nGGG\n145\nGGG\n146\nGGG\n147\nGGG\n148\nGGG\n149\nGGG\n150\nGGG\n151\nGGG\n152\nGGG\n153\nGGG\n154\nGGG\n155\nGGG\n156\nGGG\n157\nGGG\n158\nGGG\n159\nGGG\n160\nGGG\n161\nGGG\n162\nGGG\n163\nGGG\n164\nGGG\n165\nGGG\n166\nGGG\n167\nGGG\n168\nGGG\n169\nGGG\n170\nGGG\n171\nGGG\n172\nGGG\n173\nGGG\n174\nGGG\n175\nGGG\n176\nGGG\n177\nGGG\n178\nGGG\n179\nGGG\n180\nGGG\n181\nGGG\n182\nGGG\n183\nGGG\n184\nGGG\n185\nGGG\n186\nGGG\n187\nGGG\n188\nGGG\n189\nGGG\n190\nGGG\n191\nGGG\n192\nGGG\n193\nGGG\n194\nGGG\n195\nGGG\n196\nGGG\n197\nGGG\n198\nGGG\n199\nGGG\n200\nGGG\n201\nGGG\n202\nGGG\n203\nGGG\n204\nGGG\n205\nGGG\n206\nGGG\n207\nGGG\n208\nGGG\n209\nGGG\n210\nGGG\n211\nGGG\n212\nGGG\n213\nGGG\n214\nGGG\n215\nGGG\n216\nGGG\n217\nGGG\n218\nGGG\n219\nGGG\n220\nGGG\n221\nGGG\n222\nGGG\n223\nGGG\n224\nGGG\n225\nGGG\n226\nGGG\n227\nGGG\n228\nGGG\n229\nGGG\n230\nGGG\n231\nGGG\n232\nGGG\n233\nGGG\n234\nGGG\n235\nGGG\n236\nGGG\n237\nGGG\n238\nGGG\n239\nGGG\n240\nGGG\n241\nGGG\n242\nGGG\n243\nGGG\n244\nGGG\n245\nGGG\n246\nGGG\n247\nGGG\n248\nGGG\n249\nGGG\n250\nGGG\n251\nGGG\n252\nGGG\n253\nGGG\n254\nGGG\n255\nGGG\n256\nGGG\n257\nGGG\n258\nGGG\n259\nGGG\n260\nGGG\n261\nGGG\n262\nGGG\n263\nGGG\n264\nGGG\n265\nGGG\n266\nGGG\n267\nGGG\n268\nGGG\n269\nGGG\n270\nGGG\n271\nGGG\n272\nGGG\n273\nGGG\n274\nGGG\n275\nGGG\n276\nGGG\n277\nGGG\n278\nGGG\n279\nGGG\n280\nGGG\n281\nGGG\n282\nGGG\n283\nGGG\n284\nGGG\n285\nGGG\n286\nGGG\n287\nGGG\n288\nGGG\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"0\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BGBGBGGBGBGB\") == \"0\"\nassert solution(\"GGGGBGBGBGB\") == \"2\"\nassert solution(\"RBGBGBGBGB\") == \"2\"\nassert solution(\"RBGBGBGBGBG\") == \"3\"\n\n'''\n",
        "num_ids_2": 31,
        "num_ids_4": 60
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == \"3\"\n\nassert solution('''\n3\n5 4\nBBRG\n5 3\nBBBB\n''') == \"1\"\n\nassert solution('''\n2\n7 1\nRGG\n''') == \"0\"\n\nassert solution('''\n10\n6 9\nBBBBR\n6 9\nBBBBBR\n''') == \"0\"\n\nassert solution('''\n12\n5 7\nRRRRGGGGB\n5 9\nBBBBBBRG\n''') == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\\nBGGGG\") == \"0\"\nassert solution(\"5 3\\nRBRGR\") == \"3\"\nassert solution(\"5 5\\nBBBRR\") == \"3\"",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"7\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\nassert solution('''7\n1 1 1 1 1 2 2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3\n3 1 2 3 1''') == '3'\nassert solution('''1\n5\n3 1 2 3 1''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"3\"\nassert solution(\"7\") == \"3\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n\n'''\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2') == '3'\nprint(solution('3\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2'))\n\n\n=======",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 1 3 2') == '1 5 2 4 3'\nassert solution('4') == '1 2 3 4'\nassert solution('4') == '1 4 3 2'\n",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2 4 3') == '1 2 3 4 5'\nassert solution('4') == '1 2 3 4'\nassert solution('4 4 1 2') == '1 2 3 4'\n",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 5 2 4 3!\"\nassert solution(\"4\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\") == \"1 2 4 3 5!\"\n\n\n'''\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n5 4 1 3 2\") == \"1 5 2 4 3\"\nassert solution(\"4\\n4 3 2 1\") == \"1 2 3 4\"\nassert solution(\"3\\n3 2 1\") == \"1 2 3\"\n",
        "num_ids_2": 40,
        "num_ids_4": 57
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n5\\n5 4 1 3 2\\n4\\n1 2 4 3\") == \"1 5 2 4 3\"\nassert solution(\"4\\n3\\n3 4 1 2\") == \"1 2 3 4\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3 ",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1 2 3 4 5'\nassert solution() == '1 2 3 4 5'\nassert solution() == '1 2 3 4 5'\nassert solution() == '1 2 3 4 5'\n\n\n\nsolution('''\n4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3'\nsolution('''\n5\n3 2 1 4 5\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nsolution('''\n5\n3 2 1 4 5\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nsolution('''\n5\n3 2 1 4 5\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nsolution('''\n5\n1 2 3 4 5\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nsolution('''\n5\n1 2 3 4 5\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nsolution('''\n5\n1 2 3 4 5\n4\n1 2 3 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 4 3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''6\n5\n4 1 3 2 5\n4\n1 2 3 5 4\n1\n1\n4\n4 3 2 1\n''') == '1 2 3 4 5'\nassert solution('''3\n4\n1 2\n1\n3\n''') == '1 2 3'\nassert solution('''10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n''') == '1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\n\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n5\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4') == 'YES'\nassert solution('3\\n2\\n1\\n4') == 'NO'\nassert solution('5\\n5\\n1 2 3 4\\n3\\n1 3 2') == 'YES'\nassert solution('5\\n5\\n1 2 3 5 4') == 'YES'\n",
        "num_ids_2": 56,
        "num_ids_4": 103
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4''') == 'YES'\n\nassert solution('''5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'NO'\nassert solution('''5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'YES'\nassert solution('''5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 2 1\n5\n1 2 3 5 4\n''') == \"YES\"\nassert solution('''\n1\n2\n''') == \"NO\"\nassert solution('''\n3\n3 2 1\n5\n1 2 3 5 4\n''') == \"YES\"\nassert solution('''\n3\n4 2 1\n5\n1 2 3 5 4\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4') == 'YES\\nYES\\nNO\\nYES\\nYES'\nassert solution('5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4') == 'YES\\nYES\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3\n2\n1 3 2\n4\n1 2 3 4\n5\n1 2 3 5 4\n\"\"\") == \"YES\"\nassert solution(\n    \"\"\"\n3\n5\n1 2 3 4\n2 3 1 4 5\n3 5 2 1 4\n\"\"\") == \"NO\"\nassert solution(\n    \"\"\"\n3\n5\n1 2 3 4\n2 3 1 4 5\n3 5 2 1 4\n\"\"\") == \"YES\"\nassert solution(\n    \"\"\"\n3\n5\n1 2 3 4\n1 2 3 4 5\n3 5 2 1 4\n\"\"\") == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\\n5\\n1 2 3 5 4\\n1\") == \"NO\"\n",
        "num_ids_2": 80,
        "num_ids_4": 160
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n2\n3\n1 2 3\n3\n1 2 3\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n\"\"\"\n) == \"YES\\nYES\\nNO\\nYES\\nYES\\nYES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '75015'\nassert solution('100000 50010') == '75015'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5'\nassert solution('5 1\\n1 2\\n1 2\\n2 2\\n2 2\\n3 2\\n') == '3'\nassert solution('3 1\\n2 1\\n2 1\\n3 1\\n') == '3'\n",
        "num_ids_2": 62,
        "num_ids_4": 87
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 2\") == \"18\"\nassert solution(\"5 2\") == \"10\"\nassert solution(\"5 2\") == \"6\"\nassert solution(\"5 2\") == \"75015\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"4\\n15 7\\n7 5\\n10 5\\n7 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10 5\\n10",
        "num_ids_2": 1302,
        "num_ids_4": 1302
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 2') == '18'\nassert solution('5 2') == '10'\nassert solution('5 2') == '6'\nassert solution('5 2') == '75015'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '6'\nassert solution('100000 50010') == '75015'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\nassert solution('''5 1\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"19 4\") == \"18\"\nassert solution(\"12 7\") == \"10\"\nassert solution(\"6 2\") == \"75015\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '75015'\nassert solution('100000 50010') == '75015'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5'\nassert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '18'\nassert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '10'\nassert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '75015'\n",
        "num_ids_2": 58,
        "num_ids_4": 117
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n3 5\n''') == 'YES'\nassert solution('''\n4\n6 4\n''') == 'NO'\nassert solution('''\n7\n8 8\n''') == 'YES'\nassert solution('''\n9\n10 9\n''') == 'NO'\nassert solution('''\n10\n4 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('''\n1\n5 7\n5 5\n5 5 5 5 5 5 5 5\n''') == 'YES\\n'\nassert solution('''\n2\n1 1\n1 2\n''') == 'YES\\n'\nassert solution('''\n2\n1 1\n1 1\n''') == 'YES\\n'\nassert solution('''\n3\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO\\nNO\\nYES\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nYES\\nNO\\nYES\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\nNO\\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n7\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution(\n'''\n1\n2\n4\n\n''') == 'NO\\n'\n\nassert solution(\n'''\n8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution(\n'''\n7\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'\n\nassert solution(\n'''\n7\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 3\") == \"YES 2 2 2\", \"Should be YES 2 2 2\"\nassert solution(\"100 4\") == \"YES 4 4 4\", \"Should be YES 4 4 4\"\nassert solution(\"8 7\") == \"YES 7 7 7\", \"Should be YES 7 7 7\"\nassert solution(\"97 2\") == \"NO\", \"Should be NO\"\nassert solution(\"8 8\") == \"YES 8 8 8\", \"Should be YES 8 8 8\"\n",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == 'YES'\nassert solution('10 3') == '4 2 4'\nassert solution('100 4') == '55 5 5 35'\nassert solution('8 7') == 'NO'\nassert solution('97 2') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES'\nassert solution('''1\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO'\nassert solution('''1\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8') == 'YES 4 2 4\\nYES 55 5 5 35\\nNO\\nYES 11111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8') == 'YES 4 2 4\\nYES 55 5 5 35\\nNO\\nYES 11111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8') == 'YES 4 2 4\\nYES 55 5 5 35\\nNO\\nYES 11111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8') == 'YES 4 2 4\\nYES 55 5 5 35\\nNO\\nYES 11111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nassert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8') == 'YES 4 2 4\\nYES 55 5 5 35\\nNO\\nYES 11111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\n",
        "num_ids_2": 143,
        "num_ids_4": 283
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\nassert solution('''10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9''') == \"YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES'\nassert solution('''7\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO'\nassert solution('''4\n10 2\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO'\nassert solution('''6\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES'\nassert solution('''2\n2 3\n10 2\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\\n'''\n\n'''\nThe logic behind this problem is simple. We are given a positive integer $n$ and $k$. The answer to the problem is guaranteed if there are integers $a_i$ such that all $a_i > 0$, $n = a_1 + a_2 + \\ldots + a_k$ and either all $a_i$ are even or all $a_i$ are odd at the same time.\n\nIf $a_i$ is even, then all $a_i$ have the remainder 0 when divided by 2. If $a_i$ is odd, then all $a_i$ have the remainder 1 when divided by 2.\n\nWe can represent this by a series of expressions:\n\n$n = x + y$\n$x = (n - y) / 2$\n$y = (n + x) / 2$\nNow, we can find the value of each of these expressions, and if they are equal to the same value, then there is a solution.\n\nFor each case, we can determine the value of the expression, and see if it equals to the same value of the other expressions.\n\nFor each value of $x$ or $y$, we can calculate the value of $y$ using the same logic.\n\nWe will repeat this process till we get a valid answer.\n\nIf we get an invalid answer, then it means there is no solution.\n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n5\n1 5 5 5\n1 100 100 100 100\n10000000000000000 10000000000000000 10000000000000000\n123 45\n''') == '55'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4\\n1 10 100\\n10000000000000000 10000000000000000\\n23 34 45') == '55\\n15000000000000000\\n51\\n'\nassert solution('4') == '2\\n2\\n2\\n'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4\\n55\\n15000000000000000\\n51'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n3\n4\n''') == '2'\nassert solution('''1\n1\n2\n3\n''') == '3'\nassert solution('''1\n2\n1\n1\n''') == '2'\nassert solution('''3\n1\n1\n2\n''') == '2'\nassert solution('''3\n3\n1\n2\n''') == '1'\n\nprint(solution('''\n1\n1\n1\n1\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"45\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == ''\nassert solution(\"1\") == ''\nassert solution(\"2\") == ''\nassert solution(\"3\") == ''",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\n\nassert solution('''\n1 2 1\n1 10 100\n''') == '2'\n\nassert solution('''\n1 2 3\n1 10 100\n''') == '0'\n\nassert solution('''\n1 2 5\n1 10 100\n''') == '5'\n\nassert solution('''\n1 1 3\n1 10 100\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n1 20 4\n1 30 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n2 1 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n''') == '51'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 4') == '55\\n51\\n45\\n'\nassert solution('1 10 100') == '55\\n51\\n45\\n'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '55\\n51\\n45\\n'\n",
        "num_ids_2": 40,
        "num_ids_4": 65
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\nassert solution('''\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '10'\nassert solution('''\n7 1000\nabczgyo\n3 6\naaa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '5'\nassert solution('''\n20 10\naaa\n3 6\nabcbac\n5 4\nababa\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '4'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3') == \"3\"\nassert solution('6 3') == \"3\"\nassert solution('7 1000') == \"10\"\nassert solution('5 4') == \"4\"\nassert solution('abcbac') == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"6\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3'\nassert solution('3 3') == '3'\nassert solution('4 1') == '2'\nassert solution('4 5') == '4'\nassert solution('7 6') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\naaaa\n4 5\naaa\n2 2\nbbb''') == '6'\nassert solution('''5 4\naaaa\n4 5\naaa\n2 2\nbbb''') == '4'\nassert solution('''6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec''') == '15'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n\nassert solution('''\n4 3\nabcde\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\n\nassert solution('''\n4 1\naaa\n6 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\n\nassert solution('''\n1 3\nabca\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\n\nassert solution('''\n1 4\naaa\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\nassert solution('''\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '15'\nassert solution('''\n20 5\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '10'\n'''\n\nfrom collections import defaultdict\nfrom collections import deque\nfrom collections import namedtuple\nimport heapq",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '6'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '3'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '5'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '10'\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n''') == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO\\nNO'\nassert solution('3\\n8 4\\n1 2 3 4 5\\n6 2') == 'YES\\n1 3 5\\nNO\\nNO'\n",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'YES'\nassert solution('5 4') == 'NO'\nassert solution('1 2 3 4 5') == '1 3 5'\nassert solution('6 2') == '1 2 8'\nassert solution('1 2 8 4 10 2') == '1 3 5'",
        "num_ids_2": 22,
        "num_ids_4": 51
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2\\n1 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('5\\n4\\n1 2 3 4 5\\n6 2\\n3 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('2\\n3\\n1 2 3 4 5\\n6 2\\n3 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('1\\n2\\n1 2 3 4 5\\n6 2\\n3 2 8 4 10 2') == 'YES\\n1 3 5\\nNO'\nassert solution('6\\n2\\n1 2 3 4 5\\n6 2\\n3 2 8 4 10 2') == 'NO'\n",
        "num_ids_2": 92,
        "num_ids_4": 172
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3\\n1 2 3\\n4 5\\n6 2\\n3 2\") == \"YES\"\nassert solution(\"3\\n4\\n1 2 3\\n4 5\\n6 2\\n3 2\") == \"NO\"\nassert solution(\"3\\n5\\n1 2 3\\n4 5\\n6 2\\n3 2\") == \"YES\"\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES\\n1 3 5\\nNO\\nNO\\nNO\\nNO'\nassert solution('''\n1\n3\n1 2 3 4\n''') == 'YES\\n1 2 3 4\\nNO\\nNO\\nNO\\nNO\\nNO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5 2\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n3 3\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n4 3\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'YES'\nassert solution('''3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\"\nassert solution() == \"YES\\n1 2 4\\nNO\"\nassert solution() == \"NO\"\n",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''00000000000000000000000010000000''') == '0'\nassert solution('''00000000000000000000000010000000''') == '0'\nassert solution('''00000000000000000000000010000000''') == '0'\nassert solution('''00000000000000000000000010000000''') == '0'\nassert solution('''00000000000000000000000010000000''') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(x) == y\nprint(solution(x))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('0') == '0'\nassert solution('00') == '0'\nassert solution('1') == '1'\nassert solution('11') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '0000000000000000000000000000000'\nassert solution('110111001') == '1011110011011110100'\nassert solution
        "num_ids_2": 32,
        "num_ids_4": 1676
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"964176192\"\nassert solution(input()) == \"3221225471\"\n\n\"\"\"\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        return int(format(n, '032b')[::-1], 2)\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Reverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.') == '32 bits unsigned integer'\nassert solution('Reverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.') == '32 bits unsigned integer'\nassert solution('Reverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.') == '32 bits unsigned integer'\nassert solution('Reverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.') == '32 bits unsigned integer'\nassert solution('Reverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.\\nReverse bits of a given 32 bits unsigned integer.') == '32 bits unsigned integer'\n",
        "num_ids_2": 104,
        "num_ids_4": 208
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"10111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"10010011111111111111111111111111111\") == \"3221225471\"\nassert solution(\"111001100000000000110000000011111\") == \"3221225471\"\n",
        "num_ids_2": 45,
        "num_ids_4": 88
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read().strip()) == \"964176192\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"111111111111111111111111111111111\") == \"3221225471\"\nassert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"-1\") == \"-1\"\n",
        "num_ids_2": 45,
        "num_ids_4": 65
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n00000010100101000001111010011100\n''') == '964176192 (00111001011110000010100101000000)'\nassert solution('''\n11111111111111111111111111111101\n''') == '3221225471 (10111111111111111111111111111111)'\nassert solution('''\n1111100001\n''') == '2147483647 (0)'\nassert solution('''\n1000000001\n''') == '4294967295 (0)'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1'])",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n''') == '''[\n    [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1\n1''') == '''[\n    [1],\n    [1,1],\n   [1,2,1]\n]'''\nprint(solution('''5\n1\n1'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1 1 1 1 1\\n1 2 3 1 1\\n1 3 6 3 1\\n1 4 10 10 1\\n1 5 15 15 1\\n1 6 22 20 1\\n1 7 28 35 1\\n1 8 41 56 1\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == \"[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1'])\nassert solution('1') == '\\n'.join([1])\nassert solution('0') == '\\n'.join(['1'])",
        "num_ids_2": 64,
        "num_ids_4": 81
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(5) == \"[1,1,1,1,1]\\n\"\nassert solution(6) == \"[1,3,3,3,1,1]\\n\"\nassert solution(8) == \"[1,2,4,6,4,2,4,6,2]\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 73
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '\\n'.join([\n    '1',\n    '1 1',\n    '1 2 1',\n    '1 3 3 1',\n    '1 4 6 4 1'])\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == \"[\\n  [1],\\n  [1,1],\\n  [1,2,1],\\n  [1,3,3,1],\\n  [1,4,6,4,1]\\n]\"",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '\\n'.join([\n    '1',\n    '1 1',\n   '1 2 1',\n  '1 3 3 1',\n [1 4 6 4 1]\n])\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nfoo@bar.baz\\nbar@foo.baz\\nfoobar@barfoo.baz\\nfoo@bar.baz') == ['bar@foo.baz', 'foo@bar.baz', 'foobar@barfoo.baz']\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\nyahoo.com\\ngmail.com\\nyahoo.com') == [\"gmail.com\", \"yahoo.com\"]\n\n'''\n\nn = int(input())\n\nemails = []\n\nfor i in range(n):\n    emails.append(input())",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nabc@xyz.com\nxyz@abc.com\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nhello@world.com') == 'hello@world.com'\nassert solution('2\\nhi@gmail.com\\nbye@google.com') == 'hi@gmail.com'\nassert solution('3\\nhi@gmail.com\\nbye@google.com') == ''\n",
        "num_ids_2": 49,
        "num_ids_4": 71
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"david@hackerrank.com\\nkate@hackerrank.com\\njames@hackerrank.com\\n\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == [\"a@b.com\", \"c@d.com\", \"e@f.com\"]\n\"\"\"\nimport re",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'abc'\nassert solution('1') == 'a'\n\n=====Sample Test Cases=====\nInput\n\n3\nabcd@leetcode.com\nabcdefg@leetcode.com\nabcdefg@leetcode.com\n\nOutput\n\nabcdefg\nabcdefg\nabcdefg\n\nExplanation\n\nOnly \"abcdefg\" and \"abcdefg@leetcode.com\" are valid emails, which are in lexicographical order.\n\n=====Explaination=====\n\nThe solution is basically to use the filter function to get all the emails that are greater than 10 but less than 80.\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'valid'\nassert solution(input) == 'invalid'\n\nIf there are no valid email addresses, return an empty list, []\n>>>>>>> Stashed changes\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''0\nroot@root\nroot@a\nroot@z\nroot@1\nroot@2\nroot@3\n''') == '''root@root\nroot@a\nroot@z\nroot@1\nroot@2\nroot@3\n''', 'Wrong output'\nassert solution('''1\nroot@root\nroot@a\nroot@z\nroot@1\nroot@2\nroot@3\n''') == '''root@root\nroot@a\nroot@z\nroot@1\nroot@2\nroot@3\n''', 'Wrong output'\nassert solution('''1\nroot@\nroot@a\nroot@z\nroot@1\nroot@2\nroot@3\n''') == '''root@\nroot@a\nroot@z\nroot@1\nroot@2\nroot@3\n''', 'Wrong output'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == [\"a@qq.com\"]\nassert solution('2\\n') == [\"b@qq.com\", \"c@qq.com\"]\nassert solution('3\\n') == [\"d@qq.com\", \"e@qq.com\", \"f@qq.com\"]\nassert solution('4\\n') == [\"g@qq.com\", \"h@qq.com\", \"i@qq.com\", \"j@qq.com\"]\nassert solution('5\\n') == [\"k@qq.com\", \"l@qq.com\", \"m@qq.com\", \"n@qq.com\", \"o@qq.com\", \"p@qq.com\"]\n",
        "num_ids_2": 39,
        "num_ids_4": 106
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == [1,8,27]\n=====Test Case 1=====\nInput:\n3\n\nOutput:\n[1, 8, 27]\n=====Test Case 2=====\nInput:\n10\n\nOutput:\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n1\n2''') == \"1\\n2\\n3\"\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == ['0','1','1','2','3']\n\n\nSolution",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610]\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5''') == '0 1 1 8 27''', \"Should be 0 1 1 8 27\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == [1, 1, 8, 27, 64]\nassert solution('7') == [1, 1, 2, 3, 8, 27, 64]",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == [0, 1, 8, 27, 64]\nassert solution(\"4\") == [0, 1, 8, 27]\nassert solution(\"2\") == [0, 1]\nassert solution(\"1\") == [0]\nassert solution(\"3\") == [0, 1, 8]\n",
        "num_ids_2": 34,
        "num_ids_4": 56
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == [0, 1, 1, 4]\nassert solution(\"5\") == [0, 1, 1, 2, 1, 4]\n\n'''",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == [1, 1, 2, 8, 27]\nassert solution(\"10\") == [1, 1, 2, 3, 5, 8, 13, 21, 34, 55]\n'''",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n10\n''') == '''[0, 1, 1, 8, 27]'''\nassert solution('''5\n20\n''') == '''[0, 1, 1, 8, 27, 64]'''\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n    <title>Concept of XML</title>\n    <subtitle>A Web Page</subtitle>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"http://www.w3.org/2005/Atom\"/>\n    <updated>2004-01-18T14:00:00+00:00</updated>\n    <author>\n        <name>John Doe</name>\n        <email>jdoe@example.com</email>\n    </author>\n    <category scheme=\"http://www.w3.org/ns/COM/2011#\"/>\n    <contributor>\n        <name>John Doe</name>\n        <email>jdoe@example.com</email>\n    </contributor>\n    <id>http://www.w3.org/2005/Atom/self.xml</id>\n    <link rel=\"alternate\" hreflang=\"en\" href=\"http://www.w3.org/2005/Atom\"/>\n    <published>2004-01-18T14:00:00+00:00</published>\n    <updated>2004-01-18T14:00:00+00:00</updated>\n</feed>''') == '2'\n'''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n    <title>Coding Ninjas</title>\n    <subtitle>Programming Languages</subtitle>\n    <link rel=\"alternate\" href=\"http://example.com/feed\"/>\n    <updated>2015-02-14T12:00:00</updated>\n</feed>\n\"\"\") == \"3\"\nassert solution(\"\"\"4\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n    <title>Coding Ninjas</title>\n    <subtitle>Programming Languages</subtitle>\n    <link rel=\"alternate\" href=\"http://example.com/feed\"/>\n    <updated>2015-02-14T12:00:00</updated>\n</feed>\n\"\"\") == \"\"\nassert solution(\"\"\"2\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\">\n    <title>Coding Ninjas</title>\n    <subtitle>Programming Languages</subtitle>\n    <link rel=\"alternate\" href=\"http://example.com/feed\"/>\n    <updated>2015-02-14T12:00:00</updated>\n</feed>\n\"\"\") == \"3\"\n\n=====Explanation=====\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n<a></a>\\n<b></b>\\n\") == \"3\"\nassert solution(\"<a></a>\\n<b></b>\\n\") == \"2\"\nassert solution(\"<a></a>\\n\") == \"0\"\nassert solution(\"<a><b></b></a>\") == \"1\"\nassert solution(\"<a><b><c></c></b><d></d></a>\") == \"4\"\n",
        "num_ids_2": 49,
        "num_ids_4": 83
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n       xmlns:br=\"http://www.w3.org/2009/xhtml/builder/\">\n  <title>Document</title>\n  <link rel=\"alternate\" hreflang=\"en\"\n        href=\"http://example.com/feed/\"/>\n  <description>A feed about document</description>\n</feed>\n''') == '2'\nassert solution('''10\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n       xmlns:br=\"http://www.w3.org/2009/xhtml/builder/\">\n  <title>Document</title>\n  <link rel=\"alternate\" hreflang=\"en\"\n        href=\"http://example.com/feed/\"/>\n  <link rel=\"alternate\" hreflang=\"en\"\n        href=\"http://example.com/rss/\"/>\n  <description>A feed about document</description>\n  <subtitle>Document</subtitle>\n</feed>\n''') == '3'\nassert solution('''2\n<feed xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n       xmlns:br=\"http://www.w3.org/2009/xhtml/builder/\">\n  <title>Document</title>\n</feed>\n''') == '1'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n<stuff>\n    <users>\n        <user x=\"2\">\n            <id>001</id>\n            <name>Sanchit</name>\n        </user>\n        <user x=\"7\">\n            <id>009</id>\n            <name>Raghu</name>\n        </user>\n    </users>\n</stuff>\n''') == 4",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some title</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"alternate\" href=\"http://example.com/\"/>\n  <updated>2013-12-12T13:13:14Z</updated>\n</feed>''') == \"1\", \"First test case\"\nassert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some title</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"alternate\" href=\"http://example.com/\"/>\n  <updated>2013-12-12T13:13:14Z</updated>\n</feed>''') == \"0\", \"Second test case\"\nassert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some title</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"alternate\" href=\"http://example.com/\"/>\n  <updated>2013-12-12T13:13:14Z</updated>\n</feed>''') == \"2\", \"Third test case\"\nassert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some title</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"alternate\" href=\"http://example.com/\"/>\n  <updated>2013-12-12T13:13:14Z</updated>\n  <category term=\"http://www.w3.org/ns/prov#Entity\" scheme=\"http://example.com/\"/>\n</feed>''') == \"3\", \"Fourth test case\"\nassert solution('''<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some title</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"alternate\" href=\"http://example.com/\"/>\n  <updated>2013-12-12T13:13:14Z</updated>\n  <category term=\"http://www.w3.org/ns/prov#Entity\" scheme=\"http://example.com/\"/>\n</feed>''') == \"3\", \"Fifth test case\"\n\n=====Solution Complexity=====\n\nTime complexity : O(n)O(n).\n\nSpace complexity : O(n)O(n).\n\n>>>>>>> refs/remotes/origin/master\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1\n<feed xml:lang='en'>\n    <title>Test</title>\n    <link href='http://test.com'/>\n    <description>Test description.</description>\n</feed>\n\"\"\") == \"0\"\nassert solution(\"\"\"0\n<feed xml:lang='en'>\n    <title>Test</title>\n    <link href='http://test.com'/>\n    <description>Test description.</description>\n</feed>\n\"\"\") == \"1\"\n\"\"\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n<feed xml:lang='en'>\n    <title>HackerRank</title>\n    <subtitle lang='en'>Programming challenges</subtitle>\n    <link rel='alternate' type='text/html' href='http://hackerrank.com/'/>\n    <updated>2013-12-25T12:00:00</updated>\n</feed>\n''') == \"3\"\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>XML Developer News</title>\n  <subtitle lang='en'>Developer at Apple</subtitle>\n  <link rel='alternate' href='http://www.xml.com/news/'/>\n  <link rel='alternate' href='http://www.mobileread.com/news/'/>\n  <guid>http://www.mobileread.com/news/4720876.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720877.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720878.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720879.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720880.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720881.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720882.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720883.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720884.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720885.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720886.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720887.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720888.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720889.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720890.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720891.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720892.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720893.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720894.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720895.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720896.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720897.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720898.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720899.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720900.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720901.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720902.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720903.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720904.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720905.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720906.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720907.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720908.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720909.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720910.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720911.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720912.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720913.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720914.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720915.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720916.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720917.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720918.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720919.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720920.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720921.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720922.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720923.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720924.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720925.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720926.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720927.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720928.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720929.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720930.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720931.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720932.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720933.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720934.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720935.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720936.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720937.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720938.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720939.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720940.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720941.shtml</guid>\n  <guid>http://www.mobileread.com/news/4720942.shtml</guid>\n  <guid>http://www.mobileread.com/news",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n<root>\n    <data>\n        <elem>\n            <subelem>\n                <content/>\n            </subelem>\n        </elem>\n    </data>\n</root>\n''') == 3\nassert solution('''\n<root>\n    <data>\n        <elem>\n            <subelem>\n                <content/>\n            </subelem>\n        </elem>\n    </data>\n</root>\n''') == 2\nassert solution('''\n<root>\n    <data>\n        <elem>\n            <subelem>\n                <content/>\n            </subelem>\n        </elem>\n    </data>\n</root>\n''') == 1\n'''\n    pass\n    if stdin.strip() == '':\n        return '0'\n    n = len(stdin.split('\\n'))\n    tree = {}\n    def dfs(node):\n        if node not in tree:\n            tree[node] = 1\n            for c in tree:\n                dfs(c)\n    for line in stdin.split('\\n'):\n        if line!= '':\n            dfs('root')\n    return tree['root']\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n987 654 32 10\\n412 345 939 567\") == \"YES\\nYES\\nNO\\nYES\\nNO\\nNO\\nYES\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n86827728165') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n') == 'NO'\nassert solution('1\\n86827728165\\n') == 'YES'\nassert solution('1\\n2\\n3\\n4\\n') == 'NO'\nassert solution('1\\n2\\n3\\n4\\n') == 'NO'\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"7 8\") == \"YES\"\nassert solution(\"9 9\") == \"NO\"\nassert solution(\"9 9 9 9\") == \"YES\"\nassert solution(\"9 9 9 9 9\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n7\n789632\n888765\n891890\n929876\n9398765\n\"\"\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nNO\"\nassert solution(\"\"\"\n7\n789632\n888765\n891890\n929876\n9398765\n\"\"\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nNO\"\nassert solution(\"\"\"\n7\n789632\n891890\n929876\n9398765\n\"\"\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nNO\"\nassert solution(\"\"\"\n7\n789632\n888765\n891890\n929876\n9398765\n\"\"\") == \"YES\\nNO\\nYES\\nYES\\nYES\\nYES\\nNO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == [\"YES\"]*10\nassert solution() == [\"YES\"]*5\nassert solution() == [\"NO\"]*5\n=====Sample Input=====\n4\n9876543210\n1234567890\n8765432100\n9876543210\n1234567890\n8765432100\n7897364521\n1234567890\n8765432100\n1234567890\n8765432100\n\n=====Sample Output=====\nYES\nYES\nNO\nYES\nYES\nNO\nYES\nYES\nNO\nYES\n=====Hint=====\nWe can apply regular expressions to make sure that the numbers are valid.\n\nIf we find any non-numbers, it means there is something wrong in the input.\n\nAlso, we can use this to make sure that the number ends with 7, 8 or 9.\n\nNote:\nIn this challenge, we will take input on STDIN and print on STDOUT.\n\n=====Hint Explanation=====\nWe can apply the regular expression to make sure that the numbers are valid.\n\nConvert the string to integer. If it matches the regular expression, we are done.\n\nOtherwise, we can try to check if the string ends with 7, 8 or 9.\n\nThe first method would be to find if any non-numbers exist at all.\n\nThe second method would be to make sure that the number ends with 7, 8 or 9.\n\n'''\n\nfrom re import match",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n98745678\n91234567\n''') == \"NO\\nNO\\n\"\n\nassert solution('''\n2\n97945678\n91234567\n''') == \"NO\\nNO\\n\"\n\nassert solution('''\n2\n1234567\n9876543\n''') == \"NO\\nNO\\n\"\n\nassert solution('''\n2\n979878\n9876543\n''') == \"NO\\nNO\\n\"\n\nassert solution('''\n2\n987654\n9876543\n''') == \"YES\\nYES\\n\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n123456789') == \"YES\"\nassert solution('8\\n(123)456(789)') == \"YES\"\nassert solution('5\\n1(234)567-890') == \"YES\"\nassert solution('5\\n1234567890') == \"NO\"\nassert solution('5\\n1234567890') == \"NO\"\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\n72827294775\"\"\") == \"YES\"\nassert solution(\"\"\"1\n7282\"\"\") == \"NO\"\nassert solution(\"\"\"\n1\n7282\n92827294775\n92827294775\"\"\") == \"YES\\nNO\"\nassert solution(\"\"\"\n1\n712\n92827294775\"\"\") == \"YES\\nNO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 22
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1\n98760027\n\"\"\") == \"YES\\nNO\"\nassert solution(\"\"\"2\n988880027\n\"\"\") == \"YES\\nNO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n\n92826356810\n\n(928)2635-6810\n''') == \"NO\"\nassert solution('''\n4\n\n(928)2635-6810\n\n92826356810\n\n(928)2635-6810\n''') == \"YES\"\nassert solution('''\n3\n\n92826356810\n\n92826356810\n''') == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 4 5 9\n6\n2 4 11 12''') == '''2 4 5 9\n6\n11 12'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 4 5\\n3 6 9\") == \"5 6 7 8 9\"\nassert solution(\"5\\n2 4 5\\n3 6 9\") == \"5 6 7 8 9\"\nassert solution(\"3\\n2 4 5\\n3 6 9\") == \"5 6 7 8 9\"\nassert solution(\"5\\n2 4 5\\n3 6 9\") == \"5 6 7 8 9\"",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 3 2\") == \"3 2 4 5\"\nassert solution(\"3 4 5 2\") == \"5 4 3 2\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 43
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n9 10 11 12 13''') == '1 2 3 4 5 9 10 11 12 13'\n\n'''\nRETURN STATEMENT:\nWrite an expression that does not break the function.\n'''\n'''\nRETURN STATEMENT:\nWrite an expression that does not break the function.\n'''\n'''\nRETURN STATEMENT:\nWrite an expression that does not break the function.\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 2, 4, 1, 5, 3]) == '2 1 3 5 4'\nassert solution([1, 2, 4, 5, 3, 2, 3]) == '1 2 3 5 4 3'\nassert solution([4, 2, 3, 3]) == '2 3 1 4'\nassert solution([2, 3, 4]) == '2 4 1 3'\nassert solution([1, 4, 3]) == '1 3 4 1'\n",
        "num_ids_2": 51,
        "num_ids_4": 87
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 4\") == \"2 3\"\n\nstdin = \"\"\"\n10 5\n4 5 5 5 6 5 5 7 5 8 5\n5 2\n4 4 5 5 5 5 5 5 5\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 4, 5, 9]) == \"2 4 9\"\nassert solution([2, 4, 11, 12]) == \"2 4 12\"\nassert solution([2, 4, 5, 10]) == \"2 4 5 10\"\nassert solution([1, 2, 3, 4, 5, 6]) == \"3 4 5 6 7\"\nassert solution([1, 1, 1, 2, 2, 3, 3]) == \"2 3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 79
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2 5 7') == '4 5 7'\nassert solution('4 5 2 7') == '2 7 4 5'\nassert solution('5 7 2 4') == '5 7 4 2'\nassert solution('7 4 5 2') == '2 5 4 7'\nassert solution('1 2 3 4 5') == '4 5 3 2 1'\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 4, 3, 2]) == \"2 3 4 5\"\n\n<<<<<<< HEAD\n\n=======\n>>>>>>> 6c8bebe7638c7f12a6e7f8a5c9a8beb0b6c2a88\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([4, 1, 2, 4, 5, 7, 8, 4]) == expected_output\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nID         MARKS      NAME      CLASS     \\n1         97         Raymond    7         \\n2         50         Steven    1         \\n3         93         Adrian    9         \\n4         79         Peter     6         \\n5         91         Ashley    7         \\n\") == \"82.00\"\nassert solution(\"3\\nMARKS      ID      NAME      CLASS      \\n82         1         Adrian    9         \\n91         2         Peter     6         \\n90         3         Adrian    9         \\n\") == \"89.00\"\n",
        "num_ids_2": 137,
        "num_ids_4": 137
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n1,3,4,5,7,8\n2,4,5,7,8,9\n3,5,6,7,8,9\n4,5,6,7,8,9\n5,7,8,9,10,11\n6,7,8,9,10,11\n\n''') == \"3.28\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nID,MARKS,CLASS,NAME\\n1,78,10,john\\n2,56,12,Bob\\n3,99,11,jane\\n4,56,9,Sally\\n5,56,10,Bob\") == \"78.00\"\nassert solution(\"5\\nID,MARKS,CLASS,NAME\\n1,78,10,john\\n2,56,12,Bob\\n3,99,11,jane\\n4,56,9,Sally\\n5,56,10,Bob\") == \"82.83\"\nassert solution(\"5\\nID,MARKS,CLASS,NAME\\n1,78,10,john\\n2,56,12,Bob\\n3,99,11,jane\\n4,56,9,Sally\\n5,56,10,Bob\") == \"88.0\"\nassert solution(\"5\\nID,MARKS,CLASS,NAME\\n1,78,10,john\\n2,56,12,Bob\\n3,99,11,jane\\n4,56,9,Sally\\n5,56,10,Bob\") == \"100.0\"",
        "num_ids_2": 140,
        "num_ids_4": 280
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nA B C\\n1 2 3\\n4 5 6') == \"2.00\"\nassert solution('2\\na b c\\n1 2 3\\n4 5 6') == \"2.00\"\n'''\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 2 3\\n4 5 6\\n7 8 9 10\") == \"3.75\"\n=====Sample Input&Output=====\nInput\n8\nID         MARKS      CLASS      NAME\n1         97         12         Raymond\n2         50         12         Steven\n3         91         10         Adrian\n4         72         10         Stewart\n5         80         10         Peter\n6         91         15         Andy\n7         80         14         Ricky\n8         72         18         Peter\n9         51         18         Ashley\n\nOutput\n3.54\n\n'''\nfrom collections import namedtuple\n\npt = namedtuple('pt', 'x y')\npt1 = pt(1, 2)\npt2 = pt(3, 4)\nprint(pt1.x*pt2.y)\n\n\n\nfrom collections import namedtuple\n\nCar = namedtuple('Car', 'Price Mileage Colour Class')\nx = Car(Price = 100000, Mileage = 30, Colour = 'Cyan', Class = 'Y')\nprint(x.Price)\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n5 2 5\\n6 6 6\\n') == '2.66'\n=====Sample Input=====\n5\nID      MARKS      NAME       CLASS\n1       91         Raymond    7\n2       92         Steven     4\n3       93         Adrian     9\n4       99         Stewart    5\n5       91         Peter      6\n=====Sample Output=====\n2.66\n'''",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nID         MARKS      NAME      CLASS\n1          97         Raymond    7\n2          50         Steven    4\n3          91         Adrian    9\n4          72         Stewart    5\n5          80         Peter      6''') == \"82.00\"\n\n=====Solution Explanation=====\nExplanation\n    Total number of students:5\n    print('printing')\n    ids = 1\n    marks = 97\n    print('printing')\n    names = Raymond\n    print('printing')\n    classes = 7\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print('printing')\n    print",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"13.2\"\n\n=====Sample Input/Output=====\nInput\n\n2\nID         MARKS      NAME       CLASS\n1         91         Raymond    7\n2         72         Euan      6\n\nOutput\n\n91.0\n72.8\nExplanation\n\nStudent #1 has got 91 marks and his average is 91/2 = 69.5\nStudent #2 has got 72 marks and his average is 72/2 = 61.0\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([10,10,10,10]) == '10.00'\nassert solution([99,88,87,77]) == '88.00'\nassert solution([99,99,99,99]) == '100.00'\nassert solution([99.3,88.8,87.9,77.7]) == '88.30'\nassert solution([88.3,99,88.9,77.7]) == '99.00'\n",
        "num_ids_2": 36,
        "num_ids_4": 80
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nID,MARKS,CLASS,NAME\\n1,67,3,John\\n2,56,7,Bob\\n3,54,9,Steve\\n4,76,12,Paul\\n5,24,5,Sally\\n') == '67.00'\nassert solution('5\\nID,MARKS,CLASS,NAME\\n1,67,3,John\\n2,56,7,Bob\\n3,54,9,Steve\\n4,76,12,Paul\\n5,24,5,Sally\\n') == '67.50'\nassert solution('5\\nMARKS,ID,CLASS,NAME\\n67,1,3,John\\n56,2,7,Bob\\n54,3,9,Steve\\n76,4,12,Paul\\n24,5,5,Sally\\n') == '67.00'\n=====Sample Test Cases=====\n>>> solution('5\\nID,MARKS,CLASS,NAME\\n1,67,3,John\\n2,56,7,Bob\\n3,54,9,Steve\\n4,76,12,Paul\\n5,24,5,Sally\\n')\n'67.00'\n>>> solution('5\\nMARKS,ID,CLASS,NAME\\n67,1,3,John\\n56,2,7,Bob\\n54,3,9,Steve\\n76,4,12,Paul\\n24,5,5,Sally\\n')\n'67.00'\n>>> solution('5\\nMARKS,ID,CLASS,NAME\\n67,1,3,John\\n56,2,7,Bob\\n54,3,9,Steve\\n76,4,12,Paul\\n24,5,5,Sally\\n')\n'67.00'\n>>> solution('5\\nID,MARKS,CLASS,NAME\\n1,67,3,John\\n2,56,7,Bob\\n3,54,9,Steve\\n4,76,12,Paul\\n5,24,5,Sally\\n')\n'67.00'\n\n\"\"\"\n",
        "num_ids_2": 142,
        "num_ids_4": 213
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"Weird\"\nassert solution(\"121\") == \"Not Weird\"\nassert solution(\"24\") == \"Weird\"\nassert solution(\"12345\") == \"Weird\"\nassert solution(\"5\") == \"Not Weird\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"21\") == \"Weird\"\nassert solution(\"100\") == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20''') == 'Not Weird'\nassert solution('''15''') == 'Weird'\nassert solution('''1''') == 'Not Weird'\nassert solution('''18''') == 'Weird'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('21') == 'Not Weird'\nassert solution('1000') == 'Not Weird'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Weird\"\nassert solution(\"6\") == \"Not Weird\"\nassert solution(\"10\") == \"Weird\"\nassert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(5) == \"Weird\"\nassert solution(1) == \"Not Weird\"\nassert solution(10) == \"Weird\"\nassert solution(11) == \"Not Weird\"\nassert solution(20) == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n7\n1\n12\n''') == 'Weird'\nassert solution('''18\n179\n42\n565\n''') == 'Not Weird'\nassert solution('''20\n''') == 'Not Weird'\nassert solution('''1\n''') == 'Weird'\nassert solution('''58\n8\n2\n3\n9\n10\n1\n''') == 'Weird'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"Not Weird\"\nassert solution(\"24\") == \"Weird\"\nassert solution(\"25\") == \"Not Weird\"\nassert solution(\"26\") == \"Weird\"\nassert solution(\"27\") == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"3\") == \"Not Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"5\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n<feed xml:lang='en'><title>Title</title><subtitle>Subtitle</subtitle><link rel='alternate' href='http://example.com'/>\\n<updated>2013-02-28T12:00:00-05:00</updated><summary>Summary</summary><category><term>News</term><term>Society</term></category></feed>\\n\") == 4\nassert solution(\"2\\n<feed xml:lang='en'><title>Title</title><subtitle>Subtitle</subtitle><link rel='alternate' href='http://example.com'/>\\n<updated>2013-02-28T12:00:00-05:00</updated><summary>Summary</summary><category><term>News</term><term>Society</term></category></feed>\\n\") == 5\nassert solution(\"3\\n<feed xml:lang='en'><title>Title</title><subtitle>Subtitle</subtitle><link rel='alternate' href='http://example.com'/>\\n<updated>2013-02-28T12:00:00-05:00</updated><summary>Summary</summary><category><term>News</term><term>Society</term></category><category><term>Health</term><term>Science</term></category></feed>\\n\") == 5\n'''",
        "num_ids_2": 198,
        "num_ids_4": 313
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('<feed><title>How are you?</title><subtitle>Fine</subtitle></feed>') == '6'\nassert solution('<feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title></feed>') == '6'\nassert solution('<feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>') == '12'\n\n=====Test cases=====\nInput:\n\n5\n<feed><title>How are you?</title><subtitle>Fine</subtitle></feed>\n<feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n<feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n<feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n<feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n\nOutput:\n\n6\n6\n12\n6\n12\n\n=====Explanation=====\n\nNote:\n\nSample Input        Sample Output\n5        <feed><title>How are you?</title><subtitle>Fine</subtitle></feed>\n5        <feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n5        <feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n5        <feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n5        <feed><title>How are you?</title><subtitle>Fine</subtitle><title>How do you do?</title><title>How are you?</title></feed>\n\n=====Code Explanation=====",
        "num_ids_2": 72,
        "num_ids_4": 122
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>A tutorial showing the use of basic XML elements</subtitle>\n<link rel='alternate' href='http://www.w3.org/TR/html40/tools/xml-dom/index' type='text/html'>\n<updated>2009-02-04T12:00:00Z</updated>\n</feed>''') == '76'\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<link rel='alternate' href='http://www.w3.org/TR/html40/tools/xml-dom/index' type='text/html'>\n<subtitle lang='en'>A tutorial showing the use of basic XML elements</subtitle>\n<updated>2009-02-04T12:00:00Z</updated>\n</feed>''') == '0'\nassert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<link rel='alternate' href='http://www.w3.org/TR/html40/tools/xml-dom/index' type='text/html'>\n<subtitle lang='en'>A tutorial showing the use of basic XML elements</subtitle>\n<updated>2009-02-04T12:00:00Z</updated>\n</feed>''') == '-1'\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '10'\nstdin = \"\"\"\n10\n<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML</subtitle>\n<link rel='alternate' type='text/html' href='http://www.w3schools.com/xml/default.asp'/>\n</feed>\n\"\"\"\nassert solution(stdin) == '10'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n\\t<title>Great News!</title>\\n\\t<subtitle lang='en'>for all our present and future generations</subtitle>\\n\\t<link href='http://example.com/'>Example</link>\\n\\t<updated>2013-04-12T14:36:12.627Z</updated>\\n</feed>\") == 4\nassert solution(\"<feed xml:lang='en'>\\n\\t<title>Test</title>\\n\\t<subtitle lang='en'>Test 2</subtitle>\\n\\t<link href='http://example.com/'>Test 3</link>\\n\\t<updated>2013-04-12T14:36:12.627Z</updated>\\n</feed>\") == 2\nassert solution(\"<feed xml:lang='en'>\\n\\t<title>Test</title>\\n\\t<link href='http://example.com/'>Test 2</link>\\n\\t<updated>2013-04-12T14:36:12.627Z</updated>\\n</feed>\") == 0\n",
        "num_ids_2": 190,
        "num_ids_4": 265
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n<a a=\"1\" b=\"2\">\\n</a>\\n') == '2'\n'''\nfrom xml.etree.ElementTree import parse\n\nxml = parse(input())\nroot = xml.getroot()",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n<a></a>\\n2\\n<a>\\n</a>') == '1'\nassert solution('1\\n<a><b></b></a>\\n2\\n<a><b></b></a>') == '2'\nassert solution('1\\n<a><b></b></a>\\n2\\n<a><b></b></a>') == '2'\nassert solution('1\\n<a><b></b></a>\\n2\\n<a><b></b></a>') == '4'\n",
        "num_ids_2": 65,
        "num_ids_4": 135
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>HackerRank</title>\\n<subtitle lang=\"en\">Programming challenges</subtitle>\\n<link rel=\"alternate\" type=\"text/html\" href=\"http://hr.github.io/index.html\"/>\\n<updated>2013-12-25T12:00:00</updated>\\n</feed>') == \"73\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n<title>XML Developer\\'s Guide</title>\\n<subtitle lang=\"en\">A tutorial for implementing XML.</subtitle>\\n</feed>') == \"3\"\n\n===================================================================================================================\n\n2. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['abc']\n\n===================================================================================================================\n\n3. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['abc']\n\n===================================================================================================================\n\n4. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['abc', 'b', 'c', 'd']\n\n===================================================================================================================\n\n5. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n6. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n7. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n8. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n9. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n10. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n11. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n12. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n13. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n14. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n15. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n16. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n17. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n18. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n19. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n20. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n21. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n22. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n23. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n24. Write a program which takes as input a string, and return a list of words contained in the input string.\n\nIn the first line, enter the input string.\n\n=====Input=====\nEnter a string: abc\n\n=====Output=====\n['a', 'b', 'c', 'd', 'abc']\n\n===================================================================================================================\n\n25. Write a program which takes as input a",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"<feed xml:lang='en'>\\n<title>XML</title>\\n<subtitle lang='en'>XML</subtitle>\\n<link rel='alternate' href='http://xml.python.org/'/>\\n<guid>http://xml.python.org/</guid>\\n</feed>\") == \"3\"\n\nIn this case, the score is 3, because title and subtitle have 3 attributes, and link is has only 1 attribute.\n\n'''\n\nfrom xml.etree import ElementTree as etree",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1 1 1') == '90'\nassert solution('1 1 0 1') == '45'\nassert solution('1 1 1 1') == '90'\n=====Sample Test Cases=====\nInput\n\nOutput\n\nYour submission\nYour submission\n\nTest Case 0\n\nInput\n\nOutput\n\nYour submission\nYour submission\nTest Case 1\n\nInput\n\nOutput\n\nYour submission\nYour submission\nTest Case 2\n\nInput\n\nOutput\n\nYour submission\nYour submission\nTest Case 3\n\nInput\n\nOutput\n\nYour submission\nYour submission\nTest Case 4\n\nInput\n\nOutput\n\nYour submission\nYour submission\n\n'''\n\nimport math\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('-1.2 1.9 -0.1 0.9') == '12.0'\n\nsolution('')\n\nprint(solution('-1.2 1.9 -0.1 0.9'))\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.0 1.0 1.0\") == \"89.80\"\nassert solution(\"0.0 0.0 0.0\") == \"90.00\"\nassert solution(\"1.0 1.0 1.0\") == \"89.80\"\n=====Explanation=====\nstdin = '1.0 1.0 1.0'\nx = 1.0\ny = 1.0\nz = 1.0\nz = y * math.sin(math.radians(x))\nx = y * math.cos(math.radians(x))\ny = z * math.cos(math.radians(y))\nz = x * math.sin(math.radians(z))\nprint(math.degrees(math.atan2(y, x)))\n>>>>>>> Python\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0.1 0.2 0.3 0.4') == '105.0'\nassert solution('0.1 0.2 -0.2 0.1') == '5.0'\nassert solution('0.1 0.2 0.3 -0.1') == '45.0'\nassert solution('0.1 0.2 0.3 0.4') == '10.07'\nassert solution('0.1 -0.1 0.2 0.2') == '2.12'\n",
        "num_ids_2": 47,
        "num_ids_4": 94
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"-1.4 2.3 3.0 0.5\") == \"2.0\"\nassert solution(\"-1.4 2.3 -3.0 0.5\") == \"-2.8\"\nassert solution(\"-1.4 2.3 -3.0 1.5\") == \"1.4\"\n=====Sample Test Case=====\nInput\n\nOutput\n=====Explanation=====\nExample 1:\n\nInput\n\nOutput\n=====Input Explanation=====\nInput 1:\n\nOutput 1:\n\nExample 2:\n\nInput\n\nOutput\n=====Input Explanation=====\nInput 1:\n\nOutput 1:\n\nExample 3:\n\nInput\n\nOutput\n=====Input Explanation=====\nInput 1:\n\nOutput 1:\n\nExample 4:\n\nInput\n\nOutput\n=====Input Explanation=====\nInput 1:\n\nOutput 1:\n\n'''\n",
        "num_ids_2": 49,
        "num_ids_4": 74
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.0 1.0 0.0 0.0\") == \"0.0\"\nassert solution(\"1.0 1.0 1.0 0.0\") == \"60.0\"\nassert solution(\"1.0 1.0 1.0 1.0\") == \"720.0\"\nassert solution(\"1.0 1.0 1.0 1.0\") == \"720.0\"\nassert solution(\"1.0 1.0 1.0 1.0\") == \"720.0\"\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.2 1.3 1.4 1.5\") == \"29.82\"\nassert solution(\"2.1 2.3 2.5 2.6\") == \"20.0\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0.0 1.0 1.0\") == \"0.32\"\nassert solution(\"0.0 0.0 0.0 0.0\") == \"90.0\"\nassert solution(\"3.0 4.0 5.0 6.0\") == \"90.0\"\nassert solution(\"5.0 0.0 5.0 0.0\") == \"60.0\"\n=====Test cases=====\nExpected Output:\nInput:\n0.0 1.0 1.0\n\nOutput:\n0.32\n\nInput:\n0.0 0.0 0.0 0.0\n\nOutput:\n90.0\n\nInput:\n3.0 4.0 5.0 6.0\n\nOutput:\n90.0\n\nInput:\n5.0 0.0 5.0 0.0\n\nOutput:\n60.0\n\n=====Explaination=====\nConsider the following plane:\nA,B,C\nX=AB,Y=BC\na=X,b=Y\nThe angle between the plane and the axis generated by AB and BC is PHI.\nPHI=degrees(atan(a/b))\nIf the plane is parallel to the X and Y axes, PHI=0.\nIf the plane is parallel to the XY plane, PHI=90.\nIf the plane is parallel to the XZ plane, PHI=180.\nIf the plane is parallel to the YZ plane, PHI=270.\n=====Approach=====\nThe problem can be solved by applying the linear algebra operations.\n\n=====Complexity=====\nTime Complexity : O(1)\nSpace Complexity: O(1)",
        "num_ids_2": 43,
        "num_ids_4": 89
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"0 0 0 -1\") == \"-90\"\nassert solution(\"2.5 1.2 2.5 1.2\") == \"90\"\nassert solution(\"1 0 1 -1\") == \"180\"\nassert solution(\"1 1 1 1\") == \"360\"\n",
        "num_ids_2": 27,
        "num_ids_4": 62
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 -1 0 1') == '180.0'\nassert solution('-1 0 0 0') == '90.0'\nassert solution('0 1 0 0') == '90.0'\nassert solution('0 0 -1 0') == '90.0'\nassert solution('0 0 0 0') == '0.0'\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\neven\\napple\\neven') == '2'\nassert solution('3\\nis\\napple\\nis') == '1'\n\n>>>>>>> 18baf1e86b9a947e4ed15e8b5a67a7bd0b0f9f08\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"3\nhello world\nword\nfoo\"\"\") == \"3.0\"\nassert solution(\n\"\"\"5\nhello word\nworld\nfoo bar\nbar\nfoo\"\"\") == \"4.5\"\nassert solution(\n\"\"\"9\na a a a a a a a a\nb b b b b\nc c c c\nd d d\ne e e e\nf f f\ng g g g\nh h h\ni i i i\nj j j j j\nk k k k k\nl l l\nm m m m m\nn n n\no o o o o\np p p p p\nq q q q q q\nr r r r r\ns s s s s\nt t t t t\nu u u u u\nv v v v v\nw w w w w\nx x x x x\ny y y y y\nz z z z z\n1 1 1 1 1 1 1 1 1\"\"\") == \"24.0\"\n=====SAMPLE RUNS=====\nSample Case 1\n\n>>> solution(\"\"\"1\nhello world\nword\nfoo\"\"\")\n'2.0'\nSample Case 2\n\n>>> solution(\"\"\"5\nhello word\nworld\nfoo bar\nbar\nfoo\"\"\")\n'4.5'\nSample Case 3\n\n>>> solution(\"\"\"9\na a a a a a a a a\nb b b b b\nc c c c\nd d d\ne e e e\nf f f\ng g g g\nh h h\ni i i i\nj j j j j\nk k k k k\nl l l\nm m m m m\nn n n\no o o o o\np p p p p\nq q q q q q\nr r r r r\ns s s s s\nt t t t t\nu u u u u\nv v v v v\nw w w w w\nx x x x x\ny y y y y\nz z z z z\n1 1 1 1 1 1 1 1 1\"\"\")\n'27.0'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\neverything\") == 2\nassert solution(\"1\\neverything\") == 1\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INP) == OUTP\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(inp) == \"2\"\nassert solution(inp2) == \"1\"\nassert solution(inp3) == \"0\"\n=====Sample Test Cases=====\nINPUT\n3\ncat mat cats\ndog dogs dogs\nOUTPUT\n3\n1\n1\n>>>>>>> Stashed changes\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n    aeiouy''') == 2\nassert solution('''1\n    abracadabra''') == 11\nassert solution('''3\n    abracadabra\n    xzcde''') == 13\nassert solution('''8\n    abracadabra\n    xyz\n    jklmno\n    pqrstuvwxyz''') == 23\nassert solution('''8\n    xyx\n    xyx\n    xyx\n    xyx\n    xyx\n    xyx\n    xyx\n    xyx\n    xyx''') == 3\n\n=====Sample Input/Output 1=====\nExplanation\nInput:\n    5\n    aeiouy\n    abracadabra\n    xzcde\n    jklmno\n    pqrstuvwxyz\n\nOutput:\n    2\n\nExplanation\n    'aeiouy' has 2 vowels.\n    'abracadabra' has 11 vowels.\n    'xyz' has 13 vowels.\n    'jklmno' has 13 vowels.\n    'pqrstuvwxyz' has 23 vowels.\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 aloe') == '1'\nassert solution('2\\n3 aloe 4\\nee') == '2'\nassert solution('3\\n4 aloe 5\\nee 6') == '3'\nassert solution('4\\n7 aloe 8\\nee 9') == '4'\nassert solution('5\\n10 aloe 11\\nee 12') == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 71
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nhello\\nhola\\n\") == 1\nassert solution(\"2\\na\\na\\na\\na\\na\\na\\n\") == 3\nassert solution(\"3\\nhe\\nis\\nnot\\n\") == 1\n\n'''\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"apple\", \"app\"]) == \"1\"\nassert solution([\"ba\", \"b\"]) == \"0\"\n=====Sample Input & Output Section===\nInput\n\n5\napple\napp\nbad\nawesome\nfoo\n\nOutput\n\n1\n0\n0\n0\n0\n\nExplanation\n\nSample Case 1\nSample Case 2\nSample Case 3\nSample Case 4\nSample Case 5\n=========================\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\ni love you''') == \"1\"\n\nassert solution('''2\nyay''') == \"2\"\n\nassert solution('''3\nthis is a test''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('MCMXC') == \"True\"\nassert solution('MMM') == \"True\"\nassert solution('MMMMCMXC') == \"True\"\nassert solution('MMMMCM') == \"False\"\nassert solution('MMMM') == \"False\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('III') == 'True'\nassert solution('I') == 'True'\nassert solution('V') == 'True'\nassert solution('X') == 'True'\nassert solution('L') == 'True'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''MMCMM\nMMMCC\n''') == 'True'\nassert solution('''MMMCCCCC\nMMMCCCCCC\nMMMCCCCCC\nMMMCCCCCCC\nMMMCCCCCCCC\nMMMCCCCCCCCCC\nMMMCCCCCCCCCCCC\nMMMCCCCCCCCCCCCC\nMMMMCCCCCCCCCCCCC\nMMMMCCCCCCCCCCCCCC''') == 'True'\nassert solution('''MMMMM\nMMMMM\nMMMM\nMMMM\nMMMMMM\n''') == 'False'\nassert solution('''MMMMM\nMMMMM\nMMMM\nMMMM\nMMMMMMMM\nMMMMMMMMM''') == 'False'\nassert solution('''MMMMM\nMMMMM\nMMMMM\nMMMM\nMMMMMMMMMM\nMMMMMMMMMMMMMMMMM''') == 'False'\n\n=====Sample Test Cases=====\nIn Sample Case #1:\n\nprint(solution('''MMCMM\nMMMCC\nMMMMMM'''))\nOutPut:\nTrue\n\nIn Sample Case #2:\n\nprint(solution('''MMMCC\nMMMCCCC\nMMMMMMMM'''))\nOutPut:\nTrue\n\nIn Sample Case #3:\n\nprint(solution('''MMMCCCC\nMMMCCCCCC\nMMMCCCCCC\nMMMCCCCCC\nMMMCCCCCCCC\nMMMCCCCCCCCCCCC'''))\nOutPut:\nFalse\n\nIn Sample Case #4:\n\nprint(solution('''MMMMMMMMM\nMMMMMMMMMMMM\nMMMMMMMMMMMMMM\nMMMMMMMMMMMMMM\nMMMMMMMMMMMMMMMMMMM'''))\nOutPut:\nFalse\n\nIn Sample Case #5:\n\nprint(solution('''MMMMMMMMMMMMMMMMMMMM\n
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"MCMXCIV\") == True\nassert solution(\"III\") == True\nassert solution(\"X\") == True\nassert solution(\"VIII\") == True\nassert solution(\"IX\") == True\n",
        "num_ids_2": 19,
        "num_ids_4": 36
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"MDCLXVI\") == True\nassert solution(\"MMCDLXXVI\") == True\nassert solution(\"MMCDLXXXVI\") == True\nassert solution(\"MMCDLXXXVIII\") == False\nassert solution(\"MMCDLXXXIX\") == False\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"X\") == True\nassert solution(\"V\") == False\nassert solution(\"L\") == True\nassert solution(\"C\") == False\nassert solution(\"D\") == True\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('MCMXCIX') == True, \"Solution needs to be True\"\n\nassert solution('I') == False, \"Solution needs to be False\"\n\nassert solution('C') == False, \"Solution needs to be False\"\n\nassert solution('IX') == False, \"Solution needs to be False\"\n\nassert solution('MCMLXXXVI') == False, \"Solution needs to be False\"",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"MDCCCLXXVI\") == True\nassert solution(\"IX\") == True\nassert solution(\"MMMCMXCIX\") == False\nassert solution(\"MDCCCLXXIV\") == False\nassert solution(\"MCMXCIV\") == False\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"MMMM\") == True\nassert solution(\"DD\") == False\nassert solution(\"VII\") == False\nassert solution(\"MMM\") == True\nassert solution(\"XXXX\") == True\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('VI') == True, \"Invalid Roman Numeral\"\nassert solution('MCMXCIV') == True, \"Invalid Roman Numeral\"\nassert solution('M') == True, \"Invalid Roman Numeral\"\nassert solution('MCDLXXVI') == False, \"Invalid Roman Numeral\"\nassert solution('CCXC') == False, \"Invalid Roman Numeral\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n+91 8661919695\\n+91 8661919696\\n\") == \"+91 8661919695\\n+91 8661919696\\n\"\nassert solution(\"1\\n+91 8661919695\\n\") == \"+91 8661919695\\n\"\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '+91 0123456789\\n+91 21234567890\\n+91 31234567890\\n+91 41234567890\\n+91 51234567890'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n919650550415\\n911453119839\\n921025471353\\n911005533444\") == \"+91 919650550415\\n+91 91 1234567891\\n+91 91 915123456\\n+91 911 554 12345\"\n\nsolution(\"3\\n919650550415\\n911453119839\\n921025471353\\n911005533444\") == \"\"\n\n=====Explanation=====\nUsing the given example, we can see that the numbers are not printed in the required format. They can be printed like this:\n+91 91234 554 123\n+91 91234 554 12\n+91 91234 554 123\n+91 91234 554 1234\n\n+91 91234 554 123\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n\n+91 91234 554 1234\n+91 91234 554 1234\n+91 91234 554 123\n+91 91234 554 123\n\n+91 91234 554 12\n+91 91234 554 123\n+91 91234 554 123\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 1234\n+91 91234 554 12345\n\n+91 91234 554 12345\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 554 12345\n+91 91234 554 12345\n+91 91234 554 1234\n\n+91 91234 554 1234\n+91 91234 5",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n+91 8444 3233\n+91 9444 2344\n''') == '''+91 8444 3233\n+91 9444 2344'''\n\n=====Explanation=====\nNo prefix is used so we print as it is.\n\nNote: A +91 prefix ('+91') is present in the input. A '0' prefix ('0') is present in the input. So, we have to handle both the cases.\n\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n91107788888\") == \"91107788888+91\"\nassert solution(\"2\\n96645368888\") == \"96645368888+9\"\nassert solution(\"3\\n966 123 456\") == \"9661234556+9\"\n\n=====Constraints=====\n* 1 <= N <= 10 ** 6\n* Input contains only digits\n* 0 <= N * 10 ** 5 <= 10 ** 10\n* N * 10 ** 5 <= 10 ** 10\n* Input contains at least one number\n\n=====Example Input=====\nInput 1\n\n1\n96645368888\n966 123 456\nInput 2\n\n2\n966 123 456\n96645368888\nInput 3\n\n3\n966 123 456\n966 45\nInput 4\n\n4\n91\n97636756988\n966 123 456\n96645368888\nInput 5\n\n5\n966 123 456\n966 45\n966 45\n966 123 456\n96645368888\nInput 6\n\n6\n91\n966 123 456\n966 45\n966 45\n966 123 456\n966 45\n966 123 456\nInput 7\n\n7\n91\n966 123 456\n966 45\n966 45\n966 45\n966 123 456\n966 45\n966 123 456\n\n=====Constraints=====\n* 1 <= N <= 10 ** 6\n* Input contains only digits\n* 0 <= N * 10 ** 5 <= 10 ** 10\n* N * 10 ** 5 <= 10 ** 10\n* Input contains at least one number\n\n=====Explanation=====\nIn the first case, we need to remove prefix 0 from number and print it on separate lines.\n\nIn the second case, we need to remove prefix 91 from numbers and print it on separate lines.\n\nIn the third case, we need to remove prefix 966 from numbers and print it on separate lines.\n\nIn the fourth case, we need to remove prefix 966 from numbers and print it on separate lines.\n\nIn the fifth case, we need to remove prefix 966 from numbers and print it on separate lines.\n\nIn the sixth case, we need to remove prefix 91 from numbers and print it on separate lines.\n\nIn the seventh case, we need to remove prefix 9 from numbers and print it on separate lines.\n\nIn the eighth case, we need to remove prefix 9 from numbers and print it on separate lines.\n\n=====Test Case Explanation=====\nTest Case 1\n\nInput\n\n1\n91107788888\n\nOutput\n\n91107788888+91\n\nTest Case 2\n\nInput\n\n2\n96645368888\n\nOutput\n\n96645368888+9\n\nTest Case 3\n\nInput\n\n3\n966 123 456\n\nOutput\n\n9661234556+9\n\nTest Case 4\n\nInput\n\n4\n91\n97636756988\n966 123 456\n\nOutput\n\n91+97636756988+9\n\nTest Case 5\n\nInput\n\n5\n966 123 456\n966 45\n966 45\n966 123 456\n966 45\n966 123 456\n\nOutput\n\n9661234556+96645368888+9+9661234556+9\n\nTest Case 6\n\nInput\n\n6\n91\n966 123 456\n966 45\n966 45\n966 123 456\n966 45\n966 123 456\n\nOutput\n\n91+966123456+96645368888+9+966123456+9\n\nTest Case 7\n\nInput\n\n7\n91\n966 123 456\n966 45\n966 45\n966 45\n966 123 456\n966 45\n966 123 456\n\nOutput\n\n91+966123456+96645368888+9+966123456+9+966123456+9+966123456+9\n=====Happy Coding=====\n",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n+91 9384775234\n+91 93837775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 9384775234\n+91 93837775234\n+91 93847",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\\n+91 9876 2345\\n\") == \"+91 987 6 543 23\\n+91 9876 543 23\\n+91 9876 543 24\\n+91 9876 543 25\\n+91 9876 543 26\\n+91 9876 543 27\\n+91 9876 543 28\\n+91 9876 543 29\\n+91 9876 543 30\\n\")\n\n=====Explanation=====\nAfter sorting the numbers, we get all the mobile numbers in the required format.\n\nhttps://www.codechef.com/problems/MOVOLIB\n========================================\n'''\nimport unittest",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n+91 99999999 99 99999999\\n+91 99999999 99999999\\n+91 99999999 99999999\\n+91 99999999 99999999\\n+91 99999999 99999999') == \"+91 99999999 99999999\\n+91 99999999 99999999\\n+91 99999999 99999999\\n+91 99999999 99999999\"",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8\n9055551234\n8829462228\n8829462229\n91985551234\n91985551235\n8829462223\n8829462224\n8829462225\n91985551234''') == '''+91 9155551234\n+91 91985551234\n+91 9155551235\n+91 91985551234\n+91 91985551235\n+91 91985551234\n+91 91985551235\n+91 91985551234'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n789546382\\n987643210\\n987643210\\n789\") == \"+91 789546382\\n+91 9876 4283 10\\n+91 9876 4283 10\\n+91 9876 4283 10\\n+91 9876 4283 10\"\nprint(solution(\"6\\n987654321\\n987654321\\n987654321\\n987654321\\n987654321\\n987654321\\n987654321\\n987654321\\n987654321\"))",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\nalpha 100\\nbeta 50\\nbeta\\n\") == \"50.0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha') == '50.0'\nassert solution('1\\nalpha 100\\nbeta 50\\nbeta\\nalpha') == '50.0'\nassert solution('3\\nalpha 100\\nbeta 50\\nbeta\\nalpha') == '50.0'\n'''\n\nimport statistics\n",
        "num_ids_2": 55,
        "num_ids_4": 81
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nbeta:70 20 50\") == '50.00'\nassert solution(\"2\\nalpha:20 40 90\\nbeta:70 50 80\") == '69.20'\nassert solution(\"2\\nalpha:20 40 90\\nbeta:50 50 80\") == '69.20'\n=====Submission Comment=====\nThe submitted function solution(\"\"\"<string>:<string>\"\"\") must return a value of type <string> (unicode).\n\n=====Test Case=====\nInput:\n    stdin = \"{alpha:20,beta:30,gamma:50}\"\nOutput:\n    alpha:20.00\n    beta:30.00\n    gamma:50.00\n\nInput:\n    stdin = \"{alpha:20,beta:30,gamma:50}\n    query_name = \"gamma\"\nOutput:\n    gamma:50.00\n\nInput:\n    stdin = \"{alpha:20,beta:30,gamma:50}\n    query_name = \"alpha\"\nOutput:\n    alpha:20.00\n\nInput:\n    stdin = \"{alpha:20,beta:30,gamma:50}\n    query_name = \"beta\"\nOutput:\n    beta:30.00\n\nInput:\n    stdin = \"{alpha:20,beta:30,gamma:50}\n    query_name = \"delta\"\nOutput:\n    error\n\nInput:\n    stdin = \"{alpha:20,beta:30,gamma:50}\n    query_name = \"gamma\"\nOutput:\n    error\n\nInput:\n    stdin = \"{alpha:20,beta:30,gamma:50}\"\n    query_name = \"beta\"\nOutput:\n    error\n\"\"\"\n",
        "num_ids_2": 45,
        "num_ids_4": 71
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\nalpha 20\\nbeta 30\\nalpha\\nbeta\") == \"40.0\"\nassert solution(\"2\\nalpha 20\\nbeta 30\\nalpha\\nbeta\") == \"40.0\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\nalpha 100\\nbeta 90\\nalpha\\ngamma 80\\nalpha\\n') == '80.00'\n=====Code Challenge=====\nName: \n    Find the percentage\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nalpha 100\\nbeta 90\\nalpha\\n') == \"90.00\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nalpha 100\\nbeta 90\\nalpha\\ntry\\nalpha\\n') == '90.00'\n\nassert solution('3\\nalpha 100\\nbeta 90\\nalpha\\ntry\\nalpha\\n') == '90.00'\n\nassert solution('10\\nHarsh 25 20 30\\nJane 60 50 40\\nJohn 70 80 90\\nAlex 70 80 80\\nBob 100 90 90\\nClare 25 20 40\\nMike 80 70 90\\nMaddy 70 80 90\\nAlex 25 20 40\\nWilliam 50 60 60\\n') == '40.00'\n\n=====Test Cases=====\nInput:\n5\nHarsh 25 20 30\nJane 60 50 40\nJohn 70 80 90\nAlex 70 80 80\nBob 100 90 90\nClare 25 20 40\nMike 80 70 90\nMaddy 70 80 90\nAlex 25 20 40\nWilliam 50 60 60\n\nOutput:\n40.00\n\n=====Explaination=====\nInput:\nIn this test case, the input is 5 records.\nEach record contains a student name and a student's marks obtained.\nThe first record contains Harsh 25 20 30. The average marks of Harsh is (25+20+30)/3 = 40.\nThe second record contains Jane 60 50 40. The average marks of Jane is (60+50+40)/3 = 50.\nThe third record contains John 70 80 90. The average marks of John is (70+80+90)/3 = 70.\nThe fourth record contains Alex 70 80 80. The average marks of Alex is (70+80+80)/3 = 70.\nThe fifth record contains Bob 100 90 90. The average marks of Bob is (100+90+90)/3 = 90.\n\nThe student name is 'Clare'. So the average marks of 'Clare' is (25+20+30)/3 = 40.\n\nInput:\nIn this test case, the input is 10 records.\nThe first record contains Harsh 25 20 30. The average marks of Harsh is (25+20+30)/3 = 40.\nThe second record contains Jane 60 50 40. The average marks of Jane is (60+50+40)/3 = 50.\nThe third record contains John 70 80 90. The average marks of John is (70+80+90)/3 = 70.\nThe fourth record contains Alex 70 80 80. The average marks of Alex is (70+80+80)/3 = 70.\nThe fifth record contains Bob 100 90 90. The average marks of Bob is (100+90+90)/3 = 90.\nThe sixth record contains Claire 25 20 40. The average marks of Claire is (25+20+40)/3 = 40.\nThe seventh record contains Mike 80 70 90. The average marks of Mike is (80+70+90)/3 = 70.\nThe eight record contains Maddy 70 80 90. The average marks of Maddy is (70+80+90)/3 = 70.\nThe ninth record contains Alex 25 20 40. The average marks of Alex is (25+20+40)/3 = 40.\nThe tenth record contains William 50 60 60. The average marks of William is (50+60+60)/3 = 50.\n\nOutput:\n40.00\n\n>>>>>>> 1.1 (20191126)\n",
        "num_ids_2": 62,
        "num_ids_4": 139
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nalpha 100\\nbeta 90\\nalpha\\nalpha') == '90.00'\nassert solution('5\\nA 100\\nB 90\\nA\\nB\\nB') == '50.00'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nalpha 100\\nbeta 50 50 50\\nalpha\\nbeta') == '50.00'\nassert solution('6\\nalpha 100\\nbeta 55 55 55\\nalpha\\nbeta') == '55.00'\nassert solution('6\\nalpha 100\\nbeta 55 55 55\\nalpha\\nbeta') == '55.00'\n=====Coding Exercise=====\n'''\nOutput:\nstudent name: alpha\nAverage: 50.00\n'''\n",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha\\n') == '50.0'\nassert solution('6\\nhello world\\nhello world\\nhello world\\nhello world\\nhello world\\n') == 'hello world'\nassert solution('1\\nbeta\\n') == 'beta'\n\"\"\"",
        "num_ids_2": 64,
        "num_ids_4": 79
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n    Bob Thomson 20 M\n    Tom Hanks 25 M\n    Steve Smith 30 F''') == 'Mr. Bob Thomson\\nMs. Tom Hanks\\nMs. Steve Smith\\nMs. Steven Wozniak\\nMs. Tom Hanks\\nMs. Steve Wozniak\\nMs. Steven Wozniak\\nMs. Tom Hanks\\nMs. Steven Wozniak'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    \"Anya\",\n    \"Sasha\",\n    \"Alex\",\n    \"Henry\",\n    \"Iva\",\n    \"Bob\",\n    \"Dylan\",\n    \"Tanya\",\n    \"Sasha\",\n    \"Masha\",\n    \"Mary\"\n]) == \"\"\"Ms. Masha\nMr. Henry Davids\nMr. Iva\nMr. Alex\nMs. Sasha\nMr. Alex\nMr. Tanya\nMr. Dana\nMr. Jane\nMs. Anna\nMs. Jane\nMs. George\nMs. Mary\"\"\", \"Should output the names of people sorted according to their age in ascending order.\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nMarry Simion\\n50\\nF\\n\") == \"Ms. Marry Simion\\n\"\nassert solution(\"2\\nHendry\\n27\\nM\\n\") == \"Hendry\\n\"\nassert solution(\"3\\nToby\\n29\\nM\\n\") == \"Toby\\n\"\nassert solution(\"4\\nBob\\n22\\nM\\n\") == \"Bob\\n\"\nassert solution(\"5\\nJill\\n54\\nF\\n\") == \"Jill\\n\"\n",
        "num_ids_2": 58,
        "num_ids_4": 106
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nDiana 99 Alice\\nKaren 18\\nSylvester 20\\nRohit 33\") == \"Diana Alice Karen Rohit\"\nassert solution(\"2\\nDiana\\nKaren\") == \"Diana Karen\"\nassert solution(\"1\\nRohit\\n\") == \"Rohit\"\nassert solution(\"5\\nAlice\\nBob\\nCarol\\nDavid\\nEdward\") == \"Alice David Carol Edward Bob\"\n",
        "num_ids_2": 59,
        "num_ids_4": 108
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nA.M.Deera\\n2\\nM.Leo\\n3\\nF.Natasha\") == \"Mr. Leo\\nMs. Natasha\\nMr. A.M. Deera\"\nassert solution(\"2\\nM.John\\n3\\nM.Jacob\\n\") == \"Ms. Jacob\\nMr. John\\nMs. M.John\"\nassert solution(\"5\\nF.Hannah\\n6\\nF.Noah\\n7\\nF.Caleb\\n\") == \"Ms. Noah\\nMs. Caleb\\nMs. F.Hannah\\nMr. Noah\\nMr. Caleb\\nMr. F.Hannah\"\nassert solution(\"8\\nB.Ronald\\n9\\nB.Sebastian\\n\") == \"Mr. Sebastian\\nMr. Ronald\\nMs. B.Ronald\\nMs. Sebastian\"\nassert solution(\"1\\nA.M.Deera\\n2\\nM.Leo\\n3\\nF.Natasha\\n\") == \"Mr. Leo\\nMs. Natasha\\nMr. A.M. Deera\"\n",
        "num_ids_2": 92,
        "num_ids_4": 210
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nHeraldo Memelli 8 1\\nOla Levi 2 1\\nLorena Carvalho 13 1\\nIsaac Asimov 5 1\\n\") == \"Heraldo Memelli\\nOla Levi\\nLorena Carvalho\\nIsaac Asimov\\n\"\nassert solution(\"5\\nHeraldo Memelli 8 1\\nOla Levi 2 1\\nLorena Carvalho 13 1\\nIsaac Asimov 5 1\\n\") == \"Heraldo Memelli\\nOla Levi\\nLorena Carvalho\\nIsaac Asimov\\n\"\nassert solution(\"2\\nOla Levi 2 1\\nHeraldo Memelli 8 1\\n\") == \"Ola Levi\\nHeraldo Memelli\\n\"\nassert solution(\"2\\nOla Levi 2 1\\nHeraldo Memelli 8 1\\n\") == \"Ola Levi\\nHeraldo Memelli\\n\"\nassert solution(\"5\\nHeraldo Memelli 8 1\\nOla Levi 2 1\\nLorena Carvalho 13 1\\nIsaac Asimov 5 1\\n\") == \"Heraldo Memelli\\nOla Levi\\nLorena Carvalho\\nIsaac Asimov\\n\"\n",
        "num_ids_2": 142,
        "num_ids_4": 220
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nMike Thomson 20 M\\nLisa Sutter 24 F\\nEthan Hawkes 20 M\\nMikey Smith 18 F\\nMisha Pritchett 18 M') == '\\nMs. Mikey Smith\\nMr. Mike Thomson\\nMr. Misha Pritchett\\nMr. Ethan Hawkes\\nMs. Lisa Sutter\\nMr. Lisa Sutter\\n'\n\n=====Sample Input and Output=====\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nEmma 32 F\\nMyla 24 M\\nHenry 17 M\") == \"Emma Myla Henry\"\nassert solution(\"2\\nEmma 32 F\\nMyla 24 M\") == \"Emma Myla\"\nassert solution(\"1\\nHenry 17 M\") == \"Henry Myla\"\nassert solution(\"1\\nMyla 24 M\") == \"Myla Myla\"\nassert solution(\"1\\nEmma 32 F\") == \"Emma Emma\"\n\n=====Sample Input=====\n6\nEmma 32 F\nMyla 24 M\nHenry 17 M\nMary George\nMs. Mary George\nMs. Mary George\n\n=====Sample Output=====\nEmma Myla\nMyla Myla\nEmma Myla\nMyla Myla\nMs. Mary George\nMs. Mary George\n",
        "num_ids_2": 58,
        "num_ids_4": 96
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\n    'Akhil', 'Manju',\n    'Dhruv', 'Manju',\n    'Akhil', 'Manju',\n    'Dhruv', 'Manju',\n    'Akhil', 'Manju',\n    'Dhruv', 'Manju',\n]) == 'Mr. Akhil\\nMs. Manju\\nMr. Dhruv\\nMs. Manju\\nMr. Akhil\\nMs. Manju\\nMr. Dhruv\\nMs. Manju'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3,1,1,2]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([1,2,3,4]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([1,1,1,2]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\nassert solution([1,1,1,2]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n\n=====Output Format=====\nPrint an array of the elements that do not sum to n = 3\n",
        "num_ids_2": 136,
        "num_ids_4": 272
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n\n\n'''\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([2, 2, 2, 2]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n=====Output Format=====\nPrint the list of 3D coordinates on separate lines, like below:\n[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n'''",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1,1,2,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution([1,1,2,3]) == \"it's not 3\"\n\n=====Output Format=====\nPrint the list of coordinates in lexographic order.\n\n=====Sample Input/Output=====\nInput\n\n5 4 3 4\n\nOutput\n\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\nSample Input\n\n3 1 3 4\n\nSample Output\n\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\nExplanation\n\nHere are all possible solutions:\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n'''\n\nfrom itertools import product\n\nx = int(input())\ny = int(input())\nz = int(input())\nn = int(input())",
        "num_ids_2": 105,
        "num_ids_4": 105
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n1\n2\n3\n''') == [[0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [0,1,2], [1,0,0], [1,0,1], [1,0,2], [1,1,0], [1,1,1], [1,1,2]]\nassert solution('''\n1\n2\n3\n3\n''') == [[0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [0,1,2], [1,0,0], [1,0,1], [1,0,2], [1,1,0], [1,1,1], [1,1,2]]\nassert solution('''\n0\n1\n2\n3\n4\n5\n''') == [[0,0,0], [0,0,1], [0,0,2], [0,1,0], [0,1,1], [0,1,2], [1,0,0], [1,0,1], [1,0,2], [1,1,0], [1,1,1], [1,1,2]]\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 2 3\") == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\nassert solution(\"1 1 2 2\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\nassert solution(\"1 2 1 2\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\nassert solution(\"1 2 2 1\") == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n=====Output Format=====\nPrint the elements of the list in lexographic increasing order.\n\n=====Sample Input=====\n1 1 2 3\n\n=====Sample Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n>>>\n\n\"\"\"\n",
        "num_ids_2": 160,
        "num_ids_4": 292
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 1 2 3\") == \"[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\"\nassert solution(\n    \"1 1 1 3\") == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [0, 3, 0], [0, 3, 1], [0, 4, 0], [0, 4, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 4, 0], [1, 4, 1], [1, 4, 2], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 4, 0], [2, 4, 1], [2, 4, 2], [3, 0, 0], [3, 0, 1], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 4, 0], [3, 4, 1], [3, 4, 2]]\"\nassert solution(\n    \"3 2 3 2\") == \"[[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [0, 2, 0], [0, 2, 1], [0, 3, 0], [0, 3, 1], [0, 4, 0], [0, 4, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 3, 0], [1, 3, 1], [1, 3, 2], [1, 4, 0], [1, 4, 1], [1, 4, 2], [2, 0, 0], [2, 0, 1], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 3, 0], [2, 3, 1], [2, 3, 2], [2, 4, 0], [2, 4, 1], [2, 4, 2], [3, 0, 0], [3, 0, 1], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 3, 0], [3, 3, 1], [3, 3, 2], [3, 4, 0], [3, 4, 1], [3, 4, 2]]\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([int(i) for i in stdin.split()]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1 2 3\") == \"[0,0,0] [0,0,1] [0,0,2] [0,1,0] [0,1,1] [0,1,2] [1,0,0] [1,0,1] [1,0,2] [1,1,0] [1,1,1] [1,1,2]\"\n=====Output=====\n[0,0,0] [0,0,1] [0,0,2]\n\n=====Test Case 1=====\n>>>>>>> parent of f4dd7a... f5f22\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1+2i') == '1-2i'\nassert solution('3+4i') == '7+8i'\nassert solution('-1-2i') == '-3-4i'\nassert solution('4+5i') == '4+5i'\n=====Sample Test Cases=====\nTest case 1\n>>> solution('1+2i')\n'1-2i'\nTest case 2\n>>> solution('3+4i')\n'7+8i'\nTest case 3\n>>> solution('-1-2i')\n'-3-4i'\nTest case 4\n>>> solution('4+5i')\n'4+5i'\n=====Explanation=====\nExample 1:\n\nInput:\n1 + 2i\nOutput:\n1 - 2i\n\nExample 2:\n\nInput:\n3 + 4i\nOutput:\n7 + 8i\n\nExample 3:\n\nInput:\n-1 - 2i\nOutput:\n-3 - 4i\n\nExample 4:\n\nInput:\n4 + 5i\nOutput:\n4 + 5i\n\n'''\nimport cmath\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2+3i') == '2+3i'\nassert solution('1+3i') == '1+3i'\nassert solution('1+1i') == '1+1i'\nassert solution('1+-1i') == '0.00-1.00i'\nassert solution('-1+1i') == '0.00+1.00i'\n=====Test cases=====\nTest case 1:\nInput:\n1+3i\n\nOutput:\n1+3i\n\nExplanation:\nReplace the plus symbol (+) with a minus symbol (-)\n\nTest case 2:\nInput:\n1+1i\n\nOutput:\n1+1i\n\nExplanation:\nNo change in the output as neither real nor imaginary part is zero\n\nTest case 3:\nInput:\n1+-1i\n\nOutput:\n0.00+1.00i\n\nExplanation:\nNo change in the output as real part is zero\n\nTest case 4:\nInput:\n-1+1i\n\nOutput:\n0.00+1.00i\n\nExplanation:\nNo change in the output as real part is zero\n\n=====Hint=====\nYou can use the modulus operator and extract the real part and imaginary part using the % operator\n\n=====Solution=====\n",
        "num_ids_2": 32,
        "num_ids_4": 69
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '3'\nassert solution('-1 -2') == '1'\nassert solution('1 -2') == '-3'\nassert solution('1 2 -2') == '-1'\nassert solution('-1 2') == '-3'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2i\") == \"1.00+2.00i\"\nassert solution(\"1 + 2i\") == \"1.00+2.00i\"\nassert solution(\"0.00 -1.00i\") == \"0.00+-1.00i\"\n=====Test Input=====\n1 1\n1 2i\n0.00 -1.00i\n=====Test Output=====\n1.00+2.00i\n-1.00+2.00i\n0.00+-1.00i\n1.00+-1.00i\n",
        "num_ids_2": 40,
        "num_ids_4": 65
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1.3+5.7i\") == \"1.3+5.7i\"\nassert solution(\"-1.3-5.7i\") == \"1.3-5.7i\"\nassert solution(\"0.1+0.2i\") == \"0.1+0.2i\"\nassert solution(\"0.2+0.2i\") == \"0.2+0.2i\"\nassert solution(\"0.2-0.2i\") == \"0.2-0.2i\"\n",
        "num_ids_2": 49,
        "num_ids_4": 97
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.5+2.7i') == '-1.5+2.7i', \"Wrong Answer\"\nassert solution('-3.2+4.2i') == '-3.2+4.2i', \"Wrong Answer\"\nassert solution('4.2+0.2i') == '4.2+0.2i', \"Wrong Answer\"\n=====Explanation=====\nReturn the addition, subtraction, multiplication, division and modulus of the two complex numbers entered by the user.\n\n>>>>>>> 3.7.1 (F10)\n",
        "num_ids_2": 61,
        "num_ids_4": 90
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1 1\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 0\") == \"0.00i\"\n=====Submission Details=====\nWrite your code in this file and upload it to codewars.com for 2 points.\n\n=====Test Cases=====\nYour code should pass the following test cases.\nNote that, in your code, please use \"print\" to print the output.\nNote that, in your code, \"return\" should not be used.\nNote that, in your code, the \"input\" statement should not be used.\n\nInput:\n1 1\n\nOutput:\n1 1\n\nInput:\n1 0\n\nOutput:\n1\n\nInput:\n0 0\n\nOutput:\n0.00i\n\nInput:\n0 0.5\n\nOutput:\n0.5+0.5i\n\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2+3i\", \"Should be 2+3i\"\nassert solution(\"1 -3i\") == \"1+3i\", \"Should be 1+3i\"\nassert solution(\"1 -3\") == \"1-3i\", \"Should be 1-3i\"\nassert solution(\"1i\") == \"1.00i\", \"Should be 1.00i\"\nassert solution(\"1.0i\") == \"1.00i\", \"Should be 1.00i\"\n",
        "num_ids_2": 46,
        "num_ids_4": 91
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.1+2.2i') == '1.1+2.2i', \"Wrong solution\"\nassert solution('-1.1+2.2i') == '-1.1+2.2i', \"Wrong solution\"\nassert solution('0.0+1.0i') == '0.00+1.00i', \"Wrong solution\"\nassert solution('0.0+1.1i') == '0.00+1.10i', \"Wrong solution\"\nassert solution('1.1+0.1i') == '1.1+0.10i', \"Wrong solution\"\n",
        "num_ids_2": 60,
        "num_ids_4": 118
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('xyz') == 'xaybzc', f'expected {x} but got {y}'\nassert solution('abc') == 'xaybzc', f'expected {x} but got {y}'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\nassert solution(\"12345\\n45321\") == \"12345\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"2\"\nassert solution(\"0\\n0\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 60
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('xyz\\nabc') == 'xaybzc'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('xyz') == 'xaybzc', 'Wrong result'\nassert solution('abc') == 'xyz', 'Wrong result'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"01B0\") == \"00\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('01B0') == '00'\nassert solution('01') == '00'\nassert solution('0') == '00'\nassert solution('1') == '01'\nassert solution('B') == '00'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('01B0') == '00'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"01B0\") == \"00\"\nassert solution(\"000000\") == \"000000\"\nassert solution(\"10100\") == \"01\"\nassert solution(\"00000101B0\") == \"01\"\nassert solution(\"0B0\") == \"00\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('01B0') == '00'\nassert solution('01BA') == '00'\nassert solution('01BAA') == '00'\nassert solution('01BAB') == '00'\nassert solution('0A') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"01B0\") == \"00\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('01B0') == '00'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('01B0') == '00'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('01B0') == '00'\nassert solution('01B1') == '01'\nassert solution('01B2') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"01B0\") == \"00\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '4'\nassert solution('1') == '0'\nassert solution('2') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n\"\"\") == \"4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '4'\nassert solution('2\\n') == '2'\nassert solution('5\\n') == '4'\nassert solution('10\\n') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1 5 4 3\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
        "num_ids_2": 1745,
        "num_ids_4": 1745
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"A\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 38
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == 'A'\nassert solution('aca') == 'A'\nassert solution('accc') == 'C'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'A'\nassert solution('ca') == 'C'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''aca\naccc\nca''') == 'A'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"aca\",\"accc\",\"ca\"]) == \"A\"\nprint(solution([\"aca\",\"accc\",\"ca\"]))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\n\nassert solution(\"5 5 7\") == \"YES\"\n\nassert solution(\"10 10 7\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\nassert solution(\"8 2 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 5 4') == 'NO'\nassert solution('2 2 7') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 7') == 'YES'\n\"\"\"\nA, B, C = map(int, input().split())\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 1 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\\n\") == \"YES\"\nassert solution(\"5 5 7\\n\") == \"YES\"\nassert solution(\"5 5 7\\n\") == \"YES\"\nassert solution(\"5 5 7\\n\") == \"YES\"\nassert solution(\"5 5 7\\n\") == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('5 1 7') == 'NO'\nassert solution('5 5 7') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"10 10 10\") == \"NO\"\nassert solution(\"1 1 5\") == \"NO\"\nassert solution(\"1 1 1\") == \"NO\"\nassert solution(\"10 10 5\") == \"YES\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"3 3 3\") == \"YES\"\nassert solution(\"5 5 7 5 7 5\") == \"YES\"\nassert solution(\"5 5 7 5 7 5 6\") == \"NO\"\nassert solution(\"5 5 7 5 7 5 8\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '11'\nassert solution('1000000') == '1269503044106543245680'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"11\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '11'\nassert solution('5') == '11'\nassert solution('6') == '12'\nassert solution('7') == '13'\nassert solution('8') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '11'\nassert solution('6') == '12'\nassert solution('7') == '21'\nassert solution('8') == '22'\nassert solution('9') == '32'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n\") == \"11\"\nassert solution(\"2\\n\") == \"3\"\nassert solution(\"3\\n\") == \"4\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '11'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('5') == '11'\nassert solution('10') == '12'\nassert solution('1000') == '100011'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"11\"\nassert solution(\"6\") == \"18\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'\nassert solution('5') == '11'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '7'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('4') == '7'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '7'\nassert solution(input()) == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '7'\nassert solution('3') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('4') == '5'\nassert solution('5') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '7'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '8'\nassert solution('2') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"8\"\nassert solution(\"1\") == \"4\"\nassert solution(\"1\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4\n1''') == '8'\nassert solution('''3\n4\n2''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 2 3\n''') == '11'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '11'\nassert solution('2\\n1 2 3') == '11'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '11'\nassert solution('3\\n1 2 3') == '7'\nassert solution('2\\n4 5\\n3 2') == '12'\nassert solution('3\\n1 2\\n2 3') == '13'\n",
        "num_ids_2": 31,
        "num_ids_4": 67
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"15\"\nassert solution(\"5\") == \"21\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3\") == \"11\"\nassert solution(\"2 4 6\") == \"14\"\n\n\"\"\"\n\n\nimport sys\nfrom functools import reduce\nimport operator\n\nN = int(sys.stdin.readline().strip())\nA = list(map(int, sys.stdin.readline().strip().split()))\n\ncount = 0\nfor i in range(N):\n    for j in range(i+1, N):\n        count += A[i]*A[j]\n        count %= (10**9+7)\n\nprint(count)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '11'\nassert solution('3') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"10\"\nassert solution(\"5\") == \"193\"\nassert solution(\"6\") == \"432\"\nassert solution(\"7\") == \"630\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '11'\nassert solution('3') == '11'\nassert solution('4') == '11'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"11\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"6 3 2\") == \"NO\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 3 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2\") == \"YES\"\nassert solution(\"4 3 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"YES\"\nassert solution(\"123\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"0 3 2\") == \"NO\"\n\"\"\"\n\na = input().split()\nred_num = int(a[0])\ngreen_num = int(a[1])\nblue_num = int(a[2])",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"4 3 1\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 3') == 'NO'\n\nassert solution('7 6 5') == 'YES'\n\nassert solution('1 2 3') == 'YES'\n\nassert solution('4 1 2') == 'NO'\n\nassert solution('1 1 1') == 'YES'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 2') == \"YES\"\nassert solution('0 2 1') == \"NO\"\nassert solution('0 2 1 3') == \"NO\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4 3 2\"\n) == \"YES\"\nassert solution(\n    \"3 3 1\"\n) == \"NO\"\nassert solution(\n    \"1 2 3\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 11\\n1\\n') == '30'\nassert solution('5 3 11\\n2\\n') == '5'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11\") == \"30\"\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\") == \"30\"\n\"\"\"\nimport sys\nimport functools",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\nassert solution('5 3 11\\n1') == '30'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n2\") == \"30\"\nassert solution(\"5 3 11\\n3\") == \"30\"\nassert solution(\"5 3 11\\n4\") == \"30\"\nassert solution(\"5 3 11\\n5\") == \"30\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n2\n''') == '34'\nassert solution('''5 3 11\n3\n''') == '30'\nassert solution('''5 3 11\n4\n''') == '36'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"6\"\nassert solution(\"5 3 11\") == \"30\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 5 6 11\") == \"30\"\nassert solution(\"5 5 3 11\") == \"30\"\nassert solution(\"10 10 10 10\") == \"40\"\nassert solution(\"10 10 10 10\") == \"40\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 11') == '30'\nassert solution('5 1 11') == '30'\nassert solution('1') == '1'\nassert solution('1 0 0') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abcc') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''abaccaba''') == 'Yes'\nassert solution('''hh''') == 'No'\nassert solution('''abdcba''') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaccaba') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abaccaba') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('acb') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('wwqqqqww') == 'No'\nassert solution('aabbac') == 'Yes'\nassert solution('abacb') == 'No'\nassert solution('abc') == 'Yes'\n\n--or",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('bccadeeee') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aabb\") == \"No\"\nassert solution(\"\") == \"No\"\nassert solution(\"abca\") == \"Yes\"\nassert solution(\"abcbabc\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\nassert solution(\"aabcabcabc\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\\n1 1\\n2 2\\n3 3\") == \"3\"\nassert solution(\"4 5\\n1 1\\n2 2\\n3 3\\n4 4\") == \"2\"\nassert solution(\"5 6\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\") == \"3\"\n",
        "num_ids_2": 50,
        "num_ids_4": 81
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '2'\nassert solution('3 3') == '1'\nassert solution('1 2 3 4 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2\n1 1\n2 2\n3 3\n4 4\n5 5''') == '3'\nassert solution('''10 2\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '10'\nassert solution('''5 3\n1 1\n2 2\n3 3\n4 4\n5 5''') == '3'\nassert solution('''7 1\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7''') == '7'\nassert solution('''15 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"\n\n\"\"\"\n\nimport heapq\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 4\n1 1\n2 2\n3 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n4 5\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == \"3\"\nassert solution(sample_input_2) == \"1\"\nassert solution(sample_input_3) == \"2\"\nassert solution(input) == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n1 1\\n2 2\\n3 3\\n') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n1 1\n2 2\n3 3''') == '3'\nassert solution('''5 5\n1 1 1\n2 1\n2 1\n2 1\n3 1''') == '2'\nassert solution('''2 1\n1 2\n2 3''') == '1'\nassert solution('''10 10\n1 1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == '10'\nassert solution('''1 1\n2 2\n3 3''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\n\nclass Solution:\n    def countPossible(self, N: int, K: int) -> int:\n        \n        f = [1] + [0]*(K-1)\n        for i in range(1, N+1):\n            f = [sum(f[j] for j in range(K) if j!=i-1) + f[i-1]]\n        return f[-1]\n\n    def countPossible(self, N: int, K: int) -> int:\n        f = [1] + [0]*(K-1)\n        for i in range(1, N+1):\n            f = [sum(f[j] for j in range(K) if j!=i-1) + f[i-1]]\n        return f[-1]",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 100') == '1000000'\nassert solution('1 2') == '1'\nassert solution('4 5') == '24'\nassert solution('8 5') == '233'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '2'\nassert solution('2 1') == '1'\n\"\"\"\nimport math\n\nn, k = map(int, input().split())\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '0'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 2\n\"\"\"\n\nimport math",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '2'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\nassert solution('3 1') == '1'\nassert solution('4 4') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n''') == '2'\n\nassert solution('''1 1\n''') == '1'\n\nassert solution('''1 2\n''') == '0'\n\nassert solution('''1 10\n''') == '2'\n\nassert solution('''100 100\n''') == '208331277678527953'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(5) == 2\nassert solution(2) == 1",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n''') == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 3') == '10'\nassert solution('5 10 15') == '15'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('20 3') == '10'\nassert solution('20 0') == '20'\nassert solution('20 0 -1') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"20 3\n5 10 15\n\"\"\") == \"10\"\nassert solution(\"\"\"20 3\n5 10 10\n\"\"\") == \"20\"\nassert solution(\"\"\"1 1\n2 1\n\"\"\") == \"1\"\nassert solution(\"\"\"1 1\n10 10\n\"\"\") == \"11\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '10'\nassert solution('20 3') == '10'\nassert solution('100 10') == '110'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '10'\nassert solution('20 3') == '10'\nassert solution('20 2') == '9'\nassert solution('5 1') == '9'\nassert solution('10 1') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"10 3\") == \"10\"\nassert solution(\"20 2\") == \"20\"\nassert solution(\"10 5\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 3\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"5 10 15\") == \"10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"5 5 5 5\") == \"5 5 5 5\"\nassert solution(\"1 1 1 1\") == \"1 1 1 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"0 0 0 0\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"10 10 10 10\") == \"10\"\nassert solution(\"10 10 10 10\") == \"10\"\nassert solution(\"20 20 20 20\") == \"20\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 2 7\") == \"15\"\nassert solution(\"5 5 2 7\") == \"15\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"12\"\nassert solution(\"1 1 2 2\") == \"4\"\nassert solution(\"10 11 12 12\") == \"16\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('1 2 3 4') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5 2 7\n    10 5 2 7\n    12 5 2 7''') == '15'\nassert solution('''3 4 4 4\n    4 4 4 4''') == '4'\nassert solution('''3 5 2 7\n    10 5 2 7\n    12 5 2 7''') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5 2 7\") == \"15\", \"Should be 15\"\nassert solution(\"4 4 5 7\") == \"14\", \"Should be 14\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"15\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 2 7') == '15'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == \"AC x 3\"\nassert solution('1') == \"WA x 1\"\nassert solution('2') == \"TLE x 2\"\nassert solution('0') == \"RE x 0\"\n\"\"\"\n\nn = int(input())\nresult = 0\nresult_dict = {}\nfor i in range(n):\n    x = input()\n    if x == \"AC\":\n        result += 1\n    elif x == \"WA\":\n        result += 1\n    elif x == \"TLE\":\n        result += 2\n    elif x == \"RE\":\n        result += 0\n    else:\n        pass\nprint(f\"AC x {result}\")\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\nassert solution('10') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"AC 2\"\nassert solution(\"10\") == \"AC 4\"\nassert solution(\"1\") == \"AC\"\nassert solution(\"2\") == \"WA 1\"\nassert solution(\"10\") == \"AC 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\nAC\nWA\nWA\nWA\nWA\nWA\nWA\nWA\nWA\nWA\nWA\nAC\nAC\nAC\nAC\nAC\nWA\nWA\nAC\nAC\nAC\nAC\nWA\nAC\nAC\nWA\nAC\nAC\nAC\nWA\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nWA\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('1') == 'WA x 1'\nassert solution('2') == 'TLE x 2'\nassert solution('0') == 'RE x 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'AC 1 WA 2 TLE 0'\nassert solution('6') == 'AC 3 WA 1 TLE 2 RE 0'\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('5') == 'AC x 1'\nassert solution('4') == 'WA x 1'\nassert solution('3') == 'TLE x 2'\nassert solution('2') == 'RE x 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\") == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n\nNotes:\n- The input string will only contain alphabets, spaces, and hyphens.\n- The string will only contain ASCII characters.\n- There are 10^6 test cases.\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\nAC\nTLE\nAC\nAC\nWA\nTLE''') == 'AC x 3'\nassert solution('''10\nAC\nTLE\nAC\nAC\nWA\nTLE\nAC\nAC\nWA\nTLE\nAC''') == 'AC x 3'\nassert solution('''13\nAC\nAC\nAC\nWA\nAC\nAC\nAC\nAC\nAC\nAC\nWA\nAC\nAC\nAC''') == 'AC x 3'\nassert solution('''10\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3'\nassert solution('''16\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC''') == 'AC x 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'AC 1'\nassert solution('2') == 'AC 2'\nassert solution('3') == 'AC 3'\nassert solution('4') == 'AC 4'\nassert solution('5') == 'AC 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '0'\nassert solution('21') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('21') == '27'\nassert solution('11') == '21'\nassert solution('2110') == '20'\nassert solution('2122') == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('21') == '27'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(s) == \"27\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"15\") == \"1\"\nassert solution(\"24\") == \"1\"\nassert solution(\"25\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''21\n''') == '27'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"7\") == \"9\"\nassert solution(\"21\") == \"27\"\nassert solution(\"23\") == \"23\"",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"17\") == \"27\"\nassert solution(\"20\") == \"27\"\nassert solution(\"21\") == \"27\"\nassert solution(\"22\") == \"27\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('21') == '27'\nassert solution('0') == '24'\nassert solution('22') == '26'\nassert solution('23') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3\", \"test 1 failed\"\nassert solution(\"5 7\") == \"12\", \"test 2 failed\"\nassert solution(\"10 20\") == \"error\", \"test 3 failed\"\nassert solution(\"3\") == \"error\", \"test 4 failed\"",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"8\", \"Should be 8\"\nassert solution(\"7 4\") == \"10\", \"Should be 10\"\nassert solution(\"10 10\") == \"error\", \"Should be error\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '5', solution('2 3')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == '10'\nassert solution('10 10') == 'error'\nassert solution('-2 -3') == '-5'\nassert solution('-3 -4') == '-7'\nassert solution('1 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '8'\nassert solution('6 3') == 'error'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == '3'\nassert solution(\"1 1\") == '2'\nassert solution(\"10 1\") == 'error'\nassert solution(\"10 2\") == 'error'\nassert solution(\"5 7\") == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"9\", \"Solution Failed\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 3\") == \"9\"\nassert solution(\"10 6\") == \"error\"\nassert solution(\"6 3\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '8', 'Should be 8'\nassert solution('1 1') == '2', 'Should be 2'\nassert solution('2 2') == '4', 'Should be 4'\nassert solution('2 4') == 'error', 'Should be error'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"7\"\nassert solution(input(\"\")) == \"7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '7'\nassert solution('100') == '104'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"4 1 3 9 2\") == \"5\"\nassert solution(\"5 1 2 3 4 5\") == \"5\"",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '7'\nassert solution('12') == '25'\nassert solution('30') == '35'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"4\") == \"7\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    4\n    2 3 7 9\n    '''\n    ) == '7'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('8') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '4\\n'\n    '2 3 7 9\\n'\n) == '7'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"4 2 3 7 9\") == \"7\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '7'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 3\n2 1\n2 2\n3 2\n3 3\n1 1\n1 2\n1 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3''') == 'Yes'\nassert solution('''1 2\n1 2\n1 3\n2 2\n2 3\n3 2\n3 3\n2 1\n2 2\n2 3\n3 1\n3 2\n3 3''') == 'No'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('1 5') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('2 4') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"1 2 3\") == \"Yes\"\nassert solution(\"1 2 1\") == \"No\"\nassert solution(\"1 1\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(0) == 'No'\nassert solution(1) == 'Yes'\nassert solution(2) == 'Yes'\nassert solution(3) == 'Yes'\nassert solution(4) == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('4 5') == 'Yes'\nassert solution('5 6') == 'No'\nassert solution('7 8') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"Yes\", \"Test #1 fail\"\nassert solution(\"2 3\") == \"Yes\", \"Test #2 fail\"\nassert solution(\"4 3\") == \"Yes\", \"Test #3 fail\"\nassert solution(\"6 3\") == \"Yes\", \"Test #4 fail\"\nassert solution(\"7 3\") == \"Yes\", \"Test #5 fail\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"1 5\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('3 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"Even\"\nassert solution(\"1 2\") == \"Even\"\nassert solution(\"3 4\") == \"Even\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"5 1\") == \"Odd\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"1 2\") == \"Odd\"\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == 'Even'\nassert solution('1 2') == 'Odd'\nassert solution('1 1') == 'Even'\nassert solution('0 1') == 'Odd'\nassert solution('10 11') == 'Even'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"Even\"\nassert solution(\"5 5\") == \"Odd\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4\") == \"Even\"\nassert solution(\"3 4\") == \"Odd\"\nassert solution(\"1 2\") == \"Odd\"\nassert solution(\"3\") == \"Even\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Even'\nassert solution('2 6') == 'Odd'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n2 3\n\"\"\") == \"Even\"\nassert solution(\n\"\"\"\n1 2\n\"\"\") == \"Odd\"\nassert solution(\n\"\"\"\n3 1\n\"\"\") == \"Odd\"\nassert solution(\n\"\"\"\n2 2\n\"\"\") == \"Even\"\nassert solution(\n\"\"\"\n4 8\n\"\"\") == \"Odd\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 6\") == \"Even\"\nassert solution(\"1 5\") == \"Odd\"\nassert solution(\"6 8\") == \"Odd\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"3 4\") == \"Even\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 6\") == \"2\"\n\nfrom collections import deque\nfrom typing import List\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 6\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\"\n\"\"\"\n\nN, M = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 6\n''') == '2'\n\nassert solution('''\n1 3\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n\") == \"2\"\nassert solution(\"1 6\\n\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6 9\"\nassert solution(\"4\") == \"9 10\"\nassert solution(\"1\") == \"6\"\nassert solution(\"2\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 4') == '6'\nassert solution('2') == '9'\nassert solution('3') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n2 1 4\n2\n1 1\n2 3\n''') == '6 9'\nassert solution('''5\n2 1 1 5\n1\n1 1\n2 3\n''') == '5 1 3 5'\nassert solution('''5\n1 2 3 4 5\n5\n5 5 5 5\n''') == '1 3 5'\nassert solution('''8\n1 3 2 4 5 6 7 8\n5\n5 5 5 5 5 5 5 5\n''') == '1 5 5 5 5 5 5 5'\nassert solution('''5\n1 3 2 4 5\n5\n5 5 5 5\n''') == '1 3 5 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6\\n9'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"6\\n9\"\nassert solution(\"4\") == \"6\\n9\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n1\n1\n2 3\n\"\"\") == \"\"\"\n3\n6\n\"\"\".strip()\n\nassert solution(\n\"\"\"\n3\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"\"\"\n6\n9\n\"\"\".strip()\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 1 4\n2\n1 1\n2 3\n''') == '6 9'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"20 16\\n1 3 4 5 6 7 8 9\") == \"21\"\nassert solution(\"1000 1000\\n1 3 4 5 6 7 8 9\") == \"2000\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_1) == \"2000\"\nassert solution(input_2) == \"2000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000 8\\n1 3 4 5 6 7 8 9\") == \"2000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 8') == '2000'\nassert solution('1 3 4 5 6 7 8 9') == '2000'\n\n---Submission---",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 1000000 9') == '10000009'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('1 1 2 4 6 7 5 9') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"1.1 10\") == \"1.1\"\nassert solution(\"1.1 10.11\") == \"1.1\"\nassert solution(\"1.1 10.11 1\") == \"1.1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 54
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 8') == '2000'\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4 5 6 7 8 9\") == \"2000\"\nassert solution
        "num_ids_2": 1672,
        "num_ids_4": 1672
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 8') == '2000'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\nassert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '1'\nassert solution('3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '1'\n\n------\n",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"1\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 3\n1 2 3 4 5\n1 3\n2 3\n2 4\n3 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n1 2 3 4\n1 3\n2 3\n2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4 4\n1 2\n1 3\n2 3\n2 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 1\n1 3\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"10 3\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n2 3\\n2 4\\n2 4\") == \"2\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\\n2 3\\n2 4\\n1 4\") == \"1\"\n",
        "num_ids_2": 69,
        "num_ids_4": 104
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"10 6\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\") == \"2\"\n",
        "num_ids_2": 360,
        "num_ids_4": 360
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4''') == '2'\nassert solution('''4 5\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n''') == '0'\nprint('All test cases passed.')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"5 5\\n1 2 3 4 5\\n1 3\\n2 3\\n2 4\\n3 4\\n\") == \"4\"\nassert solution(\"10 10\\n1 2 3 4 5\\n1 3\\n2 3\\n2 4\\n3 4\\n3 5\\n4 5\\n5 6\\n6 7\\n7 8\\n8 9\\n9 10\\n\") == \"5\"\n",
        "num_ids_2": 67,
        "num_ids_4": 131
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '2'\nassert solution('3 2') == '0'\nassert solution('10 10') == '0'\nassert solution('0 0') == '0'\nassert solution('3 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3') == '10'\nassert solution('2\\n2') == '4'\n\n'''\nfrom itertools import permutations\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nassert solution(\"1\\n1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n3\\n\") == \"2\"\nassert solution(\"10\\n4\\n\") == \"6\"\nassert solution(\"1\\n1\\n\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n3\") == \"10\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '10'\nassert solution('4') == '11'\nassert solution('5') == '15'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\n') == '10'\nassert solution('8\\n3\\n') == '16'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '10'\nassert solution('5') == '11'\nassert solution('6') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == output_data, \"Should be: \" + output_data\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n3\") == \"2\\n\", \"Minimun possible value is 2\"\nassert solution(\"1\\n3\") == \"4\\n\", \"Minimun possible value is 4\"",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\", \"Wrong!\"\nassert solution(\"0\") == \"0\", \"Wrong!\"\nassert solution(\"1.0\") == \"0.0\", \"Wrong!\"\nassert solution(\"0.0\") == \"1.0\", \"Wrong!\"\nassert solution(\"0.1\") == \"0.0\", \"Wrong!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0', 'Checker error'\nassert solution('0') == '1', 'Checker error'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == '0'\nassert solution(0) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0.99\") == \"1\"\nassert solution(\"0.00\") == \"1\"\nassert solution(\"1.99\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\nassert solution('1') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\", \"Wrong!\"\nassert solution(\"0\") == \"1\", \"Wrong!\"\nassert solution(\"-1\") == \"1\", \"Wrong!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"0.5\") == \"1\"\nassert solution(\"-0.5\") == \"0\"\nassert solution(\"1.5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('125') == '176'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"12\"\nassert solution(\"1+2\") == \"3\"\nassert solution(\"1+2+5\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+5\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('125') == '176'\nassert solution('10') == '10'\nassert solution('20') == '10'\nassert solution('21') == '21'\nassert solution('2034') == '2034'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"1+2+3\"\nassert solution(\"123456789\") == \"1+2+3+4+5+6+7+8+9+10+11+12\"\nassert solution(\"125\") == \"1+25=26\"\nassert solution(\"125+\") == \"1+25=26\"\nassert solution(\"1+2\") == \"1+2=3\"\n",
        "num_ids_2": 49,
        "num_ids_4": 78
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('125') == '176'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"1+25\") == \"26\"\nassert solution(\"12+5\") == \"17\"\nassert solution(\"1+2+5\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"176\"\nassert solution(input()) == \"288\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"6\n1 2 3 4 5 6\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n1 2 3 4 5\n\"\"\") == \"2\"\nassert solution(\"\"\"3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"8\n1 2 3 4 5 6 7 8\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3 4 5 6\n''') == '1'\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**6)\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        a = stdin.strip().splitlines()\n        x, y = int(a[0]), int(a[1])\n        return str(abs(x-y))\n\nsolution = Solution()\n\nfor line in sys.stdin:\n    print(solution.solution(line))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10 10\\n') == '0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9\\n') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 91
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == \"1\"\nassert solution('6\\n1 2 3 4 5 6') == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5\\n') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '2'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10\\n') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 67
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2\\n3 4\\n1 2 3\\n4 5 6\"\n) == \"1\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"6\\n1 2 3 4 5 6\\n\") == \"1\"\nassert solution(\"15\\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\\n\") == \"4\"\n",
        "num_ids_2": 37,
        "num_ids_4": 66
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"2\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20\\n\") == \"15800\"\nassert solution(\"100\\n\") == \"9000\"\nassert solution(\"10\\n\") == \"800\"\nassert solution(\"100\\n\") == \"12000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '12800'\nassert solution('10') == '18000'\nassert solution('20') == '18000'\nassert solution('1000') == '120000'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == '15800'\nprint(solution(1))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n\") == \"0\"\nassert solution(\"3\\n\") == \"15800\"\nassert solution(\"20\\n\") == \"16000\"\nassert solution(\"30\\n\") == \"16800\"\nassert solution(\"36\\n\") == \"16400\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"16000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\nassert solution('16') == '16000'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20') == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"15800\"\nassert solution(\"20\") == \"15800\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"16000\"\nassert solution(\"20\\n\") == \"16000\"\nassert solution(\"3\\n\") == \"800\"",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"ant\"\n    ) == \"abc\"\n\nassert solution(\n    \"obe\"\n    ) == \"abc\"\n\nassert solution(\n    \"rec\"\n    ) == \"abc\"\n\nassert solution(\n    \"xyz\"\n    ) == \"xyz\"\n\nassert solution(\n    \"zzz\"\n    ) == \"zzz\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abec\"\nassert solution(\"rec\") == \"abec\"\nprint(solution(input()))\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ant\") == \"abc\", \"Should return abc\"\nassert solution(\"obe\") == \"abc\", \"Should return abc\"\nassert solution(\"rec\") == \"abc\", \"Should return abc\"\nassert solution(\"def\") == \"def\", \"Should return def\"\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ant\") == \"abc\", \"Wrong Answer\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\", \"Should be empty string\"\nassert solution(\"\") == \"\", \"Should be empty string\"\nassert solution(\"a\") == \"a\", \"Should be a\"\nassert solution(\"a\") == \"a\", \"Should be a\"\nassert solution(\"bc\") == \"bc\", \"Should be bc\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"abc\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '2'\n\n------SOLUTION----\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101') == '2'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"101\") == 2, 'test 1'\nassert solution(\"011\") == 0, 'test 2'\nassert solution(\"110\") == 1, 'test 3'\n\"\"\"\nimport math\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"101\") == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('101') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('101') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 2\n\nassert solution('0') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '0'\nassert solution('4') == '10000'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '48000'\nassert solution('4') == '49700'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\\n\"\nassert solution(\"1\") == \"10000\\n\"\nassert solution(\"4\") == \"16000\\n\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3\\n10000\\n9000\\n') == '48000'\nassert solution('2\\n4\\n10000\\n9000\\n') == '48000'\nassert solution('3\\n5\\n10000\\n9000\\n') == '48000'\nassert solution('4\\n6\\n10000\\n9000\\n') == '48000'\nassert solution('5\\n7\\n10000\\n9000\\n') == '48000'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"48000\"\nassert solution(\"100\") == \"98000\"\nassert solution(\"10\") == \"89000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '48000'\nassert solution('5') == '48000'\nassert solution('7') == '35040'\nassert solution('5') == '48000'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '48000'\nassert solution('1') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n10000\n9000\n''') == '48000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\\n\") == \"48000\"\nassert solution(\"5\\n3\\n1000\\n2000\\n\") == \"49000\"\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n10000\\n9000\") == \"48000\"\nassert solution(\"5\\n3\\n9000\\n10000\") == \"48000\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('1 - 2 + 4') == '5'\nassert solution('1 - 2 - 4') == '-3'\nassert solution('1 - 2 + 4 - 6') == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 + 2') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '1'\nassert solution('2 + 3') == '5'\nassert solution('2 - 3') == '1'\nassert solution('3 - 4') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"-1 + 2\") == \"3\"\nassert solution(\"2 - 3\") == \"-1\"\nassert solution(\"-5 - 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 + 3') == '4'\nassert solution('2 + 4') == '6'\nassert solution('3 + 2') == '5'\nassert solution('4 + 3') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 + 2\") == \"3\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '1'\nassert solution('3 * 5') == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 + 2 - 3') == '0'\nassert solution('3 + 5 - 2') == '7'\nassert solution('5 + 4 - 3') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '3'\n\n\"\"\"\n\nA, op, B = map(int, input().split())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '1'\nassert solution('10 - 9') == '1'\nassert solution('8 + 3') == '13'\nassert solution('3 + 1') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000\") == \"ABC\"\n\nassert solution(\"200\") == \"ARC\"\n\nassert solution(\"300\") == \"ARC\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'ABC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ARC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ARC'\nassert solution('1200') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"1202\") == \"ARC\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('11') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ABC'\n\"\"\"\nx = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"700 700 780\") == \"1480\"\nassert solution(\"600 600 780\") == \"1380\"\nassert solution(\"600 600 600\") == \"1300\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 1') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"700 600 780\"\n) == \"1300\"\nassert solution(\n    \"100 700 1020\"\n) == \"1300\"\nassert solution(\n    \"100 600 1020\"\n) == \"1300\"\nassert solution(\n    \"100 600 0\"\n) == \"0\"\nassert solution(\n    \"1 1 1\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('300 600 780') == '1380'\nassert solution('500 600 780') == '1480'\nassert solution('100 600 780') == '1380'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('700 600 780') == '1300'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"1100 1200 1300\") == \"1450\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n700 600 780\n''') == '1300'\nassert solution('''\n700 6 0 780\n''') == '1300'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('700 600 730') == '1480'\nassert solution('700 600 760') == '1380'\nassert solution('700 500 730') == '1380'\nassert solution('700 600 760') == '1480'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"2\"\nassert solution(\"5 4 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([700, 600, 780]) == '1300'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"##\"\nassert solution(\"2\") == \"#@@\"\n",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == '#####\\n#abc#\\n#arc#'\nassert solution(\"5 6\") == '####\\n##a##\\n###c##\\n###e##\\n####\\n'\nassert solution(\"5 6\") == '####\\n##a##\\n###c##\\n###e##\\n####\\n'",
        "num_ids_2": 53,
        "num_ids_4": 84
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\nabc\narc\n''') == '#####\\n#abc#\\n#arc#\\n#####'\n\nassert solution('''\n2 2\nab\nc\n''') == '''\n#####\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\nabc\narc\n''') == '''\n###\n##a##\n##arc##\n###'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#####\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == \"#####\\n#abc#\\n#arc#\\n#####\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"6 6\") == \"#####\\n#abc#\\n#arc#\\n#abc#\\n#abc#\\n#abc#\\n#####\"",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\"\nassert solution(\"2 2\") == \"###\\n##\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"#####\\n#abc#\\n#arc#\\n#####\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nIIDID\\n') == '2'\nassert solution('3\\nDDIID\\n') == '2'\nassert solution('3\\nIIDID\\n') == '1'\nassert solution('10\\nIIDIDIDIDIIDD\\n') == '2'\nassert solution('1000\\nIIDIDIDIDIIDD\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '0'\nassert solution('5') == '2'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('2') == '1'\nassert solution('100') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"1\"\nassert solution(\"01\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2'\nassert solution('IIDID') == '2'\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 1788
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nIIDID''') == \"2\"\nassert solution('''5\nIIDID\n''') == \"2\"\nassert solution('''8\nIIIIIIII\n''') == \"2\"\nassert solution('''8\nIIIIIIII\n''') == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(\"\")) == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5\nIIDID\n\"\"\") == \"2\"\nassert solution(\"\"\"1\nIIDID\n\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nIIDID\\n\") == \"2\"\nassert solution(\"5\\nIIDIID\\n\") == \"2\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == '5'\nassert solution(\"11009 11332\") == \"4\"\nassert solution(\"10 100000\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"123456789\") == \"9\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11009 11332') == '4'\n\n\"\"\"\n\na, b = input().split()\na = int(a)\nb = int(b)\nc = 0\nfor i in range(a, b + 1):\n    if str(i) == str(i)[::-1]:\n        c += 1\nprint(c)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11009 11332') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '4', \"error\"\nassert solution('5 5') == '1', \"error\"\n\n'''\nimport math\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('1101 999') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([11009, 11332]) == \"4\"\n\nfrom typing import List, Tuple",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11009 11332\") == \"4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('3 2 5') == '3'\nassert solution('1 1 1') == '3'\nassert solution('4 5 6') == '3'\nassert solution('4 5 7') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"2 2 2\") == \"1\"\nassert solution(\"3 3 3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1 4\n1 1 2''') == \"3\"\nprint(solution('''3 1 4\n1 1 2'''))\nassert solution('''4 6 8\n1 2 3 5''') == \"3\"\nprint(solution('''4 6 8\n1 2 3 5'''))\nassert solution('''1 2 3\n1 1 2''') == \"2\"\nprint(solution('''1 2 3\n1 1 2'''))\nassert solution('''1 3 2\n1 1 2''') == \"3\"\nprint(solution('''1 3 2\n1 1 2'''))\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2 1\n1\n1\n1\n1\n''') == '3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1 3\") == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 4\") == \"3\"\nassert solution(\"1 1 5\") == \"4\"\nassert solution(\"2 1 4\") == \"4\"\nassert solution(\"3 1 5\") == \"5\"\nassert solution(\"4 1 5\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '4'\nassert solution('3 1 4') == '3'\nassert solution('3 3 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1 4\\n\") == \"3\"\nassert solution(\"3 1 2\\n\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1 1') == '3'\nassert solution('3 1 4') == '3'\nassert solution('5 1 4') == '2'\nassert solution('4 1 2') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n\") == \"12\"\nassert solution(\"5 3\\n\") == \"12\"\nassert solution(\"5 5\\n\") == \"10\"\nassert solution(\"10 2\\n\") == \"12\"\nassert solution(\"20 1\\n\") == \"20\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '12', 'Sample test 1 failed'\nassert solution('6 6\\n1 2 3 4 5 6') == '10', 'Sample test 2 failed'\nassert solution('5 7\\n1 2 3 4 5 6 7') == '10', 'Sample test 3 failed'",
        "num_ids_2": 49,
        "num_ids_4": 75
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '12'\nassert solution('1 2 3 4 5') == '12'\nassert solution('4 5') == '4'\nassert solution('1 2') == '1'",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n1 2 3 4 5\n''') == '12'\nassert solution('''4 3\n1 2 3 4\n''') == '5'\nassert solution('''4 3\n1 2\n3 4\n5 6\n''') == '5'\nassert solution('''8 3\n1 2 3 4 5\n6 7 8\n9 10\n''') == '12'\nassert solution('''5 3\n1 2 3 4 5\n6 7 8 9 10\n''') == '12'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"12\"\nassert solution(\"1 2 3 4 5\") == \"12\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n1 2 3 4 5''') == '12'\nassert solution('''5 3\n1 2 3\n4 5 6 7''') == '8'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == \"12\"\nassert solution('5 4\\n5 3 2 6 4\\n2 1 5\\n4 1 2 3 5') == \"10\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([3,5,4,3,2,1]) == 12\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"12\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('1 10 5') == 'A'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 7\\n\") == \"B\"\nassert solution(\"50 50 50\\n\") == \"A\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"0 2 7\") == \"B\"\nassert solution(\"0 0 7\") == \"A\"\nassert solution(\"7 2 7\") == \"A\"\nassert solution(\"5 2 5\") == \"A\"\n\"\"\"\n\nx, a, b = input().split()\nx = int(x)\na = int(a)\nb = int(b)\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 7\n1 2 3''') == '2'\nassert solution('''5 2 7\n1 2 3\n1 1 3''') == '1'\nassert solution('''5 2 7\n1 2 3\n1 2 4''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 4 5''') == '2'\nassert solution('''2 2 2''') == '2'\nassert solution('''4 3 4''') == '3'\nassert solution('''5 4 5''') == '4'\nassert solution('''6 1 3''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 5\\n') == '2'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('1 1 1') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 5 7') == 'B'\nassert solution('5 2 7') == 'B'\nassert solution('1 0 0') == 'A'\nassert solution('1 1 1') == 'A'\nassert solution('100 100 100') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"5 5 8\") == \"A\"\n\"\"\"\n\nfrom math import fabs\n\nx, a, b = list(map(int, stdin.split()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"10 2 7\") == \"A\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/08\") == \"2017/01/08\"\nassert solution(\"2017/01/09\") == \"2017/01/09\"\nassert solution(\"2017/01/10\") == \"2017/01/10\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/18') == '2017/01/18'\nassert solution('2017/01/07 1234') == '2018/01/07'\nassert solution('2017/01/18 123') == '2017/01/18'\nassert solution('2017/01/07 1234 5678') == '2018/01/07'",
        "num_ids_2": 36,
        "num_ids_4": 75
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/07 2018/01/07') == '2018/01/07 2018/01/07'\n\nprint(solution(input()))\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/03') == '2018/01/03'\nassert solution('2017/01/10') == '2018/01/10'\nassert solution('2017/01/23') == '2018/01/23'\nassert solution('2017/01/04') == '2017/01/04'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2018/01/07'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/02/07') == '2017/02/07'\nassert solution('2017/03/07') == '2017/03/07'\nassert solution('2017/04/07') == '2017/04/07'\nassert solution('2017/05/07') == '2017/05/07'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/08\") == \"2018/01/08\"\nassert solution(\"2017/01/09\") == \"2018/01/09\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/18') == '2018/01/18'\nassert solution('2017/01/09') == '2018/01/09'\nassert solution('2017/01/05') == '2018/01/05'\nassert solution('2017/01/01') == '2018/01/01'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\ncbaa\") == \"cba\"\nassert solution(\"2\\ndaacc\") == \"da\"\nassert solution(\"3\\nacacac\") == \"aca\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"aac\"\nassert solution(\"5\") == \"aac\"\nassert solution(\"6\") == \"aac\"\nassert solution(\"8\") == \"aac\"\nassert solution(\"9\") == \"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'aac'\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('2') == ''\nassert solution('1') == 'a'\nassert solution('3') == 'aaa'\nassert solution('5') == 'aaaaa'\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac\\n') == 'aac'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"\"\nassert solution(\"4\\ncbaa\\nbaaac\\ncaaacc\\nacacac\") == \"caaac\"\n\n\"\"\"\n\nn = int(input())\ns = []\nfor i in range(n):\n    s.append(input())",
        "num_ids_2": 43,
        "num_ids_4": 74
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\ncbaa') == 'cbaa'\nassert solution('3\\ndaaaa') == 'aaaa'\nassert solution('7\\nccccccc') == ''\nassert solution('2\\nac\\nab') == ''\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\ncbaa\ndaacc\nacacac\n''') == 'aac'\n\nassert solution('''4\ncbaa\ndaacc\nacacac\naabcac\n''') == 'aabcac'\n\nassert solution('''2\ncbaa\naacc\n''') == 'aacc'\n\nassert solution('''3\ncbaa\ndaacc\nacacac\n''') == 'cbaa'\n\nassert solution('''2\ncbaa\naacc\n''') == 'aacc'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"4\\naacd\\nbacd\\nacce\\n\") == \"acce\"\nassert solution(\"4\\nabc\\ndab\\nacd\\n\") == \"abc\"",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n24 30') == '7\\n', \"Should return 7\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1]) == \"7\"\nassert solution([2]) == \"5\"\nassert solution([3]) == \"4\"\nassert solution([4]) == \"4\"\nassert solution([5]) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n24 30\\n') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"7\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n24 30\n''') == '7'\n\nassert solution('''\n2\n11 21\n''') == '10'\n\nassert solution('''\n4\n8 10 12\n''') == '9'\n\nassert solution('''\n10\n11 22 33 44 55 66 77 88 99 100\n''') == '16'\n\nassert solution('''\n10\n10 10 10 10 10 10 10 10 10\n''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2\n''') == '3', 'Wrong answer'\nassert solution('''3\n1 2\n''') == '2', 'Wrong answer'\n\n'''\n2. Define a function, which receives a non-negative integer (seconds) as input and returns the time in a human-readable format (HH:MM:SS)\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1000\") == \"1000\"\nassert solution(\"101\") == \"1000\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == '7'\nassert solution(2) == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n24 30''') == '7'\nassert solution('''2\n1 2''') == '2'\nassert solution('''1\n5 10''') == '1'\nassert solution('''5\n7 9''') == '1'\nassert solution('''10\n15 18''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"4\") == \"7\"\nassert solution(\"3\") == \"7\"\n\n------Other------",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2\n2 1''') == '2'\nassert solution('''2 2\n1 2''') == '3'\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '6'\nprint(solution(input()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == '6'\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '6'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n\") == \"6\"\n\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '6'\nassert solution('3 3') == '4'\nassert solution('4 4') == '8'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '6'\nassert solution('3 5') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4\\n') == '6\\n', 'Tests not passed'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '6'\n\nSample Test:\n\nExpected Output:\n----------------------\n6\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Possible\"\nassert solution(\"3 2\") == \"Impossible\"\n\"\"\"\n\nfrom typing import List\nfrom functools import reduce",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\") == \"Impossible\"\nassert solution(\"1 2\") == \"Possible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('5 6') == 'Impossible'\nassert solution('9 5') == 'Possible'\nassert solution('12 5') == 'Impossible'\nassert solution('7 5') == 'Possible'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Possible'\nassert solution('4 5') == 'Possible'\nassert solution('9 9') == 'Impossible'\nassert solution('1 1') == 'Impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"Possible\"\n\n'''\n\nn,m=map(int,input().split())\na,b=map(int,input().split())\nx=0\n\nfor i in range(1,max(a,b)+1):\n    x=i\n    if x+a==n or x+b==m:\n        break\n    \nprint(\"Possible\" if x==n or x==m else \"Impossible\")\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Possible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\"\nassert solution(\"1 2\\n\") == \"Impossible\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 5\") == \"Possible\"\nassert solution(\"3 5\") == \"Impossible\"\nassert solution(\"1 5\") == \"Possible\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == 'Possible'\n\"\"\"\nfrom itertools import permutations",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\n\"\"\"\n\nimport itertools\n\ns = input()\nt = input()",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('coder') == 'atcoder'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'UNRESTORABLE'\nassert solution('not') == 'UNRESTORABLE'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?tc????') == 'atcoder', \"Wrong answer\"\nassert solution('coder') == 'atcoder', \"Wrong answer\"\n\n\"\"\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'coder'\nassert solution('hello?') == 'hello?'\nassert solution('???') == 'UNRESTORABLE'\n\n\"\"\"\n\n\"\"\"\nSolution by Pratik.\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('?tc????') == 'atcoder'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('?tc????') == 'atcoder'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('?tc????') == 'atcoder'\nassert solution('coder') == 'atcoder'\nassert solution('ctcoder') == 'ctcoder'",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2000') == '2015'\nassert solution('2021') == '2032'\nassert solution('2033') == '2032'\nassert solution('2034') == '2033'\nassert solution('2035') == '2034'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\", \"Empty input\"\nassert solution(\"2002\") == \"2032\", \"Two inputs\"\nassert solution(\"2012\") == \"2032\", \"Input 0\"\nassert solution(\"2032\") == \"2032\", \"Input 4500\"\nprint(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\nassert solution(\"2032\") == \"2002\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2032\"\nassert solution(\"2032\") == \"2002\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"\nassert solution(\"2002\\n2017\") == \"2032\"\nassert solution(\"2000\\n2017\") == \"2000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2020') == '2032'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\n\n---Using the given input:\nEnter the rating of the user: 2002\nEnter the rating of the contest: 2017\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\nassert solution('2031') == '2002'\nassert solution('2032') == '2017'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"string\") == \"6\"\nassert solution(\"letter\") == \"4\"\nassert solution(\"aaaaaa\") == \"0\"\nassert solution(\"uncopyrightable\") == \"13\"\nassert solution(\"ambidextrously\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('assesses') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abcdefgh') == 'abcd'\nassert solution('abcdefgh') == 'abcd'\nassert solution('abcdefgh') == 'abcd'\nassert solution('abcdefgh') == 'abcd'\nassert solution('abcdefgh') == 'abcd'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('assesses') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"100000000 500 3\"\"\") == \"AC\"\nassert solution(\"\"\"100000000 50 3\"\"\") == \"AC\"\nassert solution(\"\"\"100000000 10001 5\"\"\") == \"TLE\"\nassert solution(\"\"\"100000000 10000 5\"\"\") == \"TLE\"\nassert solution(\"\"\"19931568 1000000 6\"\"\") == \"TLE\"\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"100000000 500 3\") == \"AC\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"AC\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '100000000 500 3'\n) == 'TLE'\nassert solution(\n    '100000000 50 3'\n) == 'AC'\nassert solution(\n    '100000000 10001 5'\n) == 'TLE'\nassert solution(\n    '100000000 10000 5'\n) == 'AC'\nassert solution(\n    '19931568 1000000 6'\n) == 'TLE'\n\n\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\">\n    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap-theme.min.css\">\n    <title>Online Assessment</title>\n    <script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHbJSmZW0pTID7WxyI4Cj4KshjoXKAboWPL1vNXBd5JZlJNqn~d7W2\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js\" integrity=\"sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExqrSsFxxn\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n<div class=\"container\">\n    <div class=\"jumbotron\">\n        <h1>Online Assessment</h1>\n        <p>\n            <strong>\n                Submit Your Code\n            </strong>\n        </p>\n        <hr>\n    </div>\n</div>\n<div class=\"container\">\n    <div class=\"jumbotron\">\n        <h1>Online Assessment</h1>\n        <hr>\n        <h2>1. Generate a program that generates a random integer between 10 and 99 (inclusive).</h2>\n        <hr>\n        <h2>2. Generate a program that displays the next 5 prime numbers from $1$ to $5$:</h2>\n        <hr>\n        <pre>\n            1\n            2\n            3\n            4\n            5\n            7\n            11\n            19\n            25\n            41\n            67\n            109\n        </pre>\n        <hr>\n        <h2>3. Generate a program that generates a random integer between 1 and 5 (inclusive).</h2>\n        <hr>\n        <h2>4. Generate a program that generates a list of $n$ random integers from $1$ to $n$ (inclusive).</h2>\n        <hr>\n        <h2>5. Generate a program that generates a list of $n$ binary integers from $0$ to $1$ (inclusive).</h2>\n        <hr>\n        <h2>6. Generate a program that generates a list of $n$ integers from $1$ to $10$ (inclusive).</h2>\n        <hr>\n        <h2>7. Generate a program that generates a list of $n$ integers from $1$ to $2$ (inclusive).</h2>\n        <hr>\n        <h2>8. Generate a program that generates a list of $n$ integers from $1$ to $n$ (inclusive).</h2>\n        <hr>\n        <h2>9. Generate a program that generates a list of $n$ odd integers from $1",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"4 16 8 2\") == \"2 64 32 4\"\nassert solution(\"2 64 32 4\") == \"1024 64 0 0\"\nassert solution(\"2 64 32 4\") == \"1024 0 0 0\"\nassert solution(\"2\") == \"0 0 0 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('4 16 8 2') == '2 64 32 4'\nassert solution('2 64 32 4') == '2 1024 64 0'\nassert solution('0') == '0 0 0 0'\nassert solution('3') == '0 0 0 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n\") == \"4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1\\n\") == \"2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n\"\nassert solution(\"2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2\\n\") == \"0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n\"\nassert solution(\"2 2 4 8\\n4 0 4 4\\n16 16 16 16\\n32 16 16 32\\n0\\n\") == \"2 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n\"\n",
        "num_ids_2": 119,
        "num_ids_4": 237
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0 0 0 0\"\nassert solution(\"2 0 0 2\") == \"2 4 8 2\"\nassert solution(\"2 0 0 2\") == \"2 4 8 2\"\nassert solution(\"2 0 0 2\") == \"2 4 8 2\"\nassert solution(\"2 0 0 2\") == \"2 4 8 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n0 0\n2\n''') == '1 2 0 0'\nassert solution('''\n3\n4\n0 2\n8\n0 0\n''') == '4 0 0 2'\nassert solution('''\n2\n0\n0 0\n''') == '0 0 0 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0\\n') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n2048 64 0 0\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('4 16 8 2') == '2 64 32 4'\nassert solution('2 64 32 4') == '1024 64 0 0'\nassert solution('2 0 0 2') == '0 0 0 0'\nassert solution('2 2 4 8') == '4 4 8 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 16 8 2\\n4 64 32 4\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 0\\n2 64 32 4\\n0 0 2048 64\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0') == '4 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 64 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n1') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n2') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n3') == '2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4\\n'\nassert solution('2 0 0 2\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n4') == '2 0 0 0\\n4 16 8 0\\n2 64 32 4\\n1024 1024 64 4\\n'\n",
        "num_ids_2": 114,
        "num_ids_4": 228
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '''\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '''\n2 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '''\n0 0 0 4\n4 16 8 2\n2 64 32 4\n1024 1024 64 4\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"C2H6\") == \"0\"\nassert solution(\"H 2\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"6\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"1\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"CH3OH\") == \"C2H6OCH2O\"\nassert solution(\"C3H8\") == \"C3H8\"\nassert solution(\"CH3OH\") == \"CH3OH\"\nassert solution(\"C6H6OCH2O\") == \"C6H6OCH2O\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"H 2\\nO\") == \"0\"\nassert solution(\"C 2H6 10\\nC 3H8\") == \"6\"\nassert solution(\"CH3OH 1\\nCH4\") == \"1\"\nassert solution(\"C 6H6OCH2O 10\\nHCN\") == \"0\"\nassert solution(\"C 6H14 10\\nC 5H10\") == \"12\"\n",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H 2') == '0'\nassert solution('O') == '0'\nassert solution('C2H6 10') == '6'\nassert solution('C3H8') == '1'\nassert solution('CH3OH 1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\nassert solution(\"CH4\") == \"1\"\nassert solution(\"C6H6OCH2O 10\") == \"12\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nC2H6 10\nC3H8\n''') == '6'\n\nassert solution('''\nCH3OH 1\nCH4\n''') == '1'\n\nassert solution('''\nC6H6OCH2O 10\nHCN\n''') == '0'\n\nassert solution('''\nC6H14 10\nC5H10\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(solutions.test_stdin) == \"3\"\nprint('Congratulations! Your solution beats 78.54 % of python3 submissions')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\n    \"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\n    \"SECRET SOMECHORESARETOUGH\") == \"PASS\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"PASS\"\nassert solution(\n    \"ABC TRAGICBIRTHDAYCACEY\"\n) == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\"\n) == \"FAIL\"\nassert solution(\n    \"SECRET SOMECHORESARETOUGH\"\n) == \"PASS\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) in {'PASS', 'FAIL'}\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'FAIL'\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"PASS\"\nassert solution(\n    \"ABC TRAGICBIRTHDAYCACEY\"\n) == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\"\n) == \"FAIL\"\nassert solution(\n    \"SECRET SOMECHORESARETOUGH\"\n) == \"PASS\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n123\n123\n''') == 'PASS'\n\nassert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\n\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\n\nassert solution('''\nABC HAPPYBIRTHDAY\n123\n''') == 'FAIL'\n\nassert solution('''\nABC HAPPYBIRTHDAY\n123\n123\n''') == 'FAIL'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == 'ok so far'\nassert solution(input_data) == 'ok so far'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"([] [] ]\") == \"] 7\"\nassert solution(\"([] [] ] )\") == \"ok so far\"\nassert solution(\"([] [] ] ([]))\") == \"ok so far\"\nassert solution(\"([] [] ] ) )\") == \"ok so far\"",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"(([] [] ) ] )\") == \"] 7\"\nassert solution(\"([] ([] [] ) ) )\") == \"] 7\"\nassert solution(\"([] (() ()) ) )\") == \"] 7\"\nassert solution(\"([] (()()) ) )\") == \"] 7\"\nassert solution(\"([] (()(()) ) ) )\") == \"] 7\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n(([] [] ]\n\"\"\") == \"\"\"\n] 7\n\"\"\",\n\"\"\"\n[ { } ] ]\n\"\"\")\n\nassert solution(\"\"\"\n([] [] ]\n\"\"\") == \"\"\"\n] 7\n\"\"\",\n\"\"\"\n(([] [[]] ())\n\"\"\")\n\nassert solution(\"\"\"\n([] {} )\n\"\"\") == \"\"\"\nok so far\n\"\"\",\n\"\"\"\n[\n  {\n    }\n] 1\n\"\"\",\n\"\"\"\n([] ([]))\n\"\"\")\n\nassert solution(\"\"\"\n([] [[]] ())\n\"\"\") == \"\"\"\nok so far\n\"\"\",\n\"\"\"\n[\n  [[\n    ]]\n] 2\n\"\"\",\n\"\"\"\n(([\n  [] ] ) )\n\"\"\")\n\nassert solution(\"\"\"\n([] ([]))\n\"\"\") == \"\"\"\nok so far\n\"\"\",\n\"\"\"\n[\n  [\n    []\n  ]\n] 2\n\"\"\",\n\"\"\"\n(([\n  [] ] ) )\n\"\"\")",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"ok so far\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('([] [] )') == '] 7'\nassert solution('[{([] ([]) ())} ]') == '] 20'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'ok so far'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == ']'\nassert solution('13') == ']'\nassert solution('21') == '] 20'\nassert solution('27') == 'ok so far'\n",
        "num_ids_2": 18,
        "num_ids_4": 41
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n([] [] ]\n\"\"\") == '] 7'\n\nassert solution(\n\"\"\"\n13\n\"\"\") == 'ok so far'\n\nassert solution(\n\"\"\"\n21\n\"\"\") == 'ok so far'\n\nassert solution(\n\"\"\"\n27\n\"\"\") == 'ok so far'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n([] ())\n([]))\n\"\"\") == \"ok so far\"\nassert solution(\n\"\"\"\n[ ([] ()) ]\n([]))\n\"\"\") == \"ok so far\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\napple\\near\\nreal\\nletters\\nstyle\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\") == \"Player 1 lost\"\nassert solution(\"2\\napple\\nneat\") == \"Player 2 lost\"\n",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\napple\\neat\\n') == 'Fair Game'\nassert solution('2\\napple\\neat\\n') == 'Player 2 lost'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\napple\\ne\\nreal\\nletters\\nstyle') == 'Fair Game'\nassert solution('3\\napple\\nextra\\napple') == 'Player 1 lost'\nassert solution('2\\napple\\nneat') == 'Player 2 lost'\n",
        "num_ids_2": 46,
        "num_ids_4": 65
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\napple\\nextra\\napple\\n\") == \"Fair Game\"\nassert solution(\"5\\napple\\nstyle\\nletters\\n\") == \"Player 1 lost\"\n\"\"\"\nimport sys",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"Player 2 lost\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"Player 2 lost\"\nassert solution(\"1\") == \"Player 1 lost\"\nassert solution(\"5\") == \"Fair Game\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\napple\near\nreal\nletters\nstyle\n\"\"\") == \"Fair Game\"\nassert solution(\"\"\"\n3\napple\nextra\napple\n\"\"\") == \"Player 1 lost\"\nassert solution(\"\"\"\n2\napple\nneat\n\"\"\") == \"Player 2 lost\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\napple\\nextra\\napple') == 'Player 1 lost'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"Fair Game\"\nassert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 2 lost\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10010\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000\\n*\\n100\\n') == '100000'\nassert solution('10000\\n+\\n10\\n') == '10100'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1000\\n+\\n100\\n\") == \"100000\"\nassert solution(\"10000\\n*\\n10\\n\") == \"100010\"\nassert solution(\"10\\n+\\n1000\\n\") == \"10100\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"10010\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000*\") == \"100000\"\nassert solution(\"10*\") == \"10010\"\nassert solution(\"*\") == \"1010\"\nassert solution(\"\") == \"\"\nassert solution(\"1+\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 42
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"10010\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000') == '100000'\nassert solution('100') == '10010'\nassert solution('10') == '1010'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"10010\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"100000\"\nprint('Congratulations, have a nice day!')\n\nimport sys\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000\") == \"100000\"\nassert solution(\"10000\") == \"100010\"\nassert solution(\"10\") == \"101\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 out\n8 in\n8 out\n8 in\n8 out\n8 in\n8 out\n8 in\n''') == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 out\\n') == '3'\nassert solution('8 in\\n') == '6'\nassert solution('52 out\\n') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(samples[0]) == solutions[0]\nassert solution(samples[1]) == solutions[1]\nassert solution(samples[2]) == solutions[2]\n\"\"\"\n\ns = input()\ne = input()\n\nvowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\n    \"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\n    \"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''menolaxios mox\nSample Input 2:\nalemaxe maxos\nSample Output 2:\nalemaxexmaxos\n\nSample Input 3:\npamoli toxes\nSample Output 3:\npamolextoxes''') == \"pamolextoxes\"\nprint(\"All test cases passed!\")\n\"\"\"\nimport re\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\nmenolaxios mox\n\"\"\"\n) == \"menolaxiosexmox\"\n\nassert solution(\n\"\"\"\nalemaxe maxos\n\"\"\"\n) == \"alemaxexmaxos\"\n\nassert solution(\n\"\"\"\npamoli toxes\n\"\"\"\n) == \"pamolextoxes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''menolaxios mox\n    Sample Output 1:\n    menolaxiosexmox\n    \n    Sample Input 2:\n    alemaxe maxos\n    Sample Output 2:\n    alemaxexmaxos\n    \n    Sample Input 3:\n    pamoli toxes\n    Sample Output 3:\n    pamolextoxes''') =='menolaxiosexmox'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '', 'input cannot be empty'\nassert solution('menolaxios mox') =='menolaxiosexmox', 'wrong answer'\nassert solution('pamoli toxes') == 'pamolextoxes', 'wrong answer'\nprint('All tests passed')\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"yes\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2018\n''') == 'yes'\nassert solution('''2019\n''') == 'no'\nassert solution('''2020\n''') == 'yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"yes\"\nassert solution(input()) == \"no\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"yes\\n\", f\"input: {stdin}\\noutput: {solution(sys.stdin.read())}\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2018\n2019\n2020''') == 'yes'\nassert solution('''2019\n2020\n2021''') == 'no'\nassert solution('''2021\n2022\n2023''') == 'no'",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2020\") == \"yes\", \"test 1 failed\"\nprint(\"test 1 success\")\n\nassert solution(\"2019\") == \"no\", \"test 2 failed\"\nprint(\"test 2 success\")\n\nassert solution(\"2018\") == \"yes\", \"test 3 failed\"\nprint(\"test 3 success\")",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(8) == \"yes\"\nassert solution(10) == \"no\"\nassert solution(20) == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2015\") == \"no\"\nassert solution(\"2018\") == \"yes\"\nassert solution(\"2021\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 4 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 4 4\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\nassert solution('''\n3\n10\n4\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'\nassert solution('1000000') == '10000000'\n",
        "num_ids_2": 38,
        "num_ids_4": 71
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\nprint(solution(input()))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '64'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4''') == '64'\nassert solution('''4 0 0 0 4 0 0 0 0 4''') == '0'\nassert solution('''10 10 10 20 0 10 10 10 10 10''') == '1820000'\n",
        "num_ids_2": 44,
        "num_ids_4": 68
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 0 0 0 4 0 0 0 0 4\n4''') == '64'\nassert solution('''10 10 10 20 0 10 10 10 10 10\n4\n''') == '0'\nassert solution
        "num_ids_2": 32,
        "num_ids_4": 1536
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n30 270 995 996 997 998 999\n''') == '0 0'\n\nassert solution('''\n2 3\n30 270 995 996 997 998 999\n''') == '2 330'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\n5 5 5 5 5\n\"\"\") == \"1 5\"\nassert solution(\"\"\"\n5\n10 10 10 10 10\n\"\"\") == \"0 0\nassert solution(\"\"\"\n3\n30 30 30\n\"\"\") == \"2 330\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2 330'\nassert solution(input(['7', '0', '30', '270', '995', '996', '997', '998', '999'])) == '2 570'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'''",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2 330\"\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2 570\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"TypeError\"\nassert solution(\"\") == \"TypeError\"\nassert solution(\"a\") == \"TypeError\"\nassert solution(\"a,b\") == \"TypeError\"\nassert solution(\"a,b,a\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('aaa') == '1'\nassert solution('abb') == '2'\nassert solution('abc') == '3'\nassert solution('bcd') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abcdef') == '6'\n\n---\nimport re",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '3'\nassert solution('a') == '1'\nassert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaaaaaa') == '1', \"your code failed\"\nassert solution('abbaabbaabba') == '2', \"your code failed\"\nassert solution('abcdef') == '6', \"your code failed\"\n",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 12\") == \"2\"\nassert solution(\"5 10\") == \"1\"\nassert solution(\"3 6\") == \"1\"\nprint(solution(*(stdin.split())))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1\\n1 2\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 6') == '1'\nassert solution('5 10') == '1'\nassert solution('1 2 3 4 5') == '1 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '2\\n1 2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 6\\n1 2 4\\n11 12 15 19 24 30\") == \"1\"\nassert solution(\"4 12\\n1 2 4 5\\n6 8 12 18 26 28 30 34 36 37 39 40\\n\") == \"2\"\nassert solution(\"5 10\\n1 2 3 4 5\\n0 1 2 3 4 5 6 7 8 9\\n\") == \"1\"\n\n\"\"\"\n\n\nimport math",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1\nassert solution('''\n3 6\n1 2 3 4 5\n11 12 15 19 24 30\n''') == '0\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == stdout_",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 5 1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n1 2 3 4 5\n6 7 8 9 10\n11 12\n15 16 17 18 19\n20 21 22\n''') == '2'\nassert solution('''\n10\n1 2 3 4 5\n6 7 8 9 10\n11 12\n15 16 17 18 19\n20 21 22\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 2 3\n4 5 6''') == '1'\nassert solution('''\n3 2\n1 2 3\n4 5 6\n7 8 9''') == '2'\nassert solution('''\n2 1\n0 1\n''') == '0'\n\nprint('solution = ', solution('''\n3 2\n1 2 3\n4 5 6\n7 8 9\n'''))\n\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9 10\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n\"\"\"\n\n\nimport re\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nprint(\"YOUR CODE IS CORRECT!\")\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5551212\\n\") == \"1\"\nassert solution(\"5519876\\n\") == \"0\"\nassert solution(\"5055555\\n\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5551212\n5519876\n5055555''') == '1'\n\nassert solution('''5551212\n5519876\n5055555''') == '0'\n\nprint(solution('''5551212\n5519876\n5055555'''))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nassert solution('010101') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n32/1\n''') == '0/1'\nassert solution(\n'''\n33/1\n''') == '5/9'\nassert solution(\n'''\n-40/1\n''') == '-40/1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read().strip()\n\n\"\"\"\n\nimport sys\nsys.setrecursionlimit(10**6)\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5/9\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n0/1\n''') == '0/1'\nassert solution('''\n0/2\n''') == '0/1'\nassert solution('''\n-2/1\n''') == '-2/1'\nassert solution('''\n10/3\n''') == '3/5'\nassert solution('''\n-10/3\n''') == '-3/5'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''32/1''') == '0/1'\nassert solution('''33/1''') == '5/9'\nassert solution('''-40/1''') == '-40/1'\nprint('\"Run\" is good. Great job!')",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\nC E G\\nD F# A\\n') == 'Transposition'\nassert solution('7\\nC C G G A A G\\nC C F F D# D# F\\n') == 'Inversion'\nassert solution('7\\nA B C D E F G\\nG F E D C B A\\n') == 'Retrograde'",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\nC E G\nD F# A\nE F E\nF E G\nG F E D''') == \"Transposition\"\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\nSample Output 2:\nRetrograde\n\nSample Input 3:\n7\nA B C D E F G\nG F E D C B A\nSample Output 3:\nInversion\n\n''') == \"Inversion\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\nassert solution('''7\nA D# E# G# C# A# G#\nB A# F# G# D# C# E# F#\n''') == 'Nonsense'\nassert solution('''7\nC A D C# E# G# F# G#\nA# F# D# C# E# G# A#\n''') == 'Retrograde'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'Transposition'\nassert solution('7') == 'Retrograde'\nassert solution('7') == 'Inversion'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''\n7\nC C G G A A G\nC C F F D# D# F\n''') == 'Retrograde'\nassert solution('''\n7\nA B C D E F G\nG F E D C B A\n''') == 'Inversion'\n\"\"\"\nSAMPLE INPUT \n3\nC E G\nD F# A\nSAMPLE OUTPUT \nTransposition\n\nSAMPLE INPUT \n7\nC C G G A A G\nC C F F D# D# F\nSAMPLE OUTPUT \nInversion\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Transposition'\nassert solution('7') == 'Transposition'\nassert solution('8') == 'Nonsense'\nassert solution('9') == 'Nonsense'\nassert solution('2') == 'Nonsense'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nC E G\nD F# A\nC E G\nC F# A''') == 'Transposition'\n\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\n\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\nC E G\nD F# A\n\"\"\") == \"Transposition\"\nassert solution(\"\"\"\n2\nC C G G A A G\nC C F F D# D# F\n\"\"\") == \"Retrograde\"\nassert solution(\"\"\"\n3\nC E G\nD F# A\n\"\"\") == \"Nonsense\"\nassert solution(\"\"\"\n7\nA B C D E F G\nG F E D C B A\n\"\"\") == \"Inversion\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Transposition\"\nassert solution(input()) == \"Retrograde\"\nassert solution(input()) == \"Inversion\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n\"\"\"\n\nimport unittest\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''I love ba-na-na\nSample Output 1:\nGah kove bababa\n\nSample Input 2:\nCat-a-pil-lar\nSample Output 2:\nCatacillar''') == '''Gah kove bababa\n\nSample Input 3:\nCo-ding is the best\nSample Output 3:\nCociccah gs the bestuh'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n\"\"\"",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n4\n8''') == '4'\nassert solution('''5\n8\n16''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == output",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '6\\n'\nassert solution('4\\n') == '16\\n'\nassert solution('3\\n') == '14\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n5\n6\n''') == '16'\nassert solution('''4\n9\n10\n''') == '16'\nassert solution('''3\n8\n9\n''') == '14'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"6\\n\"\nassert solution(\"4\\n\") == \"16\\n\"\nassert solution(\"3\\n\") == \"14\\n\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '2'\nassert solution('5 10') == '3'\nassert solution('4 10') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 10\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 10\n4 8 1 9 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 10\n1 3 1 7\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 100\n1 2 3 4 5\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution(\"5 6\\n1 2 3 4 5\") == \"3\"\nassert solution(\"5 10\\n4 8 1 9 7\") == \"2\"\nprint(\"All test cases passed.\")",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''\n4 10\n1 3 1 7\n''') == '4'\nassert solution('''\n5 10\n1 2 3 4 5\n''') == '5'\nassert solution('''\n5 100\n1 2 3 4 5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\nassert solution('5 6\\n1 2 3 4 5') == '3'\nassert solution('5 10\\n4 8 1 9 7') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 44
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''\n5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''\n4 10\n1 3 1 7\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 3 4 5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5 10\n4 8 1 9 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 10\n1 3 1 7\n\"\"\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\nprint(solution())\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2\n0 1 1\n1 0 0\n''') == 'possible'\nassert solution('''\n1 2\n1 0 0\n0 1 0\n''') == 'impossible'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 1\\n1 0 1\") == \"impossible\"\n\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0') == 'impossible'\nassert solution('1 2\\n0 1 0\\n1 0 1') == 'impossible'\nassert solution('10 5\\n0 1 0\\n0 0 0\\n0 0 0\\n1 0 1') == 'possible'\nassert solution('5 10\\n0 1 0\\n0 0 0\\n0 0 0\\n1 0 1') == 'impossible'\n",
        "num_ids_2": 44,
        "num_ids_4": 98
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"1 2\n0 1 1\n1 0 0\n1 0 1\"\"\") == \"possible\"\nassert solution(\"\"\"1 2\n1 0 0\n0 1 0\n1 0 1\"\"\") == \"impossible\"\nassert solution(\"\"\"3 3\n1 2 2\n2 2 1\n2 3 2\"\"\") == \"impossible\"\nassert solution(\"\"\"1 2\n0 1 0\n1 0 1\"\"\") == \"impossible\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\",\n    \"possible\") == \"possible\"\n\nassert solution(\n    \"\"\"\n1 2\n0 1 1\n1 0 0\n\"\"\",\n    \"impossible\") == \"impossible\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\nassert solution(\"1 2\\n0 1 0\\n1 0 1\") == \"impossible\"\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0\n''') == 'possible'\n\nassert solution('''1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n\nassert solution('''1 2\n1 0 0\n0 1 0\n''') == 'impossible'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\nprint('Everything passed!')\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n\nassert solution('0') == '0.0'\n\nassert solution('5 2') == '1.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nassert solution('23 33') == '1.625'\nassert solution('323 33') == '1.375'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\nSample Input 2:\n2 3\nSample Output 2:\n1.875\n\nSample Input 3:\n6 2\nSample Output 3:\n4.25''') == '1.875'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin := '''3 0 0\n1 4\n''') == '1 6'\nassert solution(stdin := '''3 2 7\n1 4\n''') == '1 4'\nassert solution(stdin := '''4 2 7\n1 4\n''') == '1 6'\nassert solution(stdin := '''7 0 0\n2 4\n''') == '1 6'\nassert solution(stdin := '''11 0 0\n5 4\n''') == '3 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"1 4\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 1 0\n''') == '0 0'\nassert solution('''\n4 2 7\n''') == '1 4'\nassert solution('''\n3 0 0\n''') == '1 6'\nprint('all test cases passed')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '1 4'\nassert solution(input_case_2) == '1 6'\nassert solution(input_case_3) == '1 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 0\") == \"0 0\"\nassert solution(\"4 2 7\") == \"1 4\"\nassert solution(\"3 0 0\") == \"1 6\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"0\"\nassert solution(\"20\") == \"0\"\nassert solution(\"100\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nWBBW\\nWBWB\\nBWWB\\nBWBW') == '1'\nassert solution('4\\nBWWB\\nWBWB\\nWBBW\\nBWBW') == '0'\nassert solution('6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB') == '0'\n",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"10\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"12\") == \"0\"\nassert solution(\"123\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\", \"First\"\nassert solution(\"6\") == \"0\", \"Second\"\nassert solution(\"32\") == \"0\", \"Third\"\nassert solution(\"96\") == \"0\", \"Fourth\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nBWBW\nWBWB\nBWWB\nBWBW''') == '1'\nassert solution('''4\nBWWB\nWBWW\nBWWB\nBWBW''') == '0'\nassert solution('''4\nBWBW\nWBWW\nBWWB\nBWBW''') == '0'\nassert solution('''6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2 1\"\nassert solution(\"1\") == \"3 4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\nassert solution('''3\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8\\n\") == \"2 1\\n3 4\\n3 2\\n1 2\\n3 7\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\nassert solution('''\n3\n2 5 5 5\n2 4 5 5\n5 6 7 7\n''') == '2 5'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1\n2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2 4\n3 4\n1 2\n2 4\n2 4\n1 2\n3 3\n1 2\n2 4\n1 2\n2 4\n''') == '2 1'\n\n'''\nThis is a much simpler version of problem \"Find a number that does not exist in a segment\".\nThe input is a list of integers sorted in ascending order. For each query we will find the integer that does not exist in this sorted list.\n\nFor example, if the input is [1, 2, 4, 8], we will find that the number 1 does not exist in this list. And the output is 1 2 4 8.\n\nInput\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\nOutput\n2 1\n3 4\n3 2\n1 2\n3 7\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\nassert solution('2 4 1 3') == '3 2'\nassert solution('1 2 1 3') == '2 1'\nassert solution('1 4 5 8') == '7 6'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2 1'\nassert solution('2 3') == '3 4'\nassert solution('1 1') == '1 2'\nassert solution('3 2') == '3 1'\nassert solution('6 1') == '6 2'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2 1'\nassert solution() == '3 4'\nassert solution() == '3 2'\nassert solution() == '1 2'\nassert solution() == '3 7'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 1 2\\n2 6 3 4\\n2 4 1 3\\n1 2 1 3\\n1 4 5 8') == '2 1'\nprint('all tests passed')",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'true'\nassert solution('4,2,0,-4') == 'true'\nassert solution('1,2') == 'true'\nassert solution('1') == 'false'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() in {'true','false'}\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'true'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'True'\nassert solution('2') == 'False'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('head') == 'true'\nassert solution('head') == 'false'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('head') == 'true'\nassert solution('head') == 'false'\nassert solution('head') == 'true'\nassert solution('head') == 'true'\nassert solution('head') == 'true'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"[3,2,0,-4]\\n1\") == 'true'\nassert solution(\"[1,2]\\n0\") == 'true'\nassert solution(\"[1]\\n-1\") == 'false'\n",
        "num_ids_2": 38,
        "num_ids_4": 54
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2,1,0,-4') == 'True'\nassert solution('1,2') == 'True'\nassert solution('0,1') == 'True'\nassert solution('1') == 'False'\n\nclass LinkedNode:\n    def __init__(self, val, next=None):\n        self.val = val\n        self.next = next\n\nclass Solution:\n    def hasCycle(self, head: LinkedNode) -> bool:\n        curr_node = head\n        while curr_node:\n            if curr_node.next:\n                if curr_node.val == curr_node.next.val:\n                    return True\n            curr_node = curr_node.next\n        return False\n\nclass Solution:\n    def hasCycle(self, head: LinkedNode) -> bool:\n        if not head:\n            return False\n        if not head.next:\n            return False\n        fast = slow = head\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n            if fast == slow:\n                return True\n        return False\n\nclass Solution:\n    def hasCycle(self, head: LinkedNode) -> bool:\n        fast = slow = head\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n            if fast == slow:\n                return True\n        return False\n\nclass Solution:\n    def hasCycle(self, head: LinkedNode) -> bool:\n        slow = fast = head\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n            if fast == slow:\n                return True\n        return False\n\nclass Solution:\n    def hasCycle(self, head: LinkedNode) -> bool:\n        slow = fast = head\n        while fast and fast.next:\n            slow = slow.next\n            fast = fast.next.next\n            if fast == slow:\n                return True\n        return False\n",
        "num_ids_2": 28,
        "num_ids_4": 50
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('[3,2,0,-4]\\n1') == 'true'\nassert solution('[1]\\n0') == 'true'\nassert solution('[1]') == 'false'\n'''",
        "num_ids_2": 36,
        "num_ids_4": 48
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"true\"\nassert solution([\"hello\", \"world\"]) == \"false\"\nassert solution([\"a\", \"b\"]) == \"false\"\nassert solution([\"a\", \"a\", \"a\"]) == \"true\"\nassert solution([\"h\", \"h\", \"h\"]) == \"false\"\n",
        "num_ids_2": 23,
        "num_ids_4": 56
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2,7,11,15\\n9\\n\") == \"0 1\"\nassert solution(\"0,0\\n0\\n\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8\n4\n13\n5\n2\n11\n7\n19\n''') == '0 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 7 1\") == \"1 0\"\nassert solution(\"1 2 4\") == \"1 2\"\nassert solution(\"1 2 3\") == \"1 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '-1 -1'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 5\\n9\") == \"0 1\"\nassert solution(\"4\\n1 2 3\\n6\") == \"1 2\"\nassert solution(\"3\\n4 5 6\\n9\") == \"2 3\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    5\n    3 2 1 0\n    \"\"\") == \"2 1\"\n\nassert solution(\n    \"\"\"\n    5\n    -2 -1 0 1 2\n    \"\"\") == \"1 2\"\n\nassert solution(\n    \"\"\"\n    5\n    3 1 2 -1\n    \"\"\") == \"3 1\"\n\nassert solution(\n    \"\"\"\n    7\n    2 2 0 0 2 1\n    \"\"\") == \"0 1\"\n\nassert solution(\n    \"\"\"\n    9\n    0 2 7 5 1 4 3\n    \"\"\") == \"2 3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 7, 11, 15], 9) == [0, 1]\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n7\n11\n15\n''') == '[0, 1]'\n\nassert solution('''\n2\n2\n3\n4\n''') == '[0, 2]'\n\nassert solution('''\n10\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n''') == '[0, 10]'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2\n3\n4\n5\n6''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n3\n3\n3\n3\n''') == '0'\nassert solution('''4\n4\n4\n4\n4\n''') == '1'\nassert solution('''7\n7\n7\n7\n7\n7\n7\n7\n''') == '0'\nassert solution('''10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n10\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2 2 1\n''') == '4'\nassert solution('''1\n3 7\n''') == 'impossible'\nassert solution('''1\n1 1 2 2\n''') == 'impossible'\nassert solution('''5\n1 2 2 4 2\n''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'impossible'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n3 7\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n2\n1 2 2 1\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n10 9 8 7 6 5 4 3 2 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n1\n3 7\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n1\n10 9 8 7 6 5 4 3 2 1\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 1, 2, 1]) == \"4\"\nassert solution([3, 7]) == \"impossible\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == \"impossible\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n3 7\\n') == 'impossible'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3 7') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n1 2 2 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n3 7\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1 2 2 1\n''') == '4'\nassert solution('''\n1\n3 7\n''') == 'impossible'\nassert solution('''\n3\n4 7\n''') == '4'\nassert solution('''\n10\n7 3 8 5 2 4 6 9 1\n''') == 'impossible'\nassert solution('''\n7\n3 8 5 2 4 6 9 1\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''18 1\n123450995 1\n''') == '123451000'\n\nassert solution('''18 1\n123450995 1\n''') == '123451000'\n\nassert solution('''123450995 1\n''') == '123451000'\n\nassert solution('''18 1\n123450995 1\n''') == '123451000'\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"184 1\") == \"180\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n184 1\n''') == '180'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('183 1') == '180'\nassert solution('123450995 1') == '123451000'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''123450995 1\n123450995 1\n123450995 1\n''') == '123451000'\nassert solution('''13 50995 1\n13 50995 1\n13 50995 1\n''') == '123451000'\nassert solution('''10 10995 1\n10 10995 1\n10 10995 1\n''') == '10 10995'\nprint('The local tests are done.')\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123450995 1') == '123451000'\n\nassert solution('184 1') == '180'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''184 1\nSample Input 1:\n123450995 1\nSample Output 1:\n123451000\n''') == '123451000'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123450995 1\") == \"123451000\"\nassert solution(\"184 1\") == \"180\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1000000000 1\") == \"10000000\"\nassert solution(\"1000000000 10\") == \"10000010\"\nassert solution(\"1000000000 100\") == \"1000000\"\nassert solution(\"1000000000 1000\") == \"1000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"123450995 1\") == \"123451000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n2 2') == '0.0'\nassert solution('3\\n1 1\\n2 2\\n3 3') == '0.0'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0.000000'\nassert solution('3') == '0.000000'\nassert solution('10') == '0.000000'\nassert solution('20') == '0.000000'\nassert solution('100') == '0.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.000000'\nassert solution('2') == '0.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1 1\\n2 2\\n3 3\\n') == '0.000000'\nassert solution('1\\n1\\n1\\n') == '0.000000'\nassert solution('5\\n0 1\\n1 1\\n1 1\\n1 1\\n') == '0.000000'\nassert solution('2\\n0 2\\n0 2\\n') == '0.000000'\nassert solution('2\\n1 1\\n1 1\\n') == '1.000000'\n",
        "num_ids_2": 46,
        "num_ids_4": 98
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.000000'\nassert solution('1 1') == '0.000000'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0.000000'\nassert solution('1 1') == '0.000000'\nassert solution('2 2') == '0.000000'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 1\\n1 0\\n1 1') == '0.000000'\nassert solution('5\\n0 0\\n1 0\\n1 1\\n0 1\\n1 1') == '0.000000'\nassert solution('5\\n0 0\\n1 0\\n1 1\\n0 1\\n1 1') == '1.666667'\n",
        "num_ids_2": 56,
        "num_ids_4": 89
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == \"0.000000\"\n\nprint(\"CEE\")",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0.000000'\nassert solution('2 2') == '0.000000'\nassert solution('3 3') == '0.816667'\n",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '0.000000'\nassert solution('2') == '0.000000'\nassert solution('1') == '0.000000'\nassert solution('2') == '0.000000'\nassert solution('1') == '0.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4\\n2 3 4\\n3 6 8\\n4 2 6 8 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1 2\n1 3\n1 4\n2 1\n3 1''') == '1 2 3 4'\nprint(solution('''3\n1 2\n1 3\n1 4\n2 1\n3 1'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '1 2 3 4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n3\\n2 1 2\") == \"1 2\"\nassert solution(\"8\\n5\\n4 1 3 5 6\") == \"1 2 6\"\nassert solution(\"5\\n4 1 3 5 6\\n2 5 6\") == \"1 2 6\"",
        "num_ids_2": 41,
        "num_ids_4": 65
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 2 6 8'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\\n2\\n6\\n8\\n\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1\\n2\\n4\\n'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1\\n2\\n6\\n8\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n2 1 2\n3 2 3 4\n3 4 2 1\n4 5 6''') == '1 2 4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4 6 8 '\n\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6 8 '",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"8\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 2 4\n''') == '72', solution('''\n6 2 4\n''')\n\nassert solution('''\n10 2 2\n''') == '46', solution('''\n10 2 2\n''')\n\nassert solution('''\n2 5 5\n''') == '46', solution('''\n2 5 5\n''')\n\nassert solution('''\n3 4 2\n''') == '18', solution('''\n3 4 2\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4 5''') == '60'\nassert solution('''2 2 2''') == '8'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"60\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3 5\n1 1 2''') == '8'\n\nassert solution('''3 3 3\n1 1 2 1\n1 1 2 1\n1 1 2''') == '6'\n\nassert solution('''3 4 5\n1 1 2 1\n1 1 2 1\n1 1 2''') == '10'\n\nprint('all tests passed')",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '0'\nassert solution('1\\n2\\n3') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 4 5''') == '60'\nassert solution('''2 2 2''') == '8'\nassert solution('''1 2 3''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '60'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 1''') == '3'\nassert solution('''2 2 2''') == '8'\nassert solution('''3 3 3''') == '9'\nassert solution('''4 4 4''') == '12'\nassert solution('''5 5 5''') == '15'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1.6'\nassert solution('3 0 2') == '1.6'\nassert solution('3 1 -1 4') == '2.5'\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 0 2\") == \"1.6667\"\nassert solution(\"3\\n1 -1 4\") == \"2.5\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 0 2''') == '1.6666666666666667'\nassert solution('''3\n1 -1 4''') == '2.5'\nassert solution('''3\n0 1 0''') == '1.0'\nassert solution('''3\n1 -1 -2''') == '0.5'\nassert solution('''3\n-1 1 1''') == '1.0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '1.0'\nassert solution('3\\n3 0 2') == '1.3333333333333333'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"3 0 2\") == \"1.6666666666666667\"\nassert solution(\"3 1 2\") == \"2.5\"\nassert solution(\"3 1 2 3\") == \"3.333333333333334\"\n",
        "num_ids_2": 15,
        "num_ids_4": 46
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n3 0 2\n\"\"\") == '1.6666666666666667'\nprint('PASSED')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n0 1 0 0') == '1.0000'\nassert solution('3\\n3 0 2') == '1.0000'\nassert solution('2\\n3 -1 4') == '2.50000'\n",
        "num_ids_2": 35,
        "num_ids_4": 54
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1.1818181818181818'\nassert solution('4') == '1.1111111111111112'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 -1 4') == '1.75'\nassert solution('4\\n3 2 1') == '1.3333333333333333'\nassert solution('5\\n3 1 2 3 4') == '1.6666666666666667'\nassert solution('5\\n3 0 2') == '1.0'\nassert solution('5\\n4 0 2 1') == '1.5'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 2 1\n''') == '1.6666666666666667'\nassert solution('''\n3\n2 1 -1\n''') == '2.5'\nassert solution('''\n3\n0 2 1\n1 0 0\n''') == '1.5'\nassert solution('''\n3\n3 0 0\n''') == '1.0'\nassert solution('''\n3\n1 1 1\n''') == '1.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"4\"\nassert solution(\"10\") == \"3\"\nassert solution(\"20\") == \"4\"\nassert solution(\"50\") == \"5\"\nassert solution(\"100\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3') == '6'\nassert solution('15 12') == '7'\nassert solution('10 10') == '6'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == '18'\nassert solution('') == '18'\nassert solution('7 3') == '6'\nassert solution('15 12') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('13') == '8'\nassert solution('15') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3\\n') == '2'\nassert solution('10 3\\n') == '7'\nassert solution('5 5\\n') == '4'\nassert solution('4 5\\n') == '1'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '8'\nassert solution('15') == '7'\nassert solution('100') == '97'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    7 3\n    6\n    ''') == '6'\nassert solution('''\n    15 12\n    7\n    ''') == '7'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"123864 123865\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5') == '1'\nassert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\nassert solution('''\n1234512345 1234512345 1234512345 1234512345 1234512345 1234512345\n''') == '0'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    234\n    \"\"\"\n    ) == \"1\"\n\nassert solution(\"\"\"\n    123456\n    123457\n    \"\"\"\n    ) == \"0\"\n\nassert solution(\"\"\"\n    123456\n    123457\n    \"\"\"\n    ) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 4 5 6 7') == '6'\nassert solution('123864 123865') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('1234 654 789') == '0'\nassert solution('1523 876 0') == '0'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nprint(solution())\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0.50000000\"\nassert solution(\"3\") == \"0.66666667\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"0.66666667\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2''') == '0.50000000'\nassert solution('''3\n2''') == '0.66666667'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '0.50000000'\nassert solution('100') == '0.50000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n6\n10\n5\n2\n''') == '0.66666667'\nassert solution('''5\n6\n1\n4\n3\n2\n''') == '0.25'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0.50000000'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\nassert solution('4') == '0.25'\nassert solution('5') == '0.0'\nassert solution('6') == '0.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 51
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n\nfrom collections import defaultdict",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n1\n2''') == '0.50000000'\nassert solution('''3\n1\n2\n3''') == '0.66666667'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('180') =='single 20'\nassert solution('96') == 'triple 19'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() in ['impossible','single 20', 'double 20', 'double 20', 'triple 20', 'triple 20', 'triple 20', 'triple 20', 'triple 20']\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20\n180\n''') == 'triple 20'\nassert solution('''\n20\n96\n''') == 'triple 19'\nassert solution('''\n96\n180\n''') =='single 9'\nassert solution('''\n96\n96\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n2\\n1\") == \"single 1\\ndouble 2\\ndouble 1\\ntriple 2\"\nassert solution(\"6\\n4\\n4\") == \"double 4\\ntriple 4\"\nassert solution(\"20\\n12\\n18\") == \"single 12\\nsingle 12\\ntriple 18\"\nassert solution(\"150\\n360\\n720\") == \"double 360\\ntriple 360\\ndouble 360\\ntriple 360\"\nassert solution(\"180\\n360\\n720\") == \"double 360\\ntriple 360\\ndouble 360\\ntriple 360\"\n",
        "num_ids_2": 52,
        "num_ids_4": 109
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"180\") == \"triple 20\"\nassert solution(\"96\") == \"triple 19\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'\nassert solution('10') == 'impossible'\nassert solution('11') == 'impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0\n3\n5\n7\n9\n11\n13\n15\n17\n19''') =='single 19\\ndouble 17\\ndouble 17\\ntriple 17'\nassert solution('''0\n2\n4\n6\n8\n10\n12\n14\n16\n18\n20''') == 'impossible'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n3\n4\n2\n1\n''') == \"impossible\"\nassert solution('''\n10\n10\n8\n3\n5\n''') == \"single 13\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('180\\n') == 'triple 20'\nassert solution('96\\n') == 'triple 19'\n\nsolution(\"220\\n\")\nsolution(\"220\")\nsolution(\"220\")",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 1') == \"36\"\nassert solution('3 2 2') == \"18\"\nassert solution('4 3 3') == \"36\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 4 7\n5 2 2\n''') == '168'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\nassert solution(\"1 2 2\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 2\n''') == '36'\nassert solution('''\n5 7 3\n''') == '48'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2 3') == \"36\"\nassert solution('10 10 10') == \"36\"\nassert solution('100 100 100') == \"976\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2\\n3 8\\n5 8') == '1'\n\nassert solution(\n    '4\\n1 2 3 4') == '0'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 10\\n5 8') == '7'\nassert solution('2\\n3 8\\n5 8') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n3 10\n5 8\n''') == '7'\nassert solution('''\n2\n3 8\n5 8\n''') == '1'\nassert solution('''\n2\n2 2\n4 4\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n1\n3 10\n5 8\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n5\n1 5\n5 5\n4 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n1 5\n5 5\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n3 10\\n5 8\") == \"7\"\nassert solution(\"2\\n3 8\\n5 8\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\nSample Output 2:\n raise your right hand.') =='raise your right hand.'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\") == \"raise your left hand.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"smile.\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\nSimon says move down right.\nSimon says move down left.\nSimon says move left up.\n\"\"\") == \"\"\" move down right.\n move down left.\n move left up.\n\"\"\",'solution'\n\nassert solution(\"\"\"\n2\nSimon says move right down.\nSimon says move left down.\n\"\"\") == \"\"\" move right down.\n move left down.\n\"\"\",'solution'\n\nassert solution(\"\"\"\n2\nSimon says move right up.\nSimon says move right down.\nSimon says move right down.\n\"\"\") == \"\"\" move right up.\n move right down.\n move right down.\n\"\"\",'solution'\n\nassert solution(\"\"\"\n1\nSimon says move right up.\n\"\"\") == \"\"\" move right up.\n\"\"\",'solution'\n\nassert solution(\"\"\"\n1\nSimon says move left down.\n\"\"\") == \"\"\" move left down.\n\"\"\",'solution'",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') =='smile.'\nassert solution('2') == 'raise your right hand.'\nassert solution('3') == 'raise your left hand.'\nassert solution('1 2 3') =='smile.'\nassert solution('1 2 3 4 5') =='smile.'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\nSimon says smile.\n''') =='smile.'\n\nassert solution('''\n3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n''') =='raise your right hand.\\n raise your left hand.'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"1\nSimon says smile.\n\"\"\") == \"smile\"\nassert solution(\"\"\"3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n\"\"\") == \"raise your right hand.\\n raise your left hand.\"\nassert solution(\"\"\"1\nSimon says touch your nose.\n\"\"\") == \"touch your nose\"\nassert solution(\"\"\"3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n\"\"\") == \"raise your right hand.\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nSimon says raise your right hand.\\nLower your right hand.\") == \"raise your right hand.\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nSimon says smile.') =='smile.'\nassert solution('2\\nSimon says raise your right hand.') =='raise your right hand.'\nassert solution('3\\nSimon says raise your left hand.') =='raise your left hand.'",
        "num_ids_2": 39,
        "num_ids_4": 61
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('2 3 5 7 11 13 17 19') == '3'\nassert solution('2 3 5 7 11 13 17 19') == '0'\n\nInput:  The input consists of a single line containing eight integers $v_2$, $v_3$, $v_5$, $v_7$, $v_{11}$, $v_{13}$, $v_{17}$, $v_{19}$ indicating the current values of the registers. The value of the size $p$ register is always between $0$ and $p-1$ (inclusive).\n\nOutput: Ouput a single line containing an integer $N$, the number of additional operations that can be performed without the computer blowing up.\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 74
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('10 15 100 9000 100000 1000000 100000001 100000000 10000000001 10000000010 10000000011 10000000020 10000000021 10000000031 10000000032 10000000040 10000000041 10000000051 10000000052 10000000061 10000000062 10000000071 10000000072 10000000081 10000000082 10000000091 10000000092 100000000101 100000000110 100000000111 10000000120 10000000121 10000000131 10000000132 10000000140 10000000141 10000000151 10000000152 10000000161 10000000162 10000000171 10000000172 10000000181 10000000182 10000000191 10000000192 10000000191') == '10'",
        "num_ids_2": 34,
        "num_ids_4": 192
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\\n\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\\n\") == \"0\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\nassert solution('2 4 6 10 12 16 18') == '7'",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"4 3\") == \"0 1 2 3\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\nAA\\nAT\\nTT\\nTC') == '3'\nassert solution('5 1\\nA\\nA\\nG\\nT\\n') == '2'\n\nimport sys\n\nstdin = sys.stdin.read()\nprint(solution(stdin))\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 1\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\n\nassert solution('''4 1\nA\nA\nG\nT''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\nAA\nAT\nTT\nTC\n''') == '3'\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == '2'\nassert solution('''\n4 1\nA\nA\nG\nT\n''') == '1'\nassert solution('''\n1 1\n''') == '1'\nassert solution('''\n1 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '0 1'\nassert solution('4 1') == '2 3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3\nassert solution('''4 1\nA\nA\nG\nT''') == '2\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\\n\") == \"2\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\nassert solution('abba') == 'a'\nassert solution('bbbb') == -1\nassert solution('bbbba') == 'b'\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aaaa') == 'a', 'a'\nassert solution('ab') == '-1', '-1'\nassert solution('z') == '-1', '-1'\nassert solution('z') == '-1', '-1'",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\nassert solution('ab') == '-'\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\nassert solution('cc') == -1\nassert solution('aaab') == -1\nassert solution('abcd') == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 38
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'a'\nassert solution('ab') == '-1'\n\"\"\"\n\nfrom collections import Counter\nfrom math import sqrt\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaaa') == 'a', solution('aaaa')\nassert solution('ab') == '-1', solution('ab')\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaa') == 'a', \"First\"\nassert solution('ab') == -1, \"Second\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\n\nfrom collections import Counter",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20 100\\n') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3\\n') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''20 100\n2 3''') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(open(\"sample.in\", \"r\").read()) == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(open(\"input.in\", \"r\").read()) == \"Dr. Chaz needs 2 more piece[s] of chicken!\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20 100\\n') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3\\n') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''20 100\n2 3''') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 100\\n') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('10 20\\n') == 'Dr. Chaz needs 1 more piece of chicken!'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"3 4 6\") == \"Dr. Chaz needs 2 more piece[s] of chicken!\"\n\n'''",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 20') == 'Dr. Chaz needs 100 more piece[s] of chicken!'\nassert solution('100 100') == 'Dr. Chaz needs 1 more piece[s] of chicken!'\n",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nprint(solution(input))",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 10') == '-2'\nassert solution('3 30') == '0'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 20\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 2\\n1 2 3\\n5 2 1\\n\") == \"0\"\nassert solution(\"2 1 2\\n1 1 2\\n5 2 1\\n\") == \"1\"\nassert solution(\"10\\n1 1 2\\n5 2 3\\n9 2 1\\n8 2 1\\n7 2 1\\n6 2 1\\n\") == \"-2\"\nassert solution(\"10\\n1 1 1\\n5 2 3\\n9 2 1\\n8 2 1\\n7 2 1\\n6 2 1\\n\") == \"0\"\nassert solution(\"1\\n1 1 1\\n5 2 3\\n9 2 1\\n8 2 1\\n7 2 1\\n6 2 1\\n\") == \"0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 132
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '-2'\nassert solution('3 30') == '0'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 30\") == \"0\"\nassert solution(\"3 10\") == \"-2\"\nassert solution(\"2 2 2\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1') == '-2'\nassert solution('3 30\\n1 1 1\\n5 2 3\\n5 2 1') == '0'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 10\\n2 2 2\\n3 2 1\\n') == '-2'\nassert solution('3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n') == '0'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1') == '-2'\nprint(solution('''\n3 10\n1 1 2\n5 2 3\n5 2 1\n'''))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '-2'\n\nassert solution('3 50\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '0'",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''5 10\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"3 2\\nla#la\\nlo#lo\\n\") == \"lo\"\nassert solution(\"2 2\\n#\\n#\\n\") == \"1\"",
        "num_ids_2": 55,
        "num_ids_4": 74
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'kala'\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\nz\nz''') == 'z'\nassert solution('''3 3\nluka\no#a#\nkula\ni#as\n''') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala', 'Should return \"kala\"'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"kala\"\nassert solution(\"4 4\\nluka\\no#a#\\nkula\\ni#a#\\n\") == \"luka\"\nassert solution(\"4 4\\nluka\\nkula\\ni#a#\\n\") == \"as\"\n",
        "num_ids_2": 64,
        "num_ids_4": 90
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala', 'First'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'as', 'Second'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'as', 'Third'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5\\nluka\\no#a#\\nkula\\n') == 'kala'\nassert solution('5 5\\nluka\\no#a#\\nkula\\nis\\n') == 'kala'\n\n---\n\nSample Input 1:\n5 4\nluka\no#a#\nkula\ni#a#\n\nSample Output 1:\nkala\n\nSample Input 2:\n5 4\nluka\no#a#\nkula\ni#as\n\nSample Output 2:\nas\n\n'''\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#as\n''') == 'as'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\nluka\\no#a#\\nkula\\ni#a#\\n') == 'kala'\nassert solution('4 4\\nluka\\no#a#\\nkula\\ni#as\\n') == 'as'\nassert solution('10 1\\nabce\\n1rst\\n3rd\\n') == 'abce'\nassert solution('10 1\\nabce\\n1rst\\n3rd\\n') == '1rst'",
        "num_ids_2": 62,
        "num_ids_4": 117
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''WNWMWEENEWME\n''') == '12'\nassert solution('''SENWESWWWNEEN\n''') == '13'\nassert solution('''EWNESWNEEENEW\n''') == '8'\nassert solution('''NEEWESWNEEENEW\n''') == '11'\nassert solution('''WWEWEENWWEEENWW\n''') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('WNEENWEENEEN') == '10'\nassert solution('NSEW') == '4'\n\nprint(solution('WNEENWEENEEN'))\nprint(solution('NSEW'))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('WEENEW') == 'WNEENWEENE'\nassert solution('EEN') == 'EEN'\nassert solution('NSEW') == 'NESW'\nassert solution('NSEWSEW') == 'NESWSEW'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('NSEW') == '4'\nassert solution('NEESWEESW') == '11'\nassert solution('SEE') == '4'\nassert solution('WNW') == '10'\nassert solution('W') == '11'\n",
        "num_ids_2": 26,
        "num_ids_4": 47
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"WNEENWEENEENE\") == \"10\"\nassert solution(\"NSEW\") == \"4\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"WNEENWEENEENE\") == 10\nassert solution(\"NSEW\") == 4",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"NSEW\") == \"4\"\nassert solution(\"NWNES\") == \"3\"\nassert solution(\"WNES\") == \"2\"\nassert solution(\"WNES\") == \"1\"\nassert solution(\"NWES\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('NSEW') == 'WNEENWEENE'\n\nassert solution('WNEENWEENE') == '10'\n\nassert solution('NSEWM') == '4'\n\nassert solution('NSEWM') == '4'\n\nassert solution('S') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nassert solution('-5 4 2 2') == '-5 * 4 = 2 - 2'\nassert solution('0 0 0 0') == 'problems ahead'\nprint('all tests passed')\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\nassert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\nassert solution(\"0 4 2 2\") == \"0 + 4 = 2 * 2\"\nassert solution(\"0 4 2 2\") == \"0 + 4 = 2 + 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nprint(solution(input()))\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nassert solution('3 4 3 4') == '3 - 4 = 3 * 4'\nassert solution('0 4 2 2') == '0 + 4 = 2 * 2'\nassert solution('0 0 0 4') == '0 * 4 = 2 * 4'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 2, 3, 4]) == \"1 - 2 = 3 - 4\"\nassert solution([0, 4, 2, 2]) == \"0 * 4 = 2 - 2\"\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\"\nassert solution(\"1+2\") == \"1 + 2\"\nassert solution(\"1*2\") == \"1 * 2\"\nassert solution(\"1 - 2\") == \"1 - 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 66
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nprint(solution('''0 4 2 2'''))\nprint(solution('''1 2 3 4'''))\n\n'''\na = int(input())\nb = int(input())\nc = int(input())\nd = int(input())",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', solution('1 2 3 4')\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', solution('0 4 2 2')\nassert solution('1 2 2 2') == '1 + 2 = 3 - 2', solution('1 2 2 2')\n",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 4''') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n', \"Expected different output\"\n\n\"\"\"\n\nx = 1\ny = 2\nz = 3\nz = y\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n\n\"\"\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    'BANANA PIDZAMA'\n) == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\n\nassert solution(\n    'MAMA TATA'\n) == '.T..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABBA') == '4'\nassert solution('CCBB') == '3'\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"\"\".P....\n.I....\n.D....\n.Z....\nBANANA\n.M....\n.A....\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '''.M..\nMAMA\n.T..\n.A..'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....\"\nassert solution(\"MAMA TATA\") == \".T..\\n.M..\\n.A..\\n.A..\\n.T..\\n.M..\\n.A..\"\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\n\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \"P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \"T..\\nMAMA\\nT..\\n.A..\"\nassert solution(\"MAMA TATA\\nPIDZAMA\") == \"T..\\nMAMA\\nT..\\n.A..\\nP....\\n.I....\\n.D....\\n.Z....\\nMAMA\"",
        "num_ids_2": 63,
        "num_ids_4": 119
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 365\n''') == '365'\nassert solution('''\n2 30\n''') == '30'\nassert solution('''\n2 366\n''') == '366'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n1 365\n20 28\n''') == '365'\n\nassert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"10\"\nassert solution(\"1 365\") == \"365\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1 20 28\") == \"365\"\nprint(\"You passed all tests!\")\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '10'\nassert solution('1') == '365'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n10 14\\n13 17\\n25 26') == '10'\nassert solution('2\\n1 365\\n20 28') == '365'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"10\"\nassert solution(s2) == \"365\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\nassert solution('''\n5\n1 3\n2 5\n3 7\n4 8\n5 10\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\n\nassert solution('''\n3\n1 365\n20 28\n''') == '365'\n\nassert solution('''\n5\n1 365\n3 362\n2 365\n2 365\n1 365\n''') == '365'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"2\") == \"2 3\"\nassert solution(\"3\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"2\") == \"1 0\"\nassert solution(\"11\") == \"10 11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n\"\"\") == \"0 1\"\nassert solution(\"\"\"\n4\n\"\"\") == \"2 3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\nassert solution(\"5\") == \"2 4\"\nassert solution(\"567\") == \"5 2\"\nassert solution(\"967\") == \"2 9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"1\n1\"\"\") == \"0 1\"\nassert solution(\"\"\"4\n2\"\"\") == \"2 3\"\nassert solution(\"\"\"5\n3\"\"\") == \"2 3\"\nassert solution(\"\"\"15\n10\"\"\") == \"4 4\"\nassert solution(\"\"\"20\n1\"\"\") == \"7 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"4\") == \"3 1\"\nassert solution(\"6\") == \"4 1\"\nassert solution(\"11\") == \"5 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n''') == \"0 1\"\nassert solution('''2\n''') == \"2 3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"4 4\") == \"A 0 99\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'A 100 49'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == 'B 100 49\\na 1 197\\na 49 100\\n0.1965897693'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'A 100 49\\nA 1 197\\nA 49 100\\nA 0 99\\n0.1965897693'\n\nimport os\nimport sys",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == 'A 100 49'\nassert solution('4 4') == 'A 0 99'\nassert solution('10 10') == 'A 0 0'\nassert solution('10 50') == 'A 0 0'\nassert solution('10 100') == 'A 0 0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\") == \"A 0 99\"\nassert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"1 2\") == \"A 1 197\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'\nassert solution('4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'A 0 99\\nA 0 99\\nA 0 99\\nA 0 99\\n0.4974874372'",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"B 1 197\"\nassert solution(\"5 3\") == \"B 100 49\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'\nassert solution('5 4') == 'A 0 99'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == 'B 100 49\\nA 1 197\\nA 49 100\\n0.1965897693'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '9'\nassert solution('2') == '1'\nassert solution('10') == '243'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\nassert solution('1') == '1'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2\n1\n4\n3\n5\n''') == '168'\nassert solution('''\n3\n1\n4\n''') == '1'\nassert solution('''\n5\n5\n4\n3\n2\n1\n''') == '1'\nassert solution('''\n2\n2\n1\n''') == '2'\nassert solution('''\n2\n1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 3 4\") == \"12\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '168'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '9'\nassert solution('10') == '181'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2\n1\n4\n3\n5\n''') == '168', f\"Your solution ({solution('''{stdin}''')}) doesn't match expected result\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"25\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF'\nassert solution('2\\nAB\\nCD') == 'ABEFCD'\nassert solution('2\\nABC\\nDE') == 'DEABC'\n",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'\nassert solution('3 3') == 'CBADEF'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF'\nassert solution('''\n3 3\nABC\nDEF\n1\n''') == 'CBADEF'\nassert solution('''\n3 3\nABC\nDEF\n3\n''') == 'CBADEF'\nassert solution('''\n4 4\nSBBB\nABCD\nEFGH\n''') == 'ABCDEFG'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\nAB\nCD\n\n10\nACAB\nBCD\n\n20\nACBC\nBCDA\nCDAB\nDBBA\nABDB\n''') == 'CDBEAF'\nassert solution('''\n4\nABC\nDEF\n\n5\nABBC\nBCD\n\n''') == 'ABBCCD'\nassert solution('''\n1\nABCD\n\n8\nABCD\nABCD\nABCD\nABCD\nABCD\nABCD\nABCD\nABCD\n''') == 'ABCDABCD'\n'''\n\n\n\nfrom typing import List",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '3 3\\nABC\\nDEF\\n0'\n    ) == 'CBADEF', 'First'\nassert solution(\n    '3 3\\nABC\\nDEF\\n2'\n    ) == 'CDBEAF', 'Second'\nassert solution(\n    '5 5\\nA\\nB\\nC\\nD\\nE'\n    ) == 'EABCED', 'Third'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == 'CBADEF', 'First'\nassert solution('''\n3 2\nBCD\nEFG\n1\n''') == 'BCDEF', 'Second'\nassert solution('''\n3 2\nABC\nEFG\n0\n''') == 'ABCEFG', 'Third'\nassert solution('''\n1\nAA\nAA\n0\n''') == 'AA', 'Fourth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n0') == 'ABBAD'\nassert solution('1\\n4\\n3\\n0') == 'DBBAEC'\nassert solution('1\\n4\\n3\\n1') == 'DBBEAC'\nassert solution('2\\n3\\n5\\n0') == 'CBBAEC'\nassert solution('2\\n3\\n5\\n1') == 'CBBEAD'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3\\nABC\\nDEF\\n0') == 'CBADEF', f\"expected 'CBADEF', but got {solution('3 3\\nABC\\nDEF\\n0')}\"\nassert solution('3 3\\nABC\\nDEF\\n2') == 'CDBEAF', f\"expected 'CDBEAF', but got {solution('3 3\\nABC\\nDEF\\n2')}\"\n",
        "num_ids_2": 98,
        "num_ids_4": 98
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\\n\") == \"CBADEF\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\\n\") == \"CDBEAF\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n3\\n2') == '2'\nassert solution('1\\n5\\n3') == '3'\nassert solution('2\\n3\\n1') == '1'\nassert solution('5\\n3\\n2') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\", \"base case\"\nassert solution(\"2\") == \"2\", \"edge case 1\"\nassert solution(\"3\") == \"3\", \"edge case 2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n\"\"\") == \"4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"5\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''\n3\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''7\n5\n100 T\n100 N\n100 T\n100 T\n100 N\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"22\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n3\n1 2\n2 1\n2 1\n2 3''') == '6'\nassert solution('''5 8\n8\n1 2\n2 1\n2 2\n2 1\n3 4\n1 4\n4 2\n4 3\n5 6''') == '22'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"6 8\") == \"22\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('6') == '22'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '12'\nassert solution('6 8') == '22'\nassert solution('5 6') == '24'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"1 4\") == \"0\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 4\") == \"0\"\nassert solution(\"1 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\nassert solution('1 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''5 3\n3 2 3 4\n5 6 7 8\n2 1 1 3\n6 7 8 9\n4 1 1 2''') == '4'\nprint('all tests passed')\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3 3\n1 2 3\n6 5 4\n7 8 9\"\"\") == \"1\"\nassert solution(\"\"\"1 4\n4 3 2 1\nSample Input 3:\n3 5\n1 2 3 4 5\n1 4 3 2 1\nSample Output 3:\n0\n\"\"\") == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 4\") == \"0\"\nassert solution(\"3 3\") == \"1\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '3 3'\n    '1 2 3'\n    '6 5 4'\n    '7 8 9'\n) == '1'\nassert solution(\n    '1 4'\n    '4 3 2 1'\n) == '0'\nassert solution(\n    '1'\n    '4'\n) == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 3\n1 2 3\n6 5 4\n7 8 9''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"10\\n\"\n    \"3\\n\"\n    \"4\\n\"\n    \"6\\n\"\n    \"2\\n\"\n    \"12\\n\"\n) == \"16\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '28'\nassert solution('10') == '16'\nassert solution('5') == '28'\nassert solution('10') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '28'\nassert solution('10') == '16'\nassert solution('3') == '28'\nassert solution('1') == '28'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '28'\nassert solution('10') == '16'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '28'\nassert solution('3') == '16'\nassert solution('10') == '28'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '28'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n3\\n1\\n2\") == \"28\"\nassert solution(\"6\\n5\\n3\\n10\\n2\") == \"16\"\nassert solution(\"10\\n3\\n10\\n2\") == \"28\"\nassert solution(\"6\\n5\\n10\\n2\") == \"16\"",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == str(28)\nprint('solution() is ok!')\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"octopuses\") == \"no hiss\"\nassert solution(\"amiss\") == \"hiss\"\nassert solution(\"no hiss\") == \"no hiss\"\nassert solution(\"hiss\") == \"hiss\"\nassert solution(\"octopodes\") == \"no hiss\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\n\nSample Input 3:\na\nSample Output 3:\nno hiss\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\naoeu\n\ndelt\n\nysi\n\ndelt\n\nbaot\n\n''') == 'no hiss'\nassert solution('''\namiss\n\ndsast\n\ndsast\n\n''') == 'hiss'\nassert solution('''\noctopuses\n\nkd\n\ndd\n\n''') == 'hiss'\n\n'''\nOutput Format\n\nOutput a single line containing the word hiss or no hiss.\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"hiss\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''The bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word\nThe bird is the word",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'no hiss'\nassert solution('s') == 'hiss'\nassert solution('hello') == 'no hiss'\nassert solution('one') == 'no hiss'\nassert solution('two') == 'hiss'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('amiss') == 'hiss'\nassert solution('hiss') == 'no hiss'\nassert solution('a') == 'no hiss'\nassert solution('amissm') == 'no hiss'\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\namiss\n''') == 'hiss'\nassert solution('''\noctopuses\n''') == 'no hiss'\nassert solution('''\namiss\n''') == 'no hiss'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nc++\\nC++\\nc\\nc#\\n\") == \"3\"\nassert solution(\"3\\nartificial\\nintelligence\\nMachine-Learning\\nLinux\\n\") == \"5\"\nprint(\"check done\")\n\n\"\"\"",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nc++\\nc\\nCryptography\\nblockchain\\nArtificial intelligence\\nMachine-Learning\\nLinux') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '5'\nassert solution('''\nCryptography\nBlockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '3'\n\nassert solution('''\npython\nPython\nPython\n''') == '4'\n\nassert solution('''\nc\nc#\n''') == '2'\n\nassert solution('''\nmachine-learning\nmachine-learning\nmachine-learning\n''') == '1'\n\nassert solution('''\nbig-data\nbig-data\nbig-data\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == '3'\n\nassert solution('''5\nblockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\n\n\"\"\"\n\nimport sys",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\ncryptography') == 'cryptography'\nassert solution('2\\nartificial intelligence') == 'artificial intelligence'\nassert solution('3\\nMachine-Learning') == 'Machine-Learning'\nassert solution('4\\nC++') == 'C++'\nassert solution('5\\nblockchain') == 'blockchain'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n3\njava\nc++\n''') == '5'\nassert solution('''3\njava\nc\nPython''') == '1'\nassert solution('''4\njava\nc++\nc#\npython''') == '2'\nassert solution('''10\nPython\nPython\nPython\nC++\nPython\nPython\nC++\nPython\nC++\nPython\nPython\nPython''') == '3'\nassert solution('''10\nC++\nPython\nPython\nPython\nC++\nPython\nPython\nPython\nPython\nPython\nC++''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"9\"\n\n\"\"\"\n\nimport itertools",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '0'\nassert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n\nassert solution('TCTCGTTC') == '6'\nassert solution('TCGGCTCTC') == '2'\nassert solution('TCTCGCGTTC') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''TCGTTC''') == '21'\nassert solution('''CCC''') == '9'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\n\nimport itertools\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\nassert solution(\"TCTCGTC\") == \"42\"",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n180') == '90'\nassert solution('1\\n0') == '180'\nassert solution('2\\n0') == '90'\nassert solution('3\\n-45') == '180'",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('\\n315\\n45') == '90'\nassert solution('\\n180\\n270') == '90'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"315\") == \"90\"\nassert solution(\"180\") == \"90\"\nassert solution(\"90\") == \"90\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n0\\n1\") == \"90\"\nassert solution(\"2\\n0\\n1\") == \"180\"\nassert solution(\"3\\n0\\n1\") == \"90\"\nassert solution(\"4\\n0\\n1\") == \"180\"\nassert solution(\"5\\n0\\n1\") == \"90\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0\\n180') == '90'\nassert solution('180\\n0') == '90'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('315') == '90'\nassert solution('180') == '90'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join(['315', '45'])) == '90'\nassert solution('\\n'.join(['180', '270'])) == '90'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99\\n') == '3'\nassert solution('4\\n2\\n3\\n4\\n') == '1'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '3'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\n\nassert solution('''\n5\n1\n23\n18\n13\n99\n''') == '1'\n\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_string) == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5 1 23 18 13 99\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"5 3 7 4 2\") == \"2\"",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nB\n''') == '1'\nassert solution('''\nBB\n''') == '0'\n\n\"\"\"\nGiven a circular arrangement of black and white stones, ming has to balance the stones. \nEach stone in the arrangement has an equal number of white and black stones.\n\nThe ming can move either white stones or black stones. So, if the stone is white, he can move white stones. Otherwise, he can move black stones.\n\nMing can move any number of stones at any time.\n\nThe ming can move black stones twice and white stones twice at most. If he is able to do it, he wins the game.\n\nInput:\nThe first line of the input contains an integer $n \\in \\{ 1 \\leq n \\leq 100 \\}$ denoting the number of test cases. For each test case, the first line contains a string $s \\in \\{ 1 \\leq len(s) \\leq 100 \\}$ denoting the string.\n\nOutput:\nFor each test case, print an integer denoting the answer $1 \\in \\{ 0 \\leq n \\leq 10^5 \\}$ if it is possible for ming to balance the stones or else print an integer denoting the answer $0 \\in \\{ 0 \\leq n \\leq 10^5 \\}$ if it is not possible for ming to balance the stones.\n\nYour task:\n\nYou don't need to read input or print anything. Your task is to complete the function solution() which takes the string s as input parameter and returns 1 if it is possible to balance the stones and returns 0 if it is not possible.\n\nIf you are not able to solve the problem, throw an exception.\n\nIf you are not able to solve the problem due to any reason, you can return 0.\n\nConstraints\n\nn \u2264 100\n\nSample Input 1\n\n5\nWW\nSample Output 1\n\n1\n\nSample Input 2\n\n8\nBBBBBBBB\nSample Output 2\n\n0\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWWBBB\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\nassert solution(\"WWWWBBW\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_lines) == '1'\nassert solution(input_lines) == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''WWWWBBW\nSample Output 1:\n1\nSample Output 2:\n0\n''') == '1'\n\nassert solution('''WWWWBBW\nSample Output 1:\n0\nSample Output 2:\n1\n''') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n\"\"\"\n\n\"\"\"\nThe naive approach to this problem is to use a set to keep track of the stones. Then if the size of the set is 2 and the sum of the stones in the set is 1, then it is possible to balance the stones.\n\nHowever, this approach is not efficient, because it would take O(n) time to check if the stones in the set has exactly one more black and one more white stone.\n\nThe key here is to use a hashmap to check the number of black and white stones in each step. The hashmap would be a 2D array, which would store the count of black and white stones at each position. And each element of the hashmap would be the sum of the count of black and white stones. If it is 1, it means that the count of black stone is exactly 1 and the count of white stone is exactly 1. The code below shows the hashmap:\n\n[\n    [0, 1, 1],\n    [0, 2, 3]\n]\nThe sum of the black and white stones at position 1 and 2 is 1+3=4. And the sum of the black and white stones at position 1 and 3 is 3+4=7. Thus, the answer is 1.\n\nSince the number of black stones are two and the number of white stones are two, it can be proven that it is possible to balance the stones by putting at least one black and one white stone.\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBW') == '0'\nassert solution('WWWWBBW') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    WWWBBB\n    \"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n    WWWWWWW\n    \"\"\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('WWWWBBW') == '1'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\nprint(\"All tests passed\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\nassert solution(\"10 20 10 20\") == \"20\"\nprint(\"Check complete\")",
        "num_ids_2": 34,
        "num_ids_4": 47
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 1 1') == '1.299038105676658'\nassert solution('2 2 2 2') == '2.338967124654948'\nassert solution('10 10 10 10') == '20.0'\n",
        "num_ids_2": 42,
        "num_ids_4": 57
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('1000000000 1000000000 1000000000 1000000000') == '9'\nassert solution('1000000000000000 1000000000 1000000000 1000000000') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"rooobert\") == \"robert\"\nassert solution(\"robertapalaxiamethostenes\") == \"robert\"\nassert solution(\"robertapalaxiamethostenesapaxians\") == \"robert\"\nassert solution(\"robertapalaxiamethostenesapaxiansapaxians\") == \"robert\"",
        "num_ids_2": 25,
        "num_ids_4": 66
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('rrrooobbbert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooooooooobert') == 'robert'\nassert solution('rooborbert') == 'robert'\nassert solution('roobert') == 'robert'\nassert solution('roobert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 64
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooooobert') == 'robert'\nassert solution('roooooobert') == 'robert'\nassert solution('roooooobert') == 'robert'\nassert solution('roooobert') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('robertdasheeshostenes') == 'robert'\nassert solution('robertpandenostenes') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 63
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\nassert solution(\"rrroobbbert\") == \"robert\"\nassert solution(\"roobrobertt\") == \"robert\"\nassert solution(\"roobrobertttt\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"robert\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read().rstrip()\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\n\n'''\nfrom math import sqrt",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\n\nassert solution('''\n10 20 7\n''') == 'Impossible'\n\nassert solution('''\n100 99 7\n''') == 'Impossible'\n\nassert solution('''\n1000 9 7\n''') == '108 4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Impossible'\n\nassert solution([1000, 9, 7]) == '108 4'\n\nassert solution([1000, 900, 7]) == 'Impossible'\n\n\nimport math\nimport itertools",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1000 9 7\\n\") == \"108 4\\n\"\nassert solution(\"1000 900 7\\n\") == \"Impossible\\n\"\nassert solution(\"1 2 3\\n\") == \"3\\n\"",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 9 7\") == \"108 4\"\nassert solution(\"1000 900 7\") == \"Impossible\"\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'Impossible'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 9 7') == '108 4', 'First'\nassert solution('1000 900 7') == 'Impossible', 'Second'\nassert solution('1000 999 7') == 'Impossible', 'Third'\nassert solution('1000 99999 7') == 'Impossible', 'Fourth'\nassert solution('1000 9 9 999') == 'Impossible', 'Fifth'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1000 9 7\n\"\"\") == \"108 4\"\nassert solution(\"\"\"\n1000 900 7\n\"\"\") == \"Impossible\"\n\"\"\"\n)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '1'\nassert solution('4 4') == '1'\nassert solution('3 4') == '1'\nassert solution('4 4') == '2'\nassert solution('5 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 4\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3\\n#..#\\n..X.') == '1'\nassert solution('5 4\\n#.X#.\\n#.X#.\\n.##.#\\n#...X\\n#.#...') == '1'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4') == \"1\"\nassert solution('5 5') == \"4\"\nassert solution('3 4') == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 5\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 5\\n..X.\\n...#\\n...X.\\n..X.\\n') == '1'\nassert solution('5 5\\n...#\\n...X.\\n...#\\n...X.\\n...#\\n') == '4'\nassert solution('5 5\\n..#\\n...#\\n...#\\n...#\\n...#\\n') == '1'\n",
        "num_ids_2": 67,
        "num_ids_4": 100
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\nassert solution(\"4 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n212\n1253\n''') == '1953566'\nassert solution('''5\n23\n17\n43\n52\n22\n''') == '102'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n212\\n1253') == '1953566'\nassert solution('2\\n20\\n22') == '102'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '16'\nassert solution('5') == '102'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n10\n20\n50\n10\n''') == '1953566'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 2 3\\n') == '6'\nassert solution('3\\n4 5 6\\n') == '12'\nassert solution('5\\n2 4 5 1\\n') == '3'\nassert solution('5\\n3 4 5 1\\n') == '9'\nassert solution('5\\n3 4 5 1\\n') == '18'\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"1953566\"\n\n---------------------------------------------------------------\n4. Write a program that prints a square of a number when given the length of the square. \n\nExample:\n\nInput = 5\nOutput = 25\n\n---------------------------------------------------------------\n5. Write a program that calculates the sum of digits in a given integer.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n15\nSample Input 2:\n-2\nSample Output 2:\n-1\n\n---------------------------------------------------------------\n6. Write a program that calculates the sum of the odd digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the odd digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n4\nSample Input 2:\n-2\nSample Output 2:\n0\n\n---------------------------------------------------------------\n7. Write a program that calculates the sum of the even digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the even digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n2\nSample Input 2:\n-2\nSample Output 2:\n0\n\n---------------------------------------------------------------\n8. Write a program that calculates the sum of the decimal digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the decimal digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n2\nSample Input 2:\n-2\nSample Output 2:\n0\n\n---------------------------------------------------------------\n9. Write a program that calculates the sum of the lowercase and uppercase letters in a given string.\n\n-----Input-----\nThe first line of input contains a non-empty string $S$.\n\n-----Output-----\nOutput the sum of the lowercase and uppercase letters in the string. If there are no letters in the string, then print -1.\n\n-----Examples-----\nSample Input 1:\nHello\nSample Output 1:\n4\nSample Input 2:\nHELO\nSample Output 2:\n4\n\n---------------------------------------------------------------\n10. Write a program that calculates the sum of the digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n3\nSample Input 2:\n-2\nSample Output 2:\n-1\n\n---------------------------------------------------------------\n11. Write a program that calculates the sum of the digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n3\nSample Input 2:\n-2\nSample Output 2:\n-1\n\n---------------------------------------------------------------\n12. Write a program that calculates the sum of the digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n3\nSample Input 2:\n-2\nSample Output 2:\n-1\n\n---------------------------------------------------------------\n13. Write a program that calculates the sum of the digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n3\nSample Input 2:\n-2\nSample Output 2:\n-1\n\n---------------------------------------------------------------\n14. Write a program that calculates the sum of the digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n3\nSample Input 2:\n-2\nSample Output 2:\n-1\n\n---------------------------------------------------------------\n15. Write a program that calculates the sum of the digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n3\nSample Input 2:\n-2\nSample Output 2:\n-1\n\n---------------------------------------------------------------\n16. Write a program that calculates the sum of the digits in a given integer. \n\nNote: You can use the modulus operator % of a number in Python.\n\n-----Input-----\nThe first line of input contains a non-negative integer $N$.\n\n-----Output-----\nOutput the sum of the digits in the integer. If the integer $N$ is negative, then print -1.\n\n-----Examples-----\nSample Input 1:\n5\nSample Output 1:\n3\nSample Input 2:\n-2\nSample",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n212\\n1253\") == \"1953566\"\nassert solution(\"5\\n23\\n17\\n43\\n52\\n22\") == \"102\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\\\n2\n212\n1253\n''') == '1953566'\nassert solution('''\\\n5\n23\n17\n43\n52\n22\n''') == '102'\nassert solution('''\\\n10\n4\n7\n2\n9\n12\n2\n5\n''') == '36'\nassert solution('''\\\n2\n233\n193\n''') == '243'\nassert solution('''\\\n100\n6\n7\n2\n9\n13\n2\n5\n''') == '1283'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000', 'Should be 0.000000 0.000000 0.000000'\nassert solution('''\n10 10 10\n1 1 1\n''') == '0.000000 0.000000 0.000000', 'Should be 0.000000 0.000000 0.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\nprint(\"Congratulations! Your solution is correct.\")\n\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000'\nprint('All tests passed!')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 5 5\n2 2 1\n''') == '0.000000 0.000000 0.000000'\nassert solution('''5 5 5\n3 3 3\n''') == '0.000000 3.000000 6.000000'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 5\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"4 5 4\") == \"0.000000 3.000000 6.000000\"\nassert solution(\"5 2 2\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"2 3 4\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"3 4 5\") == \"0.000000 0.000000 0.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 2''') == '0.5 0.5 0.5'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('<') == '<'\nassert solution('<') == '<'\n\nimport itertools\n\nimport sys\n\nsys.setrecursionlimit(1000000)\n\ndata = input()\n\nn = len(data)\n\nans = ''\n\nfor i in range(n):\n    if data[i]!= '<':\n        ans += data[i]\n\nprint(ans)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"foss<<rritun\") == \"forritun\"\n\nassert solution(\"a<bc<\") == \"b\"\n\nassert solution(\"<\") == \"\"",
        "num_ids_2": 30,
        "num_ids_4": 38
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a<bc<''') == 'b'\nassert solution('''foss<<rritun''') == 'forritun'''\nassert solution('''<''') == ''\n",
        "num_ids_2": 37,
        "num_ids_4": 48
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''a<bc<\nfoss<<rritun''') == 'forritun'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'fo'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'rritun'\n\n--=Code Solutions=--\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"a<bc<\") == \"b\"\nassert solution(\"foss<<rritun\") == \"forritun\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('ZAP') == 'Z'\nassert solution('WOW') == 'WO'\n",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Knuth-Morris-Pratt\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''KMP''') == 'KMP'\nassert solution('''Mirko-Slavko''') == 'MS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\nassert solution('Rivest-Shamir-Adleman') == 'RSAD'\nassert solution('Rivest-Shamir-Adleman-Rivest-Shamir') == 'RSAD'\n",
        "num_ids_2": 27,
        "num_ids_4": 74
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"KNUTH-MORIS-PRATT\") == \"KMP\"\nassert solution(\"Mirko-Slavko\") == \"MS\"\n\"\"\"\n\nimport re\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('Mirko-Slavko') == 'MS'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'\nassert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n",
        "num_ids_2": 22,
        "num_ids_4": 55
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('KMP') == 'KMP'\nassert solution('MS') == 'MS'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''Knuth-Morris-Pratt\n    Mirko-Slavko''') == 'MS'\nassert solution('''KMP\n    Mirko-Slavko''') == 'KMP'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n0 1 0\n0 1 0\n''') == 'Province or Gold'\n\nassert solution('''\n1 1 0\n0 1 0\n''') == 'Estate or Copper'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''0 1 0\n2 1 0''') == 'Province or Gold'\nassert solution(\n'''0 2 0\n2 2 0''') == 'Duchy or Silver'\n\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"0 1 0\") == \"Province or Gold\"\nassert solution(\"2 1 0\") == \"Estate or Copper\"\nassert solution(\"1 1 2 2\") == \"Estate or Copper\"\n\n\"\"\"\nimport sys\n",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nprint(solution(input))\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\nassert solution('3 1 0') == 'Estate or Copper'\nassert solution('3 2 0') == 'Province or Gold'\nassert solution('4 1 0') == 'Estate or Copper'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''0 1 0\n1 2 3''') == 'Province or Gold'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 0') == 'Province or Gold'\nassert solution('2 1 0') == 'Estate or Copper'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\nassert solution(\"0 2 0\") == \"Gold or Silver\"\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1\n70 50\n''') == '90.00'\n\nassert solution('''\n10 3\n80 90\n''') == '75.7142857'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('10 1') == 'impossible'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('2 2') == 'impossible'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\nprint(solution(input))\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nassert solution('5 1') == 'impossible'\nassert solution('4 2') == 'impossible'\nassert solution('10 4') == 'impossible'\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\n70 50\\n') == '90.00'\nassert solution('10 3\\n80 90\\n') == '75.7142857'\nassert solution('20 1\\n100 100\\n') == 'impossible'\nassert solution('20 1\\n0 0\\n') == 'impossible'\n",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\n\"\"\"\n\nn, k = list(map(int, input().split()))\nd, s = list(map(int, input().split()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"90.00\"\nassert solution(\"10 3\") == \"75.7142857\"\n\n--------------------------------------------------\n\nWrite a function:",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n70 50\n''') == '90.00'\nassert solution('''\n10 3\n80 90\n''') == '75.7142857'\nprint('Congratulations! All test cases passed.')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '1 2 3 4 5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n7\n2 3 1 5 4 7 6\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n2 3 1 5 4 7 6') == \"4, 2, 3, 5, 7\"\nassert solution('6\\n3 2 1 5 4 7 6') == \"4, 2, 3, 5, 7\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 2 4 5') == '3 4 5'\nassert solution('4 1 2 3 5') == '1 2 3 4 5'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"2\"\nassert solution('2 2 3 3 2') == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('7') == '2 3 1 5 4 7 6'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7\n2 3 1 5 4 7 6\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('7') == '2 3 1 5 4 7'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n2 3 1 5 4 7 6\\n\") == \"4\\n2 3 5 7\"\nassert solution(\"5\\n1 2 3 4 5\\n\") == \"5\\n1 2 3 4 5\"\nprint(\"You're all set!\")\n\n'''\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nprint(solution(input))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 30') == '23 45'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''0 10\nSample Input 1:\n0 10\nSample Output 1:\n9 25\n\nSample Input 2:\n0 30\nSample Output 2:\n23 45\n''') == '9 25'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10') == '9 25'\nassert solution('0 30') == '23 45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nassert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n1 2\n''') == '1 2'\nassert solution('''\n3 8\n3 8\n''') == '1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('1.000000') == '1.000000'\nassert solution('0.36788') == '1.414214'\nassert solution('0.36788') == '1.414214'\n\nNote:\n\nn is an integer within the range [1, 1e12].\nstdin.readline().split() has length 1.\nIf your language cannot support using nested if-statements, please solve it without using any nested if-statements.\nFor n > 1000000, a and b will both be large integers.\n\n1 <= a <= 1000000, 0 <= b <= 1000000.\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            return a * self.solution(a - 1)\n            \n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            return self.solution(a - 1) * a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        b = 1\n        while a > b:\n            b = b * b\n        if a <= 1:\n            return b\n        else:\n            return b / a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            return a * self.solution(a - 1)\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        b = 1\n        while a > b:\n            b = b * b\n        if a <= 1:\n            return b\n        else:\n            return b / a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        b = 1\n        while a > b:\n            b = b * b\n        if a <= 1:\n            return b\n        else:\n            return b / a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        b = 1\n        while a > b:\n            b = b * b\n        if a <= 1:\n            return b\n        else:\n            return b / a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a):\n        if a <= 1:\n            return a\n        else:\n            a = 1\n            while a >= 1:\n                a = a * a\n            return a\n\nclass Solution(object):\n    def solution(self, a",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nprint(solution('1.000000'))\nprint(solution('2.000000'))\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.000000\") == \"1.414214\"\nassert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1e10\") == \"1.414214\"\n\n'''\n\n\nimport math",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('0.36788') == '1.000000'",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.000000'\nassert solution('5') == '3.000000'\nassert solution('12') == '5.000000'\nassert solution('12.000') == '5.000000'\nassert solution('12.123') == '5.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\nprint(\"You're all set!\")\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.36788') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('0.6') == '1.6'\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\nassert solution(\"1\") == \"1,\"\n\"\"\"\nfrom itertools import combinations_with_replacement\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2,1\n2,2\n3,2\n5,4\n5,5\n''') == '''\n2,1\n2,2\n3,2\n5,4\n5,5\n'''\nassert solution('''\n3\n5\n2,1\n2,2\n3,2\n5,4\n5,5\n''') == '''\n2,1\n5,4\n2,2\n5,5\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2,1') == '2,1'\nassert solution('50') == '2,1,2,2,3,2,5,4,5,5,6,5,10,10,13,12,17,16,25,25'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2,1\") == \"2,1\"\nassert solution(\"3,2\") == \"2,1\"\nassert solution(\"5,4\") == \"2,1\"\nassert solution(\"5,5\") == \"3,2\"\nassert solution(\"6,5\") == \"3,2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('100') == '100:'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2:'\nassert solution('50') == '50:'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3:\"\nassert solution(\"50\") == \"50:\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5:'\nassert solution('3') == '3:'\nassert solution('3,4') == '3,4:'\nassert solution('3,4,4,3') == '3,4,4,3:'\nassert solution('50') == '50:'\n",
        "num_ids_2": 20,
        "num_ids_4": 56
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution
        "num_ids_2": 20,
        "num_ids_4": 1399
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3:2,1'\nassert solution('50') == '50:2,1,2,2'\nassert solution('100') == '100:2,1,2,2,3,3'\n",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\nprint(solution())\n\nprint(solution(\"THEARIN IN SPAIN\"))",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('./test_solution.txt') == 'yes'\nassert solution('./test_solution_1.txt') == 'no'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\n----Hints----\nUse stdin.split() to split the input into a list of words.\nUse split() to split the words in the input, then join them to recreate the input string.\nUse list.sort() to sort the words in the input.\n\"\"\"\n\nimport collections\nimport itertools",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''THE RAIN IN SPAIN\nIN THE RAIN AND THE SNOW''') == 'yes'\nassert solution('''THE RAIN IN SPAIN IN THE PLAIN''') == 'no'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\"THE RAIN IN SPAIN\", \"IN THE RAIN AND THE SNOW\"]) == \"no\"\nassert solution([\"THE RAIN IN SPAIN\", \"IN THE RAIN AND THE SNOW\", \"THE RAIN IN SPAIN\"]) == \"yes\"\nassert solution([\"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\"]) == \"yes\"\nassert solution([\"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\"]) == \"yes\"\nassert solution([\"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\", \"THE RAIN IN SPAIN\"]) == \"no\"\n",
        "num_ids_2": 65,
        "num_ids_4": 164
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"THE RAIN IN SPAIN\",\n) == \"yes\", \"The first example\"\nassert solution(\n    \"IN THE RAIN AND THE SNOW\",\n) == \"no\", \"The second example\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''RBBBBLLR\nRBLLLBRR''') == 'SSKKKHHS'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''RRBBBLLR\nRBLLLBRR\nCHCS''') == 'SSKKKHHS'\nassert solution('''RRBBBLLR\nRBLLLBRR\nCHCS''') == 'SSKKKHHS'\nassert solution('''RBSLSDRR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLLR\nRLLLLLBBBLL",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n\n'''",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\\n3\") == \"1\\nFizz\\n\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3 7''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1\\nFizz\\n\"\nassert solution(\"1 2 4\") == \"1\\n\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\nprint('All test cases passed')\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\nFizzBuzz\\n\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n', 'Solution'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n', 'Solution'\nassert solution('3 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n', 'Solution'\nassert solution('10 20 30') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n9\\nFizz\\n11\\nFizzBuzz\\n13\\nFizz\\n15\\nFizzBuzz\\n17\\nFizz\\n19\\nFizzBuzz\\n', 'Solution'\n",
        "num_ids_2": 78,
        "num_ids_4": 201
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nprint('All test cases passed')\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2 3\n''') == '1\\nFizz\\n2\\nFizz\\n3\\nFizz\\n'\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\nFizz\\n'\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\nFizz\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3 7\n2 4 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10\\n0 100') == 'It hadn\\'t snowed this early in 0 years!'\nassert solution('4 2\\n3 3 3 2') == 'It hadn\\'t snowed this early in 3 years!'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('10 0') == 'It hadn\u2019t snowed this early in 0 years!'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"4 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"5 2\") == \"It hadn't snowed this early in 0 years!\"\nassert solution(\"1000000 2\") == \"It hadn't snowed this early in 0 years!\"\nassert solution(\"1000000 10000\") == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 40,
        "num_ids_4": 81
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\\n3 3 3 2\\n\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\\n\") == \"It hadn't snowed this early in 0 years!\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 2\\n3 3 3 2\") == \"It hadn't snowed this early in 3 years!\"\nassert solution(\"2 10\\n0 100\") == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2') == 'It hadn't snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn't snowed this early in 0 years!'\nprint(solution(*(input().split())))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'It hadn't snowed this early in 3 years!\\n'\nassert solution('4') == 'It had never snowed this early!\\n'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('1 1') == 'It hadn\u2019t snowed this early in 1 years!'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('5 10') == '7'\nassert solution('5 6') == '4'\nassert solution('5 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n') == '2'\nassert solution('1\\n3\\n') == '1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '7'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 7\") == \"3\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bombonisuuladici') == 'boudonuimilcbsai'\nassert solution('koaski') == 'kakosi'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('c') == 'c'\nassert solution('B') == 'B'\nassert solution('k') == 'k'\nassert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n\nSample Input 3:\nbok\nSample Output 3:\nkoaski\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\nassert solution(\"kakosi\") == \"kakosi\"\nassert solution(\"zalgo\") == \"zalgo\"\nassert solution(\"kakosikalgo\") == \"kakosikalgo\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'kakosi'\n\n'''\n\nclass Solution:\n    def solution(self, stdin):\n        # 1. convert input to string\n        st = str(stdin)\n        # 2. split and reverse string\n        st = st[::-1]\n        # 3. convert back to list\n        st = st.split()\n        # 4. reverse list\n        st = st[::-1]\n        # 5. convert back to string\n        st = ''.join(st)\n        return st",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('koaski') == 'kakosi'\nassert solution('bok') == 'bok'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2\n2''') == '2 1'\nassert solution('''11\n1 2 3 4 5 6 7 8 9 10 11\n4 5\n6 7 8 9''') == '11 8 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n12\n''') == '10 1'\n\nassert solution('''\n3\n''') == '5 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '4 2'\nassert solution('3') == '2 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '8 2'\nassert solution('7') == '8 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"rotten\") == \"NO\"\nassert solution(\"difficult route\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"NO\"\nassert solution(\"eet eat\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"erres\") == \"NO\"\nassert solution(\"eet\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('stairs') == 'YES','stairs'\nassert solution('apples and pears') == 'YES', 'apples and pears'\nassert solution('erres airs ears ares aires') == 'NO', 'erres airs ears ares aires'\nassert solution('eet eat') == 'NO', 'eet eat'\nassert solution('worried and frantic') == 'NO', 'worried and frantic'\n",
        "num_ids_2": 33,
        "num_ids_4": 77
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('drought') == 'YES'\nassert solution('worried') == 'YES'\nassert solution('difficult') == 'YES'\nassert solution('tasty') == 'YES'\nassert solution('forever in doubt') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('erres') == 'NO'\nassert solution('eet') == 'YES'\nassert solution('apples and pears') == 'YES'\nassert solution('plates of meat') == 'YES'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"eet eat\") == \"YES\"\nassert solution(\"apt\") == \"NO\"\nassert solution(\"apt\") == \"NO\"",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('eet eat') == 'YES'\nassert solution('worried and fearful') == 'YES'\nassert solution('tasty sprout') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('stairs') == 'YES','stairs'\nassert solution('not a common word') == 'NO', 'not a common word'\nassert solution('drought') == 'YES', 'drought'\nassert solution('easy') == 'YES', 'easy'\nassert solution('salty') == 'NO','salty'",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"stairs\"\n    ,\n    \"2\"\n    ,\n    \"erres airs ears ares aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires a",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"\nprint(solution(input()))\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE'\nassert solution('''METHINKS IT IS LIKE A WEASEL\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN'\nassert solution('''METHS IT IS LIKE A WEASEL\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE'\n",
        "num_ids_2": 18,
        "num_ids_4": 50
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN'\nprint(solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ'''))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''HANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'WIN', 'Failed sample'\nassert solution('''BANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ''') == 'LOSE', 'Failed sample'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('HANGMAN') == 'WIN', \"Win\"\nassert solution('BANANA') == 'LOSE', \"Lose\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"HANGMAN\") == \"WIN\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL') == 'INCREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'NEITHER'\nassert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM') == 'DECREASING'\nassert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\\n') == 'DECREASING'\n",
        "num_ids_2": 92,
        "num_ids_4": 158
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == 'NEITHER'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM') == 'DECREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'NEITHER'",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'DECREASING'\nassert solution('''12\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\nassert solution('''10\nMEGHAN\nALI\nBECKY\nJULIE\nMORGAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'INCREASING'\nassert solution('''1\nMEGHAN\nALI\nBECKY\nJULIE\nMORGAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n5\nJOE\nBOB\nANDY\nAL\nADAM\n\"\"\"\n) == \"DECREASING\", \"First example\"\nassert solution(\n\"\"\"\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n\"\"\"\n) == \"NEITHER\", \"Second example\"\nassert solution(\n\"\"\"\n3\nANDY\nAL\nBOB\n\"\"\"\n) == \"NEITHER\", \"Third example\"\n\nassert solution(\n\"\"\"\n10\nJOHN\nBOB\nANDY\nAL\nADAM\nJOHN\nBOB\nAL\nADAM\nJOHN\nBOB\nAL\n\"\"\"\n) == \"INCREASING\", \"Fourth example\"\n\nassert solution(\n\"\"\"\n13\nROSE\nBOB\nANDY\nAL\nADAM\nJOHN\nBOB\nAL\nADAM\nJOHN\nBOB\nAL\n\"\"\"\n) == \"DECREASING\", \"Fifth example\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"INCREASING\"\nassert solution(\"11\") == \"NEITHER\"\nassert solution(\"10\") == \"INCREASING\"\nassert solution(\"3\") == \"INCREASING\"\nassert solution(\"3\") == \"NEITHER\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'DECREASING'\nassert solution('''\n10\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\n''') == 'NEITHER'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM') == 'INCREASING'\nassert solution('11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN') == 'NEITHER'\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING'\nassert solution('''\n11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\nassert solution('''\n10\nJOE\nBOB\nALI\nALEX\nTOBIN\nMARY\nJOE\nBOB\nANDY\nMARY\nCARLI\nJULIE\nAL\nBOB\nADAM''') == 'INCREASING'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\nBONJ\\n\") == \"INCREASING\"\nassert solution(\"6\\nJOHAN\\nWENDELL\\nHENRY\\nANDY\\nBEN\\nAL\\n\") == \"INCREASING\"\nassert solution(\"10\\nJOHAN\\nWENDELL\\nHENRY\\nANDY\\nBEN\\nAL\\n\") == \"NEITHER\"\n",
        "num_ids_2": 62,
        "num_ids_4": 103
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No winner!\"\nassert solution(\"1\\nJohn\\n\") == \"John wins!\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5 3\nBob\nNina\nJess\nTim\nNina\n1\n''') == 'Nina wins!'\nassert solution('''\n4 5 3\nBob\nNina\nJess\nTim\nNina\n1\n''') == 'Nina wins!'\nassert solution('''\n2 2 1\na\nb\na\n''') == 'No winner!'\nassert solution('''\n2 2 3\nb\na\na\n''') == 'No winner!'\nassert solution('''\n3 3 3\na\nb\nc\nd\n''') == 'No winner!'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n\"\"\"\n) == \"George wins!\"\nassert solution(\n\"\"\"4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\"\n) == \"Nina wins!\"\nassert solution(\n\"\"\"3 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\"\n) == \"Nina wins!\"\nassert solution(\n\"\"\"4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n\"\"\"\n) == \"Nina wins!\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    3 10 13\n    John\n    Kelly\n    George\n    Kelly 1\n    George 2\n    Kelly 1\n    John 2\n    George 1\n    John 3\n    Kelly 3\n    Kelly 1\n    George 3\n    George 1\n    John 3\n    George 3\n    Kelly 1\n    ''') == 'George wins!'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Jess wins!\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Jess wins!'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Jess wins!'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 3 0 0 5 4\n''') == \"2.0\"\nassert solution('''6 0 0 2 7 6\n''') == \"2.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 2\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nprint(solution(input()))",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nprint('Congratulations! All test cases passed')\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2.0\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('1245') == '6543'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('33') == '0'\nassert solution('51') == '0'\nassert solution('3999') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('9') == '10'\nassert solution('0') == '0'\nassert solution('10') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15') == '165'\nassert solution('33') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('112') == '233'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == \"0\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"4\"\nassert solution(\"5 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000\\n190000 170000 140000 160000') == '4'\nassert solution('10 4\\n180000 185000 199999 100000\\n199999 180000 170000 120000\\nSample Output 2:\n3\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"4\", \"Should be 4\"\nassert solution(\"3 4\") == \"3\", \"Should be 3\"\nassert solution(\"3 3\") == \"2\", \"Should be 2\"\nassert solution(\"5 3\") == \"1\", \"Should be 1\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n4 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''5 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(input) == output\n",
        "num_ids_2": 32,
        "num_ids_4": 40
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == '4', solution.__doc__\nprint(\"Congratulations, have solved the problem!\")",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n5 4\n180000 185000 199999 100000\n199999 180000 170000 120000\n''') == '3'\nassert solution('''\n7 4\n1570000 167000 167000 166000 80000\n150000 170000 170000 160000 170000\n160000 190000 190000 180000 190000\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\\n150000 100000 160000 100000 180000\") == \"4\"\nassert solution(\"3 4\\n190000 170000 140000 160000\") == \"3\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '10'\nassert solution('''1\n42\n84\n252\n420\n840\n126\n42\n84\n420\n126''') == '1'\nassert solution('''1\n42''') == '1'\nassert solution('''42''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 34
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10', solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n')\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n') == '1', solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n')\n",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\"\nassert solution(\"\") == \"\"\n\"\"\"\n",
        "num_ids_2": 104,
        "num_ids_4": 111
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('42\\n') == '1'\nassert solution('42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n') == '1'\nassert solution('42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n') == '5'\nassert solution('42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n') == '1'\nassert solution('42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n42\\n') == '2'\n",
        "num_ids_2": 54,
        "num_ids_4": 144
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('3') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"42\") == \"6\"\nassert solution(\"84\") == \"1\"\nassert solution(\"252\") == \"1\"\nassert solution(\"420\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n3\") == \"10\"\nassert solution(\"42\\n84\\n252\\n420\\n840\\n126\") == \"1\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '6'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"10\"\nassert solution('42') == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5 3'\n) == 'yes'\nassert solution(\n    '1 0'\n) == 'no'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 4\n''') == 'no'\nassert solution('''\n10 4\n''') == 'yes'\nassert solution('''\n10 7\n''') == 'yes'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'yes'\nassert solution('13 3') == 'yes'\nassert solution('1 0') == 'no'\nassert solution('1 0') == 'no'\nassert solution('1 0') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'yes'\nprint(\"You passed the test!\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n') == 'yes'\nassert solution('1 0\\n') == 'yes'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'no'\n\n'''\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3\n3\n2\n3\"\"\") == \"yes\"\nassert solution(\"\"\"4\n3\n1\n3\"\"\") == \"no\"\nassert solution(\"\"\"5\n3\n2\n1\n1\n2\"\"\") == \"yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([13, 3]) == 'yes'\nassert solution([1, 0]) == 'no'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 3\n''') == 'yes'\nassert solution('''\n2 2\n''') == 'no'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 1\n1''') == 'yes'\nassert solution('''3 3\n1 1\n1''') == 'yes'\nassert solution('''2 4\n2''') == 'no'\nassert solution('''4 2\n2''') == 'no'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nassert solution('P01K02H04H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\nprint('Congratulations! Your solution is correct.')\nprint('I have a bonus task for you!')\nprint('You are not finished yet, but don\u2019t worry, we have a few seconds for you!')",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\nassert solution(\"K10T11H12\") == \"12 13 13\"\nassert solution(\"H02H10H11\") == \"GRESKA\"\nassert solution(\"H10K11T12\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', \"Wrong!\"\nassert solution('H02H10P11H02') == 'GRESKA', \"Wrong!\"",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\nassert solution('''P01K02H03H04\nH02H10P11H02\nH10P11H02P01''') == '12 13 12 13'\nassert solution('''P01K02H03H04\nH02H10P11H02\nH10P11H02P01\nP01K02H03H04''') == '12 13 12 13'\nassert solution('''P01K02H03H04\nH02H10P11H02\nH10P11H02P01\nP01K02H03H04\nP01K02H03H04''') == '12 13 12 13'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 3') == '1', 'First'\nassert solution('7 6 4') == '2', 'Second'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1'\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nprint('All test cases passed.')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n\"\"\"\n    ) == \"1\"\n\nassert solution(\n    \"\"\"\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\"\n    ) == \"2\"\n\nassert solution(\n    \"\"\"\n13 13 4\n*..*.*.\n.**.*..\n.**.*..\n*..*.*.\n.*.*.*.\n**.*.*.\n*.*.*.*.\n*.*.*.*.\n.*.*.*.\n.**.*..\n**.*..\n*..*.*.\n.**.*..\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n\"\"\"\n    ) == \"1\"\n\nassert solution(\n    \"\"\"\n13 13 4\n*..*.*.\n.**.*..\n.**.*..\n*..*.*.\n.*.*.*.\n**.*.*.\n*.*.*.*.\n*.*.*.*.\n.*.*.*.\n.**.*..\n**.*..\n*..*.*.\n.**.*..\n*.*.*.*.\n*.*.*.*.\n*.*.*.*.\n\"\"\"\n    ) == \"3\"\n\nassert solution(\n    \"\"\"\n8 8 4\n....*.\n*...*.\n.***.\n*.*..*\n*..*.*\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n\"\"\"\n    ) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"3 5 3\n.....\n.*.*.\n.....\n*....*\n\"\"\") == \"1+-+..\"\n\nassert solution(\n\"\"\"10 5 3\n.....\n*.*.*.\n.....\n*.*.*.\n.....\n*.*.*.\n.....\n*.*.*.\n\"\"\") == \"2+-+..\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n') == '1'\nassert solution('1\\n3\\n2\\n5\\n4\\n6\\n7\\n') == '2'\nassert solution('1\\n3\\n4\\n5\\n6\\n7\\n') == '3'\nassert solution('1\\n4\\n2\\n5\\n3\\n6\\n7\\n') == '4'\nassert solution('1\\n5\\n2\\n3\\n4\\n6\\n7\\n') == '5'\n",
        "num_ids_2": 60,
        "num_ids_4": 117
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 5 3\n.....\n.*.*.\n.....\n\"\"\") == \"1\"\nassert solution(\"\"\"\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 5 3\n....\n....\n....\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 3\n....\n.**.\n.**.\n*...''') == \"1+-+..\"\nassert solution('''7 6 4\n......\n.**.\n.**.\n*....*\nSample Output 3:\n3\n......\n.*.*.*\n+--+..\n|*.|..\n|.*|..\n+--+..\n*....*\n*....*\nSample Output 4:\n2\n......\n.**.\n*...*\nSample Output 5:\n3\n......\n.**.\n+--+..\n|*.|..\n|.*|..\n+--+..\n*....*\n*....*''') == \"3+-+..\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5 3\n.....\n.*.*.\n.....\n.*.*.\n''') == '1'\n\nassert solution('''\n7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AC AD AH AS KD') == \"4\"\nassert solution('2C 4D 4H 2D 2H') == \"3\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == 4\nassert solution(\"2C 4D 4H 2D 2H\") == 3\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AC AD AH AS KD\\n\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\\n\") == \"3\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n\n\"\"\"\n\nimport re",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nAC AD AH AS KD\n''') == '4'\nassert solution('''\n2C 4D 4H 2D 2H\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nassert solution('1H 2H 1D 3S 4S') == '5'\nassert solution('AC 2D 3H 4C 5C') == '7'",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nprint('You passed all tests! Congrats!')\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''\n5 1\n0 0 0 0 0\n''') == '7'\nassert solution('''\n7 1\n0 0 0 0 0 0\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"7\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '7'\nassert solution('6 5') == '5'\nassert solution('5 1') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n2 1 1 1 0 1''') == '5'\nassert solution('''2 1\n0 0''') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''\n5 1\n0 0 0 0 0\n''') == '7'\nassert solution('''\n6 5\n1 1 1 1 0 1\n''') == '7'\nassert solution('''\n6 5\n1 0 1 1 0 1\n''') == '0'\nassert solution('''\n6 5\n1 1 1 1 1 1\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1\\n') == '5'\nassert solution('6 5\\n0 0 0 0 0 0\\n') == '7'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n6 5\n2 1 1 1 0 1\n\"\"\") == \"5\"\nassert solution(\n\"\"\"\n5 1\n0 0 0 0 0\n\"\"\") == \"7\"\nassert solution(\n\"\"\"\n6 5\n2 1 1 1 0 1\n\"\"\") == \"8\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"5\"\nassert solution([0, 1, 1, 1, 0, 1]) == \"7\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n2 1 1 1 0 1\n''') == '5'\n\nassert solution('''\n3 1\n0 1 1\n''') == '7'\n\nassert solution('''\n6 7\n0 0 0 0 0 0\n0 0 0 1 1 1\n0 0 0 0 1 1\n0 1 1 1 1 1\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"What's the Frequency, Kenneth?\") == \"@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \"\n\nassert solution(\"It\u2019s O\u2019clock, Doctor.\u201d\") == \"@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \"\n\nassert solution(\"It's O\u2019clock, Doctor.\u201d\") == \"@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]? \"",
        "num_ids_2": 126,
        "num_ids_4": 190
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\n\nimport collections\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        ans = []\n        for c in stdin:\n            if c.isalpha():\n                i = ord(c)\n                if i <= ord('z') and i >= ord('a'):\n                    i = ord('a') + (i - ord('a')) - 1\n                if i <= ord('Z') and i >= ord('A'):\n                    i = ord('A') + (i - ord('A')) - 1\n                ans.append(chr(i))\n            else:\n                ans.append(c)\n        return ''.join(ans)",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\", \"Not found\"\nassert solution(\"n n y y n n o o y o n o n n n o o n o n n n n y y n y n y y n o o o y o n o n o n o n o o n o o n n y n y n o o o n n n n y y n y n o o o n o n o n o o n o o o o o o n o o n o o o o o n o o o o o o o n o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o o",
        "num_ids_2": 1243,
        "num_ids_4": 1243
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"All your base are belong to us.\") == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n                                                  '`][`$ 3 [`][`
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\"All your base are belong to us.\", \"What's the Frequency, Kenneth?\", \"What's the Frequency, John?\"])) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['[-]?'.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['[-]?'.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['[-]?'.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['[-]?'.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['[-]?'.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['[-]?'.\\n@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['[-]?.']))\n",
        "num_ids_2": 290,
        "num_ids_4": 290
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abcdefgh') == '@[.]\\[].`[]a][][b][c]d][][e][f][g]h'\nassert solution('123456789') == '@3*][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][",
        "num_ids_2": 1244,
        "num_ids_4": 1244
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''What's the Frequency, Kenneth?\n\nA New Alphabet has been developed for Internet communications. While the glyphs of the new alphabet don\u2019t necessarily improve communications in any meaningful way, they certainly make us feel cooler.\n\n[*]a\n\n@\n\nat symbol\n\n[*]b\n\n8\n\ndigit eight\n\n[*]o\n\n0\n\ndigit zero\n\n[*]c\n\n(\n\n[*]b\n\n8\n\ndigit eight\n\n[*]o\n\n0\n\ndigit zero\n\n[*]c\n\n[*]q\n\n(\n\n[*]p\n\n|\n\n|D\n\n[*]a\n\n[*]r\n\n|Z\n\n[*]b\n\n[*]|Z\n\n[*]d\n\n[*]|)\n\n[*]|_|\n\n[*]p\n\n[*]o\n\n[*]u\n\n[*]|_|\n\n[*]|\n\n[*]|8\n\n[*]o\n\n[*]|_|\n\n[*]|8\n\n[*]u\n\n[*]|_|\n\n[*]|8\n\n[*]u\n\n[*]|_|\n\n[*]b\n\n8\n\n[*]b\n\n[*]6\n\n[*]|)\n\n[*]|_|\n\n[*]p\n\n[*]o\n\n[*]|_|\n\n[*]|\n\n[*]|_|\n\n[*]p\n\n[*]o\n\n[*]u\n\n[*]|_|\n\n[*]|\n\n[*]|_|\n\n[*]b\n\n[*]|\n\n[*]|_|\n\n[*]l\n\n[*]1\n\n[*]z\n\n[*]|_|\n\n[*]1\n\n[*]0\n\n[*]|_|\n\n[*]k\n\n[*]1\n\n[*]|_|\n\n[*]z\n\n[*]3\n\n[*]|_|\n\n[*]k\n\n[*]1\n\n[*]|_|\n\n[*]z\n\n[*]3\n\n[*]|_|\n\n[*]h\n\n[*]|_|\n\n[*]t\n\n[*]3\n\n[*]4\n\n[*]|_|\n\n[*]t\n\n[*]3\n\n[*]|_|\n\n[*]w\n\n[*]\\/\\/\n\n[*]4\n\n[*]|_|\n\n[*]l\n\n[*]1\n\n[*]|_|\n\n[*]h\n\n[*]1\n\n[*]z\n\n[*]|_|\n\n[*]k\n\n[*]1\n\n[*]|_|\n\n[*]|\n\n[*]4\n\n[*]|_|\n\n[*]1\n\n[*]|_|\n\n[*]g\n\n[*]2\n\n[*]|_|\n\n[*]w\n\n[*]6\n\n[*]0\n\n[*]|_|\n\n[*]|\n\n[*]|1\n\n[*]|_|\n\n[*]|\n\n[*]|\n\n[*]|\n\n[*]|1\n\n[*]|_|\n\n[*]|\n\n[*]l\n\n[*]1\n\n[*]g\n\n[*]2\n\n[*]|_|\n\n[*]p\n\n[*]o\n\n[*]u\n\n[*]|_|\n\n[*]p\n\n[*]o\n\n[*]u\n\n[*]|_|\n\n[*]p\n\n[*]o\n\n[*]u\n\n[*]|_|\n\n[*]|\n\n[*]|_|\n\n[*]q\n\n[*]p\n\n[*]o\n\n[*]u\n\n[*]|_|\n\n[*]|\n\n[*]|_|\n\n[*]p\n\n[*]o\n\n[*]u\n\n[*]|_|\n\n[*]|\n\n[*]|_|\n\n[*]a\n\n[*]r\n\n[*]|_|\n\n[*]a\n\n[*]r\n\n[*]|_|\n\n[*]a\n\n[*]r\n\n[*]|_|\n\n[*]a\n\n[*]r\n\n[*]|_|\n\n[*]b\n\n[*]8\n\n[*]0\n\n[*]|_|\n\n[*]b\n\n[*]|\n\n[*]|\n\n[*]b\n\n[*]|\n\n[*]|\n\n[*]b\n\n[*]|\n\n[*]|\n\n[*]|1\n\n[*]|_|\n\n[*]|\n\n[*]|",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Hello World!') == '@3110 //\\/ 0|Z1|)!\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''What's the Frequency, Kenneth?''') == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\n\nassert solution('''ab ac ef gh ij''') == \"ab@91Z3[][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][][",
        "num_ids_2": 1243,
        "num_ids_4": 1243
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n                                                    '\\'][\\'0 |_|$.\\n'\nassert solution('What's the Frequency, Kenneth?') == '\\/\\/[-]@\\'][\\'$ \\'][' \\\n                                                        '[-]3 #|Z3(,|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][\\'[-]?\\n'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'Alice'\nassert solution('6') == 'Bob'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Alice\"\n\"\"\"\nn = int(input())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"Bob\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == 'Alice'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"Alice\"\nassert solution(\"2\") == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(1) == 'Alice'\nassert solution(2) == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n3\n4\n5''') == 'Alice'\nassert solution('''1\n2\n4\n6\n7''') == 'Bob'\nassert solution('''4\n3\n4\n4\n5''') == 'Alice'\nassert solution('''8\n7\n6\n5\n4\n3''') == 'Bob'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Bob'\nassert solution('1') == 'Alice'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'one'\nassert solution('2') == 'two'\nassert solution('3') == 'three'\nassert solution('4') == 'four'\nassert solution('5') == 'five'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n$') == 'thirty is the number of letters here'\nassert solution('5\\n$') == 'this sentence has thirtyone letters'\nassert solution('4\\n$') == 'this sentence has thirtyone letters'\n\n'''",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    this sentence has thirtyone letters\n    ''') == 'this sentence has thirtyone letters'\n\nassert solution('''\n    $\n    letters\n    here\n    ''') == '$ letters here'\n\nassert solution('''\n    $\n    is\n    the\n    number\n    of\n    letters\n    here\n    ''') == '$ is the number of letters here'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nthis\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters'\nassert solution('''\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\nassert solution('''\n$\n''') == ''\nassert solution('''\n$\nhas\n$\nletters\n''') == ''\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == ''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1\\nthree\\n$\") == \"three\"\nassert solution(\"2\\n2\\nthree\\n$\") == \"three\"\nassert solution(\"5\\n8\\nhi\\n$\") == \"hi\"\nassert solution(\"10\\n2\\n$\") == \"two\"\nassert solution(\"10\\n11\\n$\") == \"eleven\"\n",
        "num_ids_2": 38,
        "num_ids_4": 73
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''this\nsentence\nhas\n$\nletters''') == 'this sentence has thirtyone letters'\n\n'''\n    tokens = stdin.strip().split('\\n')\n    for t in tokens:\n        t = t.split()\n        t =''.join(t)\n        print(t)\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"one\") == \"one\"\nassert solution(\"twenty\") == \"twenty\"\nassert solution(\"thirty\") == \"thirty\"\nassert solution(\"forty\") == \"forty\"\n",
        "num_ids_2": 17,
        "num_ids_4": 41
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n'''",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n\n\"\"\"\n\nimport re",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\nassert solution('AaAaAaAa') == '0'\nassert solution('AAABC') == '3'\nassert solution('AAAAAA') == '1'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ABCD\") == \"0\"\nassert solution(\"AEEBFA\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''A\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n\nI\n\nJ\n\nK\n\nL\n\nM''') == '5'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('ABCDEFG') == '0'\nassert solution('Abcd') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5",
        "num_ids_2": 17,
        "num_ids_4": 30
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == '0'\nassert solution('Aa') == '1'\nassert solution('aA') == '1'\nassert solution('Aab') == '1'\nassert solution('AA') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 0\nassert solution('B') == 1\nassert solution('C') == 1\nassert solution('D') == 1\nassert solution('E') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n\n''') == '0'\nassert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n\n''') == '5'\nassert solution('''\nA\n\nb\n\nc\n\nb\n\nB\n\nc\n\nc\n\nC\n\nD\n\ne\n\nf\n\ng\n\nh\n\n''') == '8'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Abcd\") == \"0\"\nassert solution(\"EaEbFabG\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 10\n''') == 'Odd 6', 'First'\nassert solution('''\n2 5\n''') == 'Even 8', 'Second'\nassert solution('''\n10 10\n''') == 'Not a moose', 'Third'\nassert solution('''\n20 30\n''') == 'Odd 28', 'Fourth'\nassert solution('''\n30 30\n''') == 'Even 20', 'Fifth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Even 6'\nassert solution('3 3') == 'Odd 6'\nassert solution('4 5') == 'Not a moose'\nassert solution('5 5') == 'Not a moose'",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n1 2\n''') == \"Odd 6\"\nassert solution('''3 3\n1 3\n''') == \"Even 6\"\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 6\n6 7\n''') == 'Odd 6'\nassert solution('''\n6 8\n8 8\n''') == 'Even 8'\nassert solution('''\n5 5\n5 5\n''') == 'Not a moose'\nassert solution('''\n5 5\n4 5\n''') == 'Odd 4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'Even 3'\nassert solution('2 4') == 'Odd 2'\nassert solution('1 1') == 'Not a moose'\nassert solution('5 5') == 'Even 5'\nassert solution('6 6') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\nassert solution(\"1 2\") == \"Not a moose\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"1\", \"2\", \"3\", \"4\", \"5\"]) == \"2\", \"Wrong\"\nassert solution([\"1\", \"2\", \"3\", \"4\", \"5\"]) == \"4\", \"Wrong\"\nassert solution([\"5\", \"4\", \"3\", \"2\", \"1\"]) == \"4\", \"Wrong\"\nassert solution([\"2\", \"1\"]) == \"1\", \"Wrong\"\nassert solution([\"9\", \"2\", \"8\", \"5\", \"4\", \"3\", \"1\", \"7\"]) == \"2\", \"Wrong\"",
        "num_ids_2": 56,
        "num_ids_4": 103
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'\nassert solution('12') == '1'\nassert solution('112') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nx') == 'x'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"tomo\") == \"mono\"\nassert solution(\"mono\") == \"mono\"\nassert solution(\"tomo\") == \"tomo\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\nabc\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nto\\nmono\\n\") == \"1\", \"First\"\nassert solution(\"2\\ndak\\n\") == \"1\", \"Second\"\nassert solution(\"3\\ndak\\nla\\n\") == \"2\", \"Third\"\nassert solution(\"4\\ndak\\nla\\n\") == \"3\", \"Forth\"\n",
        "num_ids_2": 40,
        "num_ids_4": 83
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('tomo') == '1'\nassert solution('mono') == '1'\nassert solution('dak') == '0'\nassert solution('6666') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"tomo\\nmono\\ndak\\n6666\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\njato\\nmono\\n6666\\n') == '2'\n\nassert solution('2\\nja\\nla\\n') == '2'\n\nassert solution('1\\nabcd\\n') == '1'\n\nassert solution('1\\n') == '1'\n\nassert solution('1\\n') == '1'",
        "num_ids_2": 41,
        "num_ids_4": 69
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0123456789\") == \"5\"\nassert solution(\"01234567890123456789012345678901234567890\") == \"11\"\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution(\"DOG\") == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'\nassert solution(\"dg\") == '..*..\\n.*.*.\\n*.*.\\n*.*.\\n..*..'",
        "num_ids_2": 89,
        "num_ids_4": 122
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution('DOG') == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\nassert solution(\"BONJOUR\") == \"..*..#...#*..\"\n",
        "num_ids_2": 29,
        "num_ids_4": 49
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"DOG\") == \"..#...#...*..\"\nassert solution(\n    \"A\") == \"..#..\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ABCDEF') == 'ABCD*EFG*'\nassert solution('PEN') == 'P*EN*'\nassert solution('PET') == 'PET*'\nassert solution('KHALF') == 'K*HAL*F'\nassert solution('RUN') == 'R*UN*'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\nassert solution('AB') == '..#.#.##.###*.'\n",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == \"..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\"\nassert solution('DOG') == \"..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '\\n'.join(['..#..',\n                                     '.#.#.',\n                                     '#.D.',\n                                     '.#.#.',\n                                     '..#..'])\nassert solution(input) == '\\n'.join(['..#*..',\n                                     '.#*.*.',\n                                     '#.D*.',\n                                     '.#*.*.',\n                                     '..#*..'])\nassert solution(input) == '\\n'.join(['..*..',\n                                     '.*.*.',\n                                     '#*X*.',\n                                     '.*.*.',\n                                     '..*..'])\n\n'''\n\nstring = input()\nl = []\nl.append('..#..')\nl.append('.#.#.')\nl.append('#.D.')\nl.append('.#.#.')\nl.append('..#..')\n\nprint('\\n'.join(l))\n",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\nSample Input 2:\n20\nSample Output 2:\n30.934640\n29.184078\n''') == '2.000000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''20\n1''') == '3.141593'\nassert solution('''21\n1''') == '1385.442360'\nassert solution('''21\n20''') == '1385.442360'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\nassert solution('3') == '4.5'\nassert solution('4') == '7'\nassert solution('9') == '1.7320508075688772'\n",
        "num_ids_2": 29,
        "num_ids_4": 51
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2.000000'\nassert solution('1') == '3.141593'\n\nassert solution('0') == '0.000000'\nassert solution('10000') == '1385.442360'\nprint('All tests passed!')\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '8.000000000000000'\nassert solution('4') == '2.50000000000000'\nassert solution('12') == '6.50000000000000'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 -2 3') == '2'\nassert solution('5\\n129 44 394 253 147') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\n-2 -1\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n-1 1 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n129 44 394 253 147\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6\n-4 -5 -3 -2 -1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n20\n-12 -1 13 -8 -2 -6 -5 -3 -3 -7 -4 -9 -5 -3 -8 -7 -2 -4 -2 -3 -5 -3 -8 -4 -9 -1 -6 -2 -5 -7 -2 -7 -3 -4 -4 -2 -3 -1 -4 -5 -8 -7 -6 -5\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n1 -2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 -2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n129 44 394 253 147\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1 -2 3\") == \"2\"\nassert solution(\"1 -2 3 4\") == \"3\"\nassert solution(\"1 2 3 4\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 44
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n1 -2 3') == '2'\nassert solution('5\\n129 44 394 253 147') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('1 -2 3') == '1'\nassert solution('-50000 -2 3') == '1'\nprint('You passed all tests!')\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 -2 3\\n') == '2'\nassert solution('3\\n1 2 3\\n') == '0'\nassert solution('2\\n-1 2 3\\n') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('3 2 2') == '6'\nassert solution('4 1 2') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '6', 'First'\nassert solution('''\n3\n4 1 2\n''') == '8', 'Second'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '8'\nassert solution('4 1 2') == '6'\nassert solution('4 1 2') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\", \"Should be 2\"\nassert solution(\"2 2 2\") == \"6\", \"Should be 6\"\nassert solution(\"3\") == \"1\", \"Should be 1\"\nassert solution(\"3 4 1 2\") == \"8\", \"Should be 8\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\nassert solution('4 1 2') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '6'\n\nassert solution('''\n3\n4 1 2\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '6'\nassert solution('3\\n4 1 2') == '8'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"8\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '6'\nassert solution('4') == '8'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 4') == '2'\n\nimport sys\nfrom io import StringIO\nimport unittest\n\nclass Test(unittest.TestCase):\n    def test_case_00(self):\n        self.assertEqual(solution('2 4 4'), '2')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 4\") == \"2\"\nassert solution(\"2 4 4\") == \"2\"\nassert solution(\"2 4 4\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == '2'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0R11') == 'NOT POSSIBLE'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0D11') == 'NOT POSSIBLE'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0U11') == 'NOT POSSIBLE'\nassert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11') == '2'\n",
        "num_ids_2": 61,
        "num_ids_4": 125
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 5 4\n1010101001\n0101011010\n001001001\n0100101001\n1010010101\n''') == '2'\n\nassert solution('''\n5 5 4\n10011\n010101001\n001001001\n0100101001\n1010010101\n''') == 'NOT POSSIBLE'\n\nassert solution('''\n4 4 4\n10101\n0101\n00100\n0101\n''') == 'NOT POSSIBLE'\n\nassert solution('''\n5 5 4\n10101\n0101\n00100\n0101\n10001\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n1 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution(\n'''\n1 4 4\n1111\n1S01\n1011\n0U11\n''') == 'NOT POSSIBLE'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('2 5 5') == 'NOT POSSIBLE'\nassert solution('5 5 5') == 'NOT POSSIBLE'",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4\") == \"2\"\nassert solution(\"2 4 4\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0L11\n''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n') == '2'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"2\"\nassert solution(\"3 4 4\\n1111\\n1S01\\n1011\\n0L11\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n3 1 2 1 1\\n') == '4'\nassert solution('7 5\\n1 5 4 3 2 1 1\\n') == '3'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 5\n3 1 2 1 1\n''') == '4', 'Sample Test #1'\n\nassert solution('''\n7 5\n1 5 4 3 2 1 1\n''') == '3', 'Sample Test #2'\n\nassert solution('''\n7 2\n1 2 3 4 5 6 7\n''') == '7', 'Sample Test #3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n3 1 2 1 1\") == \"4\"\nassert solution(\"7 5\\n1 5 4 3 2 1 1\") == \"3\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 5\n3 1 2 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n7 5\n1 5 4 3 2 1 1\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n5 5\n3 1 2 1 1\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n7 5\n1 5 4 3 2 1 1\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n15 5\n
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n3 1 2 1 1\n''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 5\n3 1 2 1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"5 5\n1 5 4 3 2 1 1\n\"\"\") == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 5\n3 1 2 1 1\n''') == '4'\n\nassert solution('''\n4 7\n1 2 1 2 1 1 1\n''') == '3'\n\nassert solution('''\n3 5\n3 2 1 1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nSSPPR\\n2\\nPPRRS\\nRRSSP\") == \"10\"\nassert solution(\"1\\nS\\nP\\nR\\n\") == \"1\"\nassert solution(\"4\\nSRSPS\\nPPSR\\nRPSS\\nPSRS\\n\") == \"15\"\n",
        "num_ids_2": 49,
        "num_ids_4": 80
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nSSPR\\n1\\nSSPPR\\n2\\nPPRRS\\nRRSSP\") == \"10\"\nassert solution(\"5\\nSSPR\\n1\\nSSPPR\\n2\\nPPPRS\\nRRSSP\") == \"15\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nprint(\"Congratulations! Your solution is correct.\")\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nSSPPR\\n1\\nSSPPR\\n2\\nPPRRS\\nRRSSP\") == \"10\"\nassert solution(\"3\\nSS\\nR\\nSS\") == \"2\"\nassert solution(\"2\\nP\\nP\") == \"0\"",
        "num_ids_2": 55,
        "num_ids_4": 71
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nSSPPR\n2\nPPRRS\nRRSSP''') == '10'\nassert solution('''6\nSSPPR\n2\nPPRRS\nRRSSP\nSSPR\nSSPP''') == '15'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '10'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"3\") == \"3\", solution(r\"3\")\nassert solution(r\"RPSRPS\") == \"10\", solution(r\"RPSRPS\")\nassert solution(r\"RPSRPR\") == \"10\", solution(r\"RPSRPR\")\nassert solution(r\"SSPPR\") == \"5\", solution(r\"SSPPR\")\n",
        "num_ids_2": 42,
        "num_ids_4": 88
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5', 'Sample Test 1'\nassert solution('2') == '10', 'Sample Test 2'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') =='still running'\nassert solution('2') == '4'\nassert solution('3') =='still running'\nassert solution('4') =='still running'\nassert solution('5') =='still running'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\", \"Basic test\"\nassert solution(\"2\") == \"still running\", \"Basic test\"\nassert solution(\"5\") == \"4\", \"Basic test\"\nassert solution(\"7\") == \"4\", \"Basic test\"\nassert solution(\"11\") == \"still running\", \"Basic test\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n1\n0\n1\n1\n0\"\"\") == \"4\"\n\nassert solution(\"\"\"\n1\n1\n0\"\"\") == \"still running\"\n\nassert solution(\"\"\"\n2\n0\n0\"\"\") == \"still running\"\n\nassert solution(\"\"\"\n3\n1\n1\n1\"\"\") == \"still running\"\n\nassert solution(\"\"\"\n3\n0\n1\n1\"\"\") == \"still running\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"still running\"\nassert solution(\"5\") == \"still running\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n7\n11\nSample Output 2:\n4\n''') =='still running'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('5') =='still running'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') =='still running'\nassert solution('5') == '4'\nassert solution('1') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') =='still running'\nassert solution('2') == '4'\nassert solution('5') == '17'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n2 2') == 'impossible'\nassert solution('6\\n6 1 3 2 2 3') == '0.6'\nprint(solution(input()))\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('2 2') == 'impossible'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 1 2 1 3\\n\") == \"impossible\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('2 2') == 'impossible'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n3\\n') == 'impossible'\nassert solution('2\\n2\\n') == '0.5'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"6\\n\"\n    \"6 1 3 2 2 3\\n\"\n    \"6 1 2 3 4\\n\"\n    \"6 1 1 2 3\"\n    ) == \"0.6\"\nassert solution(\n    \"3\\n\"\n    \"1 1\\n\"\n    \"2 1\\n\"\n    \"1 1\"\n    ) == \"impossible\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"impossible\"\nassert solution(\"6\") == \"0.6\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n6\n6 1 3 2 2 3\n\"\"\") == \"0.6\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1 3 2 2 3') == '0.6'\nassert solution('2') == 'impossible'\nassert solution('2 2') == '0.6'",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n5 1 3 2 2\n\"\"\") == \"0.6\"\nassert solution(\"\"\"\n2\n2 2\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n5\n5 1 3 2 2\n\"\"\") == \"0.6\"\nassert solution(\"\"\"\n6\n6 1 3 2 2 3\n\"\"\") == \"0.6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''\n1 8 1 8\n1 10 2 5\n''') == 'Tie'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'Emma'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Emma\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6''') == 'Emma'\nassert solution('''1 8 1 8\n1 10 2 5''') == 'Tie'\nprint(solution('''1 10 2 5\n1 8 1 8'''))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"Emma\"\nassert solution('''\n5 3 2 6\n8 1 7 6\n''') == \"Tie\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 4 5\\n4 7 8 9\") == 'Tie'\nassert solution(\"1 3 2 5\\n2 4 6 5\") == 'Tie'\nassert solution(\"1 4 4 4\\n1 7 8 2\") == 'Emma'",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"\nassert solution(\"10 8 5 1\\n3 6 9 1\") == \"Tie\"",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''\n1 8 1 8\n1 10 2 5\n''') == 'Tie'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6''') == 'Emma'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6\\n') == 'Emma'\nassert solution('2 3 4 4\\n4 6 3 4\\n') == 'Tie'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') =='makes sense'\nassert solution('8') =='something is fishy'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\nmumble 5\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"\nassert solution(\"15\\n1 2 3 mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble mumble",
        "num_ids_2": 49,
        "num_ids_4": 1711
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 3 mumble 5\\n\") == \"makes sense\"\nassert solution(\"8\\n1 2 3 mumble mumble 7 mumble 8\\n\") == \"something is fishy\"\n\n------------------\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"makes sense\"\nassert solution(\"8\") == \"something is fishy\"\nassert solution(\"2\") == \"makes sense\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1 2 3 mumble 5\"\n) == \"makes sense\"\nassert solution(\n    \"8 1 2 3 mumble mumble 7 mumble 8\"\n) == \"something is fishy\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 mumble 5\n1 2 3 mumble mumble 7 mumble 8''') =='something is fishy'\nprint(solution('''5\n1 2 3 mumble 5\n1 2 3 mumble mumble 7 mumble 8'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3 mumble 5\n1 2 3",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) =='something is fishy'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 mumble 5\n1 2 3 mumble mumble 7 mumble 8''') =='something is fishy'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 mumble 5\") == \"makes sense\"\nassert solution(\"8 1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"\n\nYour code should be able to pass all the tests.\n'''\nimport sys",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"1 121\"\nprint(solution(input_string))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '6 6'\nassert solution('4 9 25 49 81') == '121 121'\nassert solution('5 2') == '1 1'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('4 5') == '0'\n",
        "num_ids_2": 31,
        "num_ids_4": 42
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 2'\nassert solution('2 1 3 4') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n\n'''\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 6 9 12 15\") == \"1 18\"\nassert solution(\"4 9 25 49 81\") == \"2 121\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n2 3\n1 0\n0 2\"\"\") == \"CORRECT\"\nassert solution(\"\"\"2\n0 1\n0 2\"\"\") == \"INCORRECT\"\nassert solution(\"\"\"1\n1 3\n3 4\"\"\") == \"INCORRECT\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == \"CORRECT\"\nassert solution('4') == \"INCORRECT\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\\n1 0\\n0 2\\n3 1\\n\") == \"CORRECT\"\nassert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n\") == \"CORRECT\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\nassert solution(\"6\\n2 3\\n1 0\\n0 2\\n3 1\\nSample Output 2:CORRECT\") == \"CORRECT\"\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\nassert solution(\"4\\n2 3\\n1 0\\n0 2\\n3 1\\n\") == \"INCORRECT\"",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 0\\n0 2\\n3 1\\n\") == \"CORRECT\"\nassert solution(\"4 6\\n2 3\\n1 0\\n0 2\\n3 1\\n\") == \"INCORRECT\"\nassert solution(\"8 4\\n3 2\\n0 1\\n1 5\\n6 0\\n5 3\\n4 7\\n7 4\\n\") == \"CORRECT\"\nassert solution(\"8 8\\n0 0\\n0 2\\n2 0\\n1 2\\n4 1\\n1 5\\n5 4\\n2 6\\n6 3\\n\") == \"CORRECT\"\n",
        "num_ids_2": 57,
        "num_ids_4": 149
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5\\n6 2\\n3 1') == 'CORRECT'\nassert solution('4 6\\n0 2\\n3 1\\n5 0') == 'CORRECT'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'CORRECT'\nassert solution('8\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == 'INCORRECT'",
        "num_ids_2": 91,
        "num_ids_4": 91
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\") == \"CORRECT\"\nassert solution(\"10\\n0 5\\n1 2\\n5 1\\n3 3\\n3 6\\n7 7\\n8 8\\n9 9\\n5 5\\n7 5\") == \"INCORRECT\"\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4\n''') == 'CORRECT'\nassert solution('''\n8\n3 4\n1 2\n0 7\n2 5\n5 3\n7 6\n4 1\n''') == 'INCORRECT'\nprint(solution('''\n3\n4 1\n1 5\n2 5\n'''))\nprint(solution('''\n5\n0 1\n1 3\n3 0\n2 1\n3 2\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0''') == '1 2 3 1 11'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0') == '1 2 3 1 11'\n\n\"\"\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\n\nassert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n0 1 1\\n1 0 1\\n1 1 0\") == \"1 1 1\"\nassert solution(\"5\\n0 0 1 1 1\\n0 0 2 0 2\\n1 2 0 1 3\\n1 0 1 0 1\\n1 2 3 1 0\" ) == \"1 2 3 1 11\"\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n0 1 1\n1 0 1\n1 2 0\nSample Output 1:\n1 2 3\nSample Output 2:\n1 2 3 11\n\"\"\") == \"1 2 3 11\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '1 2 3 1 11'\nassert solution('3') == '1 1 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\n\nassert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\nassert solution(\"31 1\") == \"Sunday\"\nassert solution(\"4 2\") == \"Tuesday\"\nassert solution(\"24 2\") == \"Sunday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Thursday'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\\n\") == \"Thursday\"\nassert solution(\"17 1\\n\") == \"Saturday\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"100\") == \"40\"\nassert solution(\"4\") == \"4\"\nassert solution(\"500\") == \"480\"\nassert solution(\"12\") == \"129\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"100\") == \"40\"\nassert solution(\"500\") == \"129\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('10000') == '129'\nassert solution('1000000') == '480'\nassert solution('5000000') == '160000'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('500') == '480'\nassert solution('12') == '129'\nassert solution('50') == '50'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n100\n4\n''') == '4'\n\nassert solution('''1\n100\n12\n''') == '129'\n\nassert solution('''10\n100\n4\n''') == '4'\n\nassert solution('''10\n100\n12\n''') == '129'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n100\\n4\\n') == '4\\n40'\nassert solution('1\\n100\\n5\\n') == '129\\n480'\nassert solution('1\\n100\\n100\\n') == '129\\n480'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '4'\nassert solution('500') == '40'\nassert solution('12') == '129'\nassert solution('100000') == '50'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_str) == \"129 480\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"100\") == \"4\"\nassert solution(\"4\") == \"40\"\nassert solution(\"12\") == \"129\"\nassert solution(\"500\") == \"480\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1\\n5 1\\n3 3\\n4\\n3 1\\n3 2\\n3 3\\n3 4') == '4.0\\n3'\nassert solution('3 2\\n5 4\\n1 6\\n3\\n2 4\\n3 5\\n4 3') == '6.0\\n3'\n",
        "num_ids_2": 82,
        "num_ids_4": 82
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '2.0'\nassert solution('5 1') == '2.0'\nassert solution('3 3') == '4.0'\nassert solution('3 4') == '5.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0'\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0'\nassert solution('''\n3 2\n5 4\n1 6\n3 3\n2 4\n3 5\n4 3\n''') == '6.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3''') == '4.0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"4.0\"\nassert solution(\"3 2\") == \"4.0\"\nassert solution(\"10 9\") == \"14.0\"\nassert solution(\"3 1\") == \"4.0\"\nassert solution(\"3 1\") == \"4.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0'\nassert solution('''3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3''') == '6.0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4''') == '4.0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('3 2') == '6.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"5 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\nassert solution(\"3 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('5 4') == '6.0'\nassert solution('3 2') == '3.0'\nassert solution('3 5') == '3.0'\n\n\"\"\"\n\na,b,c=map(int,input().split())\nn=int(input())\n\nfor i in range(n):\n    x1,y1=map(int,input().split())\n    x2,y2=map(int,input().split())\n    x3,y3=map(int,input().split())\n\n    A=((x1-a)**2+(y1-b)**2)**0.5\n    B=((x2-a)**2+(y2-b)**2)**0.5\n    C=((x3-a)**2+(y3-b)**2)**0.5\n    print(abs(A*(B-C))/2)\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n5''') == '2'\nassert solution('''30\n10''') == '8'\nassert solution('''30\n9''') == '7'\n\nprint(solution('''10\n3'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '2'\nassert solution('1') == '1'\nassert solution('30') == '7'\nassert solution('3') == '2'\nassert solution('40') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4\n10\n20\n''') == '7'\nassert solution('''10\n10\n20\n20\n25\n30\n35\n40\n50\n55\n60\n65\n70\n75\n80\n90\n100\n''') == '50'\nassert solution('''3\n5\n5\n25\n3\n15\n''') == '3'\nassert solution('''30\n25\n50\n50\n100\n200\n''') == '50'\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"30\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"30\") == \"7\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nprint(solution(input()))\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == 'HE GOT AWAY!'\nassert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\nD-BAT-12') == 'HE GOT AWAY!'\n",
        "num_ids_2": 89,
        "num_ids_4": 164
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == 'HE GOT AWAY!'\n\n'''\n\n'''\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '1'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\") == \"HE GOT AWAY!\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"2\"\nassert solution(\"RF-KGB1\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '1'\nassert solution('G-MI6') == '1'\nassert solution('RF-KGB1') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"N-FBI1\") == \"1\", \"test 1\"\nassert solution(\"N321-CIA\") == \"1\", \"test 2\"\nassert solution(\"N321-FBI\") == \"1\", \"test 3\"\nassert solution(\"N321-BI-12\") == \"1\", \"test 4\"\nassert solution(\"N321-FBI-12\") == \"1\", \"test 5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"2\"\nassert solution(\"G-MI6\") == \"3\"\nassert solution(\"RF-KGB1\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"N321-CIA\") == \"HE GOT AWAY!\"\nassert solution(\"F3-B12I\") == \"2\"\nassert solution(\"F-BI-12\") == \"HE GOT AWAY!\"\nassert solution(\"KRIJUMCAR1\") == \"HE GOT AWAY!\"",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n3 3 3\n4 4 5\n''') == '8.0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n3 3 3\n4 4 5\n''') == \"8.0\"\nassert solution('''\n2\n2 3 2\n2 4 3\n''') == \"7.0\"\nassert solution('''\n3\n5 6 1\n3 4 6\n5 4 3\n''') == \"11.0\"\nassert solution('''\n3\n4 6 5\n6 4 3\n''') == \"11.0\"\nassert solution('''\n4\n2 2 2 3\n1 3 3 3\n3 1 1 1\n4 4 4 4\n''') == \"11.0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 2 2\\n3 3 3\\n4 4 5\\n') == '8.0'\nassert solution('5\\n2 3 3\\n3 4 4\\n4 5 5\\n') == '6.843530573929037'\nassert solution('5\\n3 2 2\\n2 4 4\\n4 2 2\\n') == '5.0'",
        "num_ids_2": 64,
        "num_ids_4": 93
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5\\n') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4\\n') == '6.843530573929037'\n\nstdin = \"\"\"\n2\n3 3 3\n4 5 4\n\"\"\"\n\nprint(solution(stdin))",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n3 3 3') == '8.0'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"\"\"\n2\n3 3 3\n4 5 4\n\"\"\") == \"8.0\", \"Should be 8.0\"\n\nassert solution(r\"\"\"\n1\n4 4 4\n\"\"\") == \"7.142857142857142\", \"Should be 7.142857142857142\"\n\nassert solution(r\"\"\"\n2\n6 6 6\n\"\"\") == \"13.142857142857144\", \"Should be 13.142857142857144\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '8.0'\nassert solution('3 3 3') == '8.0'\nassert solution('4 4 5') == '6.843530573929037'\n\"\"\"\nimport math\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 4 3') == '6.843530573929037'\nassert solution('4 3 2 4 3') == '7.88888888888889'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"8.0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '12'\nassert solution('24') == '24'\nassert solution('25') == '27'\nassert solution('36') == '36'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"27\"\nprint(solution())\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(24) == \"24\"\nassert solution(25) == \"27\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12\") == \"1\"\nassert solution(\"23\") == \"2\"\nassert solution(\"32\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('25') == '27'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n24\") == \"24\"\nassert solution(\"2\\n25\") == \"27\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"24\") == \"24\"\nassert solution(\"25\") == \"27\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '1+9+8+4') == '7'\nassert solution(\n    '1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '7'\nprint('TAKEAWAY')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(samples.sample_input_1) == '7'\nassert solution(samples.sample_input_2) == '188'\nassert solution(samples.sample_input_3) == '1366'\nassert solution(samples.sample_input_4) == '967'",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\nprint(solution(input()))\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+2+3+4+5+6+7+8+9+10+11+12\") == \"19\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 5 2\n2 5\n''') == '2 5'\nprint(solution('''2 2 -4 5\nSample Input 3:\n1 0 -1\nSample Output 3:\n-1 0 1'''))\n\n\"\"\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"2 2\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 1 2 1 2\\n') == '2 2 2 1 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\nassert solution('1 1 1\\n1 2 3 3 2') == '1 1 1 2 3 3 2'\nassert solution('10 10\\n1 1 1 1 1 1 1') == '1 1 1 1 1 1 1'\n",
        "num_ids_2": 52,
        "num_ids_4": 103
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('5 2 1 2 1 2') == '1 2 2 2 1 1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n2 1 2 1 2\n''') == '2 2 2 1 1', \"First\"\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1\n''') == '1 1 1 3 3 3 2 2 2', \"Second\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"2 2\"\nassert solution(\"6 1\") == \"1 1 1 2 2 2\"\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_sample_01) == output_sample_01\nassert solution(input_sample_02) == output_sample_02\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n2 1 2 1 2''') == '2 2 1 1 2'\nassert solution('''9 3\n1 3 3 3 2 2 2 1 1''') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '4', \"Wrong\"\nassert solution('5') == '5', \"Wrong\"\nassert solution('7') == '6', \"Wrong\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10') == '875'\nassert solution('1 100') == '100'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('15 10') == '875'\nassert solution('5 100') == '100'\nassert solution('1 100') == '100'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 9') == '875'\nassert solution('1 100') == '100'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('38 24\\n') == '875'\nassert solution('1 100\\n') == '100'\nprint(solution('''3 2\n4 1\n5 1'''))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 1\n12\n13''') == '-1'\nassert solution('''7 7\n9\n8''') == '9'\n\n--- Part Two ---\nAt the beginning of this task, you use up all the units of money you have. The owners of the scientific journal want to know what is the minimal impact factor.\n\nHowever, a scientific journal has some serious issues:\nThe impact factor of a scientific journal is a measure reflecting the average number of citations to articles published in science journals. For this task we are using a simplified formula for calculating the impact factor:\\[ \\frac{\\text {Total count of citations received by articles published in the journal}}{\\text {Total number of articles published}} \\]\n\nRounding is always performed upwards. For example the impact factor of the \u201cJournal for ore research and time wasting\u201d that published $38$ articles cited $894$ times is $894 / 38 = 23.53$ rounding up to $24$.\n\nFor this task we are using a simplified formula for calculating the impact factor:\\[ \\frac{\\text {Total count of citations received by articles published in the journal}}{\\text {Total number of articles published}} \\]\n\nRounding is always performed upwards. For example the impact factor of the \u201cJournal for ore research and time wasting\u201d that published $38$ articles cited $894$ times is $894 / 38 = 23.53$ rounding up to $24$.\n\nYou are the editor of one scientific journal. You know how many articles you are going to publish and the owners are pushing you to reach a specific impact factor. You are wondering how many scientists you will have to bribe to cite your articles to meet the owners demands. Since money is tight you want to bribe the minimal amount of scientists. Each bribed scientist buys you a single citation.\n\n-----Input-----\nFirst and only line of input will contain $2$ integers, $A$ ($1 \\leq A \\leq 100$), the number of articles you plan to publish and $I$ ($1 \\leq I \\leq 100$), the impact factor the owners require.\n\n-----Output-----\nThe first and only line of output should contain one integer, the minimal number of scientists you need to bribe.\n\n-----Examples-----\nSample Input 1:\n38 24\nSample Output 1:\n875\n\nSample Input 2:\n1 100\nSample Output 2:\n100\n\n--- Part Two ---\n\nYou are the editor of one scientific journal. You know how many articles you are going to publish and the owners are pushing you to reach a specific impact factor. You are wondering how many scientists you will have to bribe to cite your articles to meet the owners demands. Since money is tight you want to bribe the minimal amount of scientists. Each bribed scientist buys you a single citation.\n\n-----Input-----\nFirst and only line of input will contain $2$ integers, $A$ ($1 \\leq A \\leq 100$), the number of articles you plan to publish and $I$ ($1 \\leq I \\leq 100$), the impact factor the owners require.\n\n-----Output-----\nThe first and only line of output should contain one integer, the minimal number of scientists you need to bribe.\n\n'''\n) == '1'\n\nimport unittest\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11\\n2\\n') == '875'\n\nassert solution('2\\n1\\n') == '100'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 6') == '12'\nassert solution('2 50') == '51'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 100\\n') == '100'\nassert solution('1 100\\n') == '100'\nassert solution('1 100\\n') == '100'\nassert solution('10 100\\n') == '875'\nassert solution('3 100\\n') == '100'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('18 5\\n') == '5'\nassert solution('1 100\\n') == '100'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 888\") == \"881\", \"3 888\"\nassert solution(\"9 897\") == \"988\", \"9 897\"\nassert solution(\"10 897\") == \"988\", \"10 897\"\nassert solution(\"99 897\") == \"988\", \"99 897\"\nassert solution(\"10 2\") == \"2\", \"10 2\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nassert solution('737 461') == '741'\nassert solution('737 561') == '741'\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12' + '\\n' + '41') == 'programming'\nassert solution('11' + '\\n' + '131') == 'programming'\nassert solution('7' + '\\n' + '96') == 'contest'\nassert solution('0' + '\\n' + '0') == 'impossible'\nassert solution('1' + '\\n' + '0') == 'impossible'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"programming\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"impossible\"\nassert solution(\"10\") == \"impossible\"\nassert solution(\"10 11\") == \"impossible\"\nassert solution(\"10 20\") == \"impossible\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 9\") == \"programming\"\n\"\"\"\n\n\nimport sys\n\nn, w = map(int, sys.stdin.readline().split())",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '.^'\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n''') == 'BBABABABABAC'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 X') == '.X'\nassert solution('3 12 A') == 'BBABABABABAC'\nassert solution('6 2 C') == 'BBABABABABAB'\nassert solution('10 3 A') == 'BBABABABABAA'\nassert solution('14 3 A') == 'BBABABABABAB'\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \".^\"\n\nassert solution(\"\"\"\n3 2 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"BBABABABABAB\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n''') == '\\n.^\\n--\\n'\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n''') == '\\n.^\\n--\\nBBABABABABAC\\nBBBABABABABA\\nBBABABABABAB\\n'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 2 'X'\nX^\n\"\"\") == \"\"\"\n.^\n\"\"\".strip()\nassert solution(\"\"\"\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"\"\"\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n\"\"\".strip()\n\nassert solution(\"\"\"\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n\"\"\") == \"\"\"\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n\"\"\".strip()\n\nassert solution(\"\"\"\n1 1 'X'\nX^\n\"\"\") == \"\"\"\n.^\n\"\"\".strip()\n\nassert solution(\"\"\"\n2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"\"\"\n.^\n\"\"\".strip()\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n\n''') == '.^'\n\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABABB\nBBABABABABABB\nBBABABABABABB\n''') == 'BBABABABABAC'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 'X'\") == \".X\"\nassert solution(\"3 12 'A'\") == \"BABABABABABB\"\nassert solution(\"2 2 'X'\") == \"\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAB\"\nassert solution(\"1 1 'X'\") == \"X\"\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 'X'\") == \".X\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 \\'X\\'') == '.^\\n--\\n'\nassert solution('3 12 \\'A\\'') == 'BBABABABABAC\\nBABABABABABB\\nBBABABABABAB\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'impossible'\nassert solution('2 4 4 14') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0'\nassert solution('100 80 60 240') == '0 0 4\\n0 3 0\\n1 1 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n'\n\n-----Hints-----\nThe first part of this problem may be easy to solve with using the math module, so think about how you would compare it to others.\n\nThe second part of this problem is a bit trickier to solve. Think about how you would compare it to others using lists and sets.\n\nThe easiest way to solve this problem is to look up solution on https://www.codewars.com/kata/5dc7efa2a1d2f2a08000895.\n'''",
        "num_ids_2": 56,
        "num_ids_4": 118
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 4 4 14\n''') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\nassert solution('3 3 2 3') == '3 2 1'\nassert solution('3 5 5 5') == '3 1 0'\nassert solution('3 5 5 5') == '3 1 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1, (solution(input_1), output_1)\nassert solution(input_2) == output_2, (solution(input_2), output_2)\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4 4 14\n0 0 3\n1 1 2\n1 2 1\n1 3 0\n3 0 2\n3 1 1\n3 2 0\n5 0 1\n5 1 0\n7 0 0''') == '1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([2, 4, 4, 14]) == '1 0 3'\nassert solution([100, 80, 60, 240]) == '0 0 4'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == 'good job'\nassert solution('4') == '2, 3, 4'\nassert solution('5') == '1, 2, 3, 4, 5'\nassert solution('7') == '1, 3, 5, 6, 7'\nassert solution('8') == '1, 3, 5, 6, 7, 8'\n",
        "num_ids_2": 25,
        "num_ids_4": 61
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == \"good job\"\nassert solution('4') == \"1,2,3,4\"\nassert solution('5') == \"1,2,3,4,5\"\nassert solution('7') == \"1,2,3,4,5,6,7\"\nassert solution('8') == \"1,2,3,4,5,6,7,8\"\n",
        "num_ids_2": 27,
        "num_ids_4": 67
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1 3 6 12\"\n\nassert solution(\"5\\n7\\n11\\n13\\n17\\n19\\n21\") == \"6 8 10 12 14 16 18\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5\\n'\nassert solution('4') == '3\\n'\nassert solution('10') == '1,2,3,4,5,6,7,8,9\\n'\nassert solution('5') == '1\\n3\\n6\\n9\\n'\nassert solution('1') == '1\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 73
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '6'\nassert solution('12345') == '1234'\nassert solution('13') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('8') == '1,2,3,4,5'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n\") == \"good job\"\nassert solution(\"5\\n1\\n4\\n3\\n2\\n\") == \"1 2 3 4\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\\n\"\nassert solution(\"9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13\") == \"1\\n3\\n6\\n12\\n\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n4\n5\n7\n8\n9\n10\n11\n13\n''') == 'good job'\n\nassert solution('''\n1\n2\n3\n4\n5\n''') == '1 2 3 4 5'\n\nassert solution('''\n3\n7\n12\n''') == '3 4 5 6 7 8'\n\nassert solution('''\n8\n10\n12\n''') == '8 9 10 11 12'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == \"good job\"\nassert solution('2') == \"1\"\nassert solution('4') == \"3\"\nassert solution('5') == \"4\"\nassert solution('7') == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"2 10.2 50000 40075000 272.1\") == \"169764.804811054 16.845245603957\"\n\n---Input---\n30\n40\n50\n100\n50\n30\n10\n50000\n20\n20\n20\n\n---Output---\n0.74210612678\n2.421052631579\n\"\"\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"180.0\"\nassert solution(\"3 5 2.1\") == \"14.6\"\nassert solution(\"1 10 2.1\") == \"13.28\"\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"10 8.9 40075000 272.1\"\n) == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n8.9 500000 272.1') == '157079.04857106 15.598261092309'\nassert solution('6\\n10.00000000 1.00000000 100.00000000 1.00000000') == '10.00000000 3.1311840943346'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 8.8 50030000 272.1') == '21.94685936723434'\nassert solution('20 10.2 1000000 272.1') == '21280.0000506867'\n",
        "num_ids_2": 58,
        "num_ids_4": 82
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n8.9\n40075000 272.1''') == '157079.04857106 15.598261092309'\nassert solution('''2\n3\n1\n0.8''') == '979080.508469325'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1.5 5.5 2000000 500000\\n2.5 0.5 10.0') == '3397.488299833'\n\nimport math",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution(\n    '10 6.8 8.1 4.6') == '6916.334894366436 6.81798625572142 7.1489654739558'\nassert solution(\n    '10 6.8 8.1 4.6') == '6129.893441047114 6.81798625572142 7.1489654739558'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"\n\nSample Input 1:\n2\nSample Output 1:\n1\nSample Input 2:\n3\nSample Output 2:\n4\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == '0'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '2'\nassert solution('4\\n') == '3'\nassert solution('5\\n') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\n\nassert solution('4') == '2'\n\nassert solution('5') == '3'\n\nassert solution('7') == '4'\n\nassert solution('1000000000') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'\n\"\"\"\n\nstdin = \"\"\"1\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '6'\nassert solution('5') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '4'\nassert solution('9') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    Arrowhead\n    Crowds\n    Bewitchment\n    Confusion\n    You\n    Scared\n    Arrowhead\n    Crowds\n    Scared\n    You\n    Bewitchment\n    Confusion\n    Scared\n    You\n    Scared\n    Arrowhead\n    Confusion\n    Bewitchment\n    You\n    Scared\n    You\n    Scared\n    Arrowhead\n    Crowds\n    Bewitchment\n    Crowds\n    You\n    Scared\n    Arrowhead\n    Crowds\n    You\n    Scared\n    Crowds\n    You\n    Confusion\n    Scared\n    Scared\n    Scared\n    Scared\n    Bewitchment\n    Scared\n    Arrowhead\n    Scared\n    Arrowhead\n    Scared\n    Arrowhead\n    Bewitchment\n    Scared\n    Crowds\n    Bewitchment\n    Bewitchment\n    Bewitchment\n    You\n    Scared\n    Scared\n    Scared\n    Bewitchment\n    Confusion\n    Scared\n    Crowds\n    Scared\n    Scared\n    Scared\n    Arrowhead\n    Scared\n    Scared\n    Bewitchment\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Bewitchment\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared\n    Scared",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\nAlan\nAlan\nJohan\nAlan''') == '0'\nassert solution('''3\nAlan\nAlan\nAlan''') == '1'\nassert solution('''2\nAlan\nAlan''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nSample Input:\n4\nA\nA\nD\nD\nSample Output:\n2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '3'\nassert solution('3') == '4'\nassert solution('2') == '2'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nA\\nA\\nA\\n') == '3'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('2') == '1'\nassert solution('4') == '0'\nassert solution('1') == '0'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\nA\\nA\\nA\\n\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\nA\\nA\\nA\\n\") == \"3\"\n\"\"\"\nn = int(input())\na_dic = {'A': 1, 'B': 2, 'C': 3, 'D': 4}\ntotal = 0\nfor i in range(n):\n    total += a_dic[input()]\nprint(total)\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nA\\nA\\nA\\n') == '3'\nassert solution('2\\nA\\nB\\nC\\n') == '0'\nassert solution('3\\nA\\nB\\nC\\n') == '0'\nassert solution('4\\nA\\nB\\nC\\n') == '0'\nassert solution('5\\nA\\nB\\nC\\n') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nA\nA\nB\nD\nA\n''') == '3'\nassert solution('''\nA\nC\nB\nD\n''') == '2'\nassert solution('''\nB\nA\nC\nB\n''') == '4'\n\nSample Input:\n7\nA\nA\nB\nB\nC\nC\nD\nSample Output:\n3\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 1 2\") == \"..xx..\"\n\nassert solution(\"3 4 1 2\") == \"..x.x.\"\n\nassert solution(\"3 3 1 5\") == \"...x.x...\"\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '..xx..', 'Wrong Answer'\nassert solution('6 1 3 2') == 'x.x.x.', 'Wrong Answer'\nassert solution('4 4 2') == 'x.x.x.', 'Wrong Answer'\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '1 3 1 2'\n    ) == '..xx..'\nassert solution(\n    '3 3 1 2'\n    ) == 'xx..xx'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\"\n) == \"..xx..\\nxx..xx\\n..xx..\\nxx..xx\"\n\nassert solution(\n    \"3 3 1 2\\nx.x.\\n.x.x\\nx.x.\\n\"\n) == \"..xx..\\nxx..xx\\nxx..xx\\nxx..xx\"\n\nassert solution(\n    \"3 3 1 2\\n.x.\\n.x.x\\n.x.\\n\"\n) == \"..xx..\\nxx..xx\\n..xx..\\nxx..xx\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 1 2\\n.x.\\nx.x\\n.x.\\n\") == \"..xx..\\nxx..xx\\n..xx..\\nxx..xx\"\n\"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 1 2\n.x.\nx.x\n.x.\n''') == '..xx..'\nassert solution('''\n10 10 1 2\nx..x..x..\nx.xx..x..x\nx..x..x..x\nx.xx..x..x\nxx.xxx..xx\n.x.x..x..x\nx.xx..x..x\nxx.xxx..xx\nx.xx..x..x\nx.xx..x..x\n''') == 'xxxxxxx'\nassert solution('''\n10 10 1 2\nx.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.x.",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.read()\n\n\nSample Input:\n2 2 2\n..x..\n..x..\nSample Output:\nxx..\nxx..\nxx..\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 1 1 2\n.x.\nx.x\n.x.\n\"\"\") == \"\"\"\nxx.x.\nxx.x.\nxx.x.\n\"\"\", \"Mirko has solved this problem!\"\nassert solution(\"\"\"\n3 3 1 2\n.x.\nx.x\nx.x\nSample Output:\nxx.xx.\nxx.xx.\nxx.xx.\n\"\"\") == \"\"\"\nx.xx.\nx.xx.\nx.xx.\n\"\"\", \"Mirko has solved this problem!\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2') == '..xx..'\nassert solution('4 3 2 3') == '..xx..'\nassert solution('1 1 5 3') == 'x.x.x.'",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"\n3 3 1 2\n.x.\nx.x\n.x.\n\"\"\") == r\"\"\"xx..xx\"\"\"\n\nassert solution(r\"\"\"\n3 3 1 2\nx.x\n.x.\n.x.\n\"\"\") == r\"\"\"xx..xx\"\"\"\n\nassert solution(r\"\"\"\n3 3 1 2\nx.x\n.x.\nx.x\n\"\"\") == r\"\"\"x.x\"\"\"\n\nassert solution(r\"\"\"\n3 3 1 2\nx.x\n.x.\nx.x\n\"\"\") == r\"\"\"xx..xx\"\"\"\n\nassert solution(r\"\"\"\n4 4 1 2\nx.x.\nx.x.\nxx.x\n.x.x\n\"\"\") == r\"\"\"xx.xx\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nassert solution(\"B 70 13 20\") == \"20 13\"\nassert solution(\"F 70 13 20\") == \"13 20\"\nassert solution(\"F 60 -13 20\") == \"13 21\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nF 60 13 20\n''') == '14 20'\nassert solution('''\nF 60 13 20\n''') == '14 20'\n\nSample Input:\n1\nB 60 13 20\nSample Output:\n21 23'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 20'\n\nimport unittest\nclass TestProgram(unittest.TestCase):\n    def test_case_00(self):\n        self.assertEqual(solution('F 60 13 20'), '14 20')\n\n    def test_case_01(self):\n        self.assertEqual(solution('B 60 13 20'), '13 20')\n\n    def test_case_02(self):\n        self.assertEqual(solution('F 1000 6 0 -1'), '1000 6 -1')\n\n    def test_case_03(self):\n        self.",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 20'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '14 20'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''F 60 13 20\n''') == '14 20'\nassert solution('''F 60 13 21\n''') == '14 21'\nassert solution('''F 60 13 22\n''') == '14 22'\nassert solution('''F 60 13 23\n''') == '14 23'\nassert solution('''F 60 13 24\n''') == '14 24'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''F 60 13 20\nF 60 13 20\n''') == '14 20'\n\nassert solution('''F 60 13 20\nB 60 13 20\n''') == '16 20'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '12 20'\nassert solution('B 20 20 20') == '20 20'\nassert solution('F 20 20 20') == '20 20'\nassert solution('B 60 13 20') == '13 20'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\nF 60 13 20\n''') == \"14 20\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nF 60 13 20\n''') == '14 20'\nassert solution('''\nB 100 5 10\n''') == '95 15'\nassert solution('''\nB -100 5 10\n''') == '-95 15'\nassert solution('''\nF -100 5 10\n''') == '95 15'\nassert solution('''\nB -100 -5 10\n''') == '-95 -15'\n''') == '95 -15'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''OCT 31''') == 'yup'\nassert solution('''FEB 29''') == 'nope'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 26') == 'nope'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"OCT 31\") == 'yup'\nassert solution(\"JAN 9\") == 'nope'\nassert solution(\"FEB 9\") == 'nope'\nassert solution(\"JAN 3\") == 'yup'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 12') == 'nope'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nFEB 9,\n''') == 'yup'\nassert solution('''\nFEB 9,\n''') == 'nope'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('OCT 31') == 'yup', 'Should be yup'\nassert solution('NOV 26') == 'nope', 'Should be nope'\nassert solution('FEB 2') == 'nope', 'Should be nope'\n\n'''\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('OCT 31') == 'yup', \"Test\"\nassert solution('DEC 25') == 'nope', \"Test\"\n\nstdin = input()\n\nprint(solution(stdin))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('OCT 31') == 'yup'\n\nassert solution('JAN 1') == 'yup'\nassert solution('JAN 5') == 'nope'\n\nassert solution('JAN 2') == 'nope'\nassert solution('FEB 3') == 'nope'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"FEB 9, 2020\") == \"yup\", \"Should be yup\"\nassert solution(\"JAN 1, 2020\") == \"yup\", \"Should be yup\"\nassert solution(\"APR 19, 2020\") == \"nope\", \"Should be nope\"\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"yup\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"###.#.#.\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n###.#.#.\\n###.#.#.\"\n\n\n\"\"\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 2 2') == '#.##.##.\\n##.##.##.\\n#.##.##.\\n##.##.##.'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 2 2') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.'\nprint(solution(input))",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\\n.#.#.#.#\\n.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#'\nprint(solution(input()))\n\"\"\"\n\nimport math\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '#.#.#.'\n\"\"\"\n\nimport sys\nimport math\nimport itertools",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4') == \"##.#.#.\\n#.##.##\\n#.##.##\\n#.##.##\\n##.##.#\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.\\n.honi#.\\n#.oker.#\\n#.nera#.\\n#.irak#.\\n.#.#####.\\n#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#.#'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 4') == '#.honi#.\\n.#.honi#.\\n#.honi#.\\n#.honi#.\\n#.honi#.\\n'\nassert solution('1 2') == '#.\\n#.\\n#.\\n#.\\n#.\\n'\nassert solution('1 1') == '#.\\n#.\\n#.\\n#.\\n#.\\n'\n\n\"\"\"\n",
        "num_ids_2": 80,
        "num_ids_4": 110
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\\n.#.#.#.#\\n#honi#.\\n.#oker.#\\n#nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.##'\nprint('Everything passed.')",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\\n.#.#.#.#\\n.honi#.\\n.#oker.#\\n.nera#.\\n.#irak.#\\n#.#.#.#.\\n.#.#.#.#'\nprint(solution(input()))",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \\\n        \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\n",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+'\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '|:p:|.p.|:p:|.p.|:p.|:::|.p.|'\n",
        "num_ids_2": 161,
        "num_ids_4": 161
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"Black: Nb1,a3,e4,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,Ng8,Nc6,Ke8,Qd8,Ra8,Rh8,Bc8,Ng8\\nWhite: Nb1,a3,e4,Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n\"\n",
        "num_ids_2": 328,
        "num_ids_4": 328
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(SampleInput) == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''White:\nKe1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack:\nKe8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n\nWhite:\nKe1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack:\nKe8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'''\n\nassert solution('''White:\nKe1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack:\nKe8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\nBlack:\nKe1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nWhite:\nKe8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\nWhite:\nKe1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack:\nKe8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 108,
        "num_ids_4": 108
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 424,
        "num_ids_4": 424
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('6.6666 6.6666') == 'Need more materials!'\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Diablo is happy!'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.0000001 4.000000') == 'Need more materials!'\nassert solution('1.0000001 5.000000') == 'Need more materials!'\nassert solution('5.000000 4.000000') == 'Need more materials!'\nassert solution('5.000000 5.000000') == 'Need more materials!'\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4.000000 1.000000\") == \"Diablo is happy!\"\nassert solution(\"2.000000 3.000000\") == \"Need more materials!\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('0.100000 5.000000') == 'Need more materials!'\nprint(solution(input()))\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\\n\"\nassert solution(\"4.000000 1.000000\") == \"Need more materials!\\n\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('2.000000 5.000000') == 'Need more materials!'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.000000 4.000000') == \"Diablo is happy!\"\nassert solution('100.000000 4.000000') == \"Need more materials!\"\n\"\"\"\n\nfrom math import sqrt, acos, sin, cos\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('0.000000 4.000000') == 'Need more materials!'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n1\n1\n\"\"\"\n) == \"Need more materials!\"\n\nassert solution(\n\"\"\"\n10.0\n5\n\"\"\"\n) == \"Need more materials!\"\n\nassert solution(\n\"\"\"\n100.0\n5\n\"\"\"\n) == \"Diablo is happy!\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1 10 2 1') == '6'\nassert solution('1 1 10 2 1') == 'use the stairs'\n'''\n\nimport sys",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 1 10 2 1') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 6 3 1\") == \"1 1 1 1\"\nassert solution(\"10 1 10 2 1\") == \"5\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 2 2') == 'use the stairs'\nassert solution('1 1 1 1') == '2'\nassert solution('10 1 10 2 1') == '6'\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('20 15 10 2 1') == 'use the stairs'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 1 10 2 1') == '6'\n\nassert solution('1 1 10 2 1') == 'use the stairs'\n\nassert solution('2 3 5 2 1') == 'use the stairs'\n\nassert solution('2 2 2 2 2') == 'use the stairs'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 5 2') == '7'\nassert solution('10 1 10 2 1') == '6'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 10 2 1') == '6'\nassert solution('10 100 100 100 1') == 'use the stairs'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 1 1 2\n1''') == 'use the stairs'\nassert solution('''4 5 2 1\n4''') == '1'\nassert solution('''5 8 2 1\n7''') == 'use the stairs'\nassert solution('''1 100 1 100\n100''') == 'use the stairs'\nassert solution('''10 2 3 1\n1''') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 1 10 2 1\n''') == 'use the stairs'\nassert solution('''\n10 1 10 2 1\n''') == '6'\nassert solution('''\n10 1 10 2 1\n''') == '6'\nassert solution('''\n5 1 10 2 1\n''') == 'use the stairs'\nassert solution('''\n5 1 10 2 1\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n500\n120\n75\n\"\"\") == '128.8000000000000'\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1234\\n4321\\n') == '128.8'\nassert solution('2\\n10\\n9\\n') == '89.0'\nassert solution('3\\n10\\n9\\n') == '89.06666666666666'\n",
        "num_ids_2": 42,
        "num_ids_4": 65
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''\n5\n500\n120\n75\n700\n10\n''') == '128.8333333333333'\n\nassert solution(\n'''\n3\n500\n120\n75\n''') == '89.06666666666666'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '128.8'\nassert solution('5') == '128.8'\nassert solution('1000000') == '128.8'\nassert solution('10000000') == '128.8'\nassert solution('1000000000') == '128.8'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"3 4\") == \"112.25\"\nassert solution(\"3 2 4\") == \"92.5\"\nassert solution(\"3 2 4 5\") == \"92.5\"\nassert solution(\"3 2 4 5 6\") == \"92.5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n500\n120\n75\n''') == '128.8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n3\\n') == '89.06666666666666'\nassert solution('3\\n1\\n2\\n') == '128.8'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('3\\n500\\n120\\n75\\n1\\n6\\n2\\n8') == '89.06666666666666'\nassert solution('3\\n600\\n200\\n100') == '69.2'\nassert solution('2\\n3\\n1\\n1') == '1'\nassert solution('2\\n4\\n1\\n1') == '1'\n",
        "num_ids_2": 57,
        "num_ids_4": 97
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"128.8\"\nassert solution(\"1\") == \"89.0\"\nassert solution(\"500\") == \"128.8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0.0\"\nassert solution(\"1\") == \"0.5\"\nassert solution(\"12\") == \"0.5\"\nassert solution(\"123\") == \"1.33333333333333\"\nassert solution(\"123.4\") == \"1.33333333333333\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n45 65 84 346') == '4'\nassert solution('2\\n1 1 1 1 1') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n45 65 84 346\n''') == \"4\"\nassert solution('''10\n1 2 2 1\n''') == \"5\"\nassert solution('''100\n1 2 2 1\n''') == \"101\"\nassert solution('''50\n1 2 3 1\n''') == \"51\"\nassert solution('''21\n2 3 4 1\n''') == \"21\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"10\\n1 4 3 2 2 1 3 3 5 6 7 8 9\") == \"10\"\nassert solution(\"1000\\n1 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000\") == \"9\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n1\") == \"0\"\n",
        "num_ids_2": 42,
        "num_ids_4": 79
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 45 65 84 346''') == '4'\nassert solution('''5\n100 100 100 100 100''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"4\"\n\nassert solution(\"10\") == \"8\"\n\nassert solution(\"15\") == \"13\"\n\nassert solution(\"1\") == \"0\"\n\nassert solution(\"3\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 45 65 84 346\") == \"4\"\nassert solution(\"10\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"25\") == \"2\"\nassert solution(\"45\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '1'\nassert solution('1') == '0'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 45 65 84 346''') == '4'\nassert solution('''1\n1''') == '0'\nassert solution('''2\n1 2''') == '1'\nassert solution('''3\n1 2 3''') == '2'\nassert solution('''4\n1 2 3 4''') == '3'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 45 65 84 346') == '4'\nassert solution('4\\n2 1 4 5') == '3'\nassert solution('2\\n1 1 1 1') == '1'\nassert solution('10\\n1 1 1 1 1 1 1 1 1') == '11'\nprint('Coding complete? Click \"Check\" to earn cool rewards!')",
        "num_ids_2": 33,
        "num_ids_4": 70
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 45 65 84 346\n1 4 69 74 721\n6 10 6 1 1 1\n''') == '4'\nassert solution('''\n3\n1 9 9 9 9\n1 1 1 1 1\n4 8 5 5 1\n''') == '2'\nassert solution('''\n2\n1 7\n3 2\n''') == '0'\nassert solution('''\n1\n10\n''') == '1'\nassert solution('''\n1\n-20\n''') == '0'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n..TGG#\\n#######\") == \"1\"\nassert solution(\"8 1\\n......\\n......\\n......\\n......\\n#.....#\\n....#..\\n...#...\\n..#....\\n...#...\\n......\\n\") == \"0\"\nassert solution(\"8 5\\n#######\\n#P.GTG#\\n..TGG#\\n#######\\n#.....#\\n....#..\\n...#...\\n..#....\\n...#...\\n......\\n\") == \"1\"\nassert solution(\"7 7\\n.######\\n#P.G..G#\\n..TGG#\\n#..G...\\n#P.....\\n#G..##\\n#G..##\\n#######\\n\") == \"1\"\nassert solution(\"7 7\\n.G####\\n#P.G..\\n..TGG\\n#..G#\\n#P.....\\n#G..##\\n#G..##\\n#######\\n\") == \"0\"\n",
        "num_ids_2": 86,
        "num_ids_4": 209
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7 4\n#######\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\nassert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\nassert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\\n#######\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 4\n#######\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 3\n#######\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n__$$$____$$$____$$$______$$$______$$$____$$$____\n__$$$___$$$___$$$_____$$$_____$$$___$$__$$__$$__\n____$$$____$$$____$$$___$____$$____$$$____$$$____\n____$$$____$$$____$$$____$$$___$____$$$____$$$____\n____$$$____$$$____$$$___$____$$$____$$$____$$$____\n____$$$____$$$____$$$____$$$___$____$$$____$$$____\n____$$$____$$$____$$$___$____$$$____$$$____$$$____\n____$$$____$$$____$$$____$$$___$____$$$____$$$____\n____$$$____$$$____$$$____$$$___$____$$$____$$$____\n____$$$____$$$____$$$___$____$$$____$$$____$$$____\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$$____$$$____$$$__\n____$$$____$$$____$$$____$$$____$$",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13 50') == '5'\n\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n$\n_\n$\n_\n$\n_\n$\n_\n$\n''') == '10'\nassert solution('''\n3 2\n$$\n_\n_\n''') == '6'\nassert solution('''\n3 2\n$$\n_\n_\n''') == '6'\nassert solution('''\n3 2\n$\n_\n_\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,",
        "num_ids_2": 1138,
        "num_ids_4": 1138
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([\n    '____$$$_______$$$______$$$________$$$______$$$____',\n    '____$$$_______$$$______$$$________$$$______$$$____',\n    '_____$_________$________$__________$________$_____',\n    '___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___',\n    '__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__',\n    '_$____$$____$__$__$___$$____$___$__$__$___$$____$_',\n    '$_____$$___$___$___$__$$_____$_$___$___$__$$_____$',\n    '_____$_$______$_$_____$_$_________$_$_____$_$_____',\n    '____$___$____$___$____$___$______$___$____$___$___',\n    '___$____$___$_____$___$____$____$_____$___$____$__',\n    '__$_____$___$_____$___$_____$___$_____$___$_____$_',\n    '__$_____$___$_____$___$_____$___$_____$___$_____$_'\n]) == '5'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"13 50\") == \"5\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i am a student\") == \"iyay aamd spaynts utay\"\nprint(\"Check your code!\")\n\"\"\"\n\nimport collections\nimport re",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i dont speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"i speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 56,
        "num_ids_4": 83
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('i can speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('a friend of yours was frustrated with everyone') == 'ay oday oday otay oday ityay'\n",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\ni\ncan\nspeak\npig\nlatin\n''') == 'iyay antcay eakspay igpay atinlay', 'You are not the boss'\nassert solution('''\nthis is not going to work\n''') == 'thay is not going to wor ', 'You are the boss'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\", \"Wrong\"\n\n\"\"\"\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        word_list = stdin.split(\" \")\n        vowels = (\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        pig_latin = []\n        for i in word_list:\n            lst = list(i)\n            count_vowels = 0\n            pig_latin.append(lst[0])\n            for j in lst:\n                if j not in vowels:\n                    count_vowels += 1\n                    break\n            if count_vowels == 0:\n                pig_latin.append(lst[1:])\n            else:\n                for k in range(1, count_vowels+1):\n                    pig_latin.append(lst[0:k])\n        return \" \".join(pig_latin)\n\n\nprint(Solution().solution(\"i cant speak pig latin\"))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('hello world') == 'ellohay dlrow ollehay'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\nq\\npea soup\\npotatoes\\n\") == \"nymble\", \"Should be nymble\"\n\nassert solution(\"2\\nq\\npancakes\\npea soup\\n\") == \"Anywhere is fine I guess\", \"Should be Anywhere is fine I guess\"",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n\"\"\") == \"nymble\"\n\nassert solution(\"\"\"\n2\n2\nq\npotatoes\nsalad\n\"\"\") == \"Anywhere is fine I guess\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\nq\\n') == 'anywhere is fine I guess'\nassert solution('2\\n2\\npotatoes\\n') == 'anywhere is fine I guess'\nassert solution('2\\n3\\nnymble\\n') == 'anywhere is fine I guess'\nassert solution('3\\n3\\nnymble\\n') == 'anywhere is fine I guess'\nassert solution('1\\n2\\nq\\n') == 'anywhere is fine I guess'\n",
        "num_ids_2": 47,
        "num_ids_4": 95
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('\\n'.join(['q', 'potatoes','salad', '', '', 'pancakes', 'punsch'])) == 'nymble'\nassert solution('\\n'.join(['nymble', 'nymble', 'nymble'])) == 'Anywhere is fine I guess'\n\n''''''\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([2,3,4,6,7,8]) == \"nymble\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nq\\npotatoes\\n') == 'nymble'\nassert solution('3\\nnymble\\npunsch\\n') == 'Anywhere is fine I guess'\nassert solution('6\\nnymble\\nnymble\\nnymble\\nnymble\\n') == 'Anywhere is fine I guess'",
        "num_ids_2": 45,
        "num_ids_4": 78
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n1\n4\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n'''):\n    print('Yay!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''3\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''2\n2\nq\npotatoes\nsalad\n3\n''') == 'Anywhere is fine I guess'\nassert solution('''3\n2\nq\npotatoes\nsalad\n3\n''') == 'Anywhere is fine I guess'\nassert solution('''3\n2\nq\npotatoes\nsalad\n3\n''') == 'Anywhere is fine I guess'\n\nfrom collections import defaultdict",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble', 'First'\nassert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess', 'Second'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"Anywhere is fine I guess\"\nassert solution(\"2\") == \"Anywhere is fine I guess\"\nassert solution(\"q\") == \"Anywhere is fine I guess\"\nassert solution(\"potatoes\") == \"nymble\"\nassert solution(\"salad\") == \"Anywhere is fine I guess\"\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 0 15''') == '3'\nassert solution('''5 1 12''') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '3'\nassert solution('1') == '1'\nassert solution('5 0 15') == '3'\nassert solution('5 0 12') == '2'\nassert solution('1 10 12') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('2 2 4') == '1'\nassert solution('10 5 10') == '4'\nassert solution('1 2 4') == '1'\nassert solution('1 2 8') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 0 20') == '4'\nassert solution('3 10 15') == '2'\nassert solution('3 10 20') == '4'\nassert solution('3 0 10') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('1 1 2') == '1'\nassert solution('0 2 4') == '1'\nassert solution('50 50 0') == '0'\nassert solution('1000 1000 0') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 0 15\nSample Input:\n10 2 3\nSample Output:\n2\n''') == '2', 'Should be 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 0 15') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 15\") == \"19\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '2\\n10\\n6\\n12'\n) == '8'\nassert solution(\n    '4\\n15\\n6\\n12'\n) == '19'\nassert solution(\n    '5\\n15\\n6\\n12'\n) == '19'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 15\") == \"19\"\nassert solution(\"-1 -1\") == \"0\"\nassert solution(\"0 -1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 15') == '19'\nassert solution('1 2') == '2'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 15') == '19'\nassert solution('5 4') == '7'\nassert solution('10 10') == '11'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10,15') == '19'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 15') == '19'\n\"\"\"\nimport sys\nimport re",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15 11') == '19'\nassert solution('-1 1') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 15\") == \"19\"\nassert solution(\"21 2\") == \"3\"\nassert solution(\"-11 15\") == \"-19\"\nassert solution(\"11 -15\") == \"5\"\nassert solution(\"-11 -15\") == \"-5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"13\"\n\nassert solution(\"10 11\") == \"10\"\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\"\n\"\"\"\n\nimport math\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North South South') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"North\") == \"No\"\nassert solution(\"North South\") == \"No\"",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''North\nSouth\nEast''') == 'Yes'\nassert solution('''North\nSouth\nWest''') == 'No'\nassert solution('''North\nSouth\nEast\nEast''') == 'Yes'\nassert solution('''North\nEast\nEast''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('North West South') == 'Yes'\nassert solution('North East South') == 'No'\nassert solution('North East East') == 'Yes'\nassert solution('North South East') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('North') == 'Yes'\nassert solution('North East') == 'Yes'\nassert solution('North South') == 'No'\nassert solution('South East') == 'No'\nassert solution('North West') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nEast North\nNorth East\nEast South\n''') == 'Yes'\nassert solution('''\nSouth East\nSouth South\nSouth East\n''') == 'No'\nassert solution('''\nSouth South\n''') == 'No'\n\n''''''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nEast South\nEast North\nEast West''') == 'Yes'\nassert solution('''\nEast South\nNorth West\nEast South''') == 'Yes'\nassert solution('''\nEast South\nNorth East\nEast North''') == 'No'\nassert solution('''\nEast South\nNorth West\nNorth East''') == 'No'\nassert solution('''\nEast South\nEast North\nEast South''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''North\nSouth\nEast''') == 'Yes', 'East'\nassert solution('''North\nSouth\nEast\nSouth''') == 'No', 'East'\nassert solution('''North\nNorth\nEast''') == 'Yes', 'East'\nassert solution('''North\nNorth\nNorth\nNorth''') == 'Yes', 'North'\nassert solution('''North\nNorth\nNorth\nNorth''') == 'Yes', 'North'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('South East West') == 'No'\nassert solution('West North East') == 'Yes'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 16\\npirpumsemoystoal\\n') =='marywasnosyagain'\nassert solution('5 3\\nagajogldxldpw\\n') == 'gludgjgldxlqpw'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n\"\n        \"atrewy\\n\"\n        \"trekzbxwwem\\n\"\n        \"bvzcyzc\\n\"\n        \"xyfkxr\\n\") == \"marywasnosyagain\"\nassert solution(\"3 5\\n\"\n        \"a\\n\"\n        \"b\\n\"\n        \"c\\n\"\n        \"d\\n\"\n        \"e\\n\") == \"mbd\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"marywasnosyagain\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 13\nalovemary\npatpatpat\npapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapapap",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdin.readline()[:-1]\n__import__(\"print\").pprint(__import__(\"json\").loads(__import__(\"sys\").stdin.read()))\n\"\"\"\nfrom datetime import datetime\nimport json",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal''') =='marywasnosyagain'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\n\nassert solution('''\n5 6\nagain\npirpumseoystoal\n''') == 'noepimouerseoystoal'\n\nassert solution('''\n5 9\nagain\npirpumseoystoal\n''') == 'amywasnosyal'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 16\\npirpumsemoystoal\") == \"marywasnosyagain\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n5\\nalso\\n') =='marywasnosyagain'\nassert solution('1\\n10\\nonceupon') == 'onceupon'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 16\\nagain\\npirpumsemoystoal') =='marywasnosyagain'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Even'\nassert solution('100') == 'Odd'\nassert solution('21') == 'Either'\n\"\"\"\nimport math\n\nN = int(input())",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Even'\nassert solution('5') == 'Odd'\nassert solution('9') == 'Either'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"Even\"\nassert solution(\"2\") == \"Odd\"\nassert solution(\"3\") == \"Either\"\nassert solution(\"4\") == \"Even\"\nassert solution(\"5\") == \"Odd\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Either'\nassert solution('5') == 'Odd'\nassert solution('10') == 'Odd'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Even'\nassert solution('3') == 'Odd'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\nassert solution('4') == 'Odd'\nassert solution('5') == 'Either'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Either'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Either'\nassert solution('3') == 'Odd'\nassert solution('4') == 'Odd'\nassert solution('5') == 'Odd'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Either'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Odd'\nassert solution('4') == 'Odd'\nassert solution('5') == 'Even'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Either\"\n\nassert solution(\"2\") == \"Odd\"\n\nassert solution(\"5\") == \"Odd\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3'\nassert solution('5\\n1\\n1\\n1\\n1\\n1') == '4'\nassert solution('5\\n5\\n0\\n0\\n0\\n0') == '1'\nassert solution('0\\n1\\n1\\n1\\n1\\n1') == '5'\nassert solution('0\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1') == '10'\n",
        "num_ids_2": 53,
        "num_ids_4": 103
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"3\") == \"1\"\nassert solution(\"34\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n6\\n1\\n12\\n5\\n\") == \"4\"\nassert solution(\"3\\n6\\n1\\n12\\n5\\n\") == \"2\"\nassert solution(\"3\\n6\\n1\\n15\\n5\\n\") == \"4\"\nassert solution(\"3\\n6\\n1\\n15\\n5\\n\") == \"3\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n314\n1\n5926\n5\n35897\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n314\n1\n5926\n5\n35897\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n314\n1\n5926\n5\n35897\n\"\"\"\n) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\\\n5\n314\n1\n5926\n5\n35897\n''') == '4'\nassert solution('''\\\n2\n12\n2\n36\n3\n''') == '2'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"6\") == \"2\"\nassert solution(\"50\") == \"4\"\nassert solution(\"30\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n4\") == \"3\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n1\") == \"2\"\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3\\n1\\n4\\n1\\n5'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n314\n1\n5926\n5\n35897''') == '3'\nassert solution('''5\n1\n2\n5\n5\n5''') == '1'\nassert solution('''5\n314\n1\n5926\n5\n35897\n5''') == '2'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9 5') == 'yes'\nassert solution('10 1') == 'no'\nassert solution('20 2') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9 5\\nc t\\ni r\\k p\\no c\\r o\\r t e\\r t f\\r u h\\rw p\\we we\\ncan the\\nwork people\\nit of\\nout the\") == \"yes\"\nassert solution(\"10 2\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\na\\na\\na\\na\\na\\na\\na\\na\\na\\na\\n\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\nac\\nab\\",
        "num_ids_2": 1333,
        "num_ids_4": 1333
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\na b\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n\nassert solution('''\na c\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\n\nassert solution('''\na t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n\nassert solution('''\na c\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9 5') == 'yes'\nassert solution('2 2') == 'no'\nassert solution('1 5') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    7 5\n    c t\n    i r\n    k p\n    o c\n    r o\n    t e\n    t f\n    u h\n    w p\n    we we\n    can the\n    work people\n    it of\n    out the\n    ''') == 'yes'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 5\\nc t\\ni r\\nk p\\no c\\nout the\\nwe we\\nthe work people\\nit of\\nout the\\nthe f\\nthe h') == 'no'\nassert solution('8 5\\nt c t\\n i r\\n k p\\n o c\\n r o\\nt e\\nt f\\n t h\\nt w p\\nwe we\\nthe work people\\nthe f\\nthe h') == 'yes'\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9 5\\nc t\\ni r\\nk p\\no c\\r e\\n t e\\nt f\\n u h\\nwe we\\ncan the\\nwork people\\nit of\\nout the\\n') == 'yes'\nassert solution('5 5\\nk p\\no c\\r e\\n t e\\nt f\\n u h\\nwe we\\ncan the\\nwork people\\nit of\\nout the\\n') == 'no'\n\n'''\n",
        "num_ids_2": 112,
        "num_ids_4": 112
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == 'no'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\nc t\ni r\nk p\no c\n''') == 'yes'\nassert solution('''\n5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'no'\nassert solution('''\n10\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\nSample Output:\nyes\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nno\nyes\nno\nno\nno\nno\nno\nyes\nno\nyes\n''') == 'yes'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"carrots?\\nbunnies\\n\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\", \"Should return 0 for empty input\"\nassert solution(\"carrots?\\nbunnies\\n\") == \"1\", \"Should return 1 for correct input\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('10 10') == '100'\n'''\n\nfrom collections import deque",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''carrots?\nbunnies''') == '1'\n\"\"\"\n\nn, p = map(int, input().split())\nproblem = 0\n\nfor i in range(n):\n    problem += int(input())\n\nprint(problem // p)\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"carrots?\") == \"1\"\nassert solution(\"bunnies\") == \"1\"\nassert solution(\"carrots?\\nbunnies\\n\") == \"2\"\nassert solution(\"carrots?\\nbunnies\\n\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 51
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1\\ncarrots?') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 1\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\") == \"1\"\nassert solution(\"2 2\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\") == \"2\"\n",
        "num_ids_2": 49,
        "num_ids_4": 134
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"carrots\\nbunnies\\n\") == \"1\"\nassert solution(\"carrots\\ncarrots\\nbunnies\\n\") == \"0\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1\\ncarrots?\\nbunnies') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,b4,f4,h4,a5,e5,b5,c6,d6,e6,f6,g6,h6,b7,c7,d7,e7,f7,h7,h6,a8,e8,b8,c8,d8,e8\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Rd1,Bb1,Qd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,Kd1,Nd1,Rd1,",
        "num_ids_2": 941,
        "num_ids_4": 941
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+''') == 'White: Kd1,Qc1,Rc1,Rh1,Bf1,Bd1,Ng1,a2,c2,d2,f2,g2,h2,a3,e4,b3,f4,h4,g4,e4,a5,b5,c5,d5,e5,f5,h5,g5,e5,a6,b6,c6,d6,e6,f6,h6,g6,e6,a7,b7,c7,d7,e7,f7,h7,g7,e7,a8,b8,c8,d8,e8,f8,h8,g8,e8,a9,b9,c9,d9,e9,f9,h9,g9,e9,a10,b10,c10,d10,e10,f10,h10,g10,e10,a11,b11,c11,d11,e11,f11,h11,g11,e11,a12,b12,c12,d12,e12,f12,h12,g12,e12,a13,b13,c13,d13,e13,f13,h13,g13,e13,a14,b14,c14,d14,e14,f14,h14,g14,e14,a15,b15,c15,d15,e15,f15,h15,g15,e15,a16,b16,c16,d16,e16,f16,h16,g16,e16,a17,b17,c17,d17,e17,f17,h17,g17,e17,a18,b18,c18,d18,e18,f18,h18,g18,e18,a19,b19,c19,d19,e19,f19,h19,g19,e19,a20,b20,c20,d20,e20,f20,h20,g20,e20,a21,b21,c21,d21,e21,f21,h21,g21,e21,a22,b22,c22,d22,e22,f22,h22,g",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,f4,h4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: r1,b1,q1,k1,n1,r2,n2,k2\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:p:|\") == \"White: p1,p1,p1,p1,p1,p1,p1,p1\"\nassert solution(\"|...|:::|.n.|:::|...|:::|...|:::|\") == \"White: n1,n2,n3,n4,n5,n6,n7,n8\"\nassert solution(\"|:::|...|:::|...|:::|...|:::|\") == \"White: a1,a2,a3,a4,a5,a6,a7,a8\"\n",
        "num_ids_2": 145,
        "num_ids_4": 263
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd2,Qc3,Nc6,Ra3,Rh8,Bc8,Ng8,Nc7,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd2,Qc3,Nc6,Ra3,Rh8,Bc8,Ng8,Nc7,a7,b7,c7,d7,e7,f7,h7,h6'\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd2,Qc3,Nc6,Ra3,Rh8,Bc8,Ng8,Nc7,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd2,Qc3,Nc6,Ra3,Rh8,Bc8,Ng8,Nc7,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kd2,Qc3,Nc6,Ra3,Rh8,Bc8,Ng8,Nc7,a7,b7,c7,d7,e7,f7,h7,h6'\nassert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\nprint(solution(''))\n\"\"\"\n",
        "num_ids_2": 111,
        "num_ids_4": 111
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,h6,e5,f5,g5,h4,e3,f3,g3,h2,a1,b2,c1,d1,e2,f1,g1,h1\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6,e6,f6,h5,e5,f5,g5,h4,e3,f3,g3,h2,a1,b2,c1,d1,e2,f1,g1,h1\\n\",\n    \"White: Rb1,Bb1,Nb1,Qb1,Nb2,Qb2,Nb3,Qb3,Nb4,Qb4,Nb5,Qb5,Nb6,Qb6,Nb7,Qb7,Nb8,Qb8\\nBlack: Rr1,Br1,Nr1,Qr1,Nr2,Qr2,Nr3,Qr3,Nr4,Qr4,Nr5,Qr5,Nr6,Qr6,Nr7,Qr7,Nr8,Qr8\\n\",\n)\n\nprint(\"Done\")",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kqn,RKb,KRb,QKn,KQn,Knn,QRb,QRb,KRb\\nBlack: KRq,QKq,QKq,QKq,KNn,KNn,KRn,KRn,KNn\"\nassert solution(\"|:p:|.p.|:p:|.p.|:p:|.p.|:p:|\") == \"White: KPp,KQp,KRp,KRPp,KRPp,KRPp,KRPp,KRPp,KRPp\\nBlack: KPp,KQp,KRp,KRPp,KRPp,KRPp,KRPp,KRPp,KRPp\"\nassert solution(\"|...|:::|.n.|:::|...|:::|\") == \"White: KN,KN,KN,KN,KN,KN,KN,KN,KN\\nBlack: KK,KN,KN,KN,KN,KN,KN,KN,KN\"\nassert solution(\"|:::|...|:::|...|:::|\") == \"White: KK,KK,KK,KK,KK,KK,KK,KK,KK\\nBlack: KK,KK,KK,KK,KK,KK,KK,KK,KK\"\n",
        "num_ids_2": 232,
        "num_ids_4": 408
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 3') == 'Your wish is granted!'\nassert solution('1 1') == 'Your wish is granted!'\nassert solution('2 4') == 'You will become a flying monkey!'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == 'Your wish is granted!'\nassert solution('4 7') == 'Your wish is granted!'\nassert solution('1 2') == 'You will become a flying monkey!'\nassert solution('3 3') == 'You will become a flying monkey!'\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3\\n') == 'Your wish is granted!'\nassert solution('10 4\\n') == 'You will become a flying monkey!'\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('1 2') == 'You will become a flying monkey!'\nassert solution('2 3') == 'You will become a flying monkey!'\nassert solution('3 4') == 'You will become a flying monkey!'\nassert solution('4 5') == 'You will become a flying monkey!'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"6 4\") == \"You will become a flying monkey!\"\nassert solution(\"4 8\") == \"You will become a flying monkey!\"\n\"\"\"\n\nn, k = map(int, input().split())\na = 1\nb = n\n\nwhile True:\n    if n % 2 == 0:\n        a = n//2\n        n = n//2\n        if k < a:\n            print('You will become a flying monkey!')\n            break\n        elif k == a:\n            print('Your wish is granted!')\n            break\n    else:\n        b = n//2\n        n = n//2\n        if k < b:\n            print('You will become a flying monkey!')\n            break\n        elif k == b:\n            print('Your wish is granted!')\n            break",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('3 3') == 'You will become a flying monkey!'\nassert solution('4 4') == 'Your wish is granted!'\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"8 2\") == \"You will become a flying monkey!\"\nassert solution(\"8 1\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"2 3\") == \"You will become a flying monkey!\"\nassert solution(\"1 1\") == \"You will become a flying monkey!\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Your wish is granted!'\nassert solution(input()) == 'You will become a flying monkey!'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"Your wish is granted!\"\nassert solution(\"5 8\") == \"You will become a flying monkey!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('10') == '4'\nassert solution('1000000') == '2'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '3'\nassert solution('16') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3.0000000000000001'\nassert solution('4') == '3.0000000000000001'\nassert solution('15') == '16.000000000000006'\n\"\"\"\nfrom math import sqrt, ceil",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == '16'\nassert solution('123') == '123'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('16') == '16'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == '16'\nassert solution('18') == '19'\nassert solution('20') == '21'\nassert solution('22') == '20'\nassert solution('22') == '21'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('16') == '16'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '16'\nassert solution('2') == '35'\nassert solution('3') == '28'\nassert solution('4') == '34'\nassert solution('5') == '43'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('16') == '16'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('16') == '16'\nassert solution('16') == '16'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n6 180\n45 30 55 20 80 20\n\"\"\") == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\\n\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input) == \"4\"\nassert solution([10, 5, 6, 4, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1",
        "num_ids_2": 1693,
        "num_ids_4": 1693
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4'\nassert solution('''4 4\n5 3 2 4 1\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nassert solution('''\n6 180\n40 30 55 20 80 20\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nassert solution('''\n10 100\n1 2 3 4 5 6 7 8 9 10\n''') == '10'\nassert solution('''\n5 3\n1 2 3 4 5\n1 2 3\n2 3 4\n''') == '2'\nassert solution('''\n5 2\n1 2 3 4\n2 1 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == '4'\nassert solution('5 2 3\\n3 1 6 8') == '1'\n'''\nimport itertools\nimport math\nn,T=map(int,input().split())\ntasks=list(map(int,input().split()))\ntotal=0\ntasks.sort()\ntasks=tuple(tasks)\nfor i in range(len(tasks)):\n    total+=math.ceil(T/tasks[i])\n    \nprint(int(total))\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5\\n10\\n3\") == \"79\"\nassert solution(\"3\\n10\\n2\\n2\\n10\") == \"13\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '28'\nassert solution('4') == '94'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"8\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '1', \"Wrong!\"\nassert solution('2\\n') == '1', \"Wrong!\"\nassert solution('3\\n') == '1', \"Wrong!\"\nassert solution('4\\n') == '1', \"Wrong!\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n40\n50\n60\n''') == '79'\n\nassert solution('''\n2\n30\n40\n''') == '80'\n\nassert solution('''\n1\n5\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2\n3\n4\n''') == \"79\"\nassert solution('''\n6\n5\n1\n8\n3\n4\n''') == \"79\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '1'\nassert solution('1\\n2\\n') == '3'\nassert solution('1\\n3\\n') == '4'\nassert solution('2\\n') == '2'\nassert solution('1\\n1\\n1\\n1\\n') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n3\\n3') == '79'\nassert solution('5\\n9\\n8\\n7\\n6') == '91'\nassert solution('10\\n8\\n7\\n6\\n5\\n4') == '105'\nassert solution('10\\n8\\n7\\n6\\n5\\n4\\n3') == '108'\nassert solution('10\\n8\\n7\\n6\\n5\\n4\\n3\\n2') == '108'\n",
        "num_ids_2": 41,
        "num_ids_4": 94
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3 4\") == \"2 3 0\"\nassert solution(\"5 3 3 5\") == \"2 3 0\"\nassert solution(\"3 3 3 5\") == \"2 3 0\"\nassert solution(\"4 4 3 6\") == \"0 0 0\"\nassert solution(\"4 4 3 3\") == \"0 0 0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 3 4\") == \"2 3 0\"\nassert solution(\"6 4 2 7\") == \"2 3 1 0\"\nassert solution(\"5 5 5 5\") == \"0 1 2 3\"\nassert solution(\"6 6 6 6\") == \"0 1 2 3\"\nassert solution(\"5 5 5 5\") == \"1 2 3 4\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3 3 4\n0 1 4\n\"\"\") == \"2 3 0\"\n\nassert solution(\"\"\"\n3 2 3 4\n0 1 4\n\"\"\") == \"impossible\"\n\nassert solution(\"\"\"\n5 3 2 3\n0 1 4\n\"\"\") == \"3 2 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 3 4\n0 1 4\n''') == '2 3 0'\nassert solution('''\n3 3 3 4\n0 1 2\n''') == '2 3 0'\nassert solution('''\n5 3 3 4\n2 1 2\n''') == '2 3 0'\nassert solution('''\n5 3 3 4\n2 1 3\n''') == '2 3 0'\nassert solution('''\n5 3 3 4\n1 2 3 4\n''') == '2 3 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0'\nassert solution('1 10 10 10\\n1 10 1 9') == '0 0 0 1'\nassert solution('8 5 2 8\\n0 1 1 1 1 1 1 1 1') == '1 1 1 1 1 1 1 1'\n",
        "num_ids_2": 42,
        "num_ids_4": 73
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\n\n\"\"\"\n\nimport numpy as np\nimport random\nfrom collections import defaultdict",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 3 2\n0 1\n3 0\n0 1\n2 0\n1 1''') == '2 3 1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 3 3 4\n0 1 4\n''') == '2 3 0'\n\nassert solution('''\n10 10 10 10\n1 1 1 1 1\n1 2 2 2 2\n1 3 3 3 3\n1 4 4 4 4\n1 5 5 5 5\n1 6 6 6 6\n1 7 7 7 7\n1 8 8 8 8\n1 9 9 9 9\n1 10 10 10 10\n''') == '1 9 9 9 9 10 10 10 10 10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 3 4\\n0 1 4\") == \"2 3 0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 3 4') == \"2 3 0\"\nassert solution('4 1 3 4') == \"0 2 0\"\nassert solution('1 5 2 2') == \"4 4 0\"\nassert solution('0 0 0 3') == \"0 0 0\"\nassert solution('1 2 3 4') == \"0 0 0\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '1 0 0 0 0 1'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('6 0 0 0 1 1 1 1 1') == '-1 -1 -1 -1 -1 -1 -1 -1 -1'\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('5 3 2 6 7') == '5 0 0 0 1 0'\nassert solution('0') == '0 0 0 0 0 0'\nassert solution('1') == '1 0 0 0 0 0'\nassert solution('2') == '2 0 0 0 0 0'\n",
        "num_ids_2": 39,
        "num_ids_4": 69
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1', solution('0 1 2 2 2 7')\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 2 2 2 7 5') == '0 0 0 0 0 1 3'\nassert solution('0 1 2 2 2 7 5 -4') == '0 0 0 0 0 0 3 4'\nassert solution('0 1 2 2 2 7 5 -4 -6') == '0 0 0 0 0 0 1 3 4 5'\n",
        "num_ids_2": 42,
        "num_ids_4": 96
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"1\n12\n13\n\"\"\") == \"1.3334\"\n\nassert solution(\"\"\"100\n123\n456\n789\n\n10\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123\n123",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"2\n123456 0.6666\nqwerty 0.3334\"\"\") == \"1.3334\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3\n12345 0.8333\nasd 0.05\nqwerty 0.3334\nSample Output:\n1.3334\n\"\"\") == \"1.3334\"\nassert solution(\"\"\"\n4\n123456 0.6667\nqwerty 0.3334\nasd 0.3334\n12345 0.6666\nSample Output:\n3.8332\n\"\"\") == \"3.8332\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1.3334'\nassert solution('123456 0.6666') == '1.3334'\nassert solution('qwerty 0.3334') == '1.3334'\n",
        "num_ids_2": 30,
        "num_ids_4": 49
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1.3334\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n123456 0.6666\nqwerty 0.3334\nasdfgh 0.1234\n''') == '1.3334'\nassert solution('''\n2\n123456 0.6666\nqwerty 0.3333\nasdfgh 0.1234\n''') == '1.3333'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"2\n123456 0.6666\nqwerty 0.3334\"\"\") == '1.3334'\nassert solution(\"\"\"\n4\nabcde\n1.0\njklmn\n2.0\nxyz\n\"\"\") == '2.0'\nassert solution(\"\"\"\n5\ngeeksforgeeks\n1.0\nxyz\n3.0\nasdf\n2.0\n\"\"\") == '1.0'\n",
        "num_ids_2": 11,
        "num_ids_4": 16
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\n\nassert solution('3\\n123456 0.6666\\nqwerty 0.3333\\npass 0.3334\\nSample Output:') == '1.3334'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join(['123456 0.6666', 'qwerty 0.3334'])) == '1.3334'\nassert solution('\\n'.join(['123456 0.6666', 'qwerty 0.3334'])) == '1.3334'\nassert solution('\\n'.join(['123456 0.6666', 'qwerty 0.3334'])) == '1.3334'\nassert solution('\\n'.join(['123456 0.6666', 'qwerty 0.3334'])) == '1.3334'\nassert solution('\\n'.join(['123456 0.6666', 'qwerty 0.3334'])) == '1.3334'\n",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n1\n4''') == '1'\nassert solution('''1\n1\n1\n1\n2''') == '2'\nassert solution('''2\n5\n2\n3\n3\n3''') == '1'\nassert solution('''8\n5\n8\n7\n2\n1\n2\n1\n2''') == '2'\nassert solution('''12\n10\n13\n16\n18\n17\n8\n5\n4\n3''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1 2') == '1'\nassert solution('3 1') == '2'\nassert solution('1 1 1') == '2'\nassert solution('6 1') == '5'\nassert solution('6 2') == '2'\n\"\"\"\n\nimport math\nfrom itertools import combinations\n\nn, p = map(int, input().split())\nx = list(map(int, input().split()))\nx.sort()\nx = list(set(x))",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 1') == '1'\n\nassert solution('2 3') == '3'\n\nassert solution('2 5') == '5'\n\nassert solution('2 7') == '2'\n\nassert solution('10 10') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n2\n3\n''') == '2'\nassert solution('''\n1\n2\n4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\\n1 2 4\") == \"1\"\nassert solution(\"3 1\\n1 2 3 4\") == \"1\"\nassert solution(\"3 1\\n1 2 3\\n1 2 3 4\") == \"1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('3 1') == '1'\nassert solution('1 2 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\\n1 2\") == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n2\n4''') == '1'\nassert solution('''3\n1\n2\n4''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 1, 1]) == \"1\"\nassert solution([3, 3, 2]) == \"0\"\nassert solution([3, 3, 3]) == \"1\"\nassert solution([2, 1, 1]) == \"0\"\nassert solution([2, 2, 2]) == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''27\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == \\\n'''G:                                                            \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                           \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == '\\nG:\\nF\\nE:    \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  *        \\ng:\\nF:\\nE:\\nD:\\nC:\\nB:\\nA:'\n",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'G: \\nF: \\nE: \\nD: \\nC: \\nB: \\nA: \\ng: \\nf: \\ne: \\nd: \\nc: \\nb: \\n'\nassert solution('27') == 'G:      *\\nF: ------------------------------------\\nE:     *\\nD: ------------------------------------\\nC: * * *\\nB: ---------------------------\\nA:      *\\ng: ------------------------------------\\nf:                                        \\ne: ------------------------------------\\nd:                                        \\nc:                                        \\nb:                                        \\na: ------------------------------------\\n'\n",
        "num_ids_2": 145,
        "num_ids_4": 145
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"27\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\") == \"\"\"G:\nF: --------------------------------\nE:\nD: ----------------*\nC: * *\nB:\nA:\ng:\nf:\ne:\nd:\nc:\nb:\na:\nG: --------------------------------\nF: ------------*------------\nE:\nD:\nC:\nB:\nA:\n\"\"\".strip()\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('27') == 'G:    \\nF:    \\nE:    \\nD:    \\nC:    \\nB:    \\nA:    \\ng:    \\nf:    \\ne:    \\nd:    \\nc:    \\nb:    \\na:    \\n'\n\n\"\"\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"\"\"\nG:\nF:\nE:\nD:\nC:\nB:\nA:\ng:\nf:\ne:\nd:\nc:\nb:\na:\n\"\"\"[:-1]\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == \"C:           \\nB:           \\nA:           \\nG:           \\nF: -------------------------------------*--------------------\\nE:       *   *\\nD: ----*-------**-----*-------------*-------*----------------\\n\"\nassert solution('12') == \"C:           \\nB:           \\nA:           \\nG:           \\nF:           *     *\\nE:           *\\nD:           *\\nC:           *\\nB:           \\nA:           \\nG:           \\nF: -------------------------------------*--------------------\\nE:       *   *\\nD: ----*-------**-----*-------------*-------*----------------\\n\"",
        "num_ids_2": 161,
        "num_ids_4": 161
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"\"\"\nG:                                    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                   \nc:                                                   \nb:                                                   \na: ----------------------------------------------------------\n\n\"\"\"\n\nassert solution(\"2\") == \"\"\"\nG:\nF:\nE:\nD:\nC:\nB:\nA:\ng:\nf:\ne:\nd:\nc:\nb:\na:\n\"\"\"\n\nassert solution(\"\") == \"\"\"\nG:\nF:\nE:\nD:\nC:\nB:\nA:\n\"\"\"\n\nassert solution(\"3\") == \"\"\"\nG:\nF:\nE:\nD:\nC:\nB:\nA:\ng:\nf:\ne:\nd:\nc:\nb:\na:\n\"\"\"\n\nassert solution(\"4\") == \"\"\"\nG:\nF:\nE:\nD:\nC:\nB:\nA:\ng:\nf:\ne:\nd:\nc:\nb:\na:\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 31
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('27') == '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1204,
        "num_ids_4": 1204
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n18\nC C D E D C E D E D C E D E D C E D D D D C E D C\n''') == '''\nG:                                    \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                           \nc:                                                           \nb:                                                           \na: ----------------------------------------------------------'''\n\nassert solution('''\n7\nC C D D C C E E\n''') == '''\nG:      \nF:       \nE:       \nD:       \nC:       \nB:       \nA:       '''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n1 1 1\n2\n2\n1''') == 'possible'\nassert solution('''4\n1\n2\n1\n3\n2''') == 'impossible'\nassert solution('''5\n1\n2\n1\n3\n2\n1''') == 'impossible'\nassert solution('''6\n1\n2\n1\n3\n2\n1\n3''') == 'impossible'\nassert solution('''9\n1\n2\n1\n3\n2\n1\n3\n2\n1\n3\n2\n1\n2''') == 'possible'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1\\n1 2 2\\n1 1 1\") == \"possible\"\nassert solution(\"2 1 1\\n1 2 1\\n1 2 1\") == \"impossible\"\nprint('You passed all the tests! Congrats!!!')",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"3\\n2 3 2\") == \"impossible\"\nassert solution(\"3\\n3 3 3\") == \"impossible\"\nassert solution(\"3\\n3 3 4\") == \"impossible\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"possible\"\nassert solution(\"1 1 1\") == \"impossible\"\nassert solution(\"5 4 2\") == \"impossible\"\nassert solution(\"1 1 1 1\") == \"impossible\"\nassert solution(\"10 10 10\") == \"impossible\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 1') == 'possible'\nassert solution('100\\n1 1 2\\n1 1 2') == 'impossible'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'impossible'\nassert solution('3') == 'impossible'\nassert solution('4') == 'impossible'\nassert solution('5') == 'possible'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'possible', f'actual: {solution('')}'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'possible'\nassert solution('1') == 'impossible'\nassert solution('4') == 'impossible'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n1') == 'possible'\nassert solution('1\\n2\\n2') == 'impossible'\nassert solution('1\\n1\\n1') == 'impossible'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 1 1\") == \"possible\"\nassert solution(\"3\\n2 5 7\") == \"impossible\"\nassert solution(\"3\\n1 2 3\") == \"possible\"\nassert solution(\"3\\n2 3 4\") == \"impossible\"\nassert solution(\"3\\n1 1 1\\n2 2 2\\n3 3 3\") == \"possible\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2 3\\n4 5\\n') == '2'\nassert solution('10\\n4 3 3 2 1 2 2 1 1 3\\n') == '3'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 2\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"4\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '3'\nassert solution('4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('1') == '1'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n3 4 1 4 1 2 3 2 1 3\") == \"3\"\nassert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\") == \"9\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"9\\n2 1 1 2 1 1 1 1 1\") == \"2\"",
        "num_ids_2": 44,
        "num_ids_4": 78
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '4', f'Solution is not correct. Received: {solution(stdin)}'\nassert solution('''\n2\n3\n1\n2\n''') == '3', f'Solution is not correct. Received: {solution(stdin)}'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n3\\n2\\n1 2\\n2 2\\n1 2\\n3 1\\n3 1\\n3 2\\n') == '3'\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\") == \"3\"\nassert solution(\"4 3 3 2 1 2 2 1 1 3\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3 3 2 1 2 2 1 1 3\n''') == '3'\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '35.54'\nassert solution('10') == '36.0'\nassert solution('2') == '2.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"35.54\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"35.54\"\nassert solution(\"4\") == \"ASHMEADE\"\nassert solution(\"6 2\") == \"ASHMEADE\"\nassert solution(\"6 2 3\") == \"ASHMEADE\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93') == '35.54'\nassert solution('4\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93') == '35.54'\nassert solution('5\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92') == '35.54'\n",
        "num_ids_2": 110,
        "num_ids_4": 175
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\nASHMEADE 9.9 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92') == \"35.54\"\nassert solution('6\\nASHMEADE 9.9 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == \"35.54\"",
        "num_ids_2": 131,
        "num_ids_4": 131
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61') == '35.54CARTER'",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    1 2\n    2 4\n    5 6\n    ''') == '2'\nassert solution('''\n    3\n    1 1\n    2 2\n    3 3\n    ''') == '1'\nassert solution('''\n    3\n    1 2\n    2 4\n    3 3\n    ''') == '1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('2 1') == '2'\nassert solution('3') == '1'\nassert solution('1 2 1') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('8') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 4') == '2'\nassert solution('5 6') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2 3\\n2 4\\n2 4 5\\n2 4 5 5') == '1'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n3 5\\n3 5 5\\n3 5 5 5') == '2'\nassert solution('1\\n1 2\\n2 3\\n3 4\\n3 5\\n3 5 5\\n3 5 5 5') == '3'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n3 5\\n3 5 5\\n3 5 5 5') == '3'\nassert solution('1\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2\\n2 2') == '3'\n\"\"\"\n",
        "num_ids_2": 66,
        "num_ids_4": 140
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '3\\n1 2\\n2 4\\n5 6\\n') == '2'\nassert solution(\n    '3\\n1 2\\n5 4\\n3 6\\n') == '2'\nassert solution(\n    '3\\n1 2\\n2 4\\n5 6\\n') == '1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''10\n1 3\n2 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n''') == '1'\nassert solution('''100\n1 2\n2 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100''') == '2'\nassert solution('''100\n1 2\n2 4\n5 6\n7 8\n9 10\n11 12\n13 14\n15 16\n17 18\n19 20\n21 22\n23 24\n25 26\n27 28\n29 30\n31 32\n33 34\n35 36\n37 38\n39 40\n41 42\n43 44\n45 46\n47 48\n49 50\n51 52\n53 54\n55 56\n57 58\n59 60\n61 62\n63 64\n65 66\n67 68\n69 70\n71 72\n73 74\n75 76\n77 78\n79 80\n81 82\n83 84\n85 86\n87 88\n89 90\n91 92\n93 94\n95 96\n97 98\n99 100''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n2 4\n5 6\n''') == '2'\nassert solution('''\n5 4\n1 3\n2 3\n4 1\n3 2\n''') == '4'\nassert solution('''\n1 2\n2 3\n3 1\n4 4\n5 5\n''') == '3'\nassert solution('''\n5 1\n4 3\n1 2\n3 2\n4 4\n3 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '2'\nassert solution('5 6') == '2'\nassert solution('1 2 3 5 6') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.\"\n\n=======\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"howdy\") == \"howdy\"\nassert solution(\"heyy\") == \"hey\"\n\nn = input()\nprint(n)",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"hey\") == \"heey\"\nprint(solution(\"hey\"))\nprint(solution(\"heeeeeeeeeeeeeeeeeeeeee\"))\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hey') == 'heey'\nassert solution('heyya') == 'heeyyay'\nassert solution('hie') == 'hie'\nassert solution('hieye') == 'hieyehieye'",
        "num_ids_2": 25,
        "num_ids_4": 54
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('hey') == 'heeey'\nassert solution('heeeye') == 'heeeeey'\nassert solution('huuuuuuy') == 'huuuuuyy'\nassert solution('heeeeey') == 'heeeeeyy'\nassert solution('heeeeee') == 'heeeeee'\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"heheheheheheheheh\") == \"heheheheheheheheh\"\nprint(solution(input()))\n'''\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"Heey\") == \"heey\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"hey\") == \"heye\"\nassert solution(\"cute\") == \"cute\"\nassert solution(\"goodbye\") == \"goodbye\"\nassert solution(\"GoodBye\") == \"GoodBye\"\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('hey') == 'heeey'\nassert solution('hiee') == 'hiiye'\nassert solution('hehie') == 'hehehe'\nassert solution('hehieh') == 'heheehe'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"hee\"\nassert solution(\"eee\") == \"hee\"\nassert solution(\"heee\") == \"hee\"\nassert solution(\"hee\") == \"hee\"\nassert solution(\"eey\") == \"hee\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0 1 1 2'\nassert solution('4') == '0 1 1 2 3'\nassert solution('5') == '0 1 1 2 3 4'\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1 2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n\"\"\"[1:]\n\nassert solution(\"\"\"\n7\n0 1 1 2 1 1 2\n1 0 2 3 3 3\n1 2 0 3 3\n2 3 1 3 2\n2 3 2 2 2\n3 3 3 1 1\n3 3 3 1 1\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n\"\"\"[1:]\n\nassert solution(\"\"\"\n1\n1\n1\n\"\"\") == \"\"\"\n1\n1\n1\n\"\"\"[1:]\n\nassert solution(\"\"\"\n3\n0 1 1\n1 0 2\n1 2 0\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n\"\"\"[1:]\n\nassert solution(\"\"\"\n5\n0 1 1 1 1\n1 0 2 2 2\n1 2 0 3 3\n1 3 1 4 4\n1 4 1 3 3\n\"\"\") == \"\"\"\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n\"\"\"[1:]",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '''\n1 2\n1 3\n1 4\n'''\n\nassert solution('''\n5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '''\n1 2\n1 3\n1 4\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n4 4\\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n') == '1 2\\n1 3\\n1 4\\n'\nassert solution('3\\n0 1 2\\n1 0 3\\n1 2 3\\n2 3\\n') == '1 2\\n1 3\\n'\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('EWPGAJRBEWPGAJRB') == 'ABCD'\nassert solution('EWPGAJRBEWPGAJRBEWPGAJRBEWPGAJRB') == 'ABCD'\n''')\n",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('SEDWQALR') == 'ASOEIDHWQAR'\nassert solution('EWPGAJRBGSABHQWI') == 'ABCD'\nassert solution('TBCDYBVQGMRPHJ') == 'SBDTUJKVPGALGOA'\n\nfor i in range(1, 15):\n    print(i, solution(str(i)))\n",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''EWPGAJRB''') == 'ABCD'\nassert solution('''EQWPGAJRB''') == 'ABCD'\nassert solution('''EQWPGAJRB''') == 'ABCD'\n''')\n",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('EFGHIJKLMNOPQRSTUVWXYZ') == 'AZYXWVU'\n\n'''",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nEWPGAJRB\n''') == 'ABCD'\nassert solution('''\nABGCAJRB\n''') == 'ABCDABCAJRB'\nassert solution('''\nACADABGCAJRB\n''') == 'ACADABCABGCAJRB'\n''') == 'ABCD'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    'EWPGAJRB'\n) == 'ABCD'\n\nimport math",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abc') == 'bca'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abc') == '2'\nassert solution('aba') == '1'\nassert solution('bba') == '0'\nassert solution('baa') == '1'\nassert solution('aaab') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abc\") == \"a\"\nassert solution(\"bc\") == \"b\"\nassert solution(\"c\") == \"c\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abc\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"aba\") == \"ba\"\nassert solution(\"bbaa\") == \"aa\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"abc\") == \"a\"\nassert solution(\"aab\") == \"b\"\nassert solution(\"aac\") == \"a\"\nassert solution(\"aad\") == \"b\"\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abc') == 'ab'\nassert solution('abcdefg') == 'acd'\nassert solution('aba') == 'ab'\nassert solution('abcd') == 'abcd'\nassert solution('abbbcccddddeeff') == 'bbcd'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"abc\"\n) == \"a\"\n\nassert solution(\n    \"aac\"\n) == \"a\"\n\nassert solution(\n    \"aaaa\"\n) == \"a\"\n\nassert solution(\n    \"ababcdcd\"\n) == \"a\"\n\nassert solution(\n    \"ababcdcdababcdcd\"\n) == \"d\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abc') == 'a'\nassert solution('def') == 'f'\nassert solution('ghij') == 'g'\nassert solution('abcba') == 'a'\nassert solution('abbcb') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abccccdde\") == \"a\"\nassert solution(\"aabbccddee\") == \"a\"\nassert solution(\"\") == \"a\"\n",
        "num_ids_2": 28,
        "num_ids_4": 37
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'no'\nassert solution('aaahh') == 'yes'\nassert solution('aaaaahh') == 'yes'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"no\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"aaah\naaaaah\"\"\") == \"go\"\nassert solution(r\"\"\"aaah\naaaaah\na\naaah\naaaaah\"\"\") == \"no\"\n\nimport sys\nfrom io import StringIO\nimport unittest\n\n\nclass TestClass(unittest.TestCase):\n    def assertIO(self, input, output):\n        stdout, stdin = sys.stdout, sys.stdin\n        sys.stdout, sys.stdin = StringIO(), StringIO(input)\n        resolve()\n        sys.stdout.seek(0)\n        out = sys.stdout.read()[:-1]\n        sys.stdout, sys.stdin = stdout, stdin\n        print('------------')\n        print(out)\n        print('------------')\n        self.assertEqual(out, output)\n\n    def test_\u5165\u529b\u4f8b_1(self):\n        input = \"\"\"aaah\naaaaah\"\"\"\n        output = \"\"\"no\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_2(self):\n        input = \"\"\"aaah\naaaaah\na\naaah\naaaaah\"\"\"\n        output = \"\"\"no\"\"\"\n        self.assertIO(input, output)\n\n    def test_\u5165\u529b\u4f8b_3(self):\n        input = \"\"\"a\naaaaah\"\"\"\n        output = \"\"\"go\"\"\"\n        self.",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('h') == 'no'\nassert solution('aa') == 'no'\nassert solution('a') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaah\\naaaaah\") == \"go\"\nassert solution(\"aaaaah\\naaaah\") == \"no\"\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''aaah\naaaaah''') == 'go'\nassert solution('''aaah\naaah''') == 'no'\n\n- Test Case 2\nIn the second test case, the doctor requires \u201caaah\u201d, but he can\u2019t say that quickly enough. The doctor needs to tell him that \u201caaah\u201d for a bit, then he can tell him that \u201caaah\u201d again, but he can\u2019t tell how long he will have to waste in doing that.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like to have.\n\nIf the doctor doesn\u2019t tell you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because you will waste an hour with the \u201caaah\u201d instead of the \u201caaah\u201d he asked you to say.\n\nIf the doctor tells you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because the doctor already has to waste an hour with the \u201caaah\u201d.\n\nIf the doctor says that he wants the \u201caaah\u201d to be the \u201caaah\u201d, you should tell him \u201cgo\u201d.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like to have.\n\nIf the doctor doesn\u2019t tell you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because you will waste an hour with the \u201caaah\u201d instead of the \u201caaah\u201d he asked you to say.\n\nIf the doctor tells you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because the doctor already has to waste an hour with the \u201caaah\u201d.\n\nIf the doctor says that he wants the \u201caaah\u201d to be the \u201caaah\u201d, you should tell him \u201cgo\u201d.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like to have.\n\nIf the doctor doesn\u2019t tell you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because you will waste an hour with the \u201caaah\u201d instead of the \u201caaah\u201d he asked you to say.\n\nIf the doctor tells you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because the doctor already has to waste an hour with the \u201caaah\u201d.\n\nIf the doctor says that he wants the \u201caaah\u201d to be the \u201caaah\u201d, you should tell him \u201cgo\u201d.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like to have.\n\nIf the doctor doesn\u2019t tell you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because you will waste an hour with the \u201caaah\u201d instead of the \u201caaah\u201d he asked you to say.\n\nIf the doctor tells you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because the doctor already has to waste an hour with the \u201caaah\u201d.\n\nIf the doctor says that he wants the \u201caaah\u201d to be the \u201caaah\u201d, you should tell him \u201cgo\u201d.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like to have.\n\nIf the doctor doesn\u2019t tell you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because you will waste an hour with the \u201caaah\u201d instead of the \u201caaah\u201d he asked you to say.\n\nIf the doctor tells you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because the doctor already has to waste an hour with the \u201caaah\u201d.\n\nIf the doctor says that he wants the \u201caaah\u201d to be the \u201caaah\u201d, you should tell him \u201cgo\u201d.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like to have.\n\nIf the doctor doesn\u2019t tell you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because you will waste an hour with the \u201caaah\u201d instead of the \u201caaah\u201d he asked you to say.\n\nIf the doctor tells you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because the doctor already has to waste an hour with the \u201caaah\u201d.\n\nIf the doctor says that he wants the \u201caaah\u201d to be the \u201caaah\u201d, you should tell him \u201cgo\u201d.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like to have.\n\nIf the doctor doesn\u2019t tell you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because you will waste an hour with the \u201caaah\u201d instead of the \u201caaah\u201d he asked you to say.\n\nIf the doctor tells you that he wants the \u201caaah\u201d as the \u201caaah\u201d, you should tell him \u201cno\u201d, because the doctor already has to waste an hour with the \u201caaah\u201d.\n\nIf the doctor says that he wants the \u201caaah\u201d to be the \u201caaah\u201d, you should tell him \u201cgo\u201d.\n\nThe doctor then says \u201chh\u201d.\n\nThe second doctor asks you whether he wants \u201chh\u201d as the \u201caaah\u201d or the \u201caaah\u201d he would like",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\n\"\"\"\n\nstdin = input()\nstdout = input()\n\nassert stdout == 'go' or stdout == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'go'\nassert solution('aaahhhhhhhhh') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"B2A1A2A2A1A2A2A2\") == \"B\"\nassert solution(\"A1A2A2A1A2A2A2\") == \"B\"\nassert solution(\"A2A2A2A1A2A2A2\") == \"B\"\n",
        "num_ids_2": 50,
        "num_ids_4": 96
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A2B1A2A1A1A2A2A2\") == \"A\"\nassert solution(\"B2B1A2B1A2A2A2\") == \"B\"\n",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A1A1A2A2A1A2A2\") == \"B\"\nassert solution(\"A2A2A2A2A2A2A2\") == \"A\"\n",
        "num_ids_2": 48,
        "num_ids_4": 71
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    'A2B1A2B2A1A2A2A2') == 'A'\nassert solution(\n    'B2A1A2A2A2A2A2A2') == 'B'\nassert solution(\n
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n\nprint(solution('A2B1A2B2A1A2A2A2'))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'B'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B2B1A2A2A2A2B1A2B1A2A2A2') == 'B'\nassert solution('A2A2A2A2A2A2A2A2A2A2A2A2') == 'B'\n\n'''",
        "num_ids_2": 58,
        "num_ids_4": 91
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"2 5\\n1 5 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"2 5\\n1 2 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"2 5\\n1 2 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\nassert solution(\"2 5\\n1 2 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15\") == \"21\"\n",
        "num_ids_2": 96,
        "num_ids_4": 192
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"6 5\\n\"\n    \"1 6 20 4\\n\"\n    \"5 3 2 4\\n\"\n    \"1 2 2\\n\"\n    \"2 3 8\\n\"\n    \"2 4 3\\n\"\n    \"3 6 10\\n\"\n    \"3 5 15\\n\") == \"21\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('5 5\\n1 6 20 4\\n5 3 2 4\\n1 2 2\\n2 3 8\\n2 4 3\\n3 6 10\\n3 5 15') == '21'\nassert solution('3 4\\n1 2\\n1 3\\n1 4') == '6'\nassert solution('2 2\\n1 2\\n2 2') == '6'\nassert solution('3 2\\n1 2\\n2 2') == '6'\n",
        "num_ids_2": 96,
        "num_ids_4": 138
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n1 2 5\n2 3 5\n2 4 5\n\"\"\") == \"22\"\n\nassert solution(\"\"\"\n6\n2 2 5\n2 4 3\n1 2 2\n2 4 5\n2 6 3\n2 5 2\n3 4 4\n3 6 6\n\"\"\") == \"21\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') == '0'\nassert solution('1 2 2') == '1'\nassert solution('2 3 4') == '1'\nassert solution('2 4 2') == '1'\nassert solution('2 4 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\nassert solution('''\n10 1\n20 3\n1 1\n2 2\n1 1\n1 2\n''') == '16'\nassert solution('''\n10 2\n2 3\n3 1\n2 4\n2 2\n''') == '14'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 5') == '21'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"E\") == \"H3e2l3o1W1o3r4l2d1!\"\nassert solution(\"D\") == \"HHHeellloWooorrrrlld!!\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''E H3e2l3o1W1o3r4l2d1!2''') == 'HHHeellloWooorrrrlld!!'\nprint(solution('''D H3e2l3o1W1o3r4l2d1!2'''))\n'''",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"E H3e2l3o1W1o3r4l2d1!\") == \"HHHeellloWooorrrrlld!!\", \"First!\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!\") == \"HHHeellloWooorrrrlld!!\", \"Second!\"",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''E HHHeellloWooorrrrlld!!''') == 'H3e2l3o1W1o3r4l2d1!2', 'First'",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution
        "num_ids_2": 1537,
        "num_ids_4": 1537
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D E') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\\n\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\\n\") == \"HHHeellloWooorrrrlld!!\"\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"E Hello World. I am here. I'm here. I'll be here. I'm back. I'm always here. And here is a message. I'm back. I'm always here. And here is another. I'm back. And here is even more. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I'm back. And here is another. I'm back. And here is still more. I",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"E H3e2l3o1W1o3r4l2d1!\") == \"HHHeellloWooorrrrlld!!\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"H3e2l3o1W1o3r4l2d1!\"\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == 'Bob'\nassert solution('4') == 'Alice'\nassert solution('1000000000000') == 'Bob'\nassert solution('1000000000') == 'Alice'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n''') == 'Bob'\n\nassert solution('''\n100\n''') == 'Alice'\n\nassert solution('''\n4\n''') == 'Bob'\n\nassert solution('''\n1000\n''') == 'Alice'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n\n''') == 'Alice'\nassert solution('''\n2\n\n''') == 'Bob'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n') == 'Alice'\nassert solution('3\\n') == 'Bob'\nassert solution('4\\n') == 'Alice'\nassert solution('5\\n') == 'Bob'\nassert solution('6\\n') == 'Bob'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2\"\n) == \"Alice\"\nassert solution(\n    \"5\"\n) == \"Bob\"\nassert solution(\n    \"10\"\n) == \"Bob\"\nassert solution(\n    \"3\"\n) == \"Bob\"\nassert solution(\n    \"4\"\n) == \"Alice\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n''') == 'Alice'\nassert solution('''1\n''') == 'Alice'\nassert solution('''2\n''') == 'Alice'\nassert solution('''2\n1\n''') == 'Bob'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Alice'\nassert solution('8') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Alice'\nassert solution(input()) == '1'\n\n\n--YOUR JUDGE SOLUTION HERE",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 1 2\") == \"1+1=2\"\nassert solution(\"2 1 1\") == \"2+1=1\"\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 3 -3\") == \"5-3=0\"\nassert solution(\"5 3 5\") == \"5+3=5\"\nassert solution(\"5 3 5 -3\") == \"5-3=4\"\nassert solution(\"5 3 5 5\") == \"5+3=6\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"4 5 6\") == \"4+5=9\"\nassert solution(\"7 8 9\") == \"7+8=11\"\n\"\"\"\nimport re",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1 + 2 = 3\"\nassert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"5 4 3\") == \"5+4=9\"\nassert solution(\"1 1 1\") == \"1+1+1=2\"\nassert solution(\"10 10 10\") == \"10+10=20\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3 8\n\n5+3=8''') == '5+3=8'\nassert solution('''5 3 2\n\n5+3=7''') == '5+3=8'\n\n''')\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('5 5 8') == '5-5=0'\nassert solution('5 3 8') == '5+3=8'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('1 2 3') == '1+2=3'\nassert solution('10 3 6') == '10+3=13'\nassert solution('1 2 3') == '1+2=3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10 5 2\n''') == '10+5=7'\nassert solution('''\n5 3 5\n''') == '5*5=25'\nassert solution('''\n2 3 5\n''') == '2+3=5'\nassert solution('''\n1 2 3\n''') == '1*2*3=6'\nassert solution('''\n1 2\n''') == '1*2=2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"-1 -2 3\") == \"-1-2=3\"\nassert solution(\"2 4 5\") == \"2+4=5\"\nassert solution(\"7 5 3\") == \"7+5=5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"YES\"\nassert solution(r) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 2 2 1 1 3 1 1') == 'YES'\nassert solution('5\\n2 3 2 1 2 3') == 'NO'\nassert solution('5\\n3 2 1 2 3') == 'NO'\nassert solution('5\\n2 3 1 2 3') == 'YES'\nassert solution('5\\n1 2 3 1 3') == 'YES'\n",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\n3 2 2 1 1 3 1 1''') == 'YES'\nassert solution('''1\n1''') == 'NO'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\n3 2 2 1 1 3 1 1\") == \"YES\"\nassert solution(\"5\\n0 1 2 1 1\") == \"NO\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(r\"5\\n3 2 2 1 1 3 1 1\") == 'YES'\nassert solution(r\"10\\n1 2 4 4 4 2 2 3 4 5 6 5 5\") == 'NO'\nassert solution(r\"100\\n1 1 1 1 1 1 1 1 1 1 1 1 1\") == 'YES'\nassert solution(r\"10\\n0 0 0 0 0 0 0 0 0 0\") == 'NO'\nassert solution(r\"3\\n3 3 3\") == 'YES'\n",
        "num_ids_2": 49,
        "num_ids_4": 100
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n2 2\n''') == 'YES'\nassert solution('''\n3\n3 2 2 1 1 3 1 1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == 'YES'\nassert solution('10') == 'NO'\nassert solution('4') == 'NO'\n\nstdin = \"\"\"\n5\n3 2 2 1 1 3 1\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n3 2 2 1 1 3 1 1\n''') == 'YES'\nassert solution('''\n5\n3 2 2 1 1 3 1 1\n''') == 'NO'\nassert solution('''\n5\n4 5 1 3 2\n''') == 'YES'\n\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') =='mummy'\nassert solution('01') =='mummy'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"mummy\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"mummy\"\nassert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n\") == \"mummy\"\n",
        "num_ids_2": 83,
        "num_ids_4": 120
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == \"witch\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"ghost\"\nassert solution(\"2\") == \"mummy\"\nassert solution(\"5\") == \"witch\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"ghost\"\nassert solution(\"5\") == \"mummy\"\nassert solution(\"3\") == \"witch\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"mummy\"\nassert solution(\"10\") == \"ghost\"\nassert solution(\"10\") == \"witch\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') =='mummy'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nmummy\\nwitch\\ndemon\\n') == 'ghost'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == 'ghost'\nassert solution('10') =='mummy'\nassert solution('10') == 'witch'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') =='mummy'\n\nassert solution('15') =='mummy'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nArtist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n''') == '''Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\nSample Output:') == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n'\nprint('SUCCESS')\n",
        "num_ids_2": 173,
        "num_ids_4": 173
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\") == \"\"\"Artist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\"\"\"",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"Artist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nGeorge_Winston Summer Lullaby 215\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '\\nArtist Album Song_Title Length_seconds\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n'\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nArtist Album Song_Title Length_seconds\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\n''') == '''\nAlbum Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\nTchaikovsky Piano_Favorites November 163\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\ntchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\ngeneral_works_to_them_yours_and_the_worlds_largest_pie_is_the_east 207\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\\n\") == 'George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\ntchaikovsky Piano_Favorites November 163\\ngeneral_works_to_them_yours_and_the_worlds_largest_pie_is_the_east 207\\n'\n",
        "num_ids_2": 240,
        "num_ids_4": 240
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    Artist Album Song_Title Length_seconds\n    Tchaikovsky Piano_Favorites November 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n''') == '''\n    Album Artist Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    George_Winston Summer Lullaby 215\n'''\n\nassert solution('''\n    Artist Album Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n    Tchaikovsky Piano_Favorites November 163\n''') == '''\n    Album Artist Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    George_Winston Summer Lullaby 215\n'''\n\nassert solution('''\n    Artist Album Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    James",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5\") == \"YES\"\nassert solution(\"5 5 5 5 5 5\\n10 5 5 5 5 5\") == \"NO\"\n\n\n------Task-------\nCheck if the construction worker previously known as Lars will complete the wall.\n\nWrite an efficient algorithm for the following assumptions:\n\n1. 1 \u2264 h \u2264 100\n2. 1 \u2264 w \u2264 100\n3. 1 \u2264 n \u2264 10000\n4. 1 \u2264 x_ i \u2264 10\n\n\"\"\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3\\n4 5 6\\n7 8 9') == 'YES'\nassert solution('3 4 5\\n5 5 5 5\\n5 5 5 5\\n5 5 5 5') == 'NO'\nassert solution('3 4 5\\n2 5 3\\n3 5 4\\n6 4 7\\n8 5 5\\n9 7 4') == 'YES'\n",
        "num_ids_2": 52,
        "num_ids_4": 89
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 10 7\n5 5 5 5 5 5\nSample Input:\n2 10 7\n5 5 5 5 5 5\nSample Output:\nNO''') == 'NO'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 10 7\\n\"\n    \"5 5 5 5 5 5 5\"\n) == \"YES\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES', 'First example'\nassert solution('''\n3 6 2\n1 2 1\n''') == 'NO', 'Second example'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n    3 10 7\n    5 5 5 5 5 5\n    '''\n) == 'YES'\n\nassert solution(\n    '''\n    3 10 7\n    2 1 1 2 1 2\n    '''\n) == 'NO'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1\\n3\\n2\\n\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2 10 7\n5 5 5 5 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n1 10 5\n1 2\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2 10 7\n5 5 5 5 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2 10 7\n5 5 5 5 5 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n3 10 2\n2 2 1\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n3 10 7\n5 5 5 5 5 5\n''') == 'NO'\nassert solution('''\n2 10 7\n5 5 5 5 5 5\n''') == 'NO'\nassert solution('''\n2 10 7\n5\n''') == 'YES'\nassert solution('''\n2 10 7\n5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2 4\n5 5 5\n''') == 'YES'\nassert solution('''\n2 3 6\n1 2 1\n''') == 'NO'\nassert solution('''\n3 4 3\n1 2 2\n1 2 2\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('20') == '66.666667'\nassert solution('5') == 'Not Effective'\nassert solution('6') == '50.000000'",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"Not Effective\"\nassert solution(\"1\") == \"Not Effective\"\nassert solution(\"2\") == \"Not Effective\"\nassert solution(\"3\") == \"Not Effective\"\nassert solution(\"4\") == \"Not Effective\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nNYNY\nNNYY\n''') == 'Not Effective'\nassert solution('''1\nNYNY\n''') == '66.66'\nassert solution('''1\nNYNY\n''') == 'Not Effective'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"\"\"\n5\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nSample Output:\n3.000000\n\"\"\"\n) == \"3.000000\"\nassert solution(\n    \"\"\"\n5\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n\"\"\"\n) == \"Not Effective\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('10\\n') == 'Not Effective'\nassert solution('4\\nNNNN\\nYYYY') == 'Not Effective'\nassert solution('4\\nNYNY\\nNNNN\\nYYYY') == 'Not Effective'\nassert solution('10\\nNYNY\\nYYNN') == '66.666667'\n",
        "num_ids_2": 24,
        "num_ids_4": 66
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Not Effective\\n50.000000\"\nassert solution(\"2\") == \"66.666667\\n50.000000\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10\nNYNY\nNNNY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == 'Not Effective'\nassert solution('''\n10\nNYNY\nNNNY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == '50.000000'\nassert solution('''\n10\nNYNY\nNNNY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == '66.666667'\nassert solution('''\n10\nNYNY\nNNNY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == 'Not Effective'\nassert solution('''\n10\nNYNY\nNNNY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == 'Not Effective'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\n''') == '66.666667'\nassert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYYY\nYYYN\nYYNN\n''') == '50.000000'\nassert solution('''\n10\nYYNN\nYYYN\nYYYY\nYYYN\nYYYY\nYYYY\nYYYY\nYYYY\nYYYY\nYYYY\nYYYY\n''') == 'Not Effective'\n'''\n) == '66.666667'\n'''\nassert solution('''\n10\nNNY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\n''') == 'Not Effective'\n'''\nassert solution('''\n10\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\nYYY\n''') == '50.000000'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\") == \"Not Effective\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"Not Effective\"\nassert solution(\"100\") == \"Not Effective\"\nassert solution(\"1\") == \"Not Effective\"\nassert solution(\"01\") == \"Not Effective\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nABBACC\") == \"Bruno\"\nassert solution(\"4\\nABCBCBC\") == \"Bruno\"\nassert solution(\"4\\nABBCCC\") == \"Bruno\"\nassert solution(\"4\\nABBCCC\") == \"Goran\"\nassert solution(\"4\\nABBCCC\") == \"Goran\"\n",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BAACC') == 'Bruno'\n\nn = int(input())\na = 'ABC'\nans = 0\nfor i in range(n):\n    if a[i] == 'A':\n        ans += 1\n    else:\n        ans -= 1\nprint(ans)",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\nBAACC\") == \"3\"\nassert solution(\"1\\nA\\n\") == \"1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nBAACC') == 'Bruno'\nassert solution('4\\nBCBA') == 'Bruno'\nassert solution('6\\nACCABA') == 'Goran'\nassert solution('5\\nABCAC') == 'Adrian'\n",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nAB\\n') == '1'\nassert solution('2\\nAB\\nAC') == '2'\nassert solution('3\\nAB\\nAC\\nAC') == '3'\nassert solution('3\\nAB\\nAC\\nAC\\nAC') == '2'\nassert solution('4\\nAB\\nAC\\nAC\\nAC\\nAC') == '4'\n",
        "num_ids_2": 31,
        "num_ids_4": 72
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nABCD') == '3'\nassert solution('8\\nABABCD') == '1'\nassert solution('20\\nAABAABAABAA') == '3'\nassert solution('0\\n') == '0'\nassert solution('0\\n') == '0'",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nBAACC\nBABDA\nBABCD''') == 'Bruno'\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\nBAACC') == '3'\nassert solution('10\\nAABCDE') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '3 543'\nassert solution('''7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong''') == '7 543'\nassert solution('''2 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong''') == '1 -1'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '3 543'\nprint(solution('''7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong\n-1'''))\nassert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n-1''') == '3 543'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n\") == \"3 543\"\nassert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D wrong\\n-1\\n\") == \"3 543\"\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1') == '3 543'\n\nassert solution('4 H right\\n2 E wrong\\n5 C wrong\\n10 D wrong\\n15 E wrong\\n20 C wrong\\n30 D wrong\\n-1') == '4 541'\n\"\"\"\n\nimport bisect\nfrom bisect import bisect_left",
        "num_ids_2": 101,
        "num_ids_4": 101
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'\nassert solution('''7 H right\n15 B wrong\n30 E wrong\n35 E right\n80 B wrong\n80 B right\n100 D wrong\n100 C wrong\n300 C right\n300 D wrong\n''') == '502'\nassert solution('''2 E right\n10 A wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n20 D wrong\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 E right') == '3 543'\nassert solution('10 A wrong') == '10 -1'\nassert solution('30 C wrong') == '30 -1'\nassert solution('50 B wrong') == '50 -1'\nassert solution('100 A wrong') == '100 -1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '2 543'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"3 543\"\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution(stdin='''\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n'''), \"3 543\")\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 E right') == '543'\nassert solution('10 A wrong') == '200'\nassert solution('30 C wrong') == '250'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\n\nassert solution(\"10 5\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''10 4\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\") == '5'\nassert solution(\"10 10\\n8 1 2 5 4 3 6 7 5 8\\n8 2 5 3 4 1 6 5 7 8\\n8 2 4 3 1 5 8 6 7 8\\n8 3 2 4 1 5 7 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 3 4 1 6 7 8 8\\n8 2 4 3 1 5 8 6 7 8\\n8 3 2 4 1 5 7 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 2 4 3 1 5 8 6 7 8\\n8 2 4 3 1 5 7 6 7 8\\n8 2 4 3 1 5 7 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 4 3 1 5 8 6 7 8\\n8 2 4 3 1 5 7 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 2 4 3 1 5 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 3 4 1 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 2 4 3 1 5 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 3 4 1 6 7 8 8\\n8 2 4 3 1 5 8 6 7 8\\n8 2 4 3 1 5 7 6 7 8\\n8 2 4 3 1 5 7 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 3 4 1 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 2 4 3 1 5 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 2 4 3 1 5 8 6 7 8\\n8 2 4 3 1 5 7 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 1 2 5 4 3 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 2 4 3 1 5 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 1 4 3 8 6 7 8\\n8 1 2 5 4 3 6 7 8 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 3 4 1 6 7 8 8\\n8 3 2 1 4 3 8 5 7 8\\n8 2 5 1 4 3 8 6 7 8\\n8 3 2",
        "num_ids_2": 1510,
        "num_ids_4": 1510
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 5') == '5'\nassert solution('10 3') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n6 8\n6 2 1 4 5 6 3 2 2 2\n2 5 3 3 4 6 5 3 4 2\n3 6 5 5 5 4 5 3 4 2\n5 6 6 5 5 5 3 5 4 4\n4 6 6 5 5 5 4 4 5 4\n5 6 5 5 5 5 5 4 4 4\n4 5 6 4 5 4 5 4 4 4\n5 6 6 5 5 4 4 5 5 4\n''') == '-1'\nassert solution('''\n5\n10 9 8 7 6 5\n5 1 3 4 2 4 2 1\n4 5 3 4 1 5 3 1 1\n4 2 4 1 5 4 5 2 3\n5 2 1 5 5 3 5 2 3\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '8'\nassert solution('''\n10\n5 2 3 5 2 1\n3 5 4 3 2 1\n2 4 3 5 5 1\n2 5 4 4 1 2\n1 2 5 4 2 2\n2 5 5 5 1 3\n3 4 3 3 2 3\n2 5 5 1 4 2\n1 5 5 3 2 1\n3 3 5 3 1 2\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''\n10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '-1'\nassert solution('''\n100 500\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 5') == '5'\nassert solution('10 8') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == \"5\"\nassert solution('''20 6\n1 2 3 4 5 6\n2 4 5 6 7 8\n3 5 8 7 6\n4 6 7 9 8\n5 7 9 8 6\n6 7 8 9 4\n7 8 9 4 6\n8 9 4 6 7\n9 4 6 7 8\n8 5 4 6 7\n7 5 6 8 9\n6 5 8 9 4\n5 8 9 4 6\n4 5 6 7 8\n3 5 6 7 9\n2 4 5 6 7\n1 2 4 5 6\n2 5 4 6 7\n2 3 5 6 7\n''') == \"9\"\nassert solution('''10 20\n1 2 3 4 5 6\n2 4 5 6 7 8\n3 5 8 7 6\n4 6 7 9 8\n5 7 9 8 6\n6 7 8 9 4\n7 8 9 4 6\n8 9 4 6 7\n9 4 6 7 8\n8 5 4 6 7\n7 5 6 8 9\n6 5 8 9 4\n5 8 9 4 6\n4 5 6 7 8\n3 5 6 7 9\n2 4 5 6 7\n1 2 4 5 6\n2 5 4 6 7\n2 3 5 6 7\n''') == \"11\"\nassert solution('''13 12\n2 2 4 5 6 8 1 2 2 1 2 2 1 2 2\n2 1 1 1 1 1 1 1 1 1 1 1 1 1 2\n1 2 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == \"14\"\nassert solution('''16 17\n5 5 8 5 3 8 2 6 2 8 1\n3 5 3 8 5 3 8 8 2 6 8 1\n4 4 2 1 3 1 4 4 1 3 1 1\n4 1 4 3 4 1 2 3 1 4 4 4\n2 2 3 4 4 1 4 1 2 2 4 4\n1 2 2 4 3 1 2 1 2 4 4 3\n2 1 3 3 1 1 4 2 2 4 4 4\n3 3 4 4 1 2 4 2 4 4 2 4\n4 1 2 4 4 1 4 4 1 2 4 2\n4 4 4 3 1 1 1 1 4 1 4 2\n2 4 1 2 4 1 2 1 2 4 1 2\n1 2 2 1 4 1 2 4 3 2 2 1\n2 2 3 1 2 4 1 2 3 2 1 1\n1 1 2 4 4 1 2 3 2 4 4 1\n2 3 1 1 2 2 1 2 2 3 1 2\n2 1 1 4 2 4 1 1 4 1 2 3\n1 1 3 1 2 1 1 4 1 3 1 1\n''') == \"28\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == \"5\"\n",
        "num_ids_2": 121,
        "num_ids_4": 121
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 7') == 'gunilla has a point'\nassert solution('2\\n1 7') == 'edward is right'\nassert solution('3\\n1 7') == 'gunilla has a point'\nassert solution('4\\n1 7') == 'gunilla has a point'\nassert solution('5\\n1 7') == 'gunilla has a point'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('2') == 'edward has a point'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7') == 'gunilla has a point'\nassert solution('1 5') == 'edward has a point'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"gunilla has a point\"\nassert solution('2') == \"edward is right\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 7\") == \"gunilla has a point\"\nassert solution(\"1\\n5 5\") == \"gunilla has a point\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 7\") == \"gunilla has a point\"\nassert solution(\"2 1\") == \"Edward has been cooking for ages\"\nassert solution(\"2 5\") == \"Edward has been cooking for ages\"\nassert solution(\"2 3\") == \"Edward has been cooking for ages\"\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 7\n5 5\n''') == 'gunilla has a point'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'gunilla has a point'\nassert solution('1 7') == 'edward is right'\nassert solution('1 5') == 'gunilla has a point'\nassert solution('4') == 'gunilla has a point'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"gunilla has a point\"\nassert solution(\"2 1\") == \"gunilla has a point\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 7\\n5 5') == 'gunilla has a point'\nassert solution('6 8\\n3 3\\n4 6\\n7 6\\n5 5\\n8 2') == 'gunilla has a point'\nassert solution('6 8\\n3 4\\n5 2\\n7 5\\n8 2\\n6 3') == 'gunilla has a point'\nassert solution('1 4\\n2 2\\n3 1\\n4 1\\n5 0\\n6 2\\n7 1') == 'gunilla has a point'\nassert solution('10 10\\n20 20\\n30 30\\n40 40\\n50 50\\n60 60\\n70 70\\n80 80\\n90 90\\n100 100') == 'gunilla has a point'\n\n'''",
        "num_ids_2": 54,
        "num_ids_4": 128
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == \"4\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4\\n4\\n4\\n1'\n\nSample Input 1:\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\nSample Output 1:\n2\n2\n2\n1\n2\n2\n4\nSample Input 2:\n1\nt 1\ns 1\nSample Output 2:\n1\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n4\\n4\\n2\\n\"\nassert solution() == \"2\\n3\\n2\\n4\\n\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"t 1 10\\nt 1 2\\nt 1 3\\ns 1\\n\") == \"4\"\nassert solution(\"s 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('2\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('10\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nassert solution('3\\nt 1 2\\nt 2 3\\nt 3 4\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '5\\n5\\n5\\n1\\n2\\n2\\n5\\n'\n",
        "num_ids_2": 112,
        "num_ids_4": 224
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n10 12\nt 1 10\nt 1 11\nt 1 12\nt 2 10\nt 2 11\nt 2 12\nt 3 10\nt 3 11\nt 3 12\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\ns 9\ns 10\ns 11\ns 12\n''') == '3'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 11\nt 1 12\nt 2 10\nt 2 11\nt 2 12\nt 3 10\nt 3 11\nt 3 12\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\ns 9\ns 10\ns 11\ns 12\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"1982\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1969\"\nassert solution(\"2\") == \"1982\"\nassert solution(\"3\") == \"1969\"\nassert solution(\"4\") == \"1982\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2015'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nassert solution('''5\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '1982'\nassert solution('''7\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\nIceland 5\nIceland 6\n''') == '2000'\nassert solution('''7\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\nIceland 5\nIceland 6\n''') == '2000'\nassert solution('''7\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\nIceland 5\nIceland 6\n''') == '2000'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2\") == \"1982\"\nassert solution(\"10\\nUSA 1984\\nUSA 1972\\nUSA 1990\\nUSA 2006\\nUSA 1970\\nUSA 1978\\nUSA 2006\\nUSA 1973\\nUSA 1978\\nUSA 1972\\nUSA 1978\\nUSA 1970\\nUSA 1972\\nUSA 1978\\nUSA 1975\\nUSA 1966\\nUSA 1976\\nUSA 1970\\nUSA 1970\\nUSA 1966\\nUSA 1975\\nUSA 1966\\nUSA 1970\\nUSA 1972\\nUSA 1970\\nUSA 1966\\nUSA 1974\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1976\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1976\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA 1966\\nUSA",
        "num_ids_2": 1504,
        "num_ids_4": 1504
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999''') == '2015'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nprint(solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''')) == '1982'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"1999\"\nassert solution(\"4\") == \"1982\"\nassert solution(\"5\") == \"2016\"\nassert solution(\"6\") == \"1990\"\nassert solution(\"7\") == \"2016\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nprint(solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2'\n    ) == '2015'\nassert solution(\n    '6\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nIceland 1992\\nIceland 1987\\nIceland 1990'\n    ) == '1990'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abbcccddddeeeee') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abbcccddddeeeee') == \"10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''$a$\n$a$\n$b$\n$a$\n$b$\n$a$\n$a$\n$b$\n$c$\n$a$\n$b$\n$a$\n$b$\n$a$\n$a$\n$b$\n$a$\n$b$\n$a$\n$b$\n$c$\n$a$\n$b$\n$a$\n$b$\n$a$\n$a$\n$a$\n$a$\n$b$\n$c$\n$a$\n$b$\n$a$\n$b$\n$c$\n$a$\n$b$\n$a$\n$b$\n$c$''') == '10'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('a') == '1'\nassert solution('a') == '1'\nassert solution('a') == '1'\nassert solution('a') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abcdefff') == '11'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abbcccddddeeeee') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abbcddccddddeee') == '10'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nab\na\n''') == '3'\nassert solution('''\nab\naa\n''') == '2'\nassert solution('''\naa\naaa\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abbcccddddeeeee\") == \"10\"\nassert solution(\"a$bcccddddeeeee\") == \"10\"\nassert solution(\"$a$bcccddddeeeee\") == \"10\"\n",
        "num_ids_2": 34,
        "num_ids_4": 53
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its humanity'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Engineering will save the world from inefficiency') == \"Engineering. will save the world from inefficiency.\"\nassert solution('Inefficiency is a blight on the world and its humanity') == \"Inefficiency. is a blight on.. and its humanity.\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its humanity', 'incorrect output'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n\") == \"Engineering will save the world from inefficiency.. and its humanity.\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n\") == \"Engineering will save the world from inefficiency.. and its humanity.\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n\") == \"Engineering will save the world from inefficiency... and its humanity.\"\nassert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n\") == \"Engineering will save the world from inefficiency.. and its humanity.\"",
        "num_ids_2": 92,
        "num_ids_4": 184
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its humanity'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n\") == \"Engineering will save the world from inefficiency.. and its humanity.\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency\\nInefficiency is a blight on.. and its humanity'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'Inefficiency is a blight on.. and its humanity'\nassert solution('I nefiicitity is a bliC t o world and its humanity') == 'I nefiicitity is a bliC t o.. and its humanity'\n",
        "num_ids_2": 84,
        "num_ids_4": 124
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Engineering will save the world from inefficiency') == 'Engineering. save the world from.. and.. humanity'\nassert solution('Inefficiency is a blight on the world and its humanity') == 'Inefficiency. is a blight on.. and.. humanity'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency... and its humanity'\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity\\nInefficiency is a blight on the world and its humanity') == 'Engineering will save the world from inefficiency... and its humanity... and its humanity... and its humanity... and its humanity... and its humanity... and its humanity... and its humanity... and its humanity.'\n",
        "num_ids_2": 242,
        "num_ids_4": 242
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity\") == \"Engineering\\n..\\nis a blight on..\\n..\\n.\\n..\\nis a blight on..\\n..\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\n.\\",
        "num_ids_2": 1659,
        "num_ids_4": 1659
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == \"satisfactory\"\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == \"unsatisfactory\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') =='satisfactory'\nassert solution('6 3') == 'unsatisfactory'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'\nassert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''5 3\n-1 -2 -3\n2 3\n-1 2\n2 -1\n1 -2''') == 'unsatisfactory'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\nassert solution('''3 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'\nassert solution('5 2\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\nassert solution('5 3\\n0 2 3\\n0 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\nassert solution('5 3\\n0 2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'",
        "num_ids_2": 90,
        "num_ids_4": 170
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') =='satisfactory'\nassert solution('5 3') == 'unsatisfactory'\n'''\n\n\n\nimport sys\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\nassert solution('7 3\\n-3 -2 -1\\n-3 1 -2\\n-3 2 1\\n-3 2 -1\\n-3 -1 2\\n-3 1 -2') =='satisfactory'\n",
        "num_ids_2": 100,
        "num_ids_4": 100
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 3\\n-1 -2 3\\n1 -2 3') == 'unsatisfactory'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n8\n1 1 1 5 3 4 6 6\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n5 1 1 1 1 1\n\"\"\") == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"9\\n2 2 2 3 3 3 3 3 3 3\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\") == \"0\"\nassert solution(\"3\\n1 1 1\") == \"0\"\nassert solution(\"4\\n2 1 3 2\") == \"3\"\nassert solution(\"5\\n4 4 4 1 1\") == \"4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 1 5 3 4 6 6') == '4'\nassert solution('8') == 'none'\n\n'''",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n8\n1 1 1 5 3 4 6 6\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n8\n1 1 1 1 1 5 3 4 6\n\"\"\") == \"none\"\n\nassert solution(\"\"\"\n10\n0 1 1 2 3 5 5 6 6 6\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n10\n0 1 1 2 3 5 5 6 6 6\n\"\"\") == \"none\"\n\nassert solution(\"\"\"\n10\n0 1 1 1 1 1 1 1 2 2\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\\n1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"7\\n1 1 1 1 2 2\") == \"1\"\nassert solution(\"5\\n1 1 1 2 3 4\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == \"4\"\nassert solution('10\\n0 0 0 0 0 0 0 0 0 0') == \"none\"\nassert solution('1\\n') == \"none\"\n",
        "num_ids_2": 42,
        "num_ids_4": 54
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '4'\nassert solution('1 1 1 5 3 4 6 6') == '4'\nassert solution('2 3 5 6 4 1 7') == '7'\n",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"none\"\nassert solution(\"1 1 1 5 3 4 6 6\") == \"4\"\nassert solution(\"3 1 1 1 3 4 6 6\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('20:00:00','04:00:00') == '08:00:00'\nprint('Solution: {}'.format(solution(*stdin.split())))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10:00:00\\n18:30:00\") == \"10:00:00\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20:00:00','04:00:00') == '08:00:00'\nassert solution('17:00:00','17:00:00') == '07:00:00'\nassert solution('15:00:00','17:00:00') == '08:00:00'\nassert solution('12:00:00','15:00:00') == '14:00:00'\nassert solution('19:00:00','19:00:00') == '13:00:00'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"05:00:00\") == \"20:00:00\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20:00:00\",\"04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"01:00:00\") == \"00:00:01\"\nassert solution(\"20:00:00\") == \"00:00:20\"\nassert solution(\"04:00:00\") == \"00:00:04\"",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\nassert solution('12:10:00') == '12:10:00'\nassert solution('23:59:59') == '23:59:59'\nassert solution('00:00:00') == '00:00:00'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20:00:00\\n04:00:00\") == \"08:00:00\"\nprint('Solution: {}'.format(solution(*TEST_INPUTS)))\nassert solution(*TEST_INPUTS) == '08:00:00'",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\nassert solution('20:00:00\\n10:00:00') == '10:00:00'\nassert solution('20:00:00\\n15:00:00') == '15:00:00'\nassert solution('20:00:00\\n20:00:00') == '20:00:00'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('13') == '6'\nassert solution('10') == '10'\nassert solution('20') == '20'\nassert solution('50') == '50'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"1\") == \"1\"\nassert solution(\"31\") == \"31\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2') == '1'\n\n---Input---\nThe input consists of lines. Each line contains two integers $n$ and $k$. The first integer $n$ is the length of the regular roll, and the second integer $k$ is the number of backup rolls to be used.\n\n-----Output-----\nOutput the smallest integer $k$ such that crises will never happen when using $k$ layers of rolls (including the regular roll).\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"2\"\nassert solution(\"9 8\") == \"10\"\nassert solution(\"5 6\") == \"10\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"5 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == '4'\nassert solution('5 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('30') == '2'\nassert solution('100') == '3'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\ne = e\n    ''') == '2.71828182845905'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2.6666666666666665'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2.6666666666666665'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.00000000000000'\nassert solution('2') == '2.00000000000000'\nassert solution('3') == '2.61111111111111'\nassert solution('4') == '2.8'\nassert solution('5') == '2.92'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2.0'\nassert solution('1') == '1.0'\nassert solution('0') == '1.0'\nassert solution('-1') == '1.0'\nassert solution('-2') == '2.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2.6666666666666665'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('0') == '1'\nassert solution('10') == '2.21875'\nassert solution('1000') == '2.718281828459045'\nassert solution('10000') == '2.718281828459045'\n",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('1') == '1.0'\nassert solution('0') == '1.0'\n\"\"\"\nimport math\n\nn = int(input())",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n''') == \"2.6666666666666665\", 'First'\nassert solution('''\n100\n''') == \"7.895065962789594e-9\", 'Second'\nassert solution('''\n0\n''') == 1, 'Third'\nassert solution('''\n1000000\n''') == 2.23606797749979, 'Fourth'\nassert solution('''\n100000000\n''') == 2.23606797749979, 'Fifth'\n''') == \"2.281697949467083e-12\", 'Sixth'\nprint('Cheers, the Euler answer is correct!')\nprint('Now, try your own test cases!')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('2') == '1.4142135623730951'\nassert solution('5') == '2.23606797749979'\nassert solution('100') == '2.718281828459045'",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"paul\"\nassert solution(\"5 3 7\") == \"paul\"\nassert solution(\"5 3 5\") == \"opponent\"\nassert solution(\"5 5 5\") == \"paul\"\nassert solution(\"5 5 5\") == \"paul\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3 7\n1\n1''') == 'paul'\nassert solution('''5 4 2\n1\n2''') == 'paul'\nassert solution('''5 3 7\n1\n3''') == 'opponent'\nassert solution('''5 5 1\n1\n1''') == 'paul'\n\nimport unittest",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == 'opponent'\n\ninput = \"\"\"\n6 1 7\n\"\"\"\n\nprint(solution(input))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 3 7\n''') == 'paul'\nassert solution('''\n10 3 7\n''') == 'opponent'\n''')\n\nhttps://www.hackerrank.com/challenges/write-a-function/problem?isFullScreen=true\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"4 2 5\") == \"opponent\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'paul'\nassert solution('5 3 7') == 'opponent'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"opponent\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n3\n5\n2\n''') == 'opponent'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"100 10 1\") == \"opponent\"\nassert solution(\"100 20 3\") == \"opponent\"\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 7') == 'paul'\nassert solution('5 4 6') == 'opponent'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n') == '1\\n'\nassert solution('3\\n') == '1\\n'\nassert solution('20\\n') == '20\\n'\nassert solution('0\\n') == '1\\n'\nassert solution('1\\n') == '2\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\n\"\"\"\n\nimport sys\n\nn = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n1\n1''') == '1'\nassert solution('''3\n2\n2''') == '2'\nassert solution('''5\n1\n2\n1\n2\n1''') == '3'\nassert solution('''8\n2\n2\n1\n1\n1''') == '4'\nassert solution('''1\n1\n1\n1''') == '1'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"1\\n\") == \"1\"\nprint(solution())\nprint(solution(\"1\\n\"))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"2\"\nassert solution(\"4\\n\") == \"4\"\nassert solution(\"5\\n\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '1'\nassert solution('3\\n') == '1'\nassert solution('10\\n') == '5'\nassert solution('3\\n') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\n\nimport unittest\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        pass",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"1234\") == \"Yes\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"abcdefgh\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('123456') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"Yes\", \"First\"\nassert solution(\"12a\") == \"No\", \"Second\"\nassert solution(\"1234\") == \"Yes\", \"Third\"\nassert solution(\"1234a\") == \"No\", \"Fourth\"\nassert solution(\"1234ab\") == \"Yes\", \"Fifth\"\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1a2B3C\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"1234567890\") == \"Yes\"\nassert solution(\"12345678901\") == \"No\"\nassert solution(\"1234a5678\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"Yes\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"123ab\") == \"Yes\"\nassert solution(\"123ABC\") == \"Yes\"\nassert solution(\"123abcd\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('123') == 'No'\nassert solution('1234') == 'Yes'\nassert solution('123a') == 'No'\nassert solution('1234a') == 'Yes'\nassert solution('12345') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\nassert solution('kalakapa') == 'kala'\nassert solution('papapa') == 'papapa'\n",
        "num_ids_2": 36,
        "num_ids_4": 50
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a a p p p p') == 'zepelepenapa'\nassert solution('p p p p') == 'papapripikapa'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''zepelepenapa papapripikapa''') == 'zelena paprika'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('a') == ''\nassert solution('zepelepenapa') == 'zelena paprika'\nassert solution('aalaapapa') == 'zaala paprika'\nassert solution('abaaaaapapapa') == 'a zaala paprika'\n",
        "num_ids_2": 16,
        "num_ids_4": 49
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n\ninput = stdin.read()\nassert solution(input)\n\nprint(\"You're all set!\")\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\nassert solution('zeta paprika') == 'zeta paprika'\n'''",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'zelena paprika'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\nassert solution('go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go go",
        "num_ids_2": 1746,
        "num_ids_4": 1746
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n20 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n-32 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n20 3\n''') == '-32'\nassert solution('''\n-32 2\n''') == 'IMPOSSIBLE'\nassert solution('''\n20 3\n''') == '-32'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"20 1\") == \"IMPOSSIBLE\"\nassert solution(\"0 0\") == \"ALL GOOD\"\nassert solution(\"100 1\") == \"100 1\"\nassert solution(\"-100 1\") == \"-100 1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('16 2') == 'IMPOSSIBLE', \"Your solution contained errors.\"\nassert solution('32 2') == '-32', \"Your solution contained errors.\"\nassert solution('0 2') == '-32', \"Your solution contained errors.\"\nassert solution('0 2') == '-32', \"Your solution contained errors.\"\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10 -10\n\"\"\") == \"IMPOSSIBLE\"\nassert solution(\"\"\"\n0 1\n\"\"\") == \"ALL GOOD\"\nassert solution(\"\"\"\n1 1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n-1 -1\n\"\"\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '-32', f'actual: {solution()}'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32 2') == '-32', 'Sample Test 1'\nassert solution('2 2') == '-32', 'Sample Test 2'\nassert solution('-10 3') == 'IMPOSSIBLE', 'Sample Test 3'",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('-1 2') == '-2'\nassert solution('-3 2') == '-3'\nassert solution('-9 2') == '-9'\nassert solution('0 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32 2') == '-32', \"Wrong!\"\nassert solution('3 4') == 'ALL GOOD', \"Wrong!\"\nassert solution('0 1') == 'IMPOSSIBLE', \"Wrong!\"\nassert solution('100 100') == 'IMPOSSIBLE', \"Wrong!\"\nassert solution('-100 -100') == 'IMPOSSIBLE', \"Wrong!\"\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('32 2') == '-32'\nassert solution('32 2') == 'ALL GOOD'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"1 2\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"ALL GOOD\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 2 3\n1 3 4\n''') == 'both'\nassert solution('''\n1 2 3\n1 3 4\n''') == 'one'\nassert solution('''\n1 2 3\n1 3 4\n''') == 'none'\nprint(\"All test cases passed!\")\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('4 5 6') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 3 3\") == \"both\"\nassert solution(\"1 3 4\") == \"one\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2 3 3\n1 3 4''') == 'both'\nassert solution('''2 2 3 3\n1 3 4''') == 'one'\nassert solution('''2 2 3 3\n1 3 4''') == 'none'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'both'\nassert solution('''\n2 2 3 3\n1 3 4\n''') == 'one'\nassert solution('''\n3 6 7\n6 5 1\n''') == 'both'\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('1 1 1 1') == 'none'\nassert solution('2 2 3 3') == 'both'\nassert solution('2 4 3') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 2 3 4\\n1 3 5\\n1 2 1 1\\n1 1 3 4\"\n) == \"both\\none\\none\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 2, 3, 3], 1, 3) == \"both\"\nassert solution([1, 3, 4], 1, 3) == \"one\"\nassert solution([2, 2, 3, 3], 1, 1) == \"none\"\n",
        "num_ids_2": 38,
        "num_ids_4": 58
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 6 8') == '10'\n\nassert solution('-2 5 -1') == '3'\n\nassert solution('-1') == '-1'\n\nassert solution('1 2 3') == '5'\n\nassert solution('-5 7 8') == '10'",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('5 9 3 5') == '6'\nassert solution('5 2 9 5') == '10'\nassert solution('5 7 9 5') == '10'\nassert solution('-1 -2 -3') == '-1'\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"-4 -2 8\") == \"10\"\nassert solution(\"4 -6 8\") == \"10\"\nassert solution(\"4 2 8\") == \"10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4, 6, 8]) == 10\nassert solution([5, 7, 2, 6, 6, 9, 1, 2]) == 4\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 6 8\") == \"10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([4, 6, 8]) == 10\nassert solution([4, 6, 9]) == 8\nassert solution([10, 20, 30, 40]) == 30\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 7') == '10'\nassert solution('7 4 1') == '10'\nassert solution('6 4 5') == '9'\n\nSample Input:\n2 -2 4\nSample Output:\n3\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('1 0 1') == '2'\nassert solution('-1 -2 -3') == '-4'\nassert solution('-3 -2 -1') == '-1'\nassert solution('-4 -3 -2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 56
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"2\", \"Should be 2\"\nassert solution(\"1 2 3 4\") == \"3\", \"Should be 3\"\nassert solution(\"1 1 1 1\") == \"1\", \"Should be 1\"\nassert solution(\"-1 -1 -1 -1\") == \"-1\", \"Should be -1\"\nassert solution(\"-1 2 -3 4\") == \"4\", \"Should be 4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 76
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 6 8') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('500 70') == '533'\nassert solution('500 60') == '467'\nassert solution('100 70') == '111'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('500 70') == '533'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('500 70') == '533'\nassert solution('2 70') == '20'\nassert solution('3 10') == '21'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''500 70''') == '533'\nassert solution('''500 80''') == '532'\nassert solution('''500 90''') == '531'\nassert solution('''500 100''') == '530'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('500 70') == '533'\nassert solution('1000 30') == '800'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"2000 70\") == \"2000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''500 70''') == '533'\nassert solution('''1000 10''') == '1005'\nassert solution('''500 2''') == '500'\nassert solution('''500 10''') == '500'\nassert solution('''500 70''') == '533'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('500 70') == '533'\nassert solution('500 80') == '508'\nassert solution('500 95') == '513'\nassert solution('500 100') == '510'\nassert solution('500 110') == '517'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"300 10\") == \"337\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"533\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 9\") == \"39.0\"\nassert solution(\"100 60\") == \"30.0\"\nassert solution(\"5 5\") == \"0.0\"\nassert solution(\"1 1\") == \"0.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n2 9\n69 60\n100 60\n\"\"\") == \"39.0\"\n\nassert solution(r\"\"\"\n2 10\n60 60\n100 60\n\"\"\") == \"30.0\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('100 60') == '30.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '1.0'\nassert solution('2 1') == '1.0'\nassert solution('1 4') == '1.0'\nassert solution('2 2') == '2.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 9\\n69 60\\n100 60') == '39.0'\nassert solution('4 6\\n10 50\\n20 20\\n30 30\\n40 40\\n50 50\\n60 60') == '30.0'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 9\") == \"39.0\"\nassert solution(\"1 1\") == \"1.0\"\nassert solution(\"2 1\") == \"1.0\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3\n1\n''') == '0.6931471805599453'\nassert solution('''\n2 2\n1 1\n''') == '0.0'\nassert solution('''\n3 5\n2 1 2 1\n''') == '5.0'\nassert solution('''\n4 4\n3 1 2 1\n''') == '10.0'\nassert solution('''\n5 5\n4 4 1 1\n''') == '0.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 9\n69 60\n100 60''') == '39.000000'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 9\\n69 60\\n100 60\\n') == '39.0\\n30.0\\n'\nassert solution('1 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n10 10\\n') == '39.0\\n29.0\\n29.0\\n29.0\\n29.0\\n29.0\\n29.0\\n29.0\\n'\n",
        "num_ids_2": 106,
        "num_ids_4": 106
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n69\n100\n''') == '39.0'\n\nassert solution('''5\n69 60\n100 60\n100 60\n100 60\n100''') == '39.0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\nassert solution(\"6\\n30 30 30 30 30 30\") == \"5 28\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n23 27 31 28 30') == '2 28'\nassert solution('5\\n13 8 5 6') == '3 5'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n23\\n27\\n31\\n28\\n30') == '2 28'\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '1 2'\nassert solution('4') == '1 2 3'\nassert solution('5') == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n23 27 31 28 30\nSample Input:\n9\n41 39 46 46 30\nSample Output:\n1 46''') == '1 46'\n\nassert solution('''3\n9 5 4\nSample Input:\n12\n24 8 10 17 28 17 27 7\nSample Output:\n2 28''') == '2 28'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '2 28'\nassert solution('1') == '1'\nassert solution('3') == '2 28'\nassert solution('7') == '3 28'\nassert solution('13') == '2 28'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('\\n'.join([\n    '5',\n    '23 27 31 28 30',\n    '2 28',\n    '5',\n    '9 6 7 7 7 7',\n    '7',\n    '4',\n    '5',\n    '5',\n    '2',\n    '4',\n    '7',\n    '4',\n    '3',\n    '8',\n    '4',\n    '4',\n    '8',\n    '5',\n    '7',\n    '4',\n    '4',\n    '6',\n    '4',\n    '5',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4',\n    '4",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n') == '2 27'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n3\n1\n1\n3\n''') == \"2 3\"\nassert solution('''\n3\n8\n9\n10\n''') == \"2 7\"\nassert solution('''\n5\n1\n1\n1\n1\n1\n''') == \"1 2 5\"\nassert solution('''\n5\n2\n1\n1\n3\n''') == \"4 3\"\nassert solution('''\n4\n2\n1\n1\n3\n''') == \"2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n20 24 15\n23 26 28\n18 21 20''') == \"2 28\"\nassert solution('''5\n24 30 22 18\n17 19 29 20\n16 19 20 24\n21 24 30 30\n15 20 21 19''') == \"1 22\"\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == '2'\nassert solution('''\n3 9\n1 2 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"\"\"\n3 6\n1 2 3\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n3 6\n2 3 1\n\"\"\"\n) == \"1\"\n\nassert solution(\n    \"\"\"\n3 7\n2 3 1 2 2 1\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n3 7\n2 3 1 2 3 1\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n3 8\n2 3 1 2 2 1 2 2 1\n\"\"\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6\n1 2 3\n''') == '2'\nprint(solution('''\n2 4\n1 4\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '2'\nassert solution('2\\n3') == '2'\nassert solution('5\\n7 4 1') == '4'\nassert solution('1\\n5') == '1'\nassert solution('2\\n3') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 2') == '1'\nassert solution('1 1') == '0'\nprint('You passed!')\n\n----",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n    3 6\n    1 2 3\n    \"\"\") == \"2\"\n\nassert solution(\"\"\"\n    6 5\n    1 2 3 4 5\n    \"\"\") == \"4\"\n\nassert solution(\"\"\"\n    8 7\n    1 2 3 4 5 6 7 8\n    \"\"\") == \"8\"\n\nassert solution(\"\"\"\n    1 2 3\n    1 2 3\n    \"\"\") == \"3\"\n\nassert solution(\"\"\"\n    3 5\n    1 2 3 4 5\n    \"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 10\n5 6 5 8 1 2 4 7 9\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3 2\n1 2\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7 1\n1 2 3 4 5 6 7\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n1 1\n3\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == '3'\nassert solution('1 10') == '8'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n2\n3 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n100\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n\"\"\") == \"20\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"9\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '9'\nassert solution('3') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\nMWWMMWM\n\"\"\") == \"9\"\nassert solution(\"\"\"\n-1\nWMMWWW\n\"\"\") == \"10\"\nassert solution(\"\"\"\n-4\nWMMMM\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2\nMMWWMM\n\"\"\") == \"10\"\n\n\"\"\"\n\nresult = None",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"9\"\n\n--\n\nSample Input:\n5\nWWMMWWM\nSample Output:\n3\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nMMWMMWMMW') == '9'\nassert solution('2\\nMWWWMMMMMMMM') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '0'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '9'\nassert solution('10') == '9'\nassert solution('99') == '99'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nMWWMMWM') == '9'\nassert solution('1\\nM') == '1'\nassert solution('1\\nW') == '1'\nassert solution('1\\nMW') == '1'\nassert solution('1\\nMWM') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '4 4\\n-1 2 -1 3\\n-1 -3\\n-2 2\\n-1 3') == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 6\\n8 -2 3 undo 2\\n4 -2\\n2 -2\\n1 -2\\n1 -2\") == \"1\"\nassert solution(\"6 6\\n1 -2\\n2 -2\\n3 -2\\n4 -2\\n5 -2\\n3 -2\") == \"1\"\n",
        "num_ids_2": 58,
        "num_ids_4": 99
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"5 5\\n0 1 0 2 0 -3\") == \"2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('2 5\\n4 -1 -3 -3 -2') == '2'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_01) == \"3\"\nassert solution(example_input_02) == \"1\"\nassert solution(input_data) == \"4\"\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n'''\n5 4\n8 -2 3 undo 2\n''') == '3'\n\nassert solution(\n'''\n10 2\n-3 4 5 -8 -5 -2 2 4 -1\n''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 4\n8 -2 3 undo 2\n''') == '3'\nassert solution('''7 3\n8 -1 5 undo 1\n7 4 undo 3\n4 3 undo 3\n4 2 undo 1\n3 2 undo 1\n''') == '2'\nassert solution('''5 20\n10 -10 5 undo 1\n4 -4 5 undo 1\n9 -10 2 undo 2\n1 -15 3 undo 2\n4 -20 4 undo 2\n7 -10 3 undo 2\n11 -8 1 undo 1\n9 -15 3 undo 1\n10 -20 1 undo 2\n6 -15 2 undo 1\n13 -10 2 undo 1\n12 -15 1 undo 2\n1 -15 1 undo 1\n10 -15 1 undo 2\n2 -11 1 undo 1\n3 -15 2 undo 1\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '3'\nassert solution('10 1') == '9'\nassert solution('4 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"3\\n-2 3 undo 2\") == \"2\"\nassert solution(\"2\\n-3 2 undo 2\") == \"0\"\nassert solution(\"1\\n0 undo 2\") == \"0\"\nassert solution(\"5 3\\n0 2 undo 2\") == \"2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 68
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'\nassert solution('4 5\\n2 3 2 1\\n1 2 3\\n3 2 1') == '8 9'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\n3 2 1''') == '6 7'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1 2 3\\n3 2 1\"\n    ) == \"6 7\"\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'\nassert solution('1 1\\n1 1') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"6 7\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 2 3\\n3 2 1') == '6 7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 3\n3 2 1\n''') == '6 7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3\n3 2 1\n''') == '6 7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 3\n1 2 3\n3 2 1\n\"\"\") == \"6 7\"\n\nassert solution(\"\"\"\n5 3\n5 2 3 1 4\n4 2 1\n3 2 1\n1 2\n\"\"\") == \"6 7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"correct\\ncorrect\\ncorrect\"\nassert solution(\"1\") == \"correct\\n\"\nassert solution(\"1\") == \"incorrect\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n') == '64 correct\\n665 incorrect'\nassert solution('10\\nThe quick brown fox jumps over the lazy dog\\n5\\nthe quick brown fox jumps over the lazy dog\\nThe quick brown fox jumps over the lazy dog\\n') == '39 correct\\n12 incorrect'\nassert solution('10\\nThe quick brown fox jumps over the lazy dog\\n5\\nthe quick brown fox jumps over the lazy dog\\nThe quick brown fox jumps over the lazy dog\\n') == '39 correct\\n12 incorrect'\n\n------Task-----\nFind all the correct translations of a sentence.\n\"\"\"\n",
        "num_ids_2": 109,
        "num_ids_4": 162
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n\"\"\") == \"\"\"64 correct\n665 incorrect\"\"\"\"\".strip()\n\nassert solution(\"\"\"\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n\"\"\") == \"\"\"64 correct\n665 incorrect\"\"\".strip()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '65 incorrect'\nassert solution('''\n7\nals mollen mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct\\n665 incorrect'\nassert solution('''\n6\nhaar hamster leggo hamster zeer hamster kutte hamster haar hamster leggo hamster\n2\nhamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster hamster ham",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3\n    als when\n    moles destroy\n    molen destroy''') == '3 correct'\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '65 incorrect'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"64 correct\\n\"\nassert solution(\"10\") == \"665 incorrect\\n\"\nassert solution(\"3\") == \"64 correct\\n\"\nassert solution(\"5\") == \"66 incorrect\\n\"\nassert solution(\"1\") == \"65 incorrect\\n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7\nals mollen mollen mollen mollen mollen mollen\n4\nals when correct\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect\n''') == '64 correct\\n665 incorrect'\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"1 correct\"\nassert solution('2') == \"2 correct\"\nassert solution('3') == \"3 correct\"\nassert solution('4') == \"4 correct\"\nassert solution('5') == \"5 correct\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n2 3 4 3\n''') == '7'\nassert solution('''1\n1\n''') == '1'\nassert solution('''5\n2 3 4 3 5\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 3 4 3') == '7'\nassert solution('5\\n3 3 1 1 1') == '5'\n\n---\nInput\nSample Input 1:\n6\n2 3 4 3 5 2\nSample Output 1:\n7\n\nSample Input 2:\n6\n2 3 4 5 2 3\nSample Output 2:\n7\n\nSample Input 3:\n5\n1 1 1 1 1\nSample Output 3:\n5\n\nSample Input 4:\n2\n1 1\nSample Output 4:\n1\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2 3 4') == '7'\nassert solution('5\\n2 3 4 2 4') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\nassert solution('''\n2\n1 3\n''') == '1'\nassert solution('''\n1\n2 1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'\nSample Input:\n10\n1 2 3 4 5 6 7 8 9 10\nSample Output:\n11\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"\nassert solution(\"5\\n2 3 4 3\\n3 2 4 1\") == \"8\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 3 4 3\n''') == '7'\n\nassert solution('''\n4\n2 3 4 3\n''') == '7'\n\nassert solution('''\n5\n1 2 3 4 5\n''') == '6'\n\nassert solution('''\n6\n1 2 3 4 5 2\n''') == '6'\n\nassert solution('''\n12\n1 2 3 4 5 6 7 8 9 10 11 12\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\nassert solution('''\n1\n1\n1\n1\n''') == '2'\nassert solution('''\n1\n1\n2\n3\n''') == '4'\nassert solution('''\n8\n1\n2\n2\n1\n2\n2\n2\n1\n''') == '8'\nassert solution('''\n8\n2\n1\n1\n2\n2\n1\n2\n1\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\nprint('All Tests Passed')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4\\n') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('3\\n1 1\\n0 2\\n4\\n') == '2.0 2.0\\n4.0 4.0\\n0.0 4.0'\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n0 1\n2 2\n2 0\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0.0 0.0'\nassert solution('2') == '0.0 4.0'\nassert solution('5') == '1.0 2.0'\nassert solution('6') == '3.0 4.0'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n0 0\\n1 1\\n0 2') == '2.0 2.0\\n0 4.0'\nprint(solution('3\\n4\\n0 0\\n1 1\\n0 2'))\nassert abs(float(solution('3\\n4\\n0 0\\n1 1\\n0 2')) - 3.0) <= 10 ** -4\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.0 0.0'\nassert solution('2') == '2.0 2.0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n0 0\\n1 1\\n0 2') == '2.0 2.0\\n0.0 4.0'\nassert solution('3\\n0 0\\n1 1\\n0 2') == '2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('3') == '2'\nassert solution('100') == '9'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n\nstdin = \"\"\"\n5\n\"\"\"\nprint(solution(stdin))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"1\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"100\") == \"101\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 1\n16 2\n''') == '34'\nassert solution('''\n3 1\n16 2\n''') == '34'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1') == '1'\nassert solution('2 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"34\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"5 1\n5 16\n\"\"\") == \"34\"\nassert solution(\"\"\"5 1\n6 16\n\"\"\") == \"35\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == '34'\nassert solution(\"3 1\") == '34'\nassert solution(\"1 3\") == '34'\nassert solution(\"5 2\") == '20'",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"34\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == '10\\n', 'Somehow this fails'\nassert solution('') == '0\\n', 'Somehow this fails'\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 2\n15 10\nSample Input:\n2 1\n12 16\nSample Output:\n34\n''') == '34'\n\nassert solution('''\n2 1\n12 16\nSample Input:\n3 1\n12 16\nSample Output:\n34\n''') == '34'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"34\"\nassert solution(input_string=\"3 1\\n12 16\\n\") == \"34\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"34\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 1\\n') == '3'\nassert solution('4\\n0 2 1 1\\n') == '4'\nassert solution('8\\n1 2 1 2 1 2 2 1\\n') == '2'\nassert solution('6\\n1 2 3 4 5 2 3 4 5\\n') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 78
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 3 1') == '3'\nassert solution('3\\n1 2 1') == '1'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '1'\n",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\nassert solution('1 2 3 1') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 1') == '3'\nassert solution('4 5 1 2 1 3 2') == '3'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2 3 1') == '3'\nassert solution('5\\n1 2 2 1 3\\n1 3 4 4 2') == '5'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 1 2\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 2 3 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 2 3 4 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n9\n1 1 1 2 2 1 3 3 1 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n1 1 2 2 1 2 1 1 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n11\n1 1 2 3 4 1 2 3 4 2 1\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3 1\\n') == '3'\nassert solution('3\\n2 1 2 1\\n') == '1'\nassert solution('3\\n1 2 1 2\\n') == '1'\nassert solution('2\\n1 2 2 1\\n') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution([1, 2, 3, 1]) == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.0') == '1088'\nassert solution('12.3456') == '1235'\nassert solution('1.2345') == '123'\nassert solution('0.1') == '10'\nassert solution('12.0000') == '12'\n",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.0') == '1088'\nassert solution('10.0') == '1088'\nassert solution('10.00') == '1088'\nassert solution('10.01') == '1088'\nassert solution('1.00') == '1088'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1.0\") == \"1088\"\nassert solution(\"1\") == \"1088\"\n\n----------------------------------------------------------------------\n\nSolution 2:",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"1088\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '1088'\nassert solution('1.0') == '1088'\nassert solution('1.0') == '1088'\nassert solution('1.0') == '1088'\nassert solution('1.0') == '1088'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.0') == '1088'\nassert solution('-4.0') == '-448'\nassert solution('123.2') == '944'\nassert solution('0') == '0'\nassert solution('1.0') == '1088'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 50
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1088\"\nassert solution(\"10\") == \"1180\"\nassert solution(\"12\") == \"1184\"\nassert solution(\"123\") == \"1234\"\nassert solution(\"1234\") == \"1234\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n    1234.5678''') == '1088'\nassert solution('''5\n    456789.123456''') == '1199'\nassert solution('''0.00001\n    100''') == '100'\nassert solution('''0.000001\n    1000''') == '1'\nassert solution('''0.00001\n    0.000''') == '0'\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 34
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0.25') == '0.25'\nassert solution('0.33') == '0.33'\nassert solution('1.24') == '1.24'\nassert solution('10.0') == '1088'\nassert solution('3.17') == '3.17'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0.00002') == '1088'\nassert solution('4.605') == '1247'\nassert solution('55.622') == '1248'\nassert solution('1.0') == '1088'\nassert solution('7.0') == '1254'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\") == \"25.000000000\"\nassert solution(\"0 4\") == \"25.000000000\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 4') == '25.000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 4') == '25.000000000'\nassert solution('0 3') == '15.000000000'\nassert solution('3') == '100.000000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1\\n3 4 5\\n1 2 3') == '0.5000000000000005'\nassert solution('8 1\\n2 2 2 2 2 2 2 2\\n1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0 0 0 0 0\\n0 0 0 0 0",
        "num_ids_2": 1467,
        "num_ids_4": 1467
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 4') == '25.000000000'\nassert solution('2 2 1 3') == '1.4848484848'\nassert solution('10 2 1 3') == '1.4848484848'\nassert solution('7 8 7 8 7 9 9 7 8') == '3.3939393939'\nassert solution('10 10 10 10 10') == '100.000000000'",
        "num_ids_2": 33,
        "num_ids_4": 76
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 4') == '25.000000000'\nassert solution('1') == '25.000000000'\nassert solution('2') == '25.000000000'\nassert solution('3') == '25.000000000'\nassert solution('4') == '25.000000000'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 4\\n') == '25.000000000'\nassert solution('1 1 1 1\\n') == '25.000000000'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4') == '25.000000000'\nassert solution('2 10') == '3.3333333333'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 4\\n') == '25.000000000'\nassert solution('1 1\\n') == '25.000000000'\nassert solution('1 3\\n') == '25.000000000'\nassert solution('1 5\\n') == '25.000000000'\nassert solution('1 7\\n') == '25.000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '25.000000000'\nassert solution('2') == '12.000000000'\nassert solution('3') == '12.000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 4\n3\n4\n5\n6\n7''') == 'DA'\n\nassert solution('''5 1 4\n1\n4\n3\n2''') == 'NE'\n\nassert solution('''5 3 4\n3\n4\n5\n6\n7''') == 'DA'\n\nassert solution('''5 1 4\n1\n4\n5\n6\n7''') == 'NE'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('3') == 'DA'\nassert solution('4') == 'NE'\nassert solution('3') == 'DA'\nassert solution('4') == 'NE'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'DA', \"Case 1\"\nassert solution('2') == 'NE', \"Case 2\"\nassert solution('3') == 'DA', \"Case 3\"\nassert solution('4') == 'DA', \"Case 4\"\nassert solution('5') == 'NE', \"Case 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'DA', \"Manual Check\"\nassert solution('2') == 'DA', \"Manual Check\"\nassert solution('3') == 'DA', \"Manual Check\"\nassert solution('4') == 'DA', \"Manual Check\"\nassert solution('5') == 'DA', \"Manual Check\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3 4\n3\n4\n5\n6\n7\n''') == 'DA'\nassert solution('''\n5 3 4\n5\n6\n7\n''') == 'NE'\nassert solution('''\n5 3 4\n5\n6\n7\n8\n9\n''') == 'DA'\nassert solution('''\n5 3 4\n5\n6\n7\n''') == 'NE'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA\\nDA\\nDA\\nNE\\nNE\\nNE'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 4\") == \"DA\"\nassert solution(\"4 4 5\") == \"NE\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('3') == 'DA'\nassert solution('4') == 'DA'\nassert solution('5') == 'NE'\nassert solution('6') == 'NE'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5 3 4\n3\n4\n5\n6\n7\n\"\"\") == \"DA\"\nassert solution(\"\"\"\n1 2\n2\n2\n\"\"\") == \"NE\"\nassert solution(\"\"\"\n3 2\n2\n3\n\"\"\") == \"DA\"\nassert solution(\"\"\"\n1 1\n1\n\"\"\") == \"NE\"\nassert solution(\"\"\"\n3 2\n2\n3\n\"\"\") == \"NE\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 4') == 'DA', 'Expected \\'DA\\', found \\'{}\\''.format(solution('5 3 4'))\nassert solution('5 3 3') == 'NE', 'Expected \\'NE\\', found \\'{}\\''.format(solution('5 3 3'))\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2, 0, 0]) == 6\nassert solution([2, 7, 42]) == 42\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    2\n    0 0\n    7 42\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3 2\\n5 6\\n7 8\\n10 9\") == \"7\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1\n0 0\n\"\"\") == \"6\"\nassert solution(\"\"\"\n2\n0 0\n7 42\nSample Input:\n2\n0 0\n1 1\nSample Output:\n1\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n0 0\\n7 42') == '6'\nassert solution('3\\n0 0\\n1 3\\n2 2\\n3 4\\n') == '4'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n0 0\\n7 42\\n\") == \"6\"\nprint(solution(input))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n0 0\n7 42\n''') == '6'\nassert solution('''\n1\n3\n1 2\n''') == '1'\nassert solution('''\n1\n5\n0 1\n0 2\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n0 0') == '6'\nassert solution('2\\n0 0\\n7 42') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n-> A\\n-> B\") == \"correct\"\nassert solution(\"2\\n-> A\\n-> A\") == \"correct\"\nassert solution(\"3\\n-> A\\n-> A\\n-> A\") == \"correct\"\nassert solution(\"4\\n-> A\\n-> A\\n-> A\\n-> A\\n-> A\") == \"correct\"\nassert solution(\"5\\n-> A\\n-> A\\n-> A\\n-> A\\n-> A\\n-> A\") == \"correct\"\n",
        "num_ids_2": 36,
        "num_ids_4": 88
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'correct'\nassert solution('2') == '1'\nassert solution('3') == 'correct'\nassert solution('4') == '1'\nassert solution('5') == 'correct'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'correct'\nassert solution('1 2') == '1'\nassert solution('1 2 1') == '2'\nassert solution('1 2 1 3') == '1'\nassert solution('1 2 1 3 4') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n
        "num_ids_2": 1620,
        "num_ids_4": 1620
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> A -> B\n-> C -> D\n-> E -> F\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> A -> B\n-> C -> D\n-> E -> F\n-> A -> E\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> A -> E\n-> C -> D\n-> E -> F\n-> A -> E\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> A -> E\n-> C -> D\n-> E -> F\n-> A -> E\n''') == 'correct'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n\") == \"correct\"\nassert solution(\"1\\n1 2 3 4 5\\n1 -> 2\\n1 -> 3\\n1 -> 4\\n1 -> 5\\n\") == \"correct\"\nassert solution(\"1\\n1 2 3 4 5\\n1 -> 2\\n1 -> 3\\n1 -> 4\\n1 -> 5\\n6 7 8 9\\n6 -> 9\\n\") == \"correct\"\nassert solution(\"1\\n1 2 3 4 5\\n1 -> 2\\n1 -> 3\\n1 -> 4\\n1 -> 5\\n\") == \"correct\"\nassert solution(\"1\\n1 2 3 4 5\\n1 -> 2\\n1 -> 3\\n1 -> 4\\n1 -> 5\\n\") == \"correct\"\n",
        "num_ids_2": 70,
        "num_ids_4": 159
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nA->B\\nB->C') == 'correct'\nassert solution('2\\nA->B\\nA->C') == 'correct'\nassert solution('2\\nA->C\\nB->C') == 'correct'\nassert solution('3\\nA->B\\nB->C\\nC->D\\nD->E') == 'correct'\nassert solution('4\\nA->B\\nB->C\\nC->D\\nC->E\\nD->E') == 'correct'\n",
        "num_ids_2": 40,
        "num_ids_4": 90
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'correct'\nassert solution('2') == 'correct'\nassert solution('3') == 'correct'\nassert solution('4') == 'correct'\nassert solution('5') == 'correct'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\nA-> A\nA-> A\nA-> A\nB-> A\nB-> A\nB-> A\nC-> A\nC-> A\nC-> A\nD-> A\nD-> A\nD-> A\nE-> A\nE-> A\nE-> A\nF-> A\nF-> A\nF-> A\nG-> A\nG-> A\nG-> A\nH-> A\nH-> A\nI-> A\nI-> A\nJ-> A\nJ-> A\nK-> A\nK-> A\nL-> A\nL-> A\nM-> A\nM-> A\nN-> A\nN-> A\nO-> A\nO-> A\nP-> A\nP-> A\nQ-> A\nQ-> A\nR-> A\nR-> A\nS-> A\nS-> A\nT-> A\nT-> A\nU-> A\nU-> A\nV-> A\nV-> A\nW-> A\nW-> A\nX-> A\nX-> A\nY-> A\nY-> A\nZ-> A\nZ-> A\n-> A\n-> A\n''') == 'correct'\nassert solution('''\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\nA-> A\nA-> A\nA-> A\nB-> A\nB-> A\nB-> A\nC-> A\nC-> A\nC-> A\nD-> A\nD-> A\nD-> A\nE-> A\nE-> A\nE-> A\nF-> A\nF-> A\nF-> A\nG-> A\nG-> A\nG-> A\nH-> A\nH-> A\nI-> A\nI-> A\nJ-> A\nJ-> A\nK-> A\nK-> A\nL-> A\nL-> A\nM-> A\nM-> A\nN-> A\nN-> A\nO-> A\nO-> A\nP-> A\nP-> A\nQ-> A\nQ-> A\nR-> A\nR-> A\nS-> A\nS-> A\nT-> A\nT-> A\nU-> A\nU-> A\nV-> A\nV-> A\nW-> A\nW-> A\nX-> A\nX-> A\nY-> A\nY-> A\nZ-> A\nZ-> A\n-> A\n-> A\n''') == 'correct'\nassert solution('''\n-> A\n-> B\n-> C\n-> D\n-> E\n-> F\n-> G\n-> H\n-> I\n-> J\n-> K\n-> L\n-> M\n-> N\n-> O\n-> P\n-> Q\n-> R\n-> S\n-> T\n-> U\n-> V\n-> W\n-> X\n-> Y\n-> Z\nA-> A\nA-> A\nA-> A\nB-> A\nB-> A\nB-> A\nC-> A\nC-> A\nC-> A\nD-> A\nD-> A\nD-> A\nE-> A\nE-> A\nE-> A\nF-> A\nF-> A\nF-> A\nG-> A\nG-> A\nG-> A\nH-> A\nH-> A\nI-> A\nI-> A\nJ-> A\nJ-> A\nK-> A\nK-> A\nL-> A\nL-> A\nM-> A\nM-> A\nM-> A\nN-> A\nN-> A\nN-> A\nO-> A\nO-> A\nP-> A\nP-> A\nQ-> A\nQ-> A\nR-> A\nR-> A\nS-> A\nS-> A\nT-> A\nT-> A\nU-> A\nU-> A\nV-> A\nV-> A\nW-> A\nW-> A\nX-> A\nX-> A\nY-> A\nY-> A\nZ-> A\nZ-> A\n-> A\n-> A\n''') == 'correct'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'correct'\nassert solution('5\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n') == 'correct'\nassert solution('5\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n-> PINK\\n') == 'correct'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL\\n') == '3'\nassert solution('3\\n-> ALICE\\n-> BOB\\nALICE BOB -> CARL') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 108
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Penny Franklin\") == \"Penny Franklin\"\nassert solution(\"Marti Graham\") == \"Marti Graham\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Joseph Ivers\") == \"Joseph Ivers\"\nassert solution(\"Connie Froggatt\") == \"Runoff!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner''') == 'Connie Froggatt', 'First'\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner''') == 'Connie Froggatt', 'Second'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    Penny Franklin\n    Marti Graham\n    Connie Froggatt\n    Joseph Ivers\n    Connie Froggatt\n    Penny Franklin\n    Connie Froggatt\n    Bruce Stanger\n    Connie Froggatt\n    Barbara Skinner\n    Barbara Skinner\n    ***\n    ''') == 'Connie Froggatt'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Penny Franklin\") == \"Connie Froggatt\", f\"Should return 'Connie Froggatt' for {'Penny Franklin'}\"\nassert solution(\"Marti Graham\") == \"Connie Froggatt\", f\"Should return 'Connie Froggatt' for {'Marti Graham'}\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\", f\"Should return 'Connie Froggatt' for {'Connie Froggatt'}\"\nassert solution(\"Connie Froggatt\") == \"Connie Froggatt\", f\"Should return 'Connie Froggatt' for {'Connie Froggatt'}\"\nassert solution(\"Bruce Stanger\") == \"Connie Froggatt\", f\"Should return 'Connie Froggatt' for {'Bruce Stanger'}\"\n",
        "num_ids_2": 70,
        "num_ids_4": 148
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"Runoff!\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\n***\") == \"Connie Froggatt\"\n\"\"\"\nimport collections",
        "num_ids_2": 62,
        "num_ids_4": 117
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Connie Froggatt'\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Connie Froggatt'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Runoff!'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Connie Froggatt'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Runoff!'\n'''\n\n\nimport sys\nimport math\nimport os",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nprint(solution(open(\"input.txt\")))\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == \"Connie Froggatt\"\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n''') == \"Barbara Skinner\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic') == '2'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '2'\nassert solution('7') == '4'\nassert solution('7') == '3'\nassert solution('7') == '3'\n\"\"\"\nfrom itertools import combinations",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\nassert solution('''\n1\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n'\n                'Jabba-the-Hutt Huttese\\n'\n                'Bib-Fortuna Huttese Basic\\n'\n                'Boba-Fett Basic Huttese\\n'\n                'Chewbacca Shyriiwook Basic\\n'\n                'Luke Basic Jawaese Binary\\n'\n                'Grakchawwaa Shyriiwook Basic Jawaese\\n'\n                'R2D2 Binary Basic\\n') == '2'\n\nassert solution('2\\n'\n                'Jabba-the-Hutt Huttese\\n'\n                'Bib-Fortuna Huttese Basic\\n'\n                'Boba-Fett Basic Huttese\\n'\n                'Chewbacca Shyriiwook Basic\\n'\n                'Luke Basic Jawaese Binary\\n'\n                'Grakchawwaa Shyriiwook Basic Jawaese\\n'\n                'R2D2 Binary Basic\\n') == '1'\n\nassert solution('1\\n'\n                'Chewbacca Zyzzyxzzy\\n'\n                'Graxenin Wut Wut Wut\\n'\n                'Sree Ijee Ijee Ijee\\n'\n                'You Ijee Ijee Ijee\\n'\n                'R2D2 Wut Wut Wut\\n') == '1'\n\nassert solution('2\\n'\n                'Jabba-the-Hutt Huttese\\n'\n                'Bib-Fortuna Huttese Basic\\n'\n                'Boba-Fett Basic Huttese\\n'\n                'Chewbacca Zyzzyxzzy\\n'\n                'Luke Basic Jawaese Binary\\n'\n                'Grakchawwaa Shyriiwook Basic Jawaese\\n'\n                'R2D2 Wut Wut Wut\\n') == '2'\n\nassert solution('1\\n'\n                'Jabba-the-Hutt Huttese\\n'\n                'Bib-Fortuna Huttese Basic\\n'\n                'Boba-Fett Basic Huttese\\n'\n                'Chewbacca Zyzzyxzzy\\n'\n                'Luke Basic Jawaese Binary\\n'\n                'Grakchawwaa Shyriiwook Basic Jawaese\\n'\n                'R2D2 Wut Wut Wut\\n') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"2\"\nassert solution(\"\"\"\n6\nHan Solo Huttese Basic\nChewbacca Grokchawwaa Huttese Basic\nJabba the Huttese Basic\nBabar the Huttese Basic\nLuke the Huttese Basic\nR2D2 Binary Basic\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\nChewbacca Jawaese\nLuke Jawaese\nR2D2 Basic\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\nChewbacca Jawaese\nLuke Jawaese\nR2D2 Basic\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n\nassert solution('''\n6\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '1'\n\nassert solution('''\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '0'\n\nassert solution('''\n4\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '3'\n\nassert solution('''\n5\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('200') =='stay home'\nassert solution('300') =='stay home'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('5 1000 2 3') == '900'\nassert solution('8 1000 2 3') == '900'\nassert solution('15 1000 2 3') == '900'\nassert solution('23 1000 2 3') == '900'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n\nassert solution('''\n3 1000 2 3\n300\n0 2 2\n300\n27 3 20\n''') == '600'\n\nassert solution('''\n3 1000 2 3\n200\n0 2 2\n500\n27 3 20\n''') == '0'\n\nassert solution('''\n3 1000 2 3\n300\n0 2 2\n300\n27 3 20\n''') == '0'\n\nassert solution('''\n3 1000 2 3\n200\n0 2 2\n500\n27 3 20\n''') == '900'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 100 1 1\n3\n1\n2\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n3 1000 2 3\n200\n1 2 2\n300\n27 3 20\nSample Output:\n900\n\"\"\") == \"900\"\n\nassert solution(\"\"\"\n3 100 1 1\n100\n1 2 2\n100\n27 3 20\nSample Output:\n1200\n\"\"\") == \"1200\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\nprint(solution('''\n10 10 1 1\n1 3 5\n7 6 2\n13 9 9\n20 10 10\n13 9 9\n15 12 4\n8 13 1\n13 7 5\n9 7 2\n14 9 3\n''')) == '1010'\nprint(solution('''\n3 3 2 3\n2 2 2\n1 2 2\n''')) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\nSample Output:\n900\n''') == '900'\n\nassert solution('''\n2 2 1\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') == '900'\nassert solution('3 10000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') == '900'\nassert solution('3 5000000 2 3\\n200\\n0 2 2\\n300\\n27 3 20') == '900'\nassert solution('10 4 2 3\\n900\\n0 2 2\\n300\\n27 3 20') == '900'\nassert solution('1 3 2 3\\n400\\n0 2 2\\n300\\n27 3 20') == '400'\n",
        "num_ids_2": 58,
        "num_ids_4": 117
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n\nassert solution('''\n10 1000 2 3\n200\n0 2 2\n300\n27 3 20\n''') == '900'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1000 2 3\\n200\\n0 2 2\\n300') == '900'\nassert solution('2 1000 2 3\\n200\\n0 2 2\\n300') == '900'\nassert solution('3 1000 2 3\\n200\\n0 2 2\\n300') == '900'\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('3 100 200 2 3') == '800'\nassert solution('3 100 300 2 3') == '800'\nassert solution('3 100 300 1 2 3') == '800'\nassert solution('3 100 300 1 2 3') == '800'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\nA C D F') == 'A# D# F'\nassert solution('3\\nA C D E F G') == 'A# C D# F'\nassert solution('4\\nA C D E F G A') == 'A# C D# E F'\nassert solution('5\\nC D E F G A B') == 'A# C D# E F'\nassert solution('6\\nC D E F G A B C') == 'A# C D# E F'\n",
        "num_ids_2": 43,
        "num_ids_4": 93
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == \"A# C D# F\"\nassert solution('12') == \"B A# C D# F\"\nassert solution('11') == \"B A# C D# F\"\nassert solution('19') == \"B A# C D# E F\"\n",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == 'none'\nassert solution('3') == 'none'\nassert solution('1') == 'A C D E F G'\nassert solution('3 5') == 'A# D# F# G'\n",
        "num_ids_2": 20,
        "num_ids_4": 52
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'A#'\nassert solution('5') == 'A# C# D# F#'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'A# C D# F'\nassert solution('2') == 'A# C D# F'\nassert solution('3') == 'C D# E F F'\nassert solution('4') == 'C D# E F'\nassert solution('5') == 'A D# E F F'\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"C D F D C D F F C \nA# C D# F\"\"\") == \"A# C D# F\"\n\nassert solution(\n\"\"\"A C D E F G A B C D E \nF E A B C D E F\"\"\") == \"A# C D# F\"\n\nassert solution(\n\"\"\"B A C D E F G A B C D E \nF E A B C D E F\"\"\") == \"A# C D# F\"\n\nassert solution(\n\"\"\"D E F G A B C D E F \nG A B C D E F G\"\"\") == \"A# C D# F\"\n\nassert solution(\n\"\"\"A D E F G A B C D E \nF E A B C D E F\"\"\") == \"A# C D# F\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(s) == \"A# C D# F\"\n\ns = '''1\nC D F D C D F F C \n\n2\nC D F D C D F F C\n\n3\nC D F D C D D E F'''\n\ns = '''1\nA B C D E F G\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10 11\n\n2\nA D E F G\n1 2 3 4 5 6 7 8 9 10 11\n1 2 3 4 5 6 7 8 9 10 11 12\n\n3\nA B C D E F G\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341 341",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == 'none'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"A# C D# F\"\nassert solution(\"5\") == \"C D# E F\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va', \"First\"\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska', \"Second\"\n\"\"\"\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('v\u00e4nster haer n\u00e4r rikssvenska') == 'v\u00e4nster haer n\u00e4r rikssvenska'\nassert solution('s\u00e4ter vi rikssvenska') =='s\u00e4ter vi rikssvenska'\nassert solution('nytt ae anv\u00e4ndare') == 'nytt ae anv\u00e4ndare'\n",
        "num_ids_2": 60,
        "num_ids_4": 130
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\", \"Test 1 failed\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\", \"Test 2 failed\"\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('dae ae ju traeligt va') == 'haer talar vi rikssvenska'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''vad \u00e4r meningen av b\u00e4rvet i sk\u00e4rmen?''') == 'dae ae ju traeligt va'\nassert solution('''vad \u00e4r meningen av b\u00e4rvet i sk\u00e4rmen?''') == 'haer talar vi rikssvenska'",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('k\u00e4nna tj\u00e4nst kvar') == 'k\u00e4nna tj\u00e4nst kvar'\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n\"\"\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''dae ae ju traeligt va''') == 'dae ae ju traeligt va'\nassert solution('''haer talar vi rikssvenska''') == 'haer talar vi rikssvenska'\nassert solution('''dae ae ju traeligt va\nhaer talar vi rikssvenska''') == 'dae ae ju traeligt va'\n\n'''\n        \n    stdin = stdin.strip()\n    temp = stdin.split('\\n')\n    d = temp[0]\n    s = temp[1]\n    if d.count('\u00e4') >= 0.4*len(d):\n        return s\n    return 'haer talar vi rikssvenska'",
        "num_ids_2": 66,
        "num_ids_4": 82
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('dae ae ju traeligtva') == 'haer talar vi rikssvenska'\nassert solution('de ae julligt va') == 'haer talar vi rikssvenska'",
        "num_ids_2": 58,
        "num_ids_4": 86
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 6\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n...#.\\n...#.\\n.....') == 'E..E#.'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n'\nassert solution('7 4') == '.....\\nE...#\\n...##\\n...#.\\n.....\\n...##\\n...#.\\n'\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == 'EEEEE', 'test1'\nassert solution('1 2') == '#', 'test2'\nassert solution('4 5') == 'E..E#', 'test3'\nassert solution('5 7') == 'E..E#', 'test4'\nassert solution('10 10') == 'E..E#E..E.E...E#E#E', 'test5'\n",
        "num_ids_2": 31,
        "num_ids_4": 67
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\\n\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\nassert solution(\"10 10\\n......\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........\\n........",
        "num_ids_2": 1590,
        "num_ids_4": 1590
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\n\n'''",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 6\n....#.\n....#.\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"5 6\n...#.\n...#.\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == 'E...E'\nassert solution('5 4') == 'E..E#'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\nassert solution(\"10 6 7 1 6 2\") == \"10 7 1 6 2\"\nassert solution(\"12 9 10 7 3 2\") == \"12 10 7 3 2\"\nassert solution(\"12 2 5 4 4 1\") == \"12 10 2 1 4 5\"\nassert solution(\"4 4 4 4 4\") == \"4 5 4 4 4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 80
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('3 3 3') == '3 3 3'\nassert solution('1 2 3 4 5 6') == '1 2 3 4 5 6'\nassert solution('4 4 4') == '4 4 4'",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''12 8 2 4 10 3 25 14''') == '12 10 3 8 4 2'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('1 1 1 1 1 1 1') == '1 1 1 1 1 1'\nassert solution
        "num_ids_2": 43,
        "num_ids_4": 1543
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('10 8 3 25 14 12 11 4') == '10 8 3 25 14 12 11 4'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open(\"d4_input.txt\").read()) == \"12 10 3 8 4 2\"\nassert solution(open(\"d4_test_case_1.txt\").read()) == \"4 3 2 10 8 12\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1 3\") == \"4\"\nassert solution(\"1 3 0\") == \"2\"\nassert solution(\"2 1 2\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 0 3') == '4'\nassert solution('4 3 5') == '1'\nassert solution('0 0 0') == '0'\nassert solution('2 0 0') == '0'\nassert solution('1 3 0') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 0 3\n''') == '4'\nassert solution('''\n0 1 2\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n9 0 3\n''') == '4'\nassert solution('''\n10 2 10\n''') == '11'\nassert solution('''\n7 2 5\n''') == '8'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution([9, 0, 3]) == \"4\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n9 0 3\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n10 1 2\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10 1 10\n\"\"\") == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 0 2') == '4'\nassert solution('10 1 0') == '1'\nassert solution('10 0 1') == '1'\nassert solution('10 2 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n7\\n0') == '4'\nassert solution('6\\n0\\n8') == '2'\nassert solution('0\\n6\\n0') == '6'\nassert solution('0\\n0\\n0') == '0'\nassert solution('0\\n0\\n0') == '0'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 0 3\n''') == '4'\n\nassert solution('''\n6 0 4\n''') == '4'\n\nassert solution('''\n6 2 4\n''') == '2'\n\nassert solution('''\n6 3 4\n''') == '3'\n\nassert solution('''\n10 0 7\n''') == '5'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1010') == '12'\nassert solution('10100') == '1024'\nassert solution('1010000') == '12000000'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1010\") == \"12\"\n\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"3\"\nassert solution(\"111\") == \"6\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1010') == '12'\nprint(solution('1010'))\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"1111\") == \"31\"\nassert solution(\"1000\") == \"10\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"12\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1010') == '12'\nassert solution('1011') == '13'\nassert solution('1111') == '37'\nassert solution('10101') == '52'\nassert solution('10111') == '57'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"1011\") == \"31\"\nassert solution(\"0\") == \"0\"\nassert solution(\"00\") == \"0\"\nassert solution(\"11\") == \"31\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1010\") == \"12\"\nassert solution(\"1101\") == \"13\"\nassert solution(\"101\") == \"10\"\nassert solution(\"1111\") == \"31\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1010') == '12'\nassert solution('10101') == '25'\nassert solution('101001') == '375'\nassert solution('10111') == '625'\nassert solution('101100010111') == '7894'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '33'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == \"2\"\nassert solution('2 3') == \"2\"\nassert solution('1 2') == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 6') == '1'\nassert solution('10 11') == '0'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n..o\no..\n''') == '2'\nassert solution('''\n10 10\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o.o\n.o.o.o.o.o.o",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n.o\\no.\") == \"2\"\nprint('\u2705  Test Pass')",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3 3\n.o.\n.o.\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n6 2\n...\n...\n...\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n5 5\n.o.\n.o.\n.o.\n.o.\n\"\"\") == \"5\"\n\nassert solution(\n\"\"\"\n5 5\n.o.\n.o.\n.o.\n.o.\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n4 4\n.o.\n.o.\n.o.\n.o.\n\"\"\") == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n.o\\n.o\") == \"2\"\nassert solution(\"3 3\\n.o.\\no.o\\noo.\\n.o\") == \"3\"\nassert solution(\"4 4\\n.ooo\\n.ooo\\n.ooo\\n.o.o\") == \"4\"\nassert solution(\"2 6\\n.ooo\\n.ooo\\n.ooo\\n.o.o\\no.o\\noo.\\n.o\") == \"3\"",
        "num_ids_2": 47,
        "num_ids_4": 117
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 3\n..o\no..\n''') == '2'\n\nassert solution('''8 3\n...o\no.o\n...o\no.o\n...o\no.o\no.o\n...o''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\no..\n..o\n...\no..\n''') == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3\n...o\no...\n''') == \"2\"\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('10 10') == 'LADICA'\nassert solution('100 100') == 'LADICA'\nassert solution('200 200') == 'SMECE'\nassert solution('100 200') == 'SMECE'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('5 3') == 'LADICA'\nassert solution('5 3') == 'LADICA'\nassert solution('5 3') == 'LADICA'\nassert solution('5 3') == 'LADICA'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('4 3') == 'SMECE'\nassert solution('9 3') == 'SMECE'\nassert solution('8 3') == 'SMECE'\nassert solution('8 5') == 'LADICA'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"LADICA\\n\" * 2\nassert solution(\"5 3\") == \"LADICA\\n\" * 2\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('5 4') == 'LADICA'\nassert solution('5 5') == 'LADICA'\nassert solution('10 10') == 'LADICA'\nassert solution('100 100') == 'SMECE'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"LADICA\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('6 4') == 'LADICA'\nassert solution('4 3') == 'LADICA'\nassert solution('3 3') == 'SMECE'\nassert solution('1 2') == 'LADICA'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 2\n1 3\n1 2\n''') == 'SMECE'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'SMECE'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n0\\n') == '1 2'\nprint(solution(input()))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n0\n''') == '1 2'\nassert solution('''5\n3 2 4 1\n''') == '1 2 3 4 5'\nassert solution('''20\n2 10 7 3 9 1 1 1 5 8 7 5 2 8\n''') == '1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n0 1 2') == '1 2 0'\nassert solution('4\\n0 1 2 3') == '1 2 3 0'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3\\n') == '1 2 3'\nprint('YOUR ANSWER: ', solution(input()))\nassert solution('''4\n4\n5\n2 1 3\n''')) == '1 2 3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '0 1 2 3 4'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n0\n1 2''') == '1 2'\nprint(solution('''3\n4\n6\n7\n2\n1'''))\nprint(solution('''1\n0\n1'''))\nprint(solution('''4\n0\n1\n2\n3'''))\n'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1 2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution('''10 3\n0 3\n2 1\n2 2\n0 0\n1 1\n0 1\n1 1\n1 1\n0 0\n1 0\n1 1\n1 1\n0 0\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n0 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n0 0\n1 1\n0 0\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n0 0\n1 1\n0 0\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n0 0\n1 1\n0 0\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n0 0\n1 1\n0 0\n1 0\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '1'\nassert solution('''\n6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n''') == '0'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '1'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '1'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '0'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '0'\nassert solution('''6 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n1 3''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n') == \"1\"\nassert solution('5 3 5\\n1 1\\n0 2\\n0 2\\n0 2\\n') == \"0\"\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n\") == \"1\"\nassert solution(\"5 4 3\\n0 1\\n1 3\\n0 2\\n0 4\\n4 2\\n\") == \"0\"\nassert solution(\"3 5 2\\n0 1\\n0 2\\n0 3\\n1 5\\n\") == \"2\"\n",
        "num_ids_2": 73,
        "num_ids_4": 103
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 5') == '1'\nassert solution('6 3 5') == '1'\nassert solution('6 3 5') == '1'\nassert solution('6 3 5') == '1'\nassert solution('6 3 5') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '4 3 1'\nassert solution('3') == '4 3 1'\nassert solution('4') == '4 3 1'\nassert solution('5') == '4 3 1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 4\") == \"4 3 1\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '3 4 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 3 4\") == \"4 3 1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 3 4\n''') == '4 3 1'\nprint(solution('''\n3\n1 3 4\n'''))\nassert solution('''\n4\n1 2 5 6\n''') == '2 1 4 5'\nprint(solution('''\n4\n1 2 5 6\n'''))\nassert solution('''\n5\n1 2 3 4 5\n''') == '2 1 3 4 5'\nprint(solution('''\n5\n1 2 3 4 5\n'''))\nassert solution('''\n5\n1 2 3 4 5\n''') == '2 3 1 4 5'\nprint(solution('''\n5\n1 2 3 4 5\n'''))\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 3 2 4 5'\nprint(solution('''\n5\n1 2 3 4 5\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == \"impossible\"\nassert solution('''2\n1 3\n4\n3 2\n''') == \"4 3 1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 2\n''') == '1 2'\nassert solution('''\n3\n1 3 4\n''') == '4 3 1'\nassert solution('''\n4\n1 2 3 4\n''') == '4 1 2 3'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1 2 4 3 5'\nassert solution('''\n20\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\n''') == '19 20 20 20 20 20 20 20 20 20 20 20 20 20 20 20'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"impossible\"\nassert solution(\"3\\n1 3 4\\n\") == \"4 3 1\"\nassert solution(\"7\\n1 4 3 2 2 4\\n\") == \"7 3 4 2 2 1\"\nassert solution(\"7\\n1 2 3 4 5 6 7\\n\") == \"7 1 5 3 2 6 4\"",
        "num_ids_2": 28,
        "num_ids_4": 80
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3\\n\"\n    \"1 3 4\"\n    ) == \"4 3 1\"\nassert solution(\n    \"4\\n\"\n    \"1 3 4\"\n    ) == \"impossible\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 3 4\n''') == '4 3 1'\nassert solution('''\n4\n-1 1 -1 1\n''') == '-1 -1 1 1'\nassert solution('''\n10\n1 10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10\n''') == '10 -10 -10 -10 -10 -10 -10 -10 -10 -10 -10 1'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10 10\n20 20 20\n''') == \"18.400\"\n\nassert solution('''\n3 10\n20 20 20\n''') == \"18.400\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 20 15') == '18.40000'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"18.400\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '2 20 15\\n3 10\\n') == '18.400'\nprint(solution(\n    '4 1 5\\n4 1\\n') == '7.000')\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n5\\n3\\n10\") == \"18.400\"\nassert solution(\"2\\n10\\n3\\n10\") == \"21.000\"\nassert solution(\"2\\n5\\n3\\n10\") == \"18.000\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('3 2') == '2.200'\nassert solution('3 4') == '0.400'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 20 15') == \"18.400\"\nassert solution('2 5 10') == \"27.000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 20 15\\n3 10') == '18.400'\nassert solution('5 4 2\\n1 1\\n1 1\\n2 1\\n4 2\\n2 1\\n5 1\\n5 1\\n5 2\\n4 2') == '10.000'\n\"\"\"\n",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 20 15') == '18.400', solution('2 20 15')\nassert solution('10 10') == '20.000', solution('10 10')\nassert solution('2 2') == '4.000', solution('2 2')",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('2 5 4') == '2.222222222222'\nassert solution('2 4 8') == '2.0'\n",
        "num_ids_2": 33,
        "num_ids_4": 47
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n.S.H..\\n.H.S..') == '2'\nassert solution('5\\n.S.H.\\n.H.S.\\n.H.S.\\n.H.S.\\n.H.S.') == '4'\n",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"5\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n.S.H.') == '5'\nassert solution('2\\n.S.H.\\n.H.S.') == '1'\nassert solution('5\\n.S.H.\\n.H.S.\\n.S.H.') == '3'\nassert solution('5\\n.S.H.\\n.H.S.\\n.S.H.\\n.H.S.') == '3'\nassert solution('5\\n.H.S.\\n.H.S.\\n.S.H.\\n.H.S.') == '1'",
        "num_ids_2": 41,
        "num_ids_4": 110
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\nS...\n.....\nS...\n''') == \"4\"\nassert solution('''8\nHHHHHHHH\nH......\nH......\nHHHHHHHH\nH......\nH......\nHHHHHHHH\nH......\nHHHHHHHH\n''') == \"2\"\nassert solution('''4\nH...H\n...S\n...S\n''') == \"1\"\nassert solution('''4\nHHHHHHHH\nHHHHHHHH\nHHHHHHHH\nHHHHHHHH\n''') == \"0\"\nassert solution('''5\nHHHHHHHH\nHHHHHHHH\nHHHHHHHH\nH...S\nS...S\n''') == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"5\"\nassert solution(\"2\") == \"0\"\nassert solution(\"7\") == \"0\"\nassert solution(\"10\") == \"8\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '4'\nassert solution('5.2') == '4'\nassert solution('5.1.1.2') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 38
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n.H\\n...S\\n.H\\n...H') == 5\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5 2 3\n2 4\n1 3 5\"\"\") == \"0\", \"Wrong\"\nassert solution(\"\"\"\n5 2 5\n2 3 5\n1 4 6\"\"\") == \"1\", \"Wrong\"\nassert solution(\"\"\"\n6 2 1\n1 2\n2 4\n3 5\n5 4\n4 3\n1 5\"\"\") == \"0\", \"Wrong\"\nassert solution(\"\"\"\n1 1\n1 1\"\"\") == \"0\", \"Wrong\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 3') == '0'\nassert solution('10 3 5') == '1'\nassert solution('8 3 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 3') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2 3\n2 4\n1 3 5''') == '0'\n\nassert solution('''5 2 3\n2 4\n1 3 5''') == '0'\n\nassert solution('''5 2 1\n1 2\n1 3 4\n5 6\n3 4 5''') == '0'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '0'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 34
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3\\n2 4\\n1 3 5') == \"0\"\nassert solution('5 2 4\\n1 2\\n2 3\\n3 4\\n5 1') == \"4\"\nassert solution('5 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == \"3\"\nassert solution('5 3 4 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == \"0\"\nassert solution('5 5 5 5\\n1 2\\n2 3\\n3 4\\n4 5\\n5 1') == \"0\"\n",
        "num_ids_2": 49,
        "num_ids_4": 115
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2 3\n2 4\n1 3 5''') == '0'\n\n'''\n4 2 2\n1 2\n2 3\n1 4\n2 5\n2 3\n1 4\n1 2\n3 1\n2 4\n3 2\n4 5\n1 4\n3 4\n'''\n'''\nExpected Output:\n1\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 3\n2 4\n1 3 5\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n3\\n4\\n') == '1'\nassert solution('5 2 3\\n2 4\\n1 3 5\\n') == '0'\nassert solution('5 2 4\\n2 1 5\\n1 3 4\\n') == '2'\nassert solution('5 2 4\\n1 2 3\\n4 5 6\\n') == '1'\n",
        "num_ids_2": 42,
        "num_ids_4": 90
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 2 3\\n2 4\\n1 3 5\") == \"0\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '0.000000000'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    1 1\n    ''') == '0.000000000'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('2 1') == '0.100000'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('3 4') == '0.88888888'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('5 5') == '0.1000000'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '0.000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 2') == '0.3333333333'\nassert solution('1 3') == '0.66666666666'\nassert solution('1 4') == '0.99999999995'\nassert solution('1 5') == '1.0'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 1\n''') == '0.000000000'\n\nassert solution('''\n100 2\n''') == '4.29999995'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0.000000000'\n\n----\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(r\"\"\"\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n103 102 101 488 100\n103 102 101 488 100\n\"\"\") == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\nassert solution(\"2\\n1 100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\nassert solution(\"3\\n1 100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"1\"\nassert solution(\"4\\n1 100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"1\"",
        "num_ids_2": 67,
        "num_ids_4": 135
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\nassert solution('2\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '1'\nassert solution('3\\n100 100 200 300 100\\n100 200 300 101 102\\n103 102 101 488 100') == '0'\nassert solution('5\\n100 100 200 300 100\\n100 200 300 101 102\\n103 102 101 488 100\\n100 101 102 103 200\\n103 102 101 488 100\\n103 102 101 488 100\\n103 102 101 488 100') == '0'\nassert solution('1\\n100\\n100\\n100\\n100') == '1'\n\"\"\"\n\nn = int(input())\n\ncombos = []\n\nfor i in range(n):\n    combos.append([int(i) for i in input().split()])\n\nfor j in range(n):\n    curr = combos[j]\n    for k in range(j+1,n):\n        if curr == combos[k]:\n            print(j+1)\n            break\n",
        "num_ids_2": 66,
        "num_ids_4": 161
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == ''\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\nassert solution(\"1\\n100 101 102 103 488\\n100 200 300 101 102\") == \"1\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100') == '2'\n'''\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2'\nassert solution('''\n5\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n101 200 300 101 102\n103 102 101 488 100\n''') == '5'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n') == 'None'\nassert solution('22\\n') == 'None'\nassert solution('1730\\n') == '1729'\nprint('Cheers, Coders!')",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1729\"\nassert solution([1730]) == \"1729\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'None'\nassert solution('3') == 'None'\nassert solution('8') == '4'\nassert solution('15') == '6'\nassert solution('24') == 'None'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('5') == '10'\nassert solution('10') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '12'\n    ) == '12', '12'\n\nassert solution(\n    '18'\n    ) == '17', '17'\n\nassert solution(\n    '1000'\n    ) == '999', '999'\n\nassert solution(\n    '12'\n    ) == '13', '13'\n\nassert solution(\n    '18'\n    ) == '19', '19'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"none\"\nassert solution(\"100\") == \"99\"\nassert solution(\"2\") == \"1\"\nassert solution(\"200\") == \"200\"\nassert solution(\"5000000\") == \"1729\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1730') == '1729'\nassert solution('5') == 'None'\n\"\"\"\n\nlimit = int(input())\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"16\\n1729\") == \"1729\"\nassert solution(\"12\\n12\") == \"None\"\nassert solution(\"7\\n11\") == \"11\"\nassert solution(\"1\\n1\") == \"1\"",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'none'\nassert solution('4') == '4'\nassert solution('17') == '17'\nassert solution('1729') == '1729'\nassert solution('1730') == '1729'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('65536') == '16'\nassert solution('1111') == '2'\nassert solution('1') == '1'\nassert solution('4') == '1'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('65536') == '16'\nassert solution('5') == '16'\nassert solution('5') == '16'\nassert solution('5') == '16'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('65536') == '16'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"65536\") == \"16\"\nassert solution(\"36\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"65536\") == \"16\"\nassert solution(\"47\") == \"12\"\nassert solution(\"22\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('65536') == '16'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n....\n....\n....\n...K\n''') == '-1'\n\nassert solution('''6\n....\n....\n...#\n...K\n.##.\n''') == '4'\n\nassert solution('''5\n...#\n...#\n...#\n...#\n...#\n''') == '-1'\n\nassert solution('''4\n...#\n...#\n...#\n...#\n''') == '4'\n\nassert solution('''5\n...#\n...#\n...#\n...#\n...#\n''') == '-1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '-2'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n1\\n1\\n') == '-1'\nassert solution('3\\n0\\n2\\n3\\n') == '-1'\nassert solution('3\\n2\\n0\\n1\\n') == '4'\nassert solution('5\\n5\\n4\\n3\\n') == '1'\nassert solution('2\\n4\\n5\\n2\\n') == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 86
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n......#.\\n#....#.#\\n...###.\\n....##.#\") == '1'\nassert solution(\"1\\n#\\n\") == '-1'\nassert solution(\"3\\n...##\\n#...#\\n.###.\") == '5'\n",
        "num_ids_2": 47,
        "num_ids_4": 70
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n....\n....\n....\n...K\n''') == '2'\nassert solution('''8\n.....\n.....\n.....\n.#.#K\n.....\n.....\n.....\n''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n.\n.\n.\n''') == '-1'\nassert solution('''\n4\n...\n...\n...\n''') == '3'\nassert solution('''\n3\n.#\n.K\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n.....\\n....\\n...K') == '-1'\nassert solution('5\\n.....\\n...#\\n.....\\n##.#') == '2'\nassert solution('7\\n.....\\n...#\\n.....\\n#.#K\\n.....\\n.....\\n.....') == '1'\nassert solution('12\\n.......\\n...#.#\\n.#.#...\\n##.K.#\\n.#...#K\\n...#.K#\\n...#.#K\\n.......') == '6'",
        "num_ids_2": 45,
        "num_ids_4": 130
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n.###\\n.###\\n#.##') == '2'\nassert solution('8\\n.K.#.#\\n###.#.\\n#.#.#.#\\n#.###.#\\n#.#.#.#\\n#.###.#\\n####.#.\\n####.##') == '1'\n\nimport sys",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n...\n...\n.....\n....''') == '-1'\n\nassert solution('''1\n.....\n.....\n.....\n.....''') == '1'\n\nassert solution('''1\n.....\n.....\n....#\n.....\n.....''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n') == 'too late'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"23\"\nassert solution(\"1 0\") == \"too late\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"too late\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\nassert solution('''\n200 3\n2\n5\n7\n8\n''') == 'too late'\nassert solution('''\n200 6\n5\n1\n3\n9\n5\n''') == '6'\nassert solution('''\n200 2\n1\n4\n3\n9\n''') == 'too late'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\nassert solution('''\n100 10\n4\n5\n1\n0\n8\n2\n9\n3\n1\n2\n''') == 'too late'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n2 3\\n4 5\\n3 5\\n') == 'too late'\nassert solution('5 5\\n2 3\\n4 5\\n3 5\\n') == '23'\nassert solution('5 5\\n2 3\\n4 5\\n3 5\\n') == '23'\n",
        "num_ids_2": 51,
        "num_ids_4": 76
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1\\n1') == 'too late'\nassert solution('5 2\\n2') == 'too late'\nassert solution('5 3\\n3') == 'too late'\nassert solution('5 4\\n4') == 'too late'\nassert solution('5 5\\n5') == 'too late'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"100 5\n42\n3\n2\n99\n1\"\"\") == \"23\"",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"23\"\nassert solution([1, 2, 3, 4]) == \"3\"\nassert solution([1, 2, 3, 4]) == \"2\"\nassert solution([1, 2, 3, 4, 5]) == \"too late\"\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) == \"too late\"\n",
        "num_ids_2": 24,
        "num_ids_4": 59
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3') == '23'\nassert solution('1') == 'too late'\nassert solution('100 3') == '23'\nassert solution('4 5') == '23'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"cat dog fish\") == \"VBZPZLFRNXUATCDFMOGYHIJK\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"playfair example\") == \"MGHWBEZBYQSSEURBYGXMNCLUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"HSFCZGKFNMXDLNBXVZBZLOMGIV\"\n\"\"\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'MUIRMNTKQSLVJEBBDZAYWHFFX'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"hide the gold in the tree stump\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\n\n'''\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nA\nB\nC\nD\nE\nF\nG\nH\nI\nJ\nK\nL\nM\nN\nO\nP\nQ\nR\nS\nT\nU\nV\nW\nX\nY\nZ\n''') == 'CKMADWRKNSFEGZHVUJMXNPBFXDCQQDUZOCRIXGWD'\nassert solution('''\nCC\nDC\nEF\nFF\n''') == 'HQKNUVGLYIYOBXMSDCIMPXQONZDROCKE'\nassert solution('''\nBE\nEE\nEG\nEF\n''') == 'DQYJHBVZITGGAZCOCPQQXDMEUTQNNTNHJCM'\nassert solution('''\nAA\nBB\nCC\nDD\nEE\nFF\nGG\nHH\nII\nJJ\nKK\nLL\nMM\nNN\nOO\nPP\nQQ\nRR\nSS\nTT\nUU\nVV\nWW\nXX\nYY\nZZ\n''') == 'IYQKKSSZABBKBFFCCBHAAGGGNLTBBJJAYYYQZ'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"playfair example\") == \"BMNDZBXDKYBEJVDMUIXMMNUVIF\"\nassert solution(\"A man, a plan, a canal: Panama\") == \"AMNBXDKYBJVUIMANEFPLANTAC\"\n\n\"\"\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"playfair example\") == \"SNNIODKCMPSXMSHDXRID\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nHELLO WORLD\n''') == 'HELLO WORLD'\nassert solution('''\nPQLDZMHDTBKVGYFZPWVXCSQNZGRQFNMOUH\n''') == 'PQLLDZMHDTBKVGYFZPWVXCSQNZGRQFNMOUH'\nassert solution('''\nplayfair example\n''') == 'MBNMZGHRPZDHKLNXFZQAEGUMJYHXLYQZCKF'\nassert solution('''\nQYZXBUDUNPOBXFJKLZYMRYPHJKZXCHQYMCCMDSJUWSSH\n''') == 'QYZXBUDUNPOBXFJKLZYMRYPHJKZXCHQYMCCMDSJUWSSH'\nassert solution('''\nTREESTUMP\n''') == 'TREESTUMP'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"playfair example\") == \"MHFRVJYEQONZXDHRDTCNQXVIB\"\nassert solution(\"hide the gold in the tree stump\") == \"LJXKJDGBRCCHEQQNOSCXFUOIB\"\n\"\"\"\n\nimport sys\nimport os\n\nsys.path.append(os.path.abspath(\"../../my-lib\"))\nfrom my-lib import lists\n\nlines = lists.get_stripped_lines(sys.stdin)\n\nkey_phrase = lines.pop(0)\nplain_text = lines.pop(0)\n\nkey_phrase = lists.to_upper_case(key_phrase)\nplain_text = lists.to_upper_case(plain_text)\n\nkey = lists.create_key(key_phrase)\n\nkey = lists.replace_each(key, key_phrase, plain_text)\n\nprint(key)",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.000 1.000 2.000 2.000\\n1.500 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('0.500 0.500') == 'The gopher cannot escape.'\nassert solution('1.000 1.000 3.000 3.000\\n1.500 1.500') == 'The gopher can escape through the hole at ($2$,$2$).'\n",
        "num_ids_2": 63,
        "num_ids_4": 107
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"1.000 1.000 2.000 2.000\",\n    \"1.500 1.500\"\n) == \"The gopher can escape through the hole at ($1$,$1$).\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.500 1.500 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('2.000 2.000 1.000 1.000') == 'The gopher cannot escape.'\nassert solution('2.000 2.000 1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($2$,$2$).'\n",
        "num_ids_2": 66,
        "num_ids_4": 127
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"The gopher cannot escape.\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($2$, $3$).\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500''') == 'The gopher can escape through the hole at (1,1).'\nassert solution('''\n0.000 0.000 2.000 2.000\n0.500 0.500''') == 'The gopher can escape through the hole at (0,0).'\nassert solution('''\n1.000 0.000 1.000 1.000\n1.500 1.500''') == 'The gopher can escape through the hole at (1,1).'\nassert solution('''\n0.000 1.000 2.000 1.000\n0.500 1.500''') == 'The gopher can escape through the hole at (0,0).'\nassert solution('''\n1.000 2.000 2.000 1.000\n1.500 2.500''') == 'The gopher can escape through the hole at (1,1).'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '1.000 1.000 2.000 2.000\\n'\n    '1.500 1.500'\n) == 'The gopher can escape through the hole at ($1$,$2$).'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"The gopher can escape through the hole at ($1$, $2$).\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1 0 2 0 0 0 0 0 0 0 0 0 1 1 1 1 0 2 1 1 1 1 1 0 2 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 2 1 1 1 1 1 1 1 1 1 1 1 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 1581,
        "num_ids_4": 1581
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$2$).\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\"\nassert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\\n1.500 1.500\\n1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$2$).\"\n",
        "num_ids_2": 76,
        "num_ids_4": 135
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.'\nassert solution('1.500 1.500') == 'The gopher can escape through the hole at (1.5, 1.5).'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == 'Y'\nassert solution('4 3') == 'Y'\nassert solution('0 0') == 'Y'\nassert solution('0 1') == 'Y'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4\n3 3\n3\n''') == 'Y'\nassert solution('''\n2 2\n1 2\n2\n''') == 'N'\nassert solution('''\n-2 -3\n-2 -3\n-2 -3\n''') == 'Y'\nassert solution('''\n1 1\n1 2\n1\n''') == 'N'\nassert solution('''\n-2 1\n-2 2\n-2\n''') == 'N'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"5 5\n1 2\n3 4\n4\"\"\") == \"Y\"\nassert solution(\"\"\"5 5\n3 3\n4\"\"\") == \"N\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3 4\\n3 3\\n3') == 'Y'\nassert solution(\n    '3 5\\n2 4\\n2') == 'N'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\\n3 5\\n10\") == \"Y\"\nassert solution(\"3 2\\n2 5\\n10\") == \"N\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n2 1\n1''') == 'Y'\nassert solution('''3 3\n3 3\n2''') == 'Y'\nassert solution('''4 4\n4 4\n2\n1\n''') == 'N'\nassert solution('''10 4\n10 9\n9''') == 'N'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Y'\nassert solution('2') == 'N'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == 'Y'\nassert solution('1 2') == 'N'\nassert solution('2 2') == 'Y'\n\"\"\"\n\na, b = list(map(int, input().split()))\nc, d = list(map(int, input().split()))\nt = int(input())",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n3 3\n3''') == 'Y'\nassert solution('''3 4\n3 4\n3''') == 'N'\nassert solution('''4 4\n3 3\n3''') == 'N'\nassert solution('''10 4\n2 3\n2''') == 'Y'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 4\n3 3\n3''') == 'Y'\nassert solution('''3 4\n3 3\n0''') == 'N'\nassert solution('''3 4\n3 3\n1000000''') == 'N'\nassert solution('''3 4\n3 3\n-1000000''') == 'Y'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\") == stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 7\\n....V...\\n.......\\n.......\\n...#...\\n..###..\") == \".....V..\\n.....V..\\n..VVVV.\\n.VV#VV.\\n.V###V.\\n\"\n\"\"\"\nn, m = map(int, input().split())\n\ngrid = []\nfor i in range(n):\n    grid.append(list(input()))\n\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] == '.':\n            if i!= 0 and grid[i-1][j] == '#':\n                grid[i][j] = '.'\n            if i!= n - 1 and grid[i+1][j] == '#':\n                grid[i][j] = '.'\n            if j!= 0 and grid[i][j-1] == '#':\n                grid[i][j] = '.'\n            if j!= m - 1 and grid[i][j+1] == '#':\n                grid[i][j] = '.'\n\nfor i in range(n):\n    print(''.join(grid[i]))",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\\n#.#.#\\n.#.##\\n#..##\\n#####\") == \"#.#.#\\n.#.##\\n.VVVV\\n.VV#V\\n..###\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7\\n...\") == \"...V...\\n..VVV..\\n.V###V.\\n.V###V.\\n.V###V.\"\n\n---",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n\") == \"...V...\\n.V###V.\\n.V###V.\\n.V###V.\\n.V###V.\\n\"\nassert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..#####\\n\") == \"...V...\\n.V###V.\\n.V###V.\\n.V###V.\\n.V###V.\\n\"\nassert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n#..##..\\n\") == \"...V...\\n.V###V.\\n.V###V.\\n.V###V.\\n.V###V.\\n\"\nassert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n#.#...#\\n\") == \"...V...\\n...V...\\n.V###V.\\n.V###V.\\n.V###V.\\n\"\nassert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n##...##\\n\") == \"...V...\\n...V...\\n.V###V.\\n.V###V.\\n.V###V.\\n\"\n",
        "num_ids_2": 130,
        "num_ids_4": 260
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 7\\n...V...\\n.......\\n.......\\n...#...\\n..###..\\n\") == \"...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n\"\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''13''') == '11'\nassert solution('''35''') == '101'\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"12\") == \"10\"\nassert solution(\"01\") == \"1\"\nassert solution(\"00\") == \"0\"\nassert solution(\"000\") == \"000\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"13\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('13') == '11'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"101\") == \"101\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''13''') == '11'\nassert solution('''10''') == '10'\nassert solution('''9''') == '9'\nassert solution('''8''') == '8'\nassert solution('''7''') == '7'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"-13\") == \"-11\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"123\") == \"321\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('13') == '11'\nassert solution('0110') == '1010'\nassert solution('0101') == '0110'\nassert solution('1001') == '1101'\n\"\"\"\n\nN = int(input())\nprint((N & 0x5555555555555555) + (N >> 1 & 0x5555555555555555))\n\n\"\"\"\n\nCodeWars - Rearranging Integers in Radix Sort\n\nQ: Given a list of numbers, return a list where all adjacent == elements have been grouped together.\n\nR: For example, [[1, 2, 3, 4], 2, [1, 3], 4]\nOutput: [[1, 2, 3, 4], 1, [2, 3, 4], 4]\n\nRisk: O(n) time and O(n) space\n\nSolution:",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '11'\nassert solution('0') == '0'\n\"\"\"\n\nx = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '9'\nassert solution('13') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"13\") == \"I must watch Star Wars with my daughter\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"9\", \"Sample tests\"\nassert solution(\"3\") == \"1\", \"Sample tests\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '9'\nassert solution('10') == 'I must watch Star Wars with my daughter'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12\\npink\\ntequilaSunrose\\nmExicanPInK\\Coquelicot\\nturqrose\\nroSee\\nJETblack\\npink\\nbabypink\\npInKpinkPinK\\nPInkrose\\nlazerlemon') == '9'",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == '9'\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'I must watch Star Wars with my daughter'\nassert solution('2') == 'I must watch Star Wars with my daughter'\nassert solution('3') == 'I must watch Star Wars with my daughter'\nassert solution('4') == 'I must watch Star Wars with my daughter'\nassert solution('5') == 'I must watch Star Wars with my daughter'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\nassert solution(\"2 4 3\\nBCD\") == \"4 3 2\"\nassert solution(\"5 4 3\\nCBA\") == \"5 3 4\"\nassert solution(\"3 5 4\\nCAB\") == \"3 4 5\"\nassert solution(\"5 3 2\\nCAB\") == \"3 2 5\"\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 3') == '1 3 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1 3 5\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5\"\nassert solution(\"3 5 1\\nABC\") == \"3 1 5\"\nassert solution(\"2 2 2\\nCAB\") == \"2 2 2\"\nassert solution(\"3 3 3\\nABC\") == \"3 3 3\"\nassert solution(\"3 1 1\\nABC\") == \"3 1 1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 2 1\") == \"3 2 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 5 3\nABC\n''') == '1 3 5 ABC'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin) == __import__('sys').stdout, f'Please check your code and try again.'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 3\\nABC\") == \"1 3 5 ABC\"\nassert solution(\"1 2 3\\nABC\") == \"ABC 1 2 3\"\nassert solution(\"1 1 2\\nABC\") == \"ABC 1 1 2\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('2 3 4') == '4 3 2'\nassert solution('1 2 3') == '1 2 3'\nassert solution('4 3 2') == '4 3 2'\nassert solution('2 3 1') == '3 1 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\nbuy 10 20\nsell 1 2\nsplit 2\nsell 3 1\n\"\"\") == \"5.00000000\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8.00000000'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('\\n'.join(['buy 1 15','split 3','sell 1 5', 'die 4'])) == '8.0'\nassert solution('\\n'.join(['buy 1','split 3','sell 1 5', 'die 4'])) == '8.0'\nassert solution('\\n'.join(['buy 1','sell 1 5', 'die 4'])) == '0.5'\n",
        "num_ids_2": 63,
        "num_ids_4": 91
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n''') == '8.00000000'\n\nassert solution('''\nbuy 1 2\nsplit 3\nsell 1 5\ndie 4\n''') == '1.00000000'\n\nassert solution('''\nbuy 10 10\nsell 1 5\nsell 1 5\nbuy 1 5\ndie 4\n''') == '10.00000000'\n\nassert solution('''\nbuy 1 5\nbuy 1 5\nsell 1 5\ndie 4\n''') == '7.00000000'\n\nassert solution('''\nbuy 1 5\nsell 1 5\nsell 1 5\nbuy 1 5\nsell 1 5\ndie 4\n''') == '7.00000000'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4') == '8.00000000'\nassert solution('buy 5 10\\nbuy 4 6\\nbuy 9 1\\nsell 4 5\\nsell 1 3\\nbuy 6 9\\nsell 7 4\\nbuy 7 4\\nsell 4 1\\ndie 3') == '55.90000000000000004'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"8.00000000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    'buy 1 15\\n'\n   'split 3\\n'\n   'sell 1 5\\n'\n    'die 4\\n'\n) == '8.00000000'\n\nassert solution(\n    'buy 1 50\\n'\n   'split 8\\n'\n   'sell 1 50\\n'\n    'die 10\\n'\n) == '1.0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\nbuy 1 1\\nsplit 3\\ndie 4') == '7.00000000000001'\nassert solution('buy 1 15\\nsell 1 5\\nsell 1 1\\nsplit 3\\ndie 4') == '10.0000000000001'\nassert solution('buy 2 1\\nbuy 3 2\\nsell 2 6\\nbuy 1 4\\nsell 3 2\\nsell 2 1\\nbuy 2 5\\nsell 2 5\\ndie 2\\nbuy 3 2\\nsell 1 7\\nsell 2 2\\nbuy 4 1\\nbuy 4 4\\nbuy 1 2\\nsell 2 6\\nsell 4 4\\nsell 1 2\\nsell 3 2\\nbuy 2 1\\nsell 1 5\\ndie 1\\nsell 2 4\\nsell 3 4\\nsell 3 2\\ndie 3\\nsell 2 5\\nsell 2 1\\nsell 3 2\\nsell 3 2\\nsell 1 2\\nbuy 3 2\\nsell 1 7\\nbuy 1 2\\nsell 1 5\\nsell 2 5\\nsell 4 2\\nbuy 4 5\\nsell 4 5\\nsell 2 5\\ndie 1\\nbuy 1 4\\nsell 1 5\\nsell 2 5\\nsell 4 2\\nsell 2 5\\nsell 2 5\\ndie 2\\nbuy 2 1\\nsell 2 5\\nsell 2 5\\ndie 1\\nsell 3 2\\nsell 2 1\\nsell 3 2\\nsell 3 2\\nsell 2 5\\nbuy 2 1\\nsell 2 5\\ndie 1\\nbuy 1 4\\nsell 1 5\\ndie 2\\nsell 1 5\\nbuy 1 2\\nsell 2 6\\nsell 2 5\\nsell 1 2\\nbuy 2 1\\nsell 2 5\\nsell 3 2\\nsell 2 5\\nsell 2 5\\ndie 1\\nsell 3 2\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\nsell 2 5\\",
        "num_ids_2": 70,
        "num_ids_4": 1004
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('buy 1 15\\nsell 1 5\\n') == '8.00000000'\nassert solution('buy 1 100\\nbuy 2 15\\nsell 2 5\\n') == '15.00000000'\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n\"\"\") == \"8.00000000\"\nassert solution(\"\"\"\nbuy 1 15\nsplit 3\nsell 1 15\ndie 4\n\"\"\") == \"10.00000000\"\nassert solution(\"\"\"\nbuy 1 15\nsplit 3\nsell 1 15\nmerge 3\ndie 4\n\"\"\") == \"7.500000000000001\"\nassert solution(\"\"\"\nbuy 1 15\nsplit 3\nmerge 3\nsell 1 15\ndie 4\n\"\"\") == \"7.500000000000001\"\nassert solution(\"\"\"\nbuy 1 15\nmerge 3\nsplit 3\nsell 1 15\ndie 4\n\"\"\") == \"7.500000000000001\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '8'\nassert solution('8') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5''') == '1'\nassert solution('''123456789''') == '0'\nassert solution('''75''') == '7'\nassert solution('''87''') == '7'\nassert solution('''000''') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"2\") == \"2\"\nassert solution(\"30\") == \"0\"\nassert solution(\"6\") == \"6\"\nassert solution(\"1000000\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('808') == '8'\nassert solution('2') == '2'\nassert solution('abc') == 'a'\nassert solution('11') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1', 'Fail'\nassert solution('2') == '2', 'Fail'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"0\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"4 5\") == \"0\"\nassert solution(\"4 5\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1\\nLLLL\\nLLLL\\nLLLL\\n') == '1'\nassert solution('1 1\\nLLLL\\nLLLL\\nLLL\\n') == '0'\nassert solution('1 1\\nLLLL\\nLLLL\\nLLLL\\n') == '2'\nassert solution('1 1\\nLLLL\\nLLLL\\nLLLL\\n') == '3'\nassert solution('1 1\\nLLLL\\nLLLL\\nLLLL\\n') == '3'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5\\nLLLLLL\\nCCCCCC\\nLLLLLL\\nLLLLLL\\n') == '1'\nassert solution('5 5\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\n') == '2'\nassert solution('3 3\\nLLLL\\nLLL\\n') == '0'\nassert solution('3 3\\nLLL\\nLLL\\n') == '2'\nassert solution('5 5\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCC\\n') == '3'\n",
        "num_ids_2": 86,
        "num_ids_4": 128
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"CCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"1\n2\n1\n2\n1\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"4\n2\n1\n2\n1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"10\n11\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00\n00",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\\nLCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nLLL\nLLL\nLLL\nLLL\n''') == '0'\nassert solution('''\n2\nWW\nWW\n''') == '0'\nassert solution('''\n2\nWW\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 5\\nCCCC\\nCCCC\\nCCCC\\nCCCC') == '1'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"\nprint(solution())\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '2'\nassert solution('3') == '1'\n\n---Input---\n4 5\nLLLL\nLLLL\nLLLL\nLLLL\nSample Output\n0\n1\n2\n3\n4\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 S') == '60'\nassert solution('2 S QS') == '59'\nassert solution('2 S 9C') == '61'\nassert solution('2 S 9C 9S') == '61'\nassert solution('2 S 9C 9H') == '61'\n\n--Input Sample\n3 S\nTH\n9C\nKS\nQS\n5 H\nJH\nQD\n7 D\n8 D\n6 C\n3 H\n9 C\n7 D\n8 D\n2 C\n4 H\n8 D\nJH\n5 H\n6 H\n3 S\n7 H\n8 D\n6 S\n7 H\n\n--Output Sample\n74\n78\n95\n\n---\n\nN = int(input())\nscores = {}\n\nfor _ in range(N):\n    suit, *cards = input().split()\n    value = 0\n    for c in cards:\n        if c == 'A':\n            value += 11\n        elif c == 'K':\n            value += 4\n        elif c == 'Q':\n            value += 3\n        elif c == 'J':\n            value += 20\n        elif c == 'T':\n            value += 10\n        elif c == '9':\n            value += 14\n        elif c == '8':\n            value += 0\n        elif c == '7':\n            value += 0\n        else:\n            value += 0\n    scores[suit] = value\n\nfor s in scores:\n    print(scores[s], end=' ')\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\nassert solution('4 S\\nAS\\nKS\\nQS\\nAD\\n') == '20'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''1 S\nTH\n9C''') == '10'\nassert solution('''5 S\nTD\nKS\nQS\n9C\n9D\n9C''') == '55'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n''') == '60'\nassert solution('''5 S\nAC\nHC\nKS\nQS\nJS\n''') == '59'\nassert solution('''9 S\nAC\nAC\nAC\nAC\nAC\nAC\nAC\nAC\n''') == '70'\nassert solution('''10 S\nAH\nAH\nAH\nAH\nAH\nAH\nAH\nAH\nAH\n''') == '81'\nassert solution('''4 S\nQS\nQS\nQS\nQS\n''') == '41'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 S') == '60'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 S') == '60'\nassert solution('5 H') == '65'\nassert solution('4 C') == '14'\nassert solution('5 H') == '35'\nassert solution('10 S') == '42'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '60'\nSample Input 2:\n3 S\nTH\n9C\nKH\nJS\nSample Output 2:\n56\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 S') == '60'\nassert solution('2 9') == '21'\nassert solution('2 7') == '14'\nassert solution('2 8') == '14'\nassert solution('2 9') == '21'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"2 C\") == \"20\"\nassert solution(\"2 S\") == \"20\"\nassert solution(\"4 D\") == \"8\"\nassert solution(\"3 S\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\nprint(solution(input()))",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n\nNote that this problem is just a small variation on the problem with strings and characters in strings. This is not the case for the problem with strings and characters in strings.\n\n## Task 1:\nImplement the solution function that returns the solution.\n\n## Task 2:\nFollow the same template for problem 1. However, now you must return the solution as a single string.\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('no') == 'no'\nassert solution('NO') == 'NO'\nassert solution('no 2') == 'no'\n",
        "num_ids_2": 28,
        "num_ids_4": 48
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"this is very annoying\\nthiss iss veery annoying\") == \"se\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"se\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 0\\n0 0 1 1 2\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\\n2 2 2 1\") == \"3\"\nassert solution(\"2 3 0\\n0 0 2 1\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 0') == '3'\nassert solution('5 3 0') == '3'\nassert solution('2 1 0') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n0 0 1 1 2') == '3'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5 0\") == \"3\", \"First\"\nassert solution(\"5 5 0\") == \"3\", \"Second\"\nassert solution(\"5 5 2\") == \"4\", \"Third\"\nassert solution(\"6 6 2\") == \"4\", \"Fourth\"\nassert solution(\"15 3 10\") == \"6\", \"Fifth\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 0') == '3'\nassert solution('1 4 0') == '2'\nassert solution('3 3 3') == '3'\nassert solution('0 0 0') == '1'\nassert solution('4 4 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 0') == '3'\nassert solution('7 5 0') == '1'\nassert solution('5 3 0') == '2'\nassert solution
        "num_ids_2": 24,
        "num_ids_4": 1681
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1 0') == '2'\nassert solution('2 2 1 0') == '1'\nassert solution('3 1 2 3') == '2'\nassert solution('6 6 2 5') == '5'\nassert solution('1 1 1 1') == '1'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''5 3 0\n0 0 1 1 2\n0 0 1 2 3\n0 0 1 1\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\nassert solution('4') == '24'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '6'\nassert solution('5') == '3'\nassert solution('7') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n') == '6'\nprint('All tests passed!')\n'''\n\n\n'''\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n// code\n\n//",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2\\n3\") == \"2\"\nassert solution(\"1\\n2\\n3\\n\") == \"6\"\nassert solution(\"1\\n5\\n4\") == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 50
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"4 2\"\nassert solution(\"2\") == \"2 2\"\nassert solution(\"10\") == \"16 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n3 1 2\") == \"4 2\"\nassert solution(\"1\\n2 1 1\") == \"2 2\"\nassert solution(\"1\\n2 2 1\") == \"2 2\"\nassert solution(\"1\\n2 1 2\") == \"2 2\"\nassert solution(\"1\\n3 1 1\") == \"3 3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 2\") == \"4 2\"\nassert solution(\"20 2 4\") == \"20 2 4\"\nassert solution(\"20\") == \"20\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"0\"\n",
        "num_ids_2": 27,
        "num_ids_4": 47
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1 2') == '4 2'\nassert solution('100 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '4782 15'\nassert solution('1 100 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '4782 15'\nassert solution('10 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15') == '5882 15'\n",
        "num_ids_2": 40,
        "num_ids_4": 94
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1 2\") == \"4 2\"\nassert solution(\"20 2 3 2 4 3 1\") == \"16 2\"\nassert solution(\"10 3 1 2 3 2 2 2 2 1\") == \"7 2\"\nassert solution(\"15 4 2 3 5 3 3 3 3 1\") == \"12 2\"\nassert solution(\"20 1 2 3 2 3 3 3 2 3\") == \"18 2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 70
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n6 2 7 3 4') == '9 8'\nassert solution('4\\n1 2 3 4') == '2 5 4'\nassert solution('10\\n10 20 5 10 10 5 8') == '29 27'\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n\") == \"2\"\nassert solution(\"2\\n1 2\") == \"3\"\nassert solution(\"3\\n3 1 2\") == \"3 4\"\nassert solution(\"3\\n3 1 2\\n\") == \"3 4\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 3') == '4 2'\nassert solution('10\\n3 6 1 8') == '17 1'\nassert solution('10\\n2 1 3') == '6 2'\nassert solution('10\\n2 2 1') == '8 1'\nassert solution('5\\n2 1 3') == '4 2'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('10 5 4') == '3'\nassert solution('5 2 2') == '2'\nassert solution('4 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('7 5 2') == '8'\nassert solution('10 7 3') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 2 1\n''') == '2'\nassert solution('''5 4 2\n''') == '6'\nassert solution('''5 100 1\n''') == '1366'\n''')\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 1\") == \"2\"\nassert solution(\"8 2 3\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('5 2 2') == '3'\nassert solution('5 2 3') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('100 2 1') == '1'\nassert solution('4 2 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 1\n''') == '2'\nassert solution('''5 2 2\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1\") == \"2\"\nassert solution(\"5 2 1\") == \"3\"\nassert solution(\"1 1 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('6 2 1') == '3'\nassert solution('12 2 1') == '4'\nassert solution('12 3 1') == '6'\nassert solution('24 2 1') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"36\"\nassert solution(\"7\") == \"288\"\n\n------------------",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '36'\nassert solution('4') == '4'\nassert solution('3') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '36'\nassert solution('5') == '36'\nassert solution('10') == '410'\nassert solution('3') == '3'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"36\"\nassert solution(\"1234\") == \"4536\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '10'\nassert solution('5') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '36'\nassert solution('5\\n') == '36'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1\n''') == '2'\n\nassert solution('''\n4\n1\n''') == '5'\n\nassert solution('''\n10\n1\n''') == '55'\n\nassert solution('''\n5\n1\n''') == '36'\n\nassert solution('''\n1\n1\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '36'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '36'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"5\") == \"36\"\nassert solution(\"7\") == \"288\"\nassert solution(\"6\") == \"77\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"5\\n5 4 3 2 1\") == \"4 5 1 3 2\"\nassert solution(\"6\\n5 2 4 3 1 6\") == \"2 5 1 4 3 6\"\nassert solution(\"4\\n5 4 2 3 1\") == \"2 3 1 4 5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 84
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'impossible'\nassert solution('4 2 3 1') == '2 3 4 1'\nassert solution('4 4 4 4') == '2 3 1 1 2'\n",
        "num_ids_2": 27,
        "num_ids_4": 44
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 1 4\") == \"3 1 4 2\"\nassert solution(\"4\\n4 3 5 1\") == \"4 3 1 5 2\"\nassert solution(\"3\\n3 2 1\") == \"impossible\"\nassert solution(\"3\\n3 2 5\") == \"3 2 1 5\"\nassert solution(\"4\\n3 2 5 1\") == \"3 1 5 2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '2 3 4 1'\nassert solution('3') == '3 2 1 4'\nassert solution('4') == '3 4 2 1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1 2 3 4 5'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\", \"Wrong answer\"\nassert solution(\"4 4 2 1\") == \"3 3 1 2\", \"Wrong answer\"\nassert solution(\"4 2 2 1\") == \"4 3 1 2\", \"Wrong answer\"\n\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n4\n2 3 3 1\n\"\"\"\n) == \"2 3 4 1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\") == \"impossible\"\n\n--Explanation--\nSample Case 1\n\nThere is no safe ordering in which to visit the rooms.\n\n--Case 2--\n\nIn one room there are 4 students and 1 exam. In the second room there are 3 students and 1 exam. In the third room there are 2 students and 1 exam. In the fourth room there are 1 student and 1 exam.\n\nIf we visit the rooms in this order then the exam pile will be:\n\nRoom 1: 2 4\nRoom 2: 3 1\nRoom 3: 2 1\nRoom 4: 1\n\nSo the exam pile is still not empty and is impossible.\n\nSample Case 2\n\nIn the first room there are 4 students and 3 exams. In the second room there are 3 students and 2 exams. In the third room there are 2 students and 1 exam. In the fourth room there are 1 student and 1 exam.\n\nIf we visit the rooms in this order then the exam pile will be:\n\nRoom 1: 4 2\nRoom 2: 3 1\nRoom 3: 2 1\nRoom 4: 1\n\nSo the exam pile is not empty and we can find a safe ordering.\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n    left_oar\n    right_oar\n    left_oar\n    hull\n    right_oar\n\"\"\") == \"4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\nleft_oar\nright_oar''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\\nleft_oar\") == \"4\"\nassert solution(\"2 2\\nleft_oar\\nhull\\nleft_oar\") == \"2\"\n\"\"\"\nimport sys\n\nfrom collections import Counter\n\nsys.setrecursionlimit(10 ** 6)\n\nn, p = [int(i) for i in input().split()]\n\nparts = {}\n\nfor i in range(1, n + 1):\n    parts[i] = [input()]\n\nfor i in range(n, 1, -1):\n    parts[i].append(input())",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"10 50\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\nleft_oar\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\nleft_oar\\nhull\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\nhull\") == \"4\"\nassert solution(\"5 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\nleft_oar\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\nhull\") == \"7\"\nassert solution(\"3 3\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\nleft_oar\\nleft_oar\\nright_oar\\nleft_oar\\nright_oar\\nleft_oar\\nhull\") == \"1\"\n",
        "num_ids_2": 158,
        "num_ids_4": 316
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    4\n    left_oar\n    right_oar\n    left_oar\n    hull\n    right_oar\n    \"\"\"\n) == \"4\"\n\nassert solution(\n    \"\"\"\n    3\n    left_oar\n    right_oar\n    left_oar\n    hull\n    right_oar\n    \"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n    2\n    left_oar\n    right_oar\n    \"\"\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\nassert solution(\"3 2\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"0\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\") == \"4\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2\\nleft_oar\\nright_oar\\n') == '4'\nassert solution('5 1\\nleft_oar\\nright_oar\\nhull\\n') == '4'\nassert solution('3 2\\nleft_oar\\nright_oar\\n') == '5'\n",
        "num_ids_2": 54,
        "num_ids_4": 79
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"7 7\"\nassert solution(\"5 7\") == \"5 7\"\nassert solution(\"7 5\") == \"5 7\"\nassert solution(\"3 3\") == \"3 3\"\nassert solution(\"3 4\") == \"4 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\nassert solution('4 7\\n7 2\\n7 3\\n7 4') == '7 7'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"\nassert solution(\"1 2\\n2 1\\n3 2\\n4 3\\n\") == \"4 4\"\n\"\"\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\\n\") == \"7 7\"\nassert solution(\"10 10\\n10 1\\n1 10\\n\") == \"1 1\"\nassert solution(\"100 100\\n100 1\\n1 100\\n\") == \"1 100\"\nassert solution(\"10 100\\n100 10\\n1 100\\n\") == \"1 10\"\n\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"\nassert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"\nassert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n5 7\n7 5\n''') == '7 7'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n4 5\\n3 5\\n3 4') == '7 7'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '4 4'\nassert solution('1 2') == '2 2'\nassert solution('1 2 3') == '2 2'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == \"measurement error\"\nassert solution('1 1') == \"1.00\"\nassert solution('1 1 1') == \"1.00\"\nassert solution('1 1 2') == \"1.00\"\nassert solution('2 1') == \"0.00\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1.016666667'\nassert solution('1 1') == '0.5'\nassert solution('1 1 1') == '0.5'\nassert solution('1 1 1 1') == '0.5'\nassert solution('1 1 1 1 1') == '0.5'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 61') == '1.01'\nassert solution('2\\n1 30') == '1.1'\nassert solution('3\\n2 20') == '1.1'\nassert solution('4\\n3 15') == '1.2'\nassert solution('5\\n4 10') == '1.1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1.016666667\"\nassert solution(\"2\") == \"measurement error\"\nassert solution(\"3\") == \"measurement error\"\nassert solution(\"4\") == \"measurement error\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1 61\n''') == '1.016666667'\nassert solution('''2\n1 61\n''') =='measurement error'\nassert solution('''3\n1 61\n''') =='measurement error'\nassert solution('''4\n1 60\n''') == '1.016666667'\nassert solution('''5\n1 3600\n''') == '1.016666667'\n''') == '1.016666667'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1 6\nSample Input 2:\n3\n0 5\nSample Output 2:\n3.0\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0.1'\nassert solution('1') == '0.01'\nassert solution('10') == '0.1'\nassert solution('1001') == '1.001'\nassert solution('1001') == '1.001'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"1.016666667\"\nassert solution('1 1') == \"1.016666667\"\nassert solution('1 1 2') == \"1.016666667\"\nassert solution('1 1 2 3') == \"1.016666667\"\nassert solution('1 1 2 3 4') == \"1.016666667\"\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('1\\n1 62') =='measurement error'\nassert solution('2\\n1 60\\n2 61') == '2.016666667'\n",
        "num_ids_2": 35,
        "num_ids_4": 57
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.016666667'\nassert solution('1 1') == '1.0'\nassert solution('1 1 1 1') == '1.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CPMCRYY\", \"ALBERTA\") == \"CALGARY\"\n\n*Hint: Only shift characters forward, not backward.*\n\"\"\"\nimport sys",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == \"CALGARY\"\nassert solution('''SIJTESKHNI\nPEMRASBSTK''') == \"SIPEMRASTKHNI\"\nassert solution('''GLDGRHFBN\nBGNGBFELP''') == \"GRDGRHFBN\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\n\nInput:\nHACKERRANK\nABERNARD\nOutput:\nHACKERRANK\n'''\n    )\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'\nassert solution('ALBERTA') == 'CALGARY'\nassert solution('FJCFREYAIAOERCRQYWFFHGLYMLKAXDVQXHEVZMAAJYMLAAABLAVSTUJTYBQBGIYEMRTGJJZATKQTQHGFVFGJM') == 'VALDYS'\n",
        "num_ids_2": 31,
        "num_ids_4": 100
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('CPMCRYY') == 'ALBERTA'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('CPMCRYY') == 'ALBERTA'\nassert solution('ALBERTA') == 'CALGARY'\nassert solution('ALBERT') == 'CALGARY'\nassert solution('CALGARY') == 'ALBERT'\nassert solution('CALGARY') == 'ALBERT'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('./input.txt') == 'CLMKRKY'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''CPMCRYY\nALBERTA''') == 'CALGARY'\nassert solution('''ABAB\nBACB\nBCBA\nBACB''') == 'ABBB'\nassert solution('''TRAIN\nWITH\nA\n''') == 'TRAIN'\nassert solution('''TRAIN\n''') == 'TRAIN'\nassert solution('''TRAIN\n''') == 'TRAIN'\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"CPMCRYY\"\n    \"ALBERTA\"\n) == \"CALGARY\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AB') == '3'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"BC\") == \"1\"\nassert solution(\"CC\") == \"2\"\nassert solution(\"CD\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AB') == '3'\nassert solution('ABC') == '1'\nassert solution('ABCD') == '2'\nassert solution('ABAB') == '2'\nassert solution('BAABC') == '2'\n\"\"\"\n\nimport re\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''AB''') == '3'\nassert solution('''CB''') == '1'\n''')\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AB') == '3'\nassert solution('BC') == '2'\nassert solution('CC') == '1'\nassert solution('BCCDCC') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nA\nB\nAB\nABC\nAC\n''') == '2'\n\nassert solution('''\nA\nB\nAB\nABC\nAC\n''') == '1'\n\nassert solution('''\nA\nB\nAC\nABC\n''') == '1'\n\nassert solution('''\nA\nB\nAC\nABC\n''') == '3'\n\nassert solution('''\nA\nB\nABC\nAC\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AB') == '1'\nassert solution('BB') == '2'\nassert solution('CC') == '3'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AB\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('3 4 3 2') == '6'\nassert solution('8 4 6 3') == '8'\nassert solution('4 2 4 2') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 2 4 3') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('3 2 2 3') == '1'\nassert solution('2 2 2 3') == '1'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '3'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 1 2') == '3'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 2, 3, 4]) == \"3\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == \"3\"\nassert solution('10 20 30 40') == \"30\"\nassert solution('1 2 3 4 5 6 7 8 9 10') == \"15\"\nassert solution('0 0 0 0 0 0 0 0 0 0') == \"0\"\nassert solution('3 3 3 3 3') == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 64
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('5 8 2 4') == '4'\nassert solution('9 9 9 9') == '1'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('3 5 3 8') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5') == '3'\nassert solution('100 100') == '1'\nassert solution('2 2') == '1'\n\"\"\"\n\na,b = map(int, input().split())\n\neven_div = 0\nodd_div = 0",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4\n1\n3\n2\n''') == '2'\nassert solution('''10\n10\n3\n8\n5\n7\n4\n2\n1\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('103 27') == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '1'\nassert solution('10') == '2'\nassert solution('20') == '2'\nassert solution('24') == '3'\nassert solution('38') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '2'\nassert solution('20') == '3'\nassert solution('100') == '4'\nassert solution('11') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('13 79') == '2'\nassert solution('68 79') == '4'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '1'\nassert solution('5 3') == '1'\nassert solution('6 4') == '2'\nassert solution('1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"103 27\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('107') == '5'\nassert solution('107 7') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    }
]