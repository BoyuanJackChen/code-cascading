[
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5'\nassert solution('5') == '1, 5, 6'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8') == '5'\n\n\n'''\n\nimport collections\nimport itertools\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n4\n1 2\n1 3\n2 4\n''') == '2'\nassert solution('''\n5\n1 2\n1 3\n2 4\n3 4\n''') == '2'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"5\"\nassert solution(\"7\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\") == \"1 7 6\"\nassert solution(\"11\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n5 9\\n5 10\\n6 11\") == \"1 5 6\"\nassert solution(\"13\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n5 9\\n5 10\\n6 11\\n7 12\") == \"1 4 7\"\nassert solution(\"15\\n1 2\\n2 3\\n3 4\\n4 5\\n4 6\\n3 7\\n3 8\\n5 9\\n5 10\\n6 11\\n7 12\\n7 13\") == \"1 4 7\"\n",
        "num_ids_2": 78,
        "num_ids_4": 186
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2\n2 3\n3 4''') == '5'\nassert solution('''6\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '1 3 6'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6''') == '5'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6''') == '1 3'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6''') == '5'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6''') == '1 3'\nassert solution('''5\n1 2\n2 3\n3 4\n4 5\n4 6''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10\") == \"4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"8\") == \"5\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 1 3 4 5 3\") == \"1 3\"\nassert solution(\"1 3\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 46
    },
    {
        "number": 4000,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '5'\nassert solution('''\n8\n1 2\n2 3\n3 4\n4 5\n4 6\n3 7\n3 8\n''') == '1 8 6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2') == '2 1'\nassert solution('1\\n1 2') == '1 1'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"20\") == \"20\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n2 2\n2 2\n''') == '8 8'\nassert solution('''3\n2 4 2\n2 4 2\n''') == '8 8'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n10 2 8 1 2 4 1 20 4 5') == '20 8'\nassert solution('2 3\\n2 2 2') == '4 2'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"20 8\"\nassert solution(\"2 2\") == \"2 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 6 1 5 3 2') == '8 5'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n10 2 8 1 2 4 1 20 4 5') == '10 8'\nassert solution('20\\n2 1 2 3') == '20 2'\nassert solution('10\\n20 2 1 2 3') == '20 2'\nassert solution('20\\n20 1 1 3') == '20'\n\n\n-----Explanation-----\nThe lines with $x = 10$, $y = 20$ and $x, y = 1, 2, 3, 4, 5$ are permutations of the list $[1, 2, 3, 4, 5]$ (notice that no number repeats).\n\nThe function returns answer to the problem.\n'''\n",
        "num_ids_2": 40,
        "num_ids_4": 74
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n10 2 8 1 2 4 1 20 4 5''') == '20 8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n7\n8\n9''') == '2 8'\n\nassert solution('''2\n2\n3\n4\n5\n6\n7\n8\n9''') == '1 7'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4001,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"20 8\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 4 3\\n1 2 3 4\\n5 2 2 2\\n7 1 1 4\") == \"24\"\nassert solution(\n    \"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\") == \"56\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\n\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"5 5 4\") == \"56\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6''') == '56'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n\n''') == '24'\nassert solution('''5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n\n''') == '56'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '24'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '56'\nassert solution('''\n3 4 3\n1 2 3 4\n5 2 2 2\n7 1 1 4\n''') == '4'\nassert solution('''\n5 5 4\n1 2 4 2 1\n3 5 1 2 4\n1 5 7 1 2\n3 8 7 1 2\n8 4 7 1 6\n''') == '36'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 3\") == \"24\"\nassert solution(\"5 5 4\") == \"56\"\nassert solution(\"1 2 3 4\") == \"24\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 5 4\\n1 2 4 2 1\\n3 5 1 2 4\\n1 5 7 1 2\\n3 8 7 1 2\\n8 4 7 1 6\\n\"\n) == \"56\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4002,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '24'\nassert solution('5 5 4') == '56'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 4 3 2\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n''') == '6'\nassert solution('''3\n2 2 2\n''') == '1'\nassert solution('''4\n1 2 4 3\n''') == '3'\nassert solution('''2\n3\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\n\nassert solution() == 'LLRR'\n\nassert solution() == 'R'\n",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '4'\n\nassert solution() == 'LLRR'\n\nassert solution() == 'R'\n\nassert solution() == 'R'\n\nassert solution() == '1'",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_1) == '4'\nassert solution(input_2) == 'LLRR'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 4 3 2\n\n''') == '4'\nassert solution('''7\n1 3 5 6 5 4 2\n\n''') == '6'\nassert solution('''4\n2 2 2\n\n''') == '1'\nassert solution('''3\n2 2 2\n\n''') == '2'\n\nassert solution('''1\n2 2 2\n\n''') == '1'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == \"4\"\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_data) == \"4\"\n\nassert solution(input_data) == \"LRLLRRL\"\n\nassert solution(input_data) == \"RRRRRRR\"\n\nassert solution(input_data) == \"RRRRRRR\"\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4003,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"6\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"7\") == \"LLRR\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 3 5 2 5\n''') == '3'\nassert solution('''\n4\n1 3 1 4\n''') == '-1'\nassert solution('''\n5\n2 4 8 8 9\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 5 2 5\") == \"3\"\nassert solution(\"3 1 3 7\") == \"3\"\nassert solution(\"3 1 5 2 5\") == \"3\"\nassert solution(\"3 1 5 2 5 6\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"5 2 2 5 2 5\") == \"3\"\nassert solution(\"3 5 3 7\") == \"1\"\nassert solution(\"4 1 3 7\") == \"2\"\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n\nassert solution([4, 4]) == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"-1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 4 4 7 4 1\n''') == '3'\nassert solution('''\n5 2 2 5 2 5\n''') == '3'\nassert solution('''\n4\n1 2 3\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '3'\nassert solution('4') == '-1'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4004,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\"\nassert solution(\"2 4 5 2 5\") == \"3\"\nassert solution(\"1 4 4 7 4 1\") == \"3\"\nassert solution(\"3 4 4 7 4 1\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 4 4\") == 'NO'\nassert solution(\"1 1 3 5\") == 'YES'\nassert solution(\"3 1 5 5\") == 'YES'\nassert solution(\"0 0 4 6\") == 'YES'\nassert solution(\"0 0 7 4\") == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('0 0 4 6') == 'NO'\nassert solution('0 0 7 4') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\nassert solution('0 0 1000000 1000000') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 4 4') == 'NO'\nassert solution('1 1 3 5') == 'YES'\nassert solution('3 1 5 5') == 'YES'\nassert solution('5 2 10 5') == 'YES'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\nassert solution('''\n3 3 7 5\n0 0 4 6\n0 0 7 4\n''') == 'YES'\n\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n\nassert solution('''\n0 0 1000000 1000000\n0 0 499999 1000000\n500000 0 1000000 1000000\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2 4 4\n1 1 3 5\n3 1 5 5\n''') == 'NO'\nassert solution('''\n5 2 10 5\n3 1 7 6\n8 1 11 7\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5''') == 'NO'\nassert solution('''5 2 10 5\n3 1 7 6\n8 1 11 7\n\n''') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4005,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2 4 4\n1 1 3 5\n3 1 5 5''') == 'YES'\nassert solution('''3 3 7 5\n0 0 4 6\n0 0 7 4''') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1098') == \"20\"\nassert solution('10') == \"19\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1098') == 20\nassert solution('10') == 19\nassert solution('10') == 19\n",
        "num_ids_2": 17,
        "num_ids_4": 25
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n4\n3\n6\n5''') == '20'\nassert solution('''2\n2''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1098') == 20\nassert solution('10') == 19\nassert solution('10') == 19\nassert solution('10') == 19\nassert solution('10') == 19\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\\\n1098\n''') == '20'\nassert solution('''\\\n10\n''') == '19'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1098') == '20'\nassert solution('10') == '19'\nassert solution('1') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4006,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == stdin\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"4 4 3 2 1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5 3 1 2 4\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nassert solution(\"7\") == \"7 4 2 3 6 5 1\"",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3 1 2 4 5'\nassert solution('7') == '7 4 2 3 6 5 1'\nassert solution('7') == '7 3 2 1 4 5 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"3 2 1 4 5\"\nassert solution(\"7\") == \"7 3 2 1 4 5 6\"\nprint(solution(input()))\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n5 0 0 2 4\") == \"5 3 1 2 4\"\nassert solution(\"7\\n7 0 0 1 4 0 6\") == \"7 3 2 1 4 5 6\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3 2 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5 3 1 2 4'\nassert solution('7') == '7 3 2 1 4 5 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4007,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n5 0 0 2 4\n''') == \"5 3 1 2 4\"\nassert solution('''7\n7 0 0 1 4 0 6\n''') == \"7 3 2 1 4 5 6\"\nassert solution('''7\n7 4 0 3 0 5 1\n''') == \"7 4 2 3 6 5 1\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"YES\"\nassert solution(\"5 2\") == \"NO\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n3 2 1 2 3''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1''') == 'YES'\nassert solution('''5 2\n2 1 1 2 1''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n2 1 1 2 1\") == \"YES\"\nassert solution(\"4 2\\n1 2 2 3\") == \"NO\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 2\n1 2\n''') == 'NO'\nassert solution('''\n5 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2') == 'YES\\n1 1 2 2\\n'\nassert solution('5 2') == 'YES\\n2 1 1 2 1\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2\n1 2 2 3''') == 'YES'\nassert solution('''5 2\n2 1 1 2 3''') == 'YES'\nassert solution('''5 2\n1 2 1 2 3''') == 'NO'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 2\n1 2 3\n''') == 'YES'\nassert solution('''\n4 2\n3 2 1 2 3\n''') == 'YES'\nassert solution('''\n5 2\n2 1 1 2 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"YES\\n2 1 1\"\nassert solution(\"4 2\") == \"YES\\n1 1 2 2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == 'YES'\nassert solution('5 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4008,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('4 2') == 'YES'\nassert solution('5 2') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 5 2\n11010100101''') == '1'\nassert solution('''11 5 1\n11010100101''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(11, 5, 2) == 1\nassert solution(11, 5, 1) == 3\nassert solution(11, 5, 0) == 2\nassert solution(11, 0, 2) == 2\nassert solution(11, 0, 1) == 3\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n11 5 1\n11010100101\n''') == '3'\nassert solution('''\n11 5 1\n11010100101\n''') == '1'\nassert solution('''\n11 5 1\n11010100101\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''11 5 2''') == '1'\nassert solution('''11 5 1''') == '3'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"11 5 2\") == \"1\"\nassert solution(\"11 5 1\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4009,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 5 2') == '1'\nassert solution('11 5 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\nassert solution('''\n2\n5\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\nassert solution('''\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nYES'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n3\\n1 2 1') == 'YES'\nassert solution('4\\n5\\n1 2 1') == 'NO'\nassert solution('3\\n5\\n1 2 1') == 'NO'\nassert solution('4\\n5\\n1 2 2 1') == 'YES'\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3\\n1 2 1') == 'YES'\nassert solution('3\\n1 2 1') == 'NO'\nassert solution('4\\n1 2 2 1') == 'NO'\nassert solution('5\\n1 2 2 1') == 'YES'\nassert solution('10\\n1 1 2') == 'YES'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES'\nassert solution('''2\n4\n5\n6\n6\n5''') == 'NO'\nassert solution('''4\n5\n6\n6\n5\n5''') == 'NO'\nassert solution('''4\n5\n5\n5\n5\n5''') == 'YES'\nassert solution('''4\n4\n5\n5\n5\n5''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'YES'\n\nassert solution('''\n4\n4\n1 2 3 2\n3\n1 1 2\n2\n1 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'\n\nassert solution('''\n5\n5\n1 2 1\n2\n2\n1\n4\n1 2 1\n10\n1 1 2\n2\n1 2 1\n3\n1 1 2\n4\n1 2 2 1\n5\n1 1 2\n2\n1 2 1\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\\nYES\\nNO\\nYES\\nNO\"\nassert solution(\"3\") == \"YES\\nYES\\nNO\"\nassert solution(\"1\") == \"YES\\nYES\\nYES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"4\") == \"YES\\nNO\\nYES\\nNO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 64
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1\n1\n''') == 'YES'\nassert solution('''\n3\n2 1 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1\n''') == 'NO'\nassert solution('''\n4\n1 1 2 1\n''') == 'YES'\nassert solution('''\n5\n1 2 2 3 2\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5''') == 'YES\\nYES\\nNO\\nYES\\nNO'\nprint(solution(input()))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4010,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n1 2 1\n5\n1 2 2 3 2\n3\n1 1 2\n4\n1 2 2 1\n10\n1 1 2 2 3 3 4 4 5 5\n''') == \"YES\\nYES\\nNO\\nYES\\nNO\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    4\n    1337\n    1 2 5 4 6 6 3 1 9\n    ''') == '1557'\nassert solution('''\n    5\n    11111\n    9 8 7 6 5 4 3 2 1\n    ''') == '99999'\nassert solution('''\n    2\n    33\n    1 1 1 1 1 1 1 1 1\n    ''') == '33'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"99999\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"99999\"\n\ninput = \"\"\"4\n1337\n1 2 5 4 6 6 3 1 9\n\"\"\"\nprint(solution(input))\n\ninput = \"\"\"5\n11111\n9 8 7 6 5 4 3 2 1\n\"\"\"\nprint(solution(input))\n\ninput = \"\"\"10\n
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"99999\"\nassert solution(\"4\") == \"99999\"\nassert solution(\"3\") == \"99999\"\nassert solution(\"2\") == \"99999\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n10 0 10 0 0 0 10 0 0 0\n5\n1 1 1 1 1 1 1 1 1''') == '99999'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"99999\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 5 4 6 6 3 1 9') == '1557'\nassert solution('5 9 9 9 9 9 9 9 9') == '99999'\nassert solution('8 9 5 9 8 2 3 4 1') == '8999999'\nassert solution('123456789') == '123456789'\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n11111\n9 8 7 6 5 4 3 2 1\n''') == '99999'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4011,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(example) == answer\nassert solution('Input') == solution_\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n1 2 3\\n123 321 456') == '1 1 3'\nassert solution('2\\n1 2 3\\n5 10 15\\n15 18 21\\n100 100 101\\n1 22 29\\n3 19 38\\n6 30 46') == '1 1 3'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\", \"Smaller\"\nassert solution(\"123 321 456\") == \"102\", \"Smaller\"\nassert solution(\"5 10 15\") == \"114 228 456\", \"Smaller\"\nassert solution(\"15 18 21\") == \"18 18 18\", \"Smaller\"\nassert solution(\"100 100 101\") == \"7\", \"Same\"\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '1 1 1 3'\nassert solution('15 18 21') == '1 1 2 3'\nassert solution('100 100 101') == '1 1 1 2'\nassert solution('1 22 29') == '1 1 2 2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\"\nassert solution(\"123 321 456\") == \"102\"\nassert solution(\"5 10 15\") == \"4\"\nassert solution(\"15 18 21\") == \"18 18 18\"\nassert solution(\"100 100 101\") == \"114 228 456\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5 10\n100 100 101\n''') == '1 1 3'\nassert solution('''\n7\n2 5\n1 2 3\n''') == '1 1 2'\nassert solution('''\n8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '102'\nassert solution('''\n8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '114'\nassert solution('''\n8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n''') == '228 456'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\"\"\") == \"1 1 3\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\", \"Empty\"\nassert solution(\"1 2 3\") == \"1 1 3\", \"One move\"\nassert solution(\"123 321 456\") == \"102\", \"One move\"\nassert solution(\"15 18 21\") == \"19\", \"One move\"\nassert solution(\"100 100 101\") == \"114\", \"One move\"\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\n1 2 3\n123 321 456\n5 10 15\n15 18 21\n100 100 101\n1 22 29\n3 19 38\n6 30 46\n\n''') == '1 1 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"1 1 3\", \"Should be 1 1 3\"\nassert solution(\"123 321 456\") == \"102\", \"Should be 102\"\nassert solution(\"5 10 15\") == \"12 29\", \"Should be 12 29\"\nassert solution(\"15 18 21\") == \"1 22 29\", \"Should be 1 22 29\"\nassert solution(\"100 100 101\") == \"7\", \"Should be 7\"\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4012,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == '1 1 3'\nassert solution('123 321 456') == '1 1 3'\nassert solution('5 10 15') == '1 1 3'\nassert solution('15 18 21') == '1 1 3'\nassert solution('100 100 101') == '1 1 3'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"2 5 9 8 1\") == \"0\"\nassert solution(\"5 1 3 2 7 4 8\") == \"2\"",
        "num_ids_2": 23,
        "num_ids_4": 53
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 3 3 7\n''') == '2'\nassert solution('''\n2\n1 100000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 3 5\n\n''') == '2'\nassert solution('''\n4\n1 3 5 7\n\n''') == '2'\nassert solution('''\n2\n1 100000\n\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_1) == \"2\"\nassert solution(input_2) == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3 3 7\") == \"2\"\nassert solution(\"2 5 7 8\") == \"3\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 3 7\\n') == '2'\nassert solution('2\\n1 100000\\n') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4013,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1 2 2 1 1 0 4 3 4 4\"\n\nfor _ in range(3):\n    n, m = map(int, input().split())\n    lst = [[int(n) for n in input().split()] for i in range(m)]\n    \n    for i in range(1, n+1):\n        if all(s <= d for s, d, c in lst if i == s) and all(c <= d for s, d, c in lst if i == d):\n            print(i, i, i)\n    return 0",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3 \n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4 \n\nassert solution('''4 2\n1 3 1\n1 2 1\n''') == '-1'''\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4 \"\nassert solution(\"5 2\") == \"1 2 3 0 3 \"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 2 2 1 1 0 4 3 4 4\"\nassert solution() == \"1 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3'\nassert solution('''\n3 2\n1 3 1\n1 2 1\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3'\n\nassert solution('''\n3 2\n1 3 1\n1 2 1\n''') == '-1'\n\nassert solution('''\n10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4'\n\nassert solution('''\n10 3\n7 2 2\n1 2 2\n1 2 1\n1 10 3\n8 9 1\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n''') == '1 2 3 0 3'\n\nassert solution('''3 2\n1 3 1\n1 2 1\n''') == '-1'\n\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n''') == '2 2 2 1 1 0 4 3 4 4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_str) == str(solution_check())\nprint(solution(input_str))\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"1 2 3 0 3\"\nassert solution(\"3 2\") == \"2 2 2 1 1 0 4 3 4 4\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4014,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 3 1\n1 5 1\n\n''') == '1 2 3 0 3'\nassert solution('''3 2\n1 3 1\n1 2 1\n\n''') == '-1'\nassert solution('''10 3\n4 7 2\n1 10 3\n8 9 1\n\n''') == '2 2 2 1 1 0 4 3 4 4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-\"",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"120\", \"51840\"]) == \"7\"\nassert solution([\"42\", \"42\"]) == \"0\"\nassert solution([\"48\", \"72\"]) == \"-1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"\n\n\n\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"120 51840\") == \"7\"\nassert solution(\"42 42\") == \"0\"\nassert solution(\"48 72\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n120 51840\n''') == '7'\nassert solution('''\n42 42\n''') == '0'\nassert solution('''\n48 72\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"120 51840\"]) == \"7\"\nassert solution([\"42 42\"]) == \"0\"\nassert solution([\"48 72\"]) == \"-1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n120 51840\n\"\"\") == '7'\n\nassert solution(\n\"\"\"\n42 42\n\"\"\") == '0'\n\nassert solution(\n\"\"\"\n48 72\n\"\"\") == '-1'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n120 51840\n''') == '7'\nassert solution('''\n42 42\n''') == '0'\nassert solution('''\n48 72\n''') == '-1'\nassert solution('''\n72 72\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4015,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('120 51840') == '7'\nassert solution('42 42') == '0'\nassert solution('48 72') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == 'abababa'\nassert solution('3 1') == 'ababababa'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == 'ababababa', 'First'\nassert solution('3 2') == 'catcat', 'Second'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4\\n') == 'ababababa'\nassert solution('3 2\\n') == 'catcat'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6\nbbb\n''') == 'bbbbbbb'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"catcat\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 3\nababa\n\n''') == 'ababababa', 'First'\nassert solution('''\n5 3\ncatcat\n\n''') == 'catcatcatcat', 'Second'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3 4\naba\n\"\"\") == \"ababababa\"\nassert solution(\"\"\"\n3 2\ncat\n\"\"\") == \"catcat\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    4\n    abab\n    ''') == 'ababababa'\n\nassert solution('''\n    5\n    acabc\n    ''') == 'acabcacabc'\n\nassert solution('''\n    5\n    a\n    ''') == 'abababa'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"ababababa\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4016,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'ababababa'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n1 4'\nassert solution('4\\n8 3 5 2') == '2\\n1 4'\nassert solution('5\\n2 1 2 4 3') == '0'\n",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n2 5 1 2 2\") == \"3\\n1 2 4\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\n",
        "num_ids_2": 42,
        "num_ids_4": 59
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3\\n1 4 \nassert solution('4\\n8 3 5 2') == '2\\n1 4 \nassert solution('5\\n2 1 2 4 3') == '0\n\n\"\"\"\n",
        "num_ids_2": 41,
        "num_ids_4": 57
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n2\n5\n2''') == '3'\nassert solution('''5\n2\n3\n4\n5''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '4'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n2 5 1 2 2\") == \"3\\n1 4\"\nassert solution(\"4\\n8 3 5 2\") == \"2\\n1 4\"\nassert solution(\"5\\n2 1 2 4 3\") == \"0\"\n",
        "num_ids_2": 41,
        "num_ids_4": 58
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"5\\n2 5 1 2 2\\n\"\n    ) == \"3\\n4 1 5\"\n\nassert solution(\n    \"4\\n8 3 5 2\\n\"\n    ) == \"2\\n1 4\"\n\nassert solution(\n    \"5\\n2 1 2 4 3\\n\"\n    ) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 1 2 4 3') == '2\\n1 4'\nassert solution('4\\n2 1 2 4 3') == '0'\nassert solution('5\\n2 1 2 4 3') == '3'\nassert solution('5\\n2 1 2 4 3') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4017,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 5 1 2 2') == '3'\nassert solution('4\\n8 3 5 2') == '2'\nassert solution('5\\n2 1 2 4 3') == '0'",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"4\"\nassert solution(\"5 6\") == \"15\"\nassert solution(\"5 7\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\n\n\"\"\"\n\n\nn, k = (int(i) for i in stdin.split())\nl = list(stdin)",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 5') == '4'\nassert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'\nassert solution('11 10') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 5\\n\") == \"4\"\nassert solution(\"10 10\\n\") == \"233\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 5\\nasdf\") == \"4\"\nassert solution(\"5 6\\naaaaa\") == \"15\"\nassert solution(\"5 7\\naaaaa\") == \"-1\"\nassert solution(\"10 100\\najihiushda\") == \"233\"\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 6\naaaaa\n''') == '4'\nassert solution('''5 7\naaaaa\n''') == '-1'\nassert solution('''10 100\najihiushda\n''') == '233'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"4 5\") == \"15\"\nassert solution(\"10 100\") == \"233\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5\\nasdf') == '4'\nassert solution('5 6\\naaaaa') == '15'\nassert solution('5 7\\naaaaa') == '-1'\nassert solution('10 100\\najihiushda') == '233'",
        "num_ids_2": 28,
        "num_ids_4": 61
    },
    {
        "number": 4018,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '15'\nassert solution('5 7') == '-1'\nassert solution('10 100') == '233'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == 'YES'\n\nassert solution(input_small) == 'NO'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 2\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'NO'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 5 1\") == \"YES\"\nassert solution(\"4 5 3\") == \"YES\"\nassert solution(\"4 4 3\") == \"NO\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 1\") == \"YES\"\nassert solution(\"5 5 3\") == \"YES\"\nassert solution(\"4 5 3\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 5 1\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 5 3\n1 2\n1 3\n1 4\n2 3\n3 4\n''') == 'YES'\nassert solution('''\n4 4 3\n1 2\n1 4\n2 3\n3 4\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4019,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5 1') == 'YES'\nassert solution('4 5 3') == 'YES'\nassert solution('4 4 3') == 'NO'\n\n\n'''\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\nassert solution(\"01:02\") == \"02:02\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:10\") == \"11:11\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\nassert solution('''\n01:02\n03:02\n''') == '02:02'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    10:00\n    11:00\n    ''') == '10:30'\n\nassert solution('''\n    11:10\n    11:12\n    ''') == '11:11'\n\nassert solution('''\n    01:02\n    03:02\n    ''') == '02:02'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nprint(solution(input()))",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10:00\n11:00\n''') == '10:30'\nassert solution('''\n11:10\n11:12\n''') == '11:11'\nassert solution('''\n01:02\n03:02\n''') == '02:02'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:00') == '11:30'\nassert solution('01:02') == '02:02'\nassert solution('03:02') == '02:02'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\nassert solution(\"01:02\") == \"02:02\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10:00\") == \"10:30\"\nassert solution(\"11:00\") == \"11:30\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4020,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10:00') == '10:30'\nassert solution('11:10') == '11:11'\nassert solution('01:02') == '02:02'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"27\") == \"5\"\nassert solution(\"42\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '4'\nassert solution('13') == '1'\nassert solution('25') == '2'\nassert solution('26') == '3'\nassert solution('43') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\nassert solution(sys.stdin.read()) == \"2\"\nassert solution(sys.stdin.read()) == \"3\"\nassert solution(sys.stdin.read()) == \"4\"\nassert solution(sys.stdin.read()) == \"5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''Input\n4\n\nOutput\n2''') == '1'\nassert solution('''Input\n42\n\nOutput\n6''') == '5'\nassert solution('''Input\n10\n\nOutput\n10''') == '5'\nassert solution('''Input\n17\n\nOutput\n10''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n\n2\n\n''') == '1'\n\nassert solution('''\n\n4\n\n''') == '2'\n\nassert solution('''\n\n27\n\n''') == '5'\n\nassert solution('''\n\n42\n\n''') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\nassert solution('8') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\nassert solution('27') == '5'\nassert solution('42') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4021,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('42') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 6\n1 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n2 6\n1 3\n0 4\n3 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n4 5\n1 2\n9 20\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n3 10\n1 5\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '0'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 6\\n1 3\") == \"1\"\nassert solution(\"5\\n2 6\\n1 3\") == \"2\"\nassert solution(\"3\\n4 5\\n1 2\") == \"0\"\nassert solution(\"2\\n3 10\\n1 5\") == \"7\"\n\nassert solution(\"4\\n1 3\\n0 4\\n3 3\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == '1'\nassert solution('2 6') == '1'\nassert solution('0 4') == '0'\nassert solution('3 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\n\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n3 6\n2 6\n0 4\n3 3\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n2 6\n1 3\n0 4\n1 20\n0 4\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n4 5\n1 2\n9 20\n\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n2\n3 10\n1 5\n\n\"\"\") == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4022,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n''') == 'NO'\n\nassert solution('''\n2\n10 10\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('10 10') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'NO'\nassert solution('1') == 'YES'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1\\n3\\n4\\n2\") == \"NO\"\nassert solution(\"5\\n3\\n4\\n2\") == \"NO\"",
        "num_ids_2": 27,
        "num_ids_4": 46
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4 5 3\n\n2\n1\n5''') == 'YES'\nassert solution('''4\n4 5 3\n\n2\n1\n5''') == 'NO'\nassert solution('''2\n10 10\n\n2\n1\n5''') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('10') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 1, 1, 2, 5]) == 'YES'\nassert solution([4, 5, 3]) == 'NO'\nassert solution([3, 4, 5, 3, 4, 3, 2]) == 'YES'",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4023,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('10 10') == 'YES'\nassert solution('2') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"4 5\\n\"\n    \"asdf\"\n) == \"4\"\n\nassert solution(\n    \"5 6\\n\"\n    \"aaaaa\"\n) == \"15\"\n\nassert solution(\n    \"5 7\\n\"\n    \"aaaaa\"\n) == \"-1\"\n\nassert solution(\n    \"10 100\\n\"\n    \"ajihiushda\"\n) == \"233\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6\\n\") == \"4\", \"Easy\"\nassert solution(\"5 7\\n\") == \"-1\", \"Easy\"\nassert solution(\"10 100\\n\") == \"233\", \"Easy\"\nassert solution(\"10 500\\n\") == \"-1\", \"Easy\"\nassert solution(\"10 10\\n\") == \"10\", \"Easy\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5\\n'\n        'asdf') == '4'\nassert solution('5 6\\n'\n        'aaaaa') == '15'\nassert solution('10 100\\n'\n        'ajihiushda') == '233'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"15\"\nassert solution(input()) == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 5\nasdf\n''') == '4'\nassert solution('''5 6\naaaaa\n''') == '15'\nassert solution('''5 7\naaaaa\n''') == '-1'\nassert solution('''10 100\najihiushda\n''') == '233'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == 4\nassert solution(\"5 6\") == 15\nassert solution(\"10 100\") == 233",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == 4\nassert solution('5 6') == 15\nassert solution('5 7') == -1\nassert solution('10 100') == 233\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 6\naaaaa''') == '15'\nassert solution('''5 7\naaaaa''') == '-1'\nassert solution('''10 100\najihiushda''') == '233'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4024,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6\") == \"4\"\nassert solution(\"3 2\") == \"-1\"\nassert solution(\"10 100\") == \"233\"\nassert solution(\"5 7\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2 2\n''') == '7'\nassert solution('''\n1 100 1\n''') == '4'\nassert solution('''\n30 20 10\n''') == '39'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 1\n''') == '4'\nassert solution('''\n3 2 2\n''') == '7'\nassert solution('''\n1 100 1\n''') == '3'\nassert solution('''\n30 20 10\n''') == '39'\nassert solution('''\n2 5 6\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 1') == '4'\nassert solution('3 2 2') == '7'\nassert solution('1 100 1') == '3'\nassert solution('30 20 10') == '39'\nprint('Problem is solved!')",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 1 1''') == '4'\nassert solution('''3 2 2''') == '7'\nassert solution('''1 100 1''') == '3'\nassert solution('''30 20 10''') == '39'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 1 1\n''') == '4'\n\nassert solution('''3 2 2\n''') == '7'\n\nassert solution('''30 20 10\n''') == '39'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 1\") == \"4\"\nassert solution(\"3 2 2\") == \"7\"\nassert solution(\"1 100 1\") == \"3\"\nassert solution(\"30 20 10\") == \"39\"\n\nassert solution(\"2 10 3\") == \"17\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4025,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 1, 1]) == '4'\nassert solution([3, 2, 2]) == '7'\nassert solution([1, 100, 1]) == '3'\nassert solution([30, 20, 10]) == '39'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'YES'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\\n1 100') == 'NO'\nassert solution('3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n0\\n1 100') == 'YES'\n",
        "num_ids_2": 146,
        "num_ids_4": 300
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"6 6\") == \"YES\"\nassert solution(\"3 5\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\"\"\") == \"YES\"\nassert solution(\"\"\"3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\"\"\") == \"NO\"\nassert solution(\"\"\"5 3\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n3 4\n1 2\n1 1\n1 1\n\"\"\") == \"YES\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n''') == 'YES'\nassert solution('''\n5 5\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n1 21\n1 22\n1 23\n1 24\n1 25\n1 26\n1 27\n1 28\n1 29\n1 30\n1 31\n1 32\n1 33\n1 34\n1 35\n1 36\n1 37\n1 38\n1 39\n1 40\n1 41\n1 42\n1 43\n1 44\n1 45\n1 46\n1 47\n1 48\n1 49\n1 50\n1 51\n1 52\n1 53\n1 54\n1 55\n1 56\n1 57\n1 58\n1 59\n1 60\n1 61\n1 62\n1 63\n1 64\n1 65\n1 66\n1 67\n1 68\n1 69\n1 70\n1 71\n1 72\n1 73\n1 74\n1 75\n1 76\n1 77\n1 78\n1 79\n1 80\n1 81\n1 82\n1 83\n1 84\n1 85\n1 86\n1 87\n1 88\n1 89\n1 90\n1 91\n1 92\n1 93\n1 94\n1 95\n1 96\n1 97\n1 98\n1 99\n1 100\n1 101\n1 102\n1 103\n1 104\n1 105\n1 106\n1 107\n1 108\n1 109\n1 110\n1 111\n1 112\n1 113\n1 114\n1 115\n1 116\n1 117\n1 118\n1 119\n1 120\n1 121\n1 122\n1 123\n1 124\n1 125\n1 126\n1 127\n1 128\n1 129\n1 130\n1 131\n1 132\n1 133\n1 134\n1 135\n1 136\n1 137\n1 138\n1 139\n1 140\n1 141\n1 142\n1 143\n1 144\n1 145\n1 146\n1 147\n1 148\n1 149\n1 150\n1 151\n1 152\n1 153\n1 154\n1 155\n1 156\n1 157\n1 158\n1 159\n1 160\n1 161\n1 162\n1 163\n1 164\n1 165\n1 166\n1 167\n1 168\n1 169\n1 170\n1 171\n1 172\n1 173\n1 174\n1 175\n1 176\n1 177\n1 178\n1 179\n1 180\n1 181\n1 182\n1 183\n1 184\n1 185\n1 186\n1 187\n1 188\n1 189\n1 190\n1 191\n1 192\n1 193\n1 194\n1 195\n1 196\n1 197\n1 198\n1 199\n1 200\n1 201\n1 202\n1 203\n1 204\n1 205\n1 206\n1 207\n1 208\n1 209\n1 210\n1 211\n1 212\n1 213\n1 214\n1 215\n1 216\n1 217\n1 218\n1 219\n1 220\n1 221\n1 222\n1 223\n1 224\n1 225\n1 226\n1 227\n1 228\n1 229\n1 230\n1 231\n1 232\n1 233\n1 234\n1 235\n1 236\n1 237\n1 238\n1 239\n1 240\n1 241\n1 242\n1 243\n1 244\n1 245\n1 246\n1 247\n1 248\n1 249\n1 250\n1 251\n1 252\n1 253\n1 254\n1 255\n1 256\n1 257\n1 258\n1 259\n1 260\n1 261\n1 262\n1 263\n1 264\n1 265\n1 266\n1 267\n1 268\n1 269\n1 270\n1 271\n1 272\n1 273\n1 274\n1 275\n1 276\n1 277\n1 278\n1 279\n1 280\n1 281\n1 282\n1 283\n1 284\n1 285\n1 286\n1 287\n1 288\n1 289\n1 290\n1 291\n1 292\n1 293\n1 294\n1 295\n1 296\n1 297\n1 298\n1 299\n1 300\n1 301\n1 302\n1 303\n1 304\n1 305\n1 306\n1 307\n1 308\n1 309\n1 310\n1 311\n1 312\n1 313\n1 314\n1 315\n1 316\n1 317\n1 318\n1 319\n1 320\n1 321\n1 322\n1 323\n1 324\n1 325\n1 326\n1 327\n1 328\n1 329\n1 330\n1 331\n1 332\n1 333\n1 334\n1 335\n1 336\n1 337\n1 338\n1 339\n1 340\n1 341\n1 342\n1 343\n1 344\n1 345\n1 346\n1 347\n1 348\n1 349\n1 350\n1 351\n1 352\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) in ['YES', 'NO'], solution(input)\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n2 2\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n2 2\") == \"NO\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n2 2\") == \"YES\"\nassert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 2\\n1 1\\n1 1\\n1 1\\n2 2\") == \"YES\"\n",
        "num_ids_2": 130,
        "num_ids_4": 280
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\\n1 2\\n5 6\\n5 7\\n7 4\\n8 9\\n9 8\\n2 5\\n1 1\\n1 1\\n1 2\\n3 4\\n1 2\\n1 1\\n1 1\\n2 2\") == \"YES\"\nassert solution(\"2 5\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\") == \"YES\"\nassert solution(\"2 5\\n1 1\\n1 1\\n1 1\\n2 2\\n2 2\") == \"NO\"\n",
        "num_ids_2": 102,
        "num_ids_4": 133
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"YES\"\nassert solution(\"3 4\") == \"YES\"\nassert solution(\"1 2\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\nassert solution(\"1 1\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2\n4 5\n8 4\n2 2\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2''') == 'YES'\nassert solution('''3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2''') == 'NO'\nassert solution('''4 5\n1 2\n2 3\n4 5\n6 7\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2''') == 'YES'\nassert solution('''4 5\n1 2\n2 3\n4 5\n6 7\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2''') == 'NO'\nassert solution('''5 7\n1 2\n2 3\n4 5\n6 7\n8 9\n1 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 2\n1 1\n1 1\n1 1\n1 2\n2 2\n1 100\n10 10\n10 10\n1 2''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4026,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\n''') == 'YES'\nassert solution('''\n3 4\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\n''') == 'NO'\nassert solution('''\n3 3\n1 2\n5 6\n5 7\n7 4\n8 9\n9 8\n2 5\n1 1\n1 1\n1 2\n3 4\n1 2\n1 1\n1 1\n\n''') == 'NO'\nassert solution('''\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '1'\n\n'''\n\nn = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n\n''') == '0'\nassert solution('''5\n\n''') == '1'\nassert solution('''6\n\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n\n''') == '0'\nassert solution('''5\n\n''') == '1'\nassert solution('''6\n\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"5\") == '1'\nassert solution(\"6\") == '1'",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n3\n4\n''') == '0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('6') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n''') == '1'\nassert solution('''6\n''') == '1'\nassert solution('''7\n''') == '1'\nassert solution('''8\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n\n''') == '0'\nassert solution('''5\n\n''') == '1'\nassert solution('''6\n\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4027,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3\n5''') == \"1\"\nassert solution('''6\n3\n5''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(open(0).read().strip()) == '5'\nassert solution(open(1).read().strip()) == '5'\nassert solution(open(2).read().strip()) == '3'\nassert solution(open(3).read().strip()) == '4'\nassert solution(open(4).read().strip()) == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 5\nassert solution('3') == 4\nassert solution('2') == 0\nassert solution('1') == 0",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 5\nassert solution('3') == 4\nassert solution('2') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"()\") == \"1\"\nassert solution(\"(()())\") == \"2\"\nassert solution(\"(())()\") == \"2\"\nassert solution(\")(()))\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n()))()\n''') == \"5\"\n\nassert solution('''3\n(()\n\n''') == \"4\"\n\nassert solution('''2\n(((\n\n''') == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '4'\nassert solution('2') == '0'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('11') == '2'\nassert solution('123') == '3'\nassert solution('1234') == '4'\nassert solution('12345') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4028,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5071\") == \"4\", \"Wrong answer\"\nassert solution(\"705\") == \"1\", \"Wrong answer\"\nassert solution(\"1241367\") == \"-1\", \"Wrong answer\"",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5071\n''') == '4'\nassert solution('''\n705\n''') == '1'\nassert solution('''\n1241367\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == -1",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5071\") == \"4\"\nassert solution(\"705\") == \"1\"\nassert solution(\"1241367\") == \"-1\"\nassert solution(\"771684\") == \"5\"",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n\nstdin = input()\nprint(solution(stdin))\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5071') == '4', 'Failed example'\nassert solution('705') == '1', 'Failed example'\nassert solution('1241367') == '-1', 'Failed example'",
        "num_ids_2": 31,
        "num_ids_4": 49
    },
    {
        "number": 4029,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5071') == '4'\nassert solution('705') == '1'\nassert solution('1241367') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('7') == '3'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\\\n3\nabc\n\n\"\"\") == \"1\"\nassert solution(\"\"\"\\\n5\nabcde\n\n\"\"\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aa\") == \"2\"\nassert solution(\"aaa\") == \"3\"\nassert solution(\"abacbe\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8\na\n''') == '3\n\nassert solution('''6\naacdc\n''') == '2\n\nassert solution('''6\naaacdc\n''') == '2\n\nassert solution('''9\nabacbecfd\n''') == '2\n\nassert solution('''5\nabcdedc\n''') == '1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('7') == '1 2 1 1 1 1 1 1'\nassert solution('11') == '1 1 1 1 1 1 1 1'\nassert solution('12') == '1 1 1 1 1 1'\nassert solution('14') == '1 1 1 1 1 1'",
        "num_ids_2": 27,
        "num_ids_4": 59
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution(\"1\\n\" + input().strip()) == '1 1 1 1 1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aa\") == \"2\"\nassert solution(\"ab\") == \"2\"\nassert solution(\"aabbccdd\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\naaaa\n''') == '1'\nassert solution('''\n10\nbbbcccddddd\n''') == '1'\nassert solution('''\n7\nabcdefgh\n''') == '2'\nassert solution('''\n11\nabcdefghi\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4030,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '2'\nassert solution('5') == '1'\nassert solution('6') == '1'\nassert solution('9') == '2'\nassert solution('8') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5\\n\" +\n    \"a\\n\" +\n    \"aba\\n\" +\n    \"abacaba\\n\" +\n    \"ba\\n\" +\n    \"aba\\n\") == \"YES\\n\" +\n    \"a\\n\" +\n    \"ba\\n\" +\n    \"aba\\n\" +\n    \"aba\\n\" +\n    \"abacaba\"\n)\nassert solution(\n    \"4\\n\" +\n    \"a\\n\" +\n    \"ba\\n\" +\n    \"abacaba\\n\" +\n    \"qwerty\\n\") == \"NO\\n\" +\n    \"a\\n\" +\n    \"ba\\n\" +\n    \"abacaba\\n\" +\n    \"qwerty\"\n)\nassert solution(\n    \"3\\n\" +\n    \"qwerty\\n\" +\n    \"qwerty\\n\" +\n    \"qwerty\"\n) == \"YES\\n\" +\n    \"qwerty\\n\" +\n    \"qwerty\\n\" +\n    \"qwerty\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\naba''') == \"NO\"\nassert solution('''5\na\naba\nabacaba\nba\naba\n\n''') == \"YES\"\nassert solution('''3\nqwerty\nqwerty\nqwerty\n\n''') == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'NO'\nassert solution('3') == 'YES'\nassert solution('5') == 'NO'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n''') == 'NO'\nassert solution('''5\na\naba\nabacaba\nba\naba\nabab\n''') == 'YES'\nassert solution('''3\nqwerty\nqwerty\nqwerty\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\na\naba\nabacaba\nba\naba\n\n3\nqwerty\nqwerty\nqwerty''') == 'YES'\nassert solution('''5\na\naba\nabacaba\nba\naba\n\n3\nqwerty\nqwerty\nqwerty''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"NO\"\nassert solution(\"aba\") == \"YES\"\nassert solution(\"abacaba\") == \"YES\"\nassert solution(\"abab\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(5) == \"YES\"\nassert solution(5) == \"YES\"\nassert solution(5) == \"NO\"\nassert solution(5) == \"NO\"\nassert solution(5) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'NO'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4031,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\na\naba\nabacaba\nba\naba\n''') == 'YES'\nassert solution('''\n5\na\nabacaba\nba\naba\nabab\n''') == 'NO'\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n''') == 'YES'\nassert solution('''\n3\nqwerty\nqwerty\nqwerty\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"5\"\n\nassert solution(input(stdin=True)) == \"5\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 4') == '5'\nassert solution('5 2') == '0'\nassert solution('5 100') == '5'\n\"\"\"\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\n\n\"\"\"\nfrom math import ceil\nn, k = map(int, input().split())\nproblems = list(map(int, input().split()))",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 4\") == \"5\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"5 100\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '5'\nassert solution() == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"5\"\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 4\\n4 2 3 1 5 1 6 4') == '5'\nassert solution('5 2\\n3 1 2 1 3') == '0'\nassert solution('5 100\\n12 34 55 43 21') == '5'\nassert solution('9 1\\n1 1 1 1 1 1') == '5'\n",
        "num_ids_2": 39,
        "num_ids_4": 76
    },
    {
        "number": 4032,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"4 2\") == \"0\"\nassert solution(\"8 4\") == \"5\"\nassert solution(\"5 100\") == \"5\"\nassert solution(\"5 5 5 5 5 5 5 5 5 5 5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdout.readline()",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\\n\") == \"12\"\nassert solution(\"3 9\\n\") == \"14\"\nassert solution(\"9 3\\n\") == \"14\"\nassert solution(\"3 6\\n\") == \"12\"\nassert solution(\"506 2708\\n\") == \"3218\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1,4]) == 12\nassert solution([3,9]) == 14\nassert solution([3,6]) == 12\nassert solution([506, 2708]) == 3218\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"12\"\nassert solution(input) == \"14\"\nassert solution(input) == \"14\"\nassert solution(input) == \"3218\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '18'\nassert solution('3 4') == '15'\nassert solution('3 6') == '14'\nassert solution('9 3') == '14'\nassert solution('506 2708') == '3218'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"5 5\n\"\"\"\n) == \"12\"\nassert solution(\n\"\"\"3 9\n\"\"\"\n) == \"14\"\nassert solution(\n\"\"\"3 6\n\"\"\"\n) == \"12\"\nassert solution(\n\"\"\"506 2708\n\"\"\"\n) == \"3218\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 4\n''') == '12'\nassert solution('''3 9\n''') == '14'\nassert solution('''3 6\n''') == '12'\nassert solution('''506 2708\n''') == '3218'",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '12'\nassert solution(input()) == '14'\nassert solution(input()) == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 9\") == \"14\"\nassert solution(\"4 4\") == \"12\"\nassert solution(\"3 6\") == \"12\"\nassert solution(\"506 2708\") == \"3218\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4033,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1\\n') == '14'\nassert solution('3 9\\n') == '14'\nassert solution('9 3\\n') == '14'\nassert solution('3 6\\n') == '12'\nassert solution('506 2708\\n') == '3218'",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"6\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"8\") == \"YES\"\nassert solution(\"9\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"YES\"\nassert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"aa\") == \"YES\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nabcde') == 'YES\\n00000'\nassert solution('9\\nabacbecfd') == 'YES\\n001010101'\nassert solution('8\\naaabbcbb') == 'YES\\n01011011'\nassert solution('7\\nabcdedc') == 'NO\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"aab\") == \"NO\"\nassert solution(\"aabb\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8\\nabacbecfd') == 'NO'\nassert solution('9\\nabacbecfd') == 'YES'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\nabacbe\n''') == 'NO'\nassert solution('''9\nabacbecfd\n''') == 'YES'\nassert solution('''8\naaabbcbb\n''') == 'YES'\nassert solution('''7\nabcdedc\n''') == 'NO'\nassert solution('''5\nabcde\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\naaabbcbb\n''') == 'YES'\nassert solution('''\n2\naaab\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4034,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"a\") == \"YES\"\nassert solution(\"b\") == \"YES\"\nassert solution(\"c\") == \"YES\"\nassert solution(\"d\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"25\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"25\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"25\"\nassert solution(\"2 1\") == \"25\"\nassert solution(\"4 2\") == \"25\"\nassert solution(\"2 2\") == \"25\"\nassert solution(\"3 3\") == \"25\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '25'\nassert solution('2 2') == '2'\nassert solution('3 2') == '-1'\n\ninput_values = [(int(input()), int(input())) for _ in range(int(input()))]\n\ninput_values.sort(key = lambda x: x[1])\nprint(input_values[0][0])\n\n-----Explanation-----\nimport math\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"25\"\nassert solution(\"2 1\") == \"-1\"\nassert solution(\"2 1\") == \"25\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '25'\nassert solution('20 4') == '1'\nassert solution('1000 4') == '1000'\nassert solution('9999 5') == '1000'\nassert solution('9999 999') == '1000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '25'\nassert solution('1 1') == '1'\nassert solution('0 0') == '-1'\nassert solution('4 5') == '25'\nassert solution('5 4') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == '25'\nassert solution('''4 3''') == '2.5'\nassert solution('''5 10''') == '-1'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"25\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4035,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '25'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 6\") == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"5 5\") == \"NO\"\nassert solution(\"6 4\") == \"NO\"\nassert solution(\"10 10\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"NO\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"9 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'YES'\nassert solution('25 6') == 'YES'\nassert solution('27 6') == 'NO'\nassert solution('25 7') == 'NO'\nassert solution('27 7') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\"\nassert solution(\"1 1\") == \"YES\"\nassert solution(\"1 1\")!= \"YES\"\nassert solution(\"26 6\") == \"YES\"\nassert solution(\"8 3\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"YES\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n26 6\n''') == 'YES'\nassert solution('''\n8 3\n''') == 'YES'\nassert solution('''\n1 1\n''') == 'YES'\nassert solution('''\n9 4\n''') == 'NO'\n\nprint('solution()')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'YES', solution('1 2')\nassert solution('5 4') == 'NO', solution('5 4')\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 6\n''') == 'YES'\nassert solution('''\n13 8\n''') == 'NO'\nassert solution('''\n11 4\n''') == 'YES'\nassert solution('''\n8 3\n''') == 'NO'\nassert solution('''\n3 2\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"13 7\") == \"YES\"\nassert solution(\"23 5\") == \"NO\"\nassert solution(\"15 1\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4036,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 4 5 6 8') == 'YES'\nassert solution('26 6') == 'YES'\nassert solution('8 3') == 'NO'\nassert solution('1 1') == 'YES'\nassert solution('9 4') == 'NO'",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '''\n    5 20\n    45 -6\n    34 -15\n    10 34\n    1 27\n    40 -45\n    '''\n) == '5'\n\nassert solution(\n    '''\n    3 4\n    4 6\n    10 -2\n    8 -1\n    '''\n) == '3'\n\nprint('AoC 2020 Day 5 (Part 2)')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n4 6\") == \"3\"\nassert solution(\"5 20\\n45 -6\\n34 -15\\n10 34\\n1 27\\n40 -45\") == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 6\n4 6\n4 6\n4 6\n''') == '3'\n\nassert solution('''\n3 4\n3 3\n1 4\n1 4\n''') == '4'\n\nassert solution('''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\n''') == '5'\n\n'''\n\nfrom typing import List\nfrom bisect import bisect_right\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\nassert solution(\"5 20\") == \"5\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 20') == '5'\nassert solution('3 4') == '3'\nassert solution('3 2') == '3'\nassert solution('3 1') == '3'\nassert solution('5 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 3') == '2'\nassert solution('3 4') == '3'\nassert solution('4 5') == '4'\nassert solution('5 6') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 4\n4 6\n10 -2\n8 -1\n''') == '3'\nassert solution('''5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n''') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"3 4\") == \"3\"\nassert solution(\"5 20\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4037,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n3 4\n4 6\n10 -2\n8 -1\n''') == '3'\n\nassert solution(\n'''\n5 20\n45 -6\n34 -15\n10 34\n1 27\n40 -45\n\n''') == '5'\n\nassert solution(\n'''\n3 2\n300 -300\n1 299\n1 123\n\n''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\n\n\"\"\",\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(open(0).read()) == \"YES\"\nassert solution(open(1).read()) == \"NO\"\nassert solution(open(2).read()) == \"YES\"\nassert solution(open(3).read()) == \"NO\"\nassert solution(open(4).read()) == \"YES\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"10\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\n''') == 'YES'\nassert solution('''\n3\n1 1 1 1 1 3 3 3 3\n''') == 'NO'\nassert solution('''\n4\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\n''') == 'YES'\nassert solution('''\n4\n1 1 1 1 1 3 3 3 3\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'YES'\nassert solution('4') == 'YES'\nassert solution('3') == 'YES'\nassert solution('5') == 'NO'\nassert solution('10') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\\n1 2 2 1\\n8 2 2 8\\n8 2 2 8\\n1 2 2 1\\n\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\\n1 3 1\\n3 1 3\\n1 3 1\\n\"\nassert solution(\"4\\n1 2 1 9 8 4 3 8 8 3 4 8 9 2 1 1\") == \"NO\\n\"\nassert solution(\"1\\n10\") == \"YES\\n10\"",
        "num_ids_2": 92,
        "num_ids_4": 138
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(open(\"test_file.txt\", \"r\")) == \"YES\\n3\\n2 1\\n3 1 3\\n1 3 3\\n3 1 3\"",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 3 3\n1 1 1\n1 1 1''') == 'YES'\nassert solution('''4\n1 1 1 2 2 2 2 2 2 2 2\n1 2 2 2 1 2 1 1 2 2 1 2 1\n1 2 1 1 1 2 1 1 1 2 1 1 2 1\n2 1 1 1 2 2 1 2 1 1 1 2 1 2 1 1\n2 1 1 1 2 2 1 2 1 1 1 2 1 2 1 1 1\n1 2 1 1 2 2 1 1 1 1 1 2 1 1 2 1 1 1\n1 2 1 1 2 2 1 1 1 1 1 2 1 1 1 1 1 1\n1 2 1 1 1 2 1 1 1 1 1 1 2 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n2 1 2 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1\n1 1 1\n2 2 2\n2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n2 2 2\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1 1 1\n1",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\"\nassert solution(\"2\\n1 1 1 1 1 3 3 3 3\") == \"NO\"\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\"\nassert solution(\"3\\n1 1 1 1 1 1 3 3 3 3\") == \"YES\"\n",
        "num_ids_2": 49,
        "num_ids_4": 91
    },
    {
        "number": 4038,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n1 8 8 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 8 8 1\") == \"YES\"\n\nassert solution(\"3\\n1 1 1 1 1 3 3 3 3\") == \"YES\"\n\nassert solution(\"4\\n1 2 1 1 3 3 3 3 3 4 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5 5",
        "num_ids_2": 55,
        "num_ids_4": 766
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4\\n4 6') == 'YES'\nassert solution('3 5\\n4 -5\\n4 -2\\n1 3') == 'YES'\nassert solution('4 4\\n5 2\\n5 -3\\n2 1\\n4 -2') == 'YES'\nassert solution('4 10\\n10 0\\n10 -10\\n30 0') == 'NO'\n",
        "num_ids_2": 40,
        "num_ids_4": 93
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\\n4 6\\n10 -2\\n8 -1\\n\") == \"YES\"\nassert solution(\"3 5\\n4 -5\\n4 -2\\n1 3\\n\") == \"YES\"\nassert solution(\"4 4\\n5 2\\n5 -3\\n2 1\\n4 -2\\n\") == \"NO\"",
        "num_ids_2": 54,
        "num_ids_4": 85
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n\n''') == 'YES'\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n\n''') == 'YES'\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == \"YES\"\nassert solution('3 5') == \"YES\"\nassert solution('4 4') == \"YES\"\nassert solution('5 2') == \"YES\"\nassert solution('10 0') == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n\n''') == \"YES\"\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n\n''') == \"YES\"\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n\n''') == \"YES\"\n\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n\n''') == \"NO\"\n\n\n\n\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"3 10\") == \"NO\"\nassert solution(\"4 10\") == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4\") == \"YES\"\nassert solution(\"3 5\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\nassert solution(\"4 5\") == \"YES\"\nassert solution(\"5 5\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"YES\"\nassert solution(\"3 1\") == \"NO\"\nassert solution(\"1 2\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"3 5\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_1) == \"YES\", \"First\"\nassert solution(input_2) == \"YES\", \"Second\"\nassert solution(input_3) == \"NO\", \"Third\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4039,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n4 6\n10 -2\n8 -1\n''') == \"YES\"\n\nassert solution('''\n3 5\n4 -5\n4 -2\n1 3\n''') == \"YES\"\n\nassert solution('''\n4 4\n5 2\n5 -3\n2 1\n4 -2\n''') == \"YES\"\n\nassert solution('''\n3 10\n10 0\n10 -10\n30 0\n''') == \"NO\"\n\nassert solution('''\n4 10\n5 2\n5 -3\n2 1\n4 -2\n''') == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 2\") == \"YES\"\nassert solution(\"10 1 11\") == \"YES\"\nassert solution(\"10 1 5\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''\n10 1 11\n1\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\nassert solution('''\n10 1 5\n2\n''') == 'YES\\n0 0 0 0 1 1 0 0 0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\", \"First example\"\nassert solution(\"10 1 11\\n1\\n\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\", \"Second example\"\nassert solution(\"10 1 5\\n2\\n\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\", \"Third example\"\n",
        "num_ids_2": 63,
        "num_ids_4": 96
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3 2') == 'YES'\nassert solution('10 1 11') == 'YES'\nassert solution('10 1 5') == 'YES'\nassert solution('7 3') == 'NO'\nassert solution('10 1') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES\\n0 1 0 2 2 0 3'\nassert solution('''\n7 1 5\n2\n''') == 'YES\\n0 0 0 0 0 0 0 0 0 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 3 2\n1 2 1\n''') == 'YES'\nassert solution('''\n10 1 11\n1\n''') == 'YES'\nassert solution('''\n10 1 5\n2\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3 2\\n1 2 1\\n') == 'YES\\n0 1 0 2 2 0 3\\n'\nassert solution('10 1 11\\n1\\n') == 'YES\\n0 0 0 0 0 0 0 0 0 1 \\n'\nassert solution('10 1 5\\n2\\n') == 'YES\\n0 0 0 0 1 1 0 0 0 0 0 \\n'\n",
        "num_ids_2": 61,
        "num_ids_4": 93
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3 2\\n1 2 1\") == \"YES\\n0 1 0 2 2 0 3\"\nassert solution(\"10 1 11\\n1\") == \"YES\\n0 0 0 0 0 0 0 0 0 1\"\nassert solution(\"10 1 5\\n2\") == \"YES\\n0 0 0 0 1 1 0 0 0 0\"\n",
        "num_ids_2": 53,
        "num_ids_4": 80
    },
    {
        "number": 4040,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_data) == \"YES\"\n\n\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bbaba') == 3\nassert solution('baaba') == 2\nassert solution('abcde') == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abcde\") == 0\nassert solution(\"baaba\") == 3\nassert solution(\"bbaba\") == 3\nassert solution(\"babad\") == 3\nassert solution(\"abc\") == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nbbaaba\nbb\n\"\"\") == \"3\"\nassert solution(\"\"\"\nbaaba\nab\n\"\"\") == \"2\"\nassert solution(\"\"\"\na\n\"\"\") == \"0\"\nassert solution(\"\"\"\nasdfasdf\nfasd\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == 0\nassert solution(\"test\") == 2\nassert solution(\"tst\") == 1\nassert solution(\"tt\") == 2\nassert solution(\"et\") == 1\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"bb\") == 0\nassert solution(\"abcde\") == 2\nassert solution(\"baaba\") == 2\nassert solution(\"asdfasdf\") == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('baaba') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 1\nassert solution('baaba') == 2\nassert solution('ba') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('aa') == 1\nassert solution('cc') == 0\nassert solution('aa') == 1\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4041,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bbaba') == '3'\nassert solution('bb') == '2'\nassert solution('ab') == '2'\nassert solution('asdfasdf') == '3'\nassert solution('aaa') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1.2\") == \"3 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2.572479\") == \"10 3\"\nassert solution(\"4.024922\") == \"9 9\"\nassert solution(\"1.200000\") == \"3 2\"",
        "num_ids_2": 30,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0.6648412903225899') == \"1 1\"\nassert solution('2.14765026336819') == \"1 2\"\nassert solution('1.960814452749669') == \"1 1\"\nassert solution('2.086123388934516') == \"1 2\"\nassert solution('3.14159320794961') == \"1 2\"\n",
        "num_ids_2": 39,
        "num_ids_4": 77
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\nassert solution('0.1011') == '10 1'\nassert solution('0.99999') == '10 0'\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"3 2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4042,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1.200000') == '3 2'\nassert solution('2.572479') == '10 3'\nassert solution('4.024922') == '9 9'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"10 8 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6'\n",
        "num_ids_2": 44,
        "num_ids_4": 136
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'YES'\nassert solution('6 3 3\\n') == 'YES'\nassert solution('6 2 3\\n') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"10 5 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 3\") == \"YES\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\"\nassert solution(\"8 5 3\") == \"YES\"\nassert solution(\"10 7 4\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 3\") == \"YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6\"\nassert solution(\"6 2 3\") == \"NO\\n\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 96
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution([6, 3, 3]) == \"YES\"\nassert solution([6, 2, 3]) == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 3') == 'YES'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES'\nassert solution('10 5 3') == 'NO'\nassert solution('8 5 3') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 3') == 'YES\\n3 1\\n4 1\\n1 2\\n5 2\\n2 6'\nassert solution('6 2 3') == 'NO'\nassert solution('10 4 3') == 'YES\\n2 9\\n2 10\\n10 3\\n3 1\\n6 10\\n8 2\\n4 3\\n5 6\\n6 7\\n'\nassert solution('8 5 3') == 'YES\\n2 5\\n7 2\\n3 7\\n3 1\\n1 6\\n8 7\\n4 3\\n5 6\\n6 7\\n'\n",
        "num_ids_2": 44,
        "num_ids_4": 144
    },
    {
        "number": 4043,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3 3\") == \"YES\\n3 1\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"6 2 3\") == \"NO\"\nassert solution(\"10 4 3\") == \"YES\\n2 9\"\nassert solution(\"10 4 3\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 1') == '1100'\nassert solution('3 3 3') == '101100'\nassert solution('5 3 6') == '01010100'",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1100'\nassert solution(input()) == '0011'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 1') == \"1100\"\nassert solution('3 3 3') == \"101100\"\nassert solution('5 3 6') == \"01010100\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"\nassert solution(\"5 5 5\") == \"11110000\"\n\nstdin = \"\"\nfor i in range(1, int(input()) + 1):\n    stdin += str(i) + str(i) + str(i)\nprint(solution(stdin))",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4044,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2 1\") == \"1100\"\nassert solution(\"3 3 3\") == \"101100\"\nassert solution(\"5 3 6\") == \"01010100\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\nab\\nbc\") == \"acbbac\"\nassert solution(\"2\\nab\\nbc\") == \"cacbacbab\"\nassert solution(\"1\\ncb\\nac\") == \"abc\"\nassert solution(\"1\\ncb\\nbc\") == \"def\"\n",
        "num_ids_2": 39,
        "num_ids_4": 71
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('1') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\nab\nbc\n\n3\naa\nbc\n\n''') == \"YES\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"4\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\\\n2\nab\nbc\n\n3\naa\nbc\n\n4\nab\nac\nbc\n\n5\nab\nac\nbc\n''') == 'acbbac'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'NO', \"Too easy\"\nassert solution('2') == 'YES', \"Too easy\"\nassert solution('3') == 'YES', \"Too easy\"\nassert solution('4') == 'NO', \"Too easy\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nab\\nbc\\n\") == \"acbbac\", \"Should be 'acbbac'\"\nassert solution(\"2\\nab\\nbc\\n\") == \"NO\", \"Should be 'NO'\"\nassert solution(\"1\\ncb\\nac\\n\") == \"YES\", \"Should be 'YES'\"\nassert solution(\"1\\nac\\ncb\\n\") == \"YES\", \"Should be 'YES'\"\nassert solution(\"1\\nab\\ncb\\n\") == \"YES\", \"Should be 'YES'\"\n\n'''",
        "num_ids_2": 52,
        "num_ids_4": 100
    },
    {
        "number": 4045,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"YES\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '1 1 1 1'\nassert solution('4') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n-2 1\") == \"3 1 2\"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"4\\n-1 2 2\") == \"-1\"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5\"\nassert solution(\"5\\n1 1 1 1\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2 1'\nassert solution('3') == '1 2 3'\nassert solution('4') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n-2 1\n\n2\n3 1 2''') == '3 1 2'\nprint(solution('''5\n1 1 1 1\n\n2\n3 1 2 3'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n-2 1') == '3 1 2'\nassert solution('5\\n1 1 1 1') == '1 2 3 4 5'\nassert solution('4\\n-1 2 2') == '-1'\nassert solution('10\\n-2 1') == '10 -1 -2 -3 -4 -5 -6 -7 -8 -9 -10'\nassert solution('10\\n-2 2') == '-2 -3 -4 -5 -6 -7 -8 -9 -10'\n",
        "num_ids_2": 37,
        "num_ids_4": 89
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n1\n1 2\n\"\"\"\n) == \"1 2\"\n\nassert solution(\n\"\"\"\n2\n2 1\n\"\"\"\n) == \"2 1\"\n\nassert solution(\n\"\"\"\n2\n1 2\n\"\"\"\n) == \"2 1\"\n\nassert solution(\n\"\"\"\n3\n-2 1\n\"\"\"\n) == \"-2 1\"\n\nassert solution(\n\"\"\"\n4\n-1 2\n\"\"\"\n) == \"-1\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '1 2 3 4 5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4046,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('5') == '1 2 3 4 5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"2\"\n\nstdin = \"\"\"6\n1 2 3 4 5 6\"\"\"\n\nprint(solution(stdin))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n2 3\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\") == \"2\"\nprint(solution(input()))",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '3'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_stdin) == output_stdout\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"1\"\nassert solution(\"5\\n2 2 2 3 3\\n\") == \"2\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 1\nassert solution('5\\n2 2 2 3 3') == 2\nassert solution('10\\n1 3 5 8 2 4 7 6 8') == 3\n",
        "num_ids_2": 21,
        "num_ids_4": 40
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3\n1 2 3\n\"\"\") == \"1\"\nassert solution(\"\"\"5\n2 2 2 3 3\n\"\"\") == \"2\"\nassert solution(\"\"\"10\n1 2 2 3 3 3 4 5 5\n\"\"\") == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1 2 3\\n') == '1'\nassert solution('5\\n2 2 2 3 3\\n') == '2'\nassert solution('13\\n1 3 5 2 4 6 8 9 10 11\\n') == '5'\nassert solution('13\\n1 2 5 3\\n') == '4'\nassert solution('3\\n1 2 3\\n') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 78
    },
    {
        "number": 4047,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n1 2 3') == '1'\nassert solution('5\\n2 2 2 3 3') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '5'\nassert solution('5') == '5'\nassert solution('10') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10\n''') == '5'\n\nprint(solution(input()))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '1'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '5'\nassert solution('4') == '4'\nassert solution('6') == '3'\nassert solution('2') == '2'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '5'\nassert solution('11') == '2'\nassert solution('11111111') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('4') == '4'\nassert solution('3') == '4'\nassert solution('2') == '5'\nassert solution('1') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4048,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"5\"\nassert solution(\"-1\") == \"0\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n0 1 1\n1 1 0\n''') == '0 1'\n\nassert solution('''15\n5 5 5\n5 5 5\n''') == '0 15'\n\nassert solution('''319\n10 53 256\n182 103 34\n''') == '119 226'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"0 1\"\nassert solution(\"15\") == \"0 15\"\nassert solution(\"319\") == \"119 226\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('319') == '119 226'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '0 1'\nassert solution(input()) == '0 15'\nassert solution(input()) == '22 334'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"0 1\"\nassert solution(sys.stdin.read()) == \"0 15\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '0 1' or solution(input_) == '1 1' or solution(input_) == '0 1 1'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '0 1'\nassert solution('3') == '0 1'\nassert solution('5') == '0 1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0 1'\nassert solution('15') == '0 15'\nassert solution('3') == '3 3'\nassert solution('319') == '119 226'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '0 1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4049,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"0 1\"\nassert solution(input()) == \"0 1\"\nassert solution(input()) == \"0 1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4 4 4 4 4 4'\nprint(solution(input()))\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"7\\n4 1 2 2 1 5 3\"\n) == \"3\\n7 7\\n2 3\"\nassert solution(\n    \"11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\"\n) == \"2\\n3 4\\n1 1\\n2 2\\n3 3\\n4 4\\n5 5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 1 1 1\\n') == '2'\nassert solution('11\\n-5 -4 -3 -2 -1 0 1 2 3 4 5\\n') == '3 4 4 4 4'\nassert solution('7\\n4 1 2 2 1 5 3\\n') == '3'\nassert solution('7\\n0 1 2 2 1 5 3\\n') == '1 1'\nassert solution('11\\n0 1 1 1 1 1 1 1 1 1\\n') == '4 4 4 4 4'",
        "num_ids_2": 52,
        "num_ids_4": 95
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '2'\nassert solution('4') == '4'\nassert solution('11') == '4 4'\nassert solution('5') == '2'\nassert solution('1 1 1 1') == '1 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n4 1 2 2 1 5 3\n''') == '3'\nassert solution('''11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == '4 4 4 4 4 4 4'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('3') == '4'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\"\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\") == \"3\"\nassert solution(\"11\") == \"4 4 4 4 4 4\"\nassert solution(\"123\") == \"4 4\"\nassert solution(\"213\") == \"4 4\"\nassert solution(\"1234567\") == \"4 4 4 4 4 4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n2\n1 1\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n3\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n\"\"\") == \"2\"\nassert solution(\n\"\"\"\n4\n1 1 1 1\n\"\"\") == \"4\"\nassert solution(\n\"\"\"\n5\n1 1 1 1 1\n\"\"\") == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4050,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution(\"\") == \"4\"\nassert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n\nimport sys\nfrom collections import defaultdict",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n''') == 'YES'\nassert solution('''\n3\n3 1 2\n''') == 'NO'\nassert solution('''\n5\n3 4 5 2 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3\n''') == 'YES'\nassert solution('''3 1 2\n''') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'NO'\nassert solution('3') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"3 1 2\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'NO'\nassert solution('3') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3 1 2') == 'YES'\nassert solution('3 1 2 3 3') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 1 3\") == \"YES\"\nassert solution(\"3 1 2\") == \"NO\"\nassert solution(\"3 3 1 2\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 1 2\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\nassert solution('''\n3\n2 3 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4051,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"1\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"4\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '-1'\nassert solution('''\n4\nabcd\naccd\n''') == '4 5 4 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == '4'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\nabcdef\nabdfec\n''') == '-1'\nassert solution('''\n4\nabcd\naccd\n''') == '4'\nassert solution('''\n2\nabc\nabc\n''') == '0'\nassert solution('''\n3\nabcd\nabcdef\n''') == '3 5 4 5'\nassert solution('''\n4\nacb\nabcd\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '-1'\nassert solution('1') == '0'\nassert solution('4') == '4'\nassert solution('5') == '3'\nassert solution('6') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n    6\n    abcd\n    accd\n    \"\"\"\n) == \"4\"\nassert solution(\n    \"\"\"\n    5\n    abc\n    acc\n    \"\"\"\n) == \"0\"\nassert solution(\n    \"\"\"\n    9\n    abcdcba\n    accdcecbc\n    \"\"\"\n) == \"2\"\nassert solution(\n    \"\"\"\n    10\n    abcdcdcd\n    accdcdcd\n    cdcdcdab\n    \"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '-1', solution()\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\nabc\\nabd') == '-1', solution('3\\nabc\\nabd')\n\n'''\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4052,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == 'SPPSPSPS', 'Wrong result'\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == 'PSPSPSPS', 'Wrong result'\nassert solution('''\n5\nba\na\nabab\na\naba\nbaba\nab\naba\n\n3\na\nc\n\n2\na\nc\n''') == 'SPPSPSPS', 'Wrong result'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\nba\\na\\na\\na\\na\\n\") == \"PS\"\nassert solution(\"2\\na\\n\") == \"PS\"\nassert solution(\"1\\n\") == \"SP\"\nassert solution(\"2\\nabab\\na\") == \"PS\"\nassert solution(\"3\\nba\\na\\n\") == \"SPPS\"\n",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"SPPS\"\nassert solution(\"1\") == \"PSPS\"\nassert solution(\"2\") == \"PSPS\"\nassert solution(\"3\") == \"SPPS\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'SP'\nassert solution('3') == 'PS'\nassert solution('2') == 'SP'\n\n----\n\ns = stdin.split('\\n')\n\nn = int(s[0])",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'\n",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nba\\na\\na\\na\\nabab\\naba') == 'SPPSPSPS'\nassert solution('3\\na\\nc\\n') == 'PS'\nassert solution('2\\na\\n') == 'SPS'",
        "num_ids_2": 45,
        "num_ids_4": 60
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"SPSP\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"SPPSPSPS\"\nassert solution(input()) == \"SPPSP\"\nassert solution(input()) == \"PS\"\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nba\\na\\na\\nab\") == \"SPPS\"\nassert solution(\"3\\na\\nc\\n\") == \"PS\"\nassert solution(\"2\\na\\n\") == \"PS\"\nassert solution(\"5\\nba\\nab\\na\\n\") == \"SPPSPS\"\nassert solution(\"4\\nba\\na\\nab\") == \"SPPSPSPS\"\n",
        "num_ids_2": 37,
        "num_ids_4": 73
    },
    {
        "number": 4053,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'SPPSPSPS'\nassert solution('3') == 'PS'\nassert solution('2') == 'PS'",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n2\n7\n''') == '1'\nassert solution('''\n7\n7\n2\n7\n''') == '3'\nprint(solution('''\n1\n2\n3\n4\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4 5') == '5'\nassert solution('1 2 4 3 5') == '1'\nassert solution('1 2 4 3 5 6') == '1'\nassert solution('1 2 4 3 5 6 7') == '1'\nassert solution('1 2 3 4 5 6 7 8 9') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n6\\n10\") == \"1\"\n\nassert solution(\"10\\n5\\n20\") == \"2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6 8 10') == '1'\nprint('Solution: %s' % solution(''))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 6 8 10') == '1'\n\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 6 8 10') == '1'\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '2 4 6 8 10') == '1'\n\nassert solution(\n    '0 0 0 0 0') == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4 5') == '1'\n\nassert solution('1 1 1 2 2 2') == '3'\n\nassert solution('1 1 2 3 3 4 5') == '2'\n\nassert solution('1 1 1 1 2 2 3 4 5') == '2'\n\n\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4054,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 2 4 5') == '1'\nassert solution('1 1 5 4 3') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '2'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0\\n') == '2'\nassert solution('5\\n1 1 0 0 0\\n') == '0'\nassert solution('4\\n1 1 1 1\\n') == '0'\n",
        "num_ids_2": 43,
        "num_ids_4": 61
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 1 1 1\n''') == '0'\nassert solution('''\n5\n1 1 0 0 0\n''') == '0'\nassert solution('''\n6\n1 1 1 1 1 0\n''') == '1'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\nassert solution('''\n2\n1 1 0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10\\n1 1 0 1 1 0 1 0 1 0') == '2'\nassert solution('5\\n1 1 0 0 0') == '0'\nassert solution('4\\n1 1 1 1') == '0'",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '0'\nassert solution('10') == '2'\nassert solution('1') == '0'\nassert solution('5') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 1 0 1 1 0 1 0 1 0\") == \"2\"\nassert solution(\"5\\n1 1 0 0 0\") == \"0\"\nassert solution(\"4\\n1 1 1 1\") == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 55
    },
    {
        "number": 4055,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 0 1 1 0 1 0 1\n\n''') == '2'\nassert solution('''\n5\n1 1 0 0 0\n\n''') == '0'\nassert solution('''\n4\n1 1 1 1\n\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n3 4\") == \"1\"\nassert solution(\"4\\n5 6\") == \"2\"\nassert solution(\"5\\n6 7\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 49
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2 3 4 5''') == '1'\nassert solution('''6 90 12 18 30 18''') == '4'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n1\n3 2\n1\n2\n\"\"\"\n) == \"1\"\nassert solution(\n    \"\"\"\n2\n1\n2\n1\n\"\"\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5') == '2'\nassert solution('1 2 3 4 5') == '3'\nassert solution('1 2 3 4 5') == '4'\nassert solution('1 2 3 4 5') == '5'\n\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n10\\n20\\n30') == '1\\n'\nassert solution('4\\n1 2 3 4') == '1\\n2\\n'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 2 3\n''') == '1'\nassert solution('''4\n1 2 2 1\n''') == '1'\n\nassert solution('''5\n1 2 1 2 3\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '4'\n\n\n---\n\nYou are given an array $a$ consisting of $n$ integers.\n\nYour task is to find the number of positive integers $x$ such that $x$ divides each number from the array. In other words, you have to find the number of common divisors of all elements in the array.\n\nFor example, if the array $a$ will be $[2, 4, 6, 2, 10]$, then $1$ and $2$ divide each number from the array (so the answer for this test is $2$).\n\n\n-----Input-----\n\nThe first line of the input contains one integer $n$ ($1 \\le n \\le 4 \\cdot 10^5$) \u2014 the number of elements in $a$.\n\nThe second line of the input contains $n$ integers $a_1, a_2, \\dots, a_n$ ($1 \\le a_i \\le 10^{12}$), where $a_i$ is the $i$-th element of $a$.\n\n\n-----Output-----\n\nPrint one integer \u2014 the number of such positive integers $x$ such that $x$ divides each number from the given array (in other words, the answer is the number of common divisors of all elements in the array).\n\n\n-----Examples-----\nInput\n5\n1 2 3 4 5\n\nOutput\n1\n\nInput\n6\n6 90 12 18 30 18\n\nOutput\n4\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4056,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('100') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('1 2') == '2'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100000000\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n100\\n\") == \"2\"\nassert solution(\"6\\n1 2 4 3 3 2\\n\") == \"2\"\nassert solution(\"1\\n3\\n\") == \"1\"\nassert solution(\"1\\n0\\n\") == \"1\"",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n3 5 1 3\n''') == '2'\nassert solution('''\n10\n3 7 1 4 3 8 2 9 2 5\n''') == '2'\nassert solution('''\n7\n3 2 2 4 4 5 2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n100\") == \"1\"\nassert solution(\"3\\n2 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == input_\n\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4057,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 2 4 3 3 2') == '2'\nassert solution('8\\n1 2 3 1 2 3 1 2') == '2'\nassert solution('1\\n1') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 51
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_1) == \"3\"\nassert solution(input_2) == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\\n\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\\n\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\\n\") == \"3\"\n\n'''\n",
        "num_ids_2": 41,
        "num_ids_4": 66
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2') == '3'\nassert solution('5 3') == '2'\nassert solution('10 3') == '3'\nassert solution('10 6') == '-1'\nassert solution('100 10') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('6 2') == '3'\nassert solution('10 3') == '2'\nassert solution('1 0 0 0 0 1') == '3'\nassert solution('5 10') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 2\n0 1 1 0 0 1\n''') == '3'\n\nassert solution('''\n5 3\n1 0 0 0 1\n''') == '2'\n\nassert solution('''\n10 3\n0 0 1 1 0 1 0 0 0 1\n''') == '3'\n\nassert solution('''\n12 3\n0 0 0 0 1 1 1 1 1 1 1 0 1\n''') == '2'\n\nassert solution('''\n1\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\\n0 1 1 0 0 1\") == \"3\"\nassert solution(\"5 3\\n1 0 0 0 1\") == \"2\"\nassert solution(\"10 3\\n0 0 1 1 0 1 0 0 0 1\") == \"3\"",
        "num_ids_2": 37,
        "num_ids_4": 60
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n5 3\n0 0 0 0 0\n\"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n10 3\n0 0 1 1 0 1 0 0 0 1\n\"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n6 2\n0 1 1 0 0 1\n\"\"\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 2\") == \"3\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"10 3\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 2\n0 1 1 0 0 1\n\n''') == '3'\n\nassert solution('''10 3\n0 0 1 1 0 1 0 0 0 1\n\n''') == '2'\n\nassert solution('''10 10\n0 0 0 0 0 0 0 0 0 1\n\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4058,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == -1, \"Test fail\"\nassert solution([5, 3]) == 2, \"Test fail\"\nassert solution([5, 10]) == 3, \"Test fail\"\n",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\n\n''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('9') == '6'\nassert solution('30') == '36'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n'''\n3\n''') == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"12\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n''') == '3'\nassert solution('''12\n''') == '0'\nassert solution('''123\n''') == '3'\nassert solution('''32\n''') == '0'\nassert solution('''233\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\nassert solution('3') == '3'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('7') == '6'\nassert solution('10') == '10'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4059,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '3'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('((((()))))') == 3\nassert solution('((((())))))') == 0\nassert solution('))') == 1\nassert solution('((((()))))') == 1\nassert solution('))') == 0\n",
        "num_ids_2": 23,
        "num_ids_4": 42
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('3') == '3'\nassert solution('3') == '3'\nassert solution('3') == '3'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('((((())') == \"3\"\nassert solution('()()()()') == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('(()())') == '0'\nassert solution('((()())') == '3'\nassert solution('((((((((((((()))))))))))))))') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n(((()\n\n''') == 3)\n\nassert solution('''5\n()()()\n\n''') == 0\n\nassert solution('''8\n)))(((((\n\n''') == 0\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n(((()\n''') == '3')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6\n(((()\n\nOutput\n3\n\n6\n\n(((()\n\nOutput\n0\n\n1\n\n2\n\n''') == '3')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4060,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('(((())') == '3'\nassert solution('()())') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 2\nassert solution('abcde') == 0\nassert solution('asdfasdf') == 3\nassert solution('dddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nbbaba\nbb\n''') == 3\n\nassert solution('''\naaaaaaaaaab\naaaaaabbbb\n''') == 2\n\nassert solution('''\nzzzzzzzzzzzzzz\nzzzzzabcdef\n''') == 1\n\nassert solution('''\nbbaa\na\n''') == 1\n\nassert solution('''\nbbabababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bbaba\") == 3\nassert solution(\"baaba\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"asdfasdf\") == 3\nassert solution(\"ab\") == 2\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 1\nassert solution('baaba') == 2",
        "num_ids_2": 17,
        "num_ids_4": 26
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"bbaaba\"\n    \"bb\"\n) == 3\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"baaba\") == 3\nassert solution(\"bbaba\") == 3\nassert solution(\"abcd\") == 2\nassert solution(\"abcde\") == 0\nassert solution(\"fasd\") == 3\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('asdfasdf') == '3'\nassert solution('baaba') == '2'\nassert solution('bbaba') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([\"test\", \"tst\", \"tt\", \"et\"]) == 1\nassert solution([\"tset\", \"se\", \"contest\"]) == 1\nassert solution([\"asdfasdf\", \"fasd\"]) == 3\n",
        "num_ids_2": 38,
        "num_ids_4": 56
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''bbaba\nbb\n''') == 3\nassert solution('''baaba\nab\n''') == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4061,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('bbaba') == 3\nassert solution('bb') == 0\nassert solution('aaba') == 2\nassert solution('abab') == 1\nassert solution('aaab') == 0\n",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('3 5 1 7') == '5'\nassert solution('1 2 3 4') == '12'\n\"\"\"\n\na,b,c,d = map(int, input().split())\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 1') == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('0 0 0 0') == '0'\nassert solution('-10 -10 -10 -10') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 1 1\") == '2'\nassert solution(\"1 2 1 2\") == '3'\nassert solution(\"1 2 1 2\") == '3'\nassert solution(\"1 2 1 3\") == '3'\nassert solution(\"1 2 2 1\") == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 1 1') == '2'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 1 1\") == \"2\"\nassert solution(\"1 3 2 1\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 2, 1, 1]) == '2'\nassert solution([1, 2, 1, 2]) == '4'\nassert solution([1, 2, 3, 4]) == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1 2 1 1\\n\"\n    ) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4062,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 1') == '2'\nassert solution('1 1 3 1') == '3'\nassert solution('1 3 1 2') == '2'\nassert solution('1 2 1 3') == '3'\nassert solution('1 1 1 1') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"9\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"9\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4\\n9 2 1 8') == '2'\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4 6') == '2'\nassert solution('6\\n9 1 4 4 6 7') == '2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n9 1 4 4 6 7') == '2'\nassert solution('4\\n9 1 4 4 6 7') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution('3\\n5\\n7\\n10\\n') == '2'\nassert solution('1\\n10\\n') == '1'\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n9 1 4 4 6 7') == '2'\n\n'''\n\n'''\nSolution\n2\n\nWe can solve it by using two algorithms, a greedy algorithm and a greedy algorithm with the help of MinMaxSum and MinMaxSumWithFlips\nWe have to check if the minmaxSum is the same as minmaxSumWithFlips\n'''\n\nfrom typing import List",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4063,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '1'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 24 21 23') == '3'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"7 12 13 14 20\") == \"2\"\nassert solution(\"12 34 5 6 7 8 9 10\") == \"4\"\nassert solution(\"7 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24\") == \"3\"",
        "num_ids_2": 27,
        "num_ids_4": 78
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 24 21 23\") == \"3\"\nassert solution(\"3 4 6 9\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == \"3\"\nassert solution('''\n4 4 9 9\n4 1 1 2 2\n''') == \"2\"\nassert solution('''\n6 4 2 2 5 3\n4 1 1 2 2 2\n''') == \"3\"\nassert solution('''\n1 1 2 2 2 3 3\n3 3 1 1 2\n''') == \"2\"\nassert solution('''\n1 1 1 1 1 1 1\n1 1 1 1 1 1 1\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 24 21 23\n16 17 14 20 20 11 22\n''') == '3'\nassert solution('''\n10 1 2 1\n1 1 2 1\n1 2 1 2\n1 3 2 1\n1 4 2 1\n1 5 2 1\n1 6 2 1\n1 7 2 1\n1 8 2 1\n1 9 2 1\n1 10 2 1\n1 11 2 1\n1 12 2 1\n1 13 2 1\n1 14 2 1\n1 15 2 1\n1 16 2 1\n1 17 2 1\n1 18 2 1\n1 19 2 1\n1 20 2 1\n1 21 2 1\n1 22 2 1\n1 23 2 1\n1 24 2 1\n1 25 2 1\n1 26 2 1\n1 27 2 1\n1 28 2 1\n1 29 2 1\n1 30 2 1\n1 31 2 1\n1 32 2 1\n1 33 2 1\n1 34 2 1\n1 35 2 1\n1 36 2 1\n1 37 2 1\n1 38 2 1\n1 39 2 1\n1 40 2 1\n1 41 2 1\n1 42 2 1\n1 43 2 1\n1 44 2 1\n1 45 2 1\n1 46 2 1\n1 47 2 1\n1 48 2 1\n1 49 2 1\n1 50 2 1\n1 51 2 1\n1 52 2 1\n1 53 2 1\n1 54 2 1\n1 55 2 1\n1 56 2 1\n1 57 2 1\n1 58 2 1\n1 59 2 1\n1 60 2 1\n1 61 2 1\n1 62 2 1\n1 63 2 1\n1 64 2 1\n1 65 2 1\n1 66 2 1\n1 67 2 1\n1 68 2 1\n1 69 2 1\n1 70 2 1\n1 71 2 1\n1 72 2 1\n1 73 2 1\n1 74 2 1\n1 75 2 1\n1 76 2 1\n1 77 2 1\n1 78 2 1\n1 79 2 1\n1 80 2 1\n1 81 2 1\n1 82 2 1\n1 83 2 1\n1 84 2 1\n1 85 2 1\n1 86 2 1\n1 87 2 1\n1 88 2 1\n1 89 2 1\n1 90 2 1\n1 91 2 1\n1 92 2 1\n1 93 2 1\n1 94 2 1\n1 95 2 1\n1 96 2 1\n1 97 2 1\n1 98 2 1\n1 99 2 1\n1 100 2 1\n1 101 2 1\n1 102 2 1\n1 103 2 1\n1 104 2 1\n1 105 2 1\n1 106 2 1\n1 107 2 1\n1 108 2 1\n1 109 2 1\n1 110 2 1\n1 111 2 1\n1 112 2 1\n1 113 2 1\n1 114 2 1\n1 115 2 1\n1 116 2 1\n1 117 2 1\n1 118 2 1\n1 119 2 1\n1 120 2 1\n1 121 2 1\n1 122 2 1\n1 123 2 1\n1 124 2 1\n1 125 2 1\n1 126 2 1\n1 127 2 1\n1 128 2 1\n1 129 2 1\n1 130 2 1\n1 131 2 1\n1 132 2 1\n1 133 2 1\n1 134 2 1\n1 135 2 1\n1 136 2 1\n1 137 2 1\n1 138 2 1\n1 139 2 1\n1 140 2 1\n1 141 2 1\n1 142 2 1\n1 143 2 1\n1 144 2 1\n1 145 2 1\n1 146 2 1\n1 147 2 1\n1 148 2 1\n1 149 2 1\n1 150 2 1\n1 151 2 1\n1 152 2 1\n1 153 2 1\n1 154 2 1\n1 155 2 1\n1 156 2 1\n1 157 2 1\n1 158 2 1\n1 159 2 1\n1 160 2 1\n1 161 2 1\n1 162 2 1\n1 163 2 1\n1 164 2 1\n1 165 2 1\n1 166 2 1\n1 167 2 1\n1 168 2 1\n1 169 2 1\n1 170 2 1\n1 171 2 1\n1 172 2 1\n1 173 2 1\n1 174 2 1\n1 175 2 1\n1 176 2 1\n1 177 2 1\n1 178 2 1\n1 179 2 1\n1 180 2 1\n1 181 2 1\n1 182 2 1\n1 183 2 1\n1 184 2 1\n1 185 2 1\n1 186 2 1\n1 187 2 1\n1 188 2 1\n1 189 2 1\n1 190 2 1\n1 191 2 1\n1 192 2 1\n1 193 2 1\n1 194 2 1\n1 195 2 1\n1 196 2 1\n1 197 2 1\n1 198 2 1\n1 199 2 1\n1 200 2 1\n1 201 2 1\n1 202 2 1\n1 203 2 1\n1 204 2 1\n1 205 2 1\n1 206 2 1\n1 207 2 1\n1 208 2 1\n1 209 2 1\n1 210 2 1\n1 211 2 1\n1 212 2 1\n1 213 2 1\n1 214 2 1\n1 215 2 1\n1 216 2 1\n1 217 2 1\n1 218 2 1\n1 219 2 1\n1 220 2 1\n1 221 2 1\n1 222 2 1\n1 223 2 1\n1 224 2 1\n1 225 2 1\n1 226 2 1\n1 227 2 1\n1 228 2 1\n1 229 2 1\n1 230 2 1\n1 231 2 1\n1 232 2 1\n1 233 2 1\n1 234 2 1\n1 235 2 1\n1 236 2 1\n1 237 2 1\n1 238 2 1\n1 239 2 1\n1 240 2 1\n1 241 2 1\n1 242 2 1\n1 243 2 1\n1 244 2 1\n1 245 2 1\n1 246 2 1\n1 247 2 1\n1 248 2 1\n1 249 2 1\n1 250 2 1\n1 251 2 1\n1 252 2 1\n1 253 2 1\n1 254 2 1\n1 255 2 1\n1 256 2 1\n1 257 2 1\n1 258 2 1\n1 259 2 1\n1 260 2 1\n1 261 2 1\n1 262 2 1\n1 263 2 1\n1 264 2 1\n1 265 2 1\n1 266 2 1\n1 267 2 1",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n7 24 21 23\n16 17 14 20 20 11 22\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n3\n1 5\n1\n\"\"\"\n) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 24 21 23\\n16 17 14 20 20 11 22\") == \"3\"\n\nprint(solution(\"7 24 21 23\\n16 17 14 20 20 11 22\"))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_1) == \"3\"\n\nassert solution(input_2) == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 24 21 23\\n16 17 14 20 20 11 22') == '3'\nassert solution('20 10 10 10 10 10 10 10 10\\n4 5 6 5 5 5 5 5 6') == '5'\nassert solution('7 24 21 23\\n6 7 14 20 20 11 22') == '3'\n",
        "num_ids_2": 51,
        "num_ids_4": 73
    },
    {
        "number": 4064,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 24 21 23\n16 17 14 20 20 11 22''') == '3'\nprint(solution('''7 24 21 23\n16 17 14 20 20 11 22'''))\n\n\"\"\"\n\nfrom collections import deque\n\nstdin = open('input.txt').read()\n\nn, h, l, r = map(int, stdin.split())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_1) == '4'\nassert solution(example_2) == '1'\nassert solution(example_3) == '1'\nassert solution(example_4) == '3'\nassert solution(input) == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n2 10 50 110 250\\n') == '1'\nassert solution('5\\n4 7 12 100 150 199\\n') == '3'\nassert solution('10\\n1 2 5 6 7 10 21 23 24 49\\n') == '4'\n",
        "num_ids_2": 39,
        "num_ids_4": 63
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 2 5 6 7 10 21 23 24 49''') == '4'\nassert solution('''5\n2 10 50 110 250''') == '1'\nassert solution('''6\n4 7 12 100 150 199''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n1 2 5 6 7 10 21 23 24 49') == '4'\nassert solution('5\\n2 10 50 110 250') == '1'\nassert solution('6\\n4 7 12 100 150 199') == '3'",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10\n1 2 5 6 7 10 21 23 24 49\n''') == '4'\n\nassert solution('''\n5\n2 10 50 110 250\n''') == '1'\n\nassert solution('''\n6\n4 7 12 100 150 199\n''') == '3'\n\nprint(solution('''\n4\n1 2 5 6 7 10 21 23 24 49\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"4\"\nassert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"10\\n\"\n    \"1 2 5 6 7 10 21 23 24 49\\n\"\n    \"2 10 50 110 250\\n\"\n    \"3 7 12 100 150 199\\n\"\n    \"4 7 12 100 150 199\\n\"\n    \"5 10 50 110 250\\n\"\n    \"6 10 50 110 250\\n\"\n    \"7 10 50 110 250\\n\"\n    \"8 10 50 110 250\\n\"\n    \"9 10 50 110 250\\n\"\n    \"10 10 50 110 250\\n\"\n    \"11 10 50 110 250\\n\"\n    \"12 10 50 110 250\\n\"\n    \"13 10 50 110 250\\n\"\n    \"14 10 50 110 250\\n\"\n    \"15 10 50 110 250\\n\"\n    \"16 10 50 110 250\\n\"\n    \"17 10 50 110 250\\n\"\n    \"18 10 50 110 250\\n\"\n    \"19 10 50 110 250\\n\"\n    \"20 10 50 110 250\\n\"\n    \"21 10 50 110 250\\n\"\n    \"22 10 50 110 250\\n\"\n    \"23 10 50 110 250\\n\"\n    \"24 10 50 110 250\\n\"\n    \"25 10 50 110 250\\n\"\n    \"26 10 50 110 250\\n\"\n    \"27 10 50 110 250\\n\"\n    \"28 10 50 110 250\\n\"\n    \"29 10 50 110 250\\n\"\n    \"30 10 50 110 250\\n\"\n    \"31 10 50 110 250\\n\"\n    \"32 10 50 110 250\\n\"\n    \"33 10 50 110 250\\n\"\n    \"34 10 50 110 250\\n\"\n    \"35 10 50 110 250\\n\"\n    \"36 10 50 110 250\\n\"\n    \"37 10 50 110 250\\n\"\n    \"38 10 50 110 250\\n\"\n    \"39 10 50 110 250\\n\"\n    \"40 10 50 110 250\\n\"\n    \"41 10 50 110 250\\n\"\n    \"42 10 50 110 250\\n\"\n    \"43 10 50 110 250\\n\"\n    \"44 10 50 110 250\\n\"\n    \"45 10 50 110 250\\n\"\n    \"46 10 50 110 250\\n\"\n    \"47 10 50 110 250\\n\"\n    \"48 10 50 110 250\\n\"\n    \"49 10 50 110 250\\n\"\n    \"50 10 50 110 250\\n\"\n    \"51 10 50 110 250\\n\"\n    \"52 10 50 110 250\\n\"\n    \"53 10 50 110 250\\n\"\n    \"54 10 50 110 250\\n\"\n    \"55 10 50 110 250\\n\"\n    \"56 10 50 110 250\\n\"\n    \"57 10 50 110 250\\n\"\n    \"58 10 50 110 250\\n\"\n    \"59 10 50 110 250\\n\"\n    \"60 10 50 110 250\\n\"\n    \"61 10 50 110 250\\n\"\n    \"62 10 50 110 250\\n\"\n    \"63 10 50 110 250\\n\"\n    \"64 10 50 110 250\\n\"\n    \"65 10 50 110 250\\n\"\n    \"66 10 50 110 250\\n\"\n    \"67 10 50 110 250\\n\"\n    \"68 10 50 110 250\\n\"\n    \"69 10 50 110 250\\n\"\n    \"70 10 50 110 250\\n\"\n    \"71 10 50 110 250\\n\"\n    \"72 10 50 110 250\\n\"\n    \"73 10 50 110 250\\n\"\n    \"74 10 50 110 250\\n\"\n    \"75 10 50 110 250\\n\"\n    \"76 10 50 110 250\\n\"\n    \"77 10 50 110 250\\n\"\n    \"78 10 50 110 250\\n\"\n    \"79 10 50 110 250\\n\"\n    \"80 10 50 110 250\\n\"\n    \"81 10 50 110 250\\n\"\n    \"82 10 50 110 250\\n\"\n    \"83 10 50 110 250\\n\"\n    \"84 10 50 110 250\\n\"\n    \"85 10 50 110 250\\n\"\n    \"86 10 50 110 250\\n\"\n    \"87 10 50 110 250\\n\"\n    \"88 10 50 110 250\\n\"\n    \"89 10 50 110 250\\n\"\n    \"90 10 50 110 250\\n\"\n    \"91 10 50 110 250\\n\"\n    \"92 10 50 110 250\\n\"\n    \"93 10 50 110 250\\n\"\n    \"94 10 50 110 250\\n\"\n    \"95 10 50 110 250\\n\"\n    \"96 10 50 110 250\\n\"\n    \"97 10 50 110 250\\n\"\n    \"98 10 50 110 250\\n\"\n    \"99 10 50 110 250\\n\"\n    \"100 10 50 110 250\\n\"\n    \"101 10 50 110 250\\n\"\n    \"102 10 50 110 250\\n\"\n    \"103 10 50 110 250\\n\"\n    \"104 10 50 110 250\\n\"\n    \"105 10 50 110 250\\n\"\n    \"106 10 50 110 250\\n\"\n    \"107 10 50 110 250\\n\"\n    \"108 10 50 110 250\\n\"\n    \"109 10 50 110 250\\n\"\n    \"110 10 50 110 250\\n\"\n    \"111 10 50 110 250\\n\"\n    \"112 10 50 110 250\\n\"\n    \"113 10 50 110 250\\n\"\n    \"114 10 50 110 250\\n\"\n    \"115 10 50 110 250\\n\"\n    \"116 10 50 110 250\\n\"\n    \"117 10 50 110 250\\n\"\n    \"118 10 50 110 250\\n\"\n    \"119 10 50 110 250\\n\"\n    \"120 10 50 110 250\\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input_1) == \"4\"\nassert solution(example_input_2) == \"1\"\nassert solution(example_input_3) == \"3\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4065,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '4'\nassert solution('5') == '1'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(inp) == stdout\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4 8 3 6\") == \"1 2\"\nassert solution(\"5 2 11 3 7\") == \"1 2\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 2 5 10 1 10 2') == '1 4'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 2\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"1 2\"\nassert solution(\"5 2\") == \"1 2\"\nassert solution(\"5 2 3\") == \"1 2\"\nassert solution(\"5 2 3 4\") == \"1 2\"\nassert solution(\"5 2 3 4 5\") == \"1 2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\") == \"1\\n2\"\nassert solution(\"4\\n2 1 9\") == \"1\\n2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1 4'\nassert solution() == '1 3'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 8 3 6\\n\") == \"1 2\"\nassert solution(\"5\\n5 2 11 3 7\\n\") == \"2 4\"\nassert solution(\"6\\n2 5 10 1 10 2\\n\") == \"1 4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 61
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4066,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 8 3 6') == '1 2'\nassert solution('5 2 11 3 7') == '2 4'\nassert solution('6 5 10 1 10 2') == '1 4'",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('120110') == '120120'\nassert solution('211200') == '211200'\nassert solution('01101100') == '01101100'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '021'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n121\") == \"021\"\nassert solution(\"3\\n211200\") == \"211200\"\nassert solution(\"3\\n010100\") == \"010100\"\nassert solution(\"3\\n111101\") == \"111011\"\nassert solution(\"3\\n111111\") == \"111111\"\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n121\n''') == '021'\nassert solution('''\n6\n000000\n''') == '001122'\nassert solution('''\n6\n211200\n''') == '211202'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n121\n\"\"\") == \"021\"\n\nassert solution(\"\"\"\n3\n1\n1\n1\n\"\"\") == \"11\"\n\nassert solution(\"\"\"\n3\n0011\n\"\"\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '2 3 0 1 2 3 2 2 3 2 2 3 2 2 2 2 2 2 2 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"021\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '10'\nassert solution('120110') == '120120'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3'\n    ) == '021'\nassert solution(\n    '6'\n    ) == '001122'\nassert solution(\n    '6'\n    ) == '120120'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4067,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '021'\nassert solution('6') == '001122'\nassert solution('6') == '211200'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([6,1]) == \"4\"\nassert solution([5,1]) == \"4\"\nassert solution([7,1]) == \"5\"\nassert solution([10,1]) == \"14\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '4'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"7 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"6\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '4'\nassert solution('6 3') == '4'\nassert solution('6 4') == '4'\nassert solution('6 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"7 1\") == \"7\"\nassert solution(\"10 1\") == \"9\"\nassert solution(\"12 1\") == \"13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '2'\nassert solution('6 3') == '1'\nassert solution('6 4') == '0'\nassert solution('6 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 1\") == \"4\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"12\"\nassert solution(\"6\") == \"2\"\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4068,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 1') == '4'\nassert solution('6 2') == '0'\nassert solution('6 3') == '1'\nassert solution('6 4') == '2'\nassert solution('6 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1 4\") == \"4\"\nassert solution(\"10 10 10\") == \"0\"\nassert solution(\"5 2 4\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2 4\") == \"2\"\nassert solution(\"5 2 3\") == \"1\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('6 3 4') == '-2'\nassert solution('6 -4 4') == '2'\nassert solution('6 2 -4') == '-2'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 2\") == \"2\"\nassert solution(\"5 2 4\") == \"2\"\nassert solution(\"10 10 100\") == \"10\"\nassert solution(\"10 10 1000\") == \"10\"\nassert solution(\"-10 -10 100\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 2 4\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(['6', '2', '4']) == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 4') == '4'\nassert solution('5 6 4') == '2'\nassert solution('3 3 3') == '3'\nassert solution('2 2 1') == '1'\nassert solution('3 2 1') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2 4') == '2'\nassert solution('1 1 1') == '1'\n\"\"\"\nimport sys\nfrom collections import deque\n\nx, k, d = list(map(int, sys.stdin.readline().split()))",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Takahashi, who lives on the number line, is now at coordinate 5. He will make exactly 5 moves of distance 10 in the positive or negative direction. More specifically, in one move, he can go from coordinate 5 to (5 + 10) or (5 - 10).\") == \"2\"\nassert solution(\"Takahashi, who lives on the number line, is now at coordinate 6. He will make exactly 10 moves of distance 10 in the positive or negative direction. More specifically, in one move, he can go from coordinate 6 to (6 + 10) or (6 - 10).\") == \"1\"\nassert solution(\"Takahashi, who lives on the number line, is now at coordinate 5. He will make exactly 1 move of distance 10 in the positive or negative direction. More specifically, in one move, he can go from coordinate 5 to (5 + 10) or (5 - 10).\") == \"4\"\nassert solution(\"Takahashi, who lives on the number line, is now at coordinate 4. He will make exactly 1 move of distance 10 in the positive or negative direction. More specifically, in one move, he can go from coordinate 4 to (4 + 10) or (4 - 10).\") == \"1\"\nassert solution(\"Takahashi, who lives on the number line, is now at coordinate 3. He will make exactly 1 move of distance 10 in the positive or negative direction. More specifically, in one move, he can go from coordinate 3 to (3 + 10) or (3 - 10).\") == \"0\"\n",
        "num_ids_2": 136,
        "num_ids_4": 272
    },
    {
        "number": 4069,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([6, 2, 4]) == 2\nassert solution([-10, 2, 4]) == 2\nassert solution([10, -2, 4]) == 2\nassert solution([-10, -2, 4]) == 2\nassert solution([-10, -2, -4]) == 2\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"123\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(f\"{stdin}\\n\") == f\"{stdin}\"\nassert solution(\"{stdin}\\n\") == f\"{stdin}\"\nassert solution(f\"{stdin}\") == f\"{stdin}\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('14') == '0'\nassert solution('141576') == '10'\nassert solution('61441') == '2'\nprint('YOUR CODE IS CORRECT!')\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == \"2\"\nassert solution('14') == \"0\"\nassert solution('61441') == \"2\"\nassert solution('571576') == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"14\") == 0\nassert solution(\"61441\") == 2\nassert solution(\"571576\") == 10\n",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '2'\nassert solution('14') == '0'\nassert solution('61441') == '2'\nassert solution('571576') == '10'\n\n---\n\n\n---Part Two---\n\nNow, you're ready to try it on a bigger input. The data is coming right out of the window.\n\nThe group is 20 students, and each student's id is an integer from 0 to 1999 (inclusive).\n\nEach line of the input contains a single integer n (0 \u2264 n \u2264 2000000000), which is the number of friends the student has.\n\nIf the student has no friends, the integer will be 0. Otherwise, it's the number of friends the student has (including the student itself).\n\nIn this riddle, you need to count how many groups are formed with at least 5 students.\n\nInput\n4\n4\n1\n2\n1\n\nOutput\n1\n\nInput\n5\n2\n1\n4\n1\n\nOutput\n2\n\n\"\"\"\n\n\nimport unittest\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4070,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"11\") == \"2\"\nassert solution(\"14\") == \"0\"\nassert solution(\"61441\") == \"2\"\nassert solution(\"571576\") == \"10\"\nassert solution(\"2128506\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '27'\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '27'\nassert solution('4') == '28'\nassert solution('8') == '34'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '27'\nassert solution('5') == '105'\nassert solution('10') == '1010'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '4'\nassert solution('0') == '0'\n\n''''''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(open(\"test_input.txt\")) == \"2\"\nassert solution(open(\"input.txt\")) == \"27\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '25'\nassert solution('15') == '315'\nassert solution('1') == '1'\nassert solution('21') == '121'\nassert solution('5') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == input, \"Wrong result\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['3']) == '27'\nprint(solution(['2']))\nprint(solution(['1']))\n\"\"\"\na = int(input())\nprint(a ** 2)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '27'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4071,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"27\"\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == str(__import__('sys').stdin.readline()[0])\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('48') == '0'\nassert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('5') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"927\") == \"1\"\nassert solution(\"13\") == \"1\"\nassert solution(\"48\") == \"0\"\nprint('\"Run\" is good. Let\\'s try it.')\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('15') == '0'\nassert solution('45') == '1'\nassert solution('927') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"13\"\n) == \"1\", \"wrong answer\"\nassert solution(\n    \"927\"\n) == \"1\", \"wrong answer\"\nassert solution(\n    \"48\"\n) == \"0\", \"wrong answer\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4072,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13') == '1'\nassert solution('927') == '1'\nassert solution('48') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n4\n3\n5\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n2 5 3 1\n''') == '4'\n\"\"\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 5 3 1') == '4'\n\n\n## Submission Result: \n\n```python\nreturn '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 5 3 1') == '4'\nassert solution('2 10 3 1') == '14'\nassert solution('2 5 3 1 2 5 1 3') == '4'\n\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 5 3 1') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 1\n2 3\n1 2\n''') == '1'\n\nassert solution('''\n5\n7 9 5 1\n''') == '7'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 3 1\") == \"4\"\nassert solution(\"3\\n1 2 3\") == \"3\"\nassert solution(\"1\\n2 3\") == \"2\"\nassert solution(\"3\\n1 2 3\") == \"4\"\n\"\"\"\nfrom sys import stdin\nfrom collections import deque\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4') == '1\\n2\\n3\\n4'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4073,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n') == '4'\nassert solution('1\\n') == '1'\nassert solution('5\\n') == '5'\nassert solution('5\\n') == '4'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''8\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '1'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 7') == '8'\nassert solution('8 1') == '1'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\nassert solution('999999733 999999733') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 51
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n8 7\\n6 10') == '2'\nassert solution('5\\n8 1\\n999999733\\n999999732\\n999999733') == '1'\nassert solution('5\\n8 1\\n999999733\\n999999733') == '1'\n\n\n'''\n",
        "num_ids_2": 47,
        "num_ids_4": 71
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\"\"\") == \"\"\"2\"\"\"\nassert solution(\"\"\"\n4\n8 7\n8 1\n6 10\n999999733 999999733\n999999733 999999733\n\"\"\") == \"\"\"1\"\"\"\nassert solution(\"\"\"\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n\"\"\") == \"\"\"2\"\"\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution() == '8'\nassert solution() == '1'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '8'\nassert solution('8 7') == '8'\nassert solution('6 10') == '1'\nassert solution('999999733 999999732') == '999999733'\nassert solution('999999733 999999733') == '1'",
        "num_ids_2": 19,
        "num_ids_4": 48
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '2'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '1'\nassert solution('5\\n8 7\\n8 1\\n6 10\\n999999733 999999732\\n999999733 999999733') == '999999733'\n",
        "num_ids_2": 80,
        "num_ids_4": 122
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''\n5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n8 1\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''\n5\n999999733 999999733\n999999733 999999733\n999999733 999999733\n999999733 999999733\n999999733 999999733\n''') == '1'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4074,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '2'\nassert solution('''5\n8 7\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '1'\nassert solution('''5\n8 1\n6 10\n999999733 999999732\n999999733 999999733\n''') == '999999733'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"0 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '1'\nassert solution('2 1 2') == '1'\nassert solution('1 2') == '0'\n\n\"\"\"\nfrom itertools import combinations\n\nN, M = map(int, input().split())\nk = list(map(int, input().split()))\n\np = list(map(int, input().split()))\n\nl = []\nfor i in range(N):\n    l.append((i+1, 2**i%2))\n\nl = set(l)\nl = sorted(l, key=lambda x: (x[1], x[0]))\n\nl = []\nfor i in range(M):\n    l.append((i+1, p[i]))\n\nl = set(l)\nl = sorted(l, key=lambda x: (x[1], x[0]))\n\nl = list(combinations(l, N-1))\n\nres = 0\nfor i in l:\n    if i[0][1] == 0 and i[-1][1] == 1:\n        res += 1\n\nprint(res)\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n2 2\n1 1 2\n1 2\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1', \"First\"\nassert solution('1 2') == '1', \"Second\"\nassert solution('0 1') == '4', \"Third\"\n\n\"\"\"\nfrom collections import deque",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n1 2\") == \"0\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\\n2 1 2\\n1 2\") == \"1\"\nassert solution(\"2 2\\n1 2\\n0 1\") == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"2 1 2\") == \"0\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n2 1 2\n1 2\n0 1\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4075,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"0 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 1 1 0') == '2.93358276668'\nassert solution('1 1 1 1') == '5.00000000000000000000'",
        "num_ids_2": 36,
        "num_ids_4": 52
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 5 9 0\") == \"8.0000000000000\"\nassert solution(\"5 5 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 5 9 0\") == \"5.00000000000000000000\"\nassert solution(\"5 5 9 0\") == \"5.00000000000000000000\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4 9 0\") == \"5.000000\"\nassert solution(\"1 2 9 0\") == \"6.000000\"\nassert solution(\"1.1 2.1 9.0 0\") == \"8.050000\"",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 9 0\") == \"5.0\"\nassert solution(\"1 1 1 1\") == \"1.0\"\nassert solution(\"1 1 1 1\") == \"1.0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('1 5 6 3 9') == '11.999999999'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 9 0') == '5.00000000000000000000'\nassert solution('3 3 4 0') == '4.9999999999999996'\nassert solution('3 0 4 5') == '6.6666666666666665'\nassert solution('0 0 0 0') == '0.00000000000000000000'\nassert solution('0 0 0 0') == '0.00000000000000000000'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4 9 0') == '5.00000000000000000000'\nassert solution('5 5 9 0') == '4.2'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"5.00000000000000000000\"\nprint(solution(input()))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4076,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 0\") == \"5.0000000000\"\nassert solution(\"2 3 1\") == \"4.9999999999\"\nassert solution(\"3 3 3\") == \"4.899999999999\"\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == '8'\nassert solution(\"3 1\") == '6'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\nassert solution('''15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4\n1 4 5 60 4\n''') == \"8\"\nassert solution('''3 1\n1 1 1\n''') == \"6\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1\") == '6'\nassert solution(\"3 1\") == '8'\nassert solution(\"3 1\") == '5'\nassert solution(\"5 4\") == '10'\nassert solution(\"5 4\") == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '8'\nassert solution('3 1') == '6'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 1\n1 1 1\n''') == '6'\nassert solution('''\n15 2\n1 2 3 1 2 3 1 2 3 1 2 3 1 2 3 1 2 3\n''') == '97'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_string) == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_stdin) == '8'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == output_",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4077,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 4 5 60 4\n''') == '8'\nassert solution('''3 1\n1 1 1\n''') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('1 1') == '0'\nassert solution('2 1') == '1'\nassert solution('4 4') == '0'\nassert solution('1 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\") == \"6\"\nassert solution(\"5 4\") == \"7\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '6'\nassert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''') == '7'\nassert solution('''1 0\n1000000''') == '0'\nassert solution('''1 0\n1000000''') == '0'\nprint(solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3'''))\nassert print(solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3''')) == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '6'\nassert solution('10 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\nassert solution('1000000') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''5 4\n2 -2 3 1 2\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''1 0\n1000000\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == output_\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\") == \"6\"\nassert solution(\"5 4\") == \"7\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 1\") == \"0\"\n\n\n\"\"\"\n\nimport sys\nimport os\nsys.path.append(os.path.dirname(__file__))\nfrom A4_Zhonghua.modules.module import *",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4078,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"abc\") == \"Yes\"\nassert solution(\"aab\") == \"No\"\nassert solution(\"ab\") == \"Yes\"\nassert solution(\"abcd\") == \"No\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    'fced'\n) == 'Yes'\nassert solution(\n    'xyz'\n) == 'Yes'\nassert solution(\n    'r'\n) == 'Yes'\nassert solution(\n    'dabcef'\n) == 'Yes'\nassert solution(\n    'az'\n) == 'No'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n\"\"\") == \"Yes\"\n\nassert solution(\"\"\"\n    a\n    aa\n    f\n\"\"\") == \"No\"\n\nassert solution(\"\"\"\n    xyz\n    aaa\n    abcd\n\"\"\") == \"No\"\n\nprint(solution(\"\"\"\n    \"\"\"))",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n\") == \"Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"fced\") == \"Yes\"\nassert solution(\"xyz\") == \"Yes\"\nassert solution(\"r\") == \"Yes\"\nassert solution(\"dabcef\") == \"Yes\"\nassert solution(\"az\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n    ''') == 'Yes'\n    '''\n    fced\n    xyz\n    r\n    dabcef\n    az\n    aa\n    bad\n    babc\n    '''\n    assert solution(\n    '''\n    a\n    a\n    aa\n    ''') == 'No'\n    '''\n    a\n    a\n    aa\n    ''')\n    assert solution(\n    '''\n    aa\n    aa\n    aa\n    ''') == 'Yes'\n    '''\n    aa\n    aa\n    aa\n    ''')\n    assert solution(\n    '''\n    aa\n    aa\n    aa\n    ''') == 'No'\n    '''\n    aa\n    aa\n    aa\n    ''')\n    assert solution(\n    '''\n    aa\n    aa\n    aa\n    aa\n    ''') == 'Yes'\n    '''\n    aa\n    aa\n    aa\n    aa\n    ''')\n    ",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8\\nfced\\nxyz\\nr\\ndabcef\\naz\\naa\\nbad\\nbabc\\n') == 'Yes\\nYes\\nYes\\nYes\\nNo\\nNo\\nNo\\nNo'\nassert solution('3\\nfced\\nxyz\\nbad\\n') == 'Yes\\nYes\\nNo'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\"\"\") == \"Yes\"\nassert solution(\"\"\"\n4\nyeS\nno\nyES\nyes\"\"\") == \"Yes\"\nassert solution(\"\"\"\n3\nab\naa\na\"\"\") == \"No\"\nassert solution(\"\"\"\n2\nyeS\nno\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4079,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nxyz\n\"\"\") == \"No\"\nassert solution(\"\"\"\nfced\nxyz\nr\ndabcef\naz\naa\nbad\nbabc\n\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '7'\n\nassert solution('''\n1 0\n1000000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 0\") == \"0\"\nassert solution(\"5 4\") == \"6\"\nassert solution(\"3 2\") == \"3 2\"\nassert solution(\"10 0\") == \"10 0\"\nassert solution(\"1000000\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(test_input) == '6 2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\nassert solution('''\n5 4\n2 -2 3 1 2\n3 5\n3 4\n2 4\n2 5\n''') == '7'\nassert solution('''\n1 0\n1000000\n''') == '0'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n3 4\n2 4\n2 5\n''') == '2'\nassert solution('''\n5 4\n2 -2 3 1 4\n3 5\n2 5\n3 4\n2 5\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '6'\n\nassert solution('''\n5 4\n2 -2 3 1 2\n1 3\n4 5\n2 5\n1 3\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3') == '6\\n2\\n4 1'\nassert solution('5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n') == '7\\n2\\n3 2'\nassert solution('1 0\\n1000000') == '0\\n0'\n",
        "num_ids_2": 86,
        "num_ids_4": 104
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '6'\nassert solution('1 0') == '0'\nassert solution('1000000') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('3 4') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0') == '0'\nassert solution('5 4') == '6'\nassert solution('1000000') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4080,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n2 -2 3 1 2\\n1 3\\n4 5\\n2 5\\n1 3\\n\") == \"6\\n2\\n4 2\\n\"\nassert solution(\"5 4\\n2 -2 3 1 4\\n3 5\\n3 4\\n2 4\\n2 5\\n\") == \"7\\n2\\n3 3\\n2 2\\n\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"7\"\nassert solution(\"3\") == \"LLL\"\nassert solution(\"4\") == \"LLRL\"\nassert solution(\"5\") == \"4\"\n\"\"\"\n\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n1 2\n''') == 'RLR'\nassert solution('''3\n1 2 3\n''') == 'LLL'\nassert solution('''4\n1 2 4 3\n''') == 'RLRRLLRLLL'\n\n'''\n\nimport sys\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\n1 3 5 6 7 4 2\") == \"7\\nLLRL\"\nassert solution(\"3\\n1 2 3\") == \"3\\nLLL\"\nassert solution(\"4\\n1 2 4 3\") == \"4\\nLLRL\"\n",
        "num_ids_2": 42,
        "num_ids_4": 62
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('7') == '7'\nassert solution('3') == 'LLL'\nassert solution('4') == 'LLRL'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 5 4 3''') == '4'\nassert solution('''3 1 2 4 3''') == 'LLL'\nassert solution('''1 1 1 1 1''') == 'L'\nassert solution('''3 4 5 6 7 3''') == 'LLRRLLR'\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\n\nassert solution() == \"LLRL\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"\nassert solution(input()) == \"LLRL\"\nassert solution(input()) == \"7\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4081,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n2 1 5 4 3\\n\") == \"4\"\nassert solution(\"7\\n1 3 5 6 7 4 2\\n\") == \"7\"\nassert solution(\"3\\n1 2 3\\n\") == \"3\"\nassert solution(\"4\\n1 2 4 3\\n\") == \"4\"\nassert solution(\"5\\n1 2 3\\n\") == \"5\"\n",
        "num_ids_2": 40,
        "num_ids_4": 75
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n''') == '4'\nassert solution('''\n1\n2\n3\n4\n5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 5 3 4\n\n''') == '4'\nassert solution('''\n2\n1 2\n\n''') == '2'\nassert solution('''\n7\n6 5 4 3 2 4 3\n\n''') == '2'\n\n''')\n\n'''\nExample 1\n\nInput:\n\n5\n1 2 5 3 4\n\nOutput:\n\n4\n\nExplanation:\n\nWe can delete the 4th element: [1, 2, 3, 4]. Then, the largest increasing subarray of the remaining array is equal to the final array.\n'''\n\n'''\nExample 2\n\nInput:\n\n2\n1 2\n\nOutput:\n\n2\n\nExplanation:\n\nWe can delete the 2nd element: [1, 2]. Then, the largest increasing subarray of the remaining array is equal to the final array.\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 5 3 4') == '4'\nassert solution('2') == '2'\nassert solution('7') == '2'\nassert solution('1 2') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n1 2\n''') == '2'\nassert solution('''7\n6 5 4 3 2 4 3\n''') == '2'\nprint(solution(input()))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"2\") == \"2\"\nassert solution(\"7\") == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n2 1\n\n''') == '2'\n\nassert solution('''\n2\n1 2\n\n''') == '2'\n\nassert solution('''\n5\n6 5 4 3 2 4 3\n\n''') == '2'\n\nassert solution('''\n7\n6 5 4 3 2 4 3\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7') == 2\nassert solution('2') == 2\nassert solution('1 2') == 2\nassert solution('5') == 4\nassert solution('1 2 5 3 4') == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4082,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"7\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"1\"\n\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3\\n') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 4 5\\n') == '0'\n",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 4 5') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INP) == OUT\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''5 3\n1 2 3 4 5\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '1'\nassert solution('5 3') == '2'\nassert solution('1 2 3 4 5') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n4\n1 2 3\n''') == '1'\nassert solution('''\n5\n5\n1 2 3 5\n''') == '1'\nassert solution('''\n3\n5\n1 2 3 5\n''') == '2'\nassert solution('''\n5\n1 2 3\n''') == '0'\nassert solution('''\n5\n1 2 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4083,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3 4\\n') == '4'\nassert solution('1 2 3\\n') == '3'\nassert solution('13 4 2\\n') == '2'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"12 2 8\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('2 1 1') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 3 4') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 3 4') == '4'\nassert solution('20 200 21 12') == '8'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3 4') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"10 2 3\") == \"7\"\nassert solution(\"30 10 20\") == \"7\"\nassert solution(\"30 2 3\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8 3 4\") == \"4\"\nassert solution(\"20 3 2\") == \"10\"\nassert solution(\"40 100 100 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"8 3 4\\n\"\n) == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4084,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 3 4') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 2 3\n2\n1\n3\n''') == \"1\"\nassert solution('''\n2\n5\n4 1\n3\n1\n''') == \"-1\"\n'''\n\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n8\n2\n12\n6\n4\n24\n16\n3\n''') == '-1', \"First example doesn't work\"\nassert solution('''\n2\n8\n12\n6\n4\n24\n16\n3\n''') == '48', \"Second example doesn't work\"\nassert solution('''\n5\n4\n2\n12\n6\n''') == '4', \"Third example doesn't work\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"-1\"\nassert solution(\"4\\n3\") == \"4\"\nassert solution(\"1\\n5\") == \"-1\"\nassert solution(\"2\\n8 2 12 6 4 24 16 3\") == \"24\"\n\nstdin = \"\"\"\n4\n12 2 8 4 6\n5\n1 2 3 4 5\n\"\"\"\n\nprint(solution(stdin))",
        "num_ids_2": 22,
        "num_ids_4": 55
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n8\n8 2 12 6 4 24 16 3\n1\n2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n12 8 2 24 8 16 6\n6\n3\n\"\"\") == \"-1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n8 2 12 6 4 24 16 3\n1\n2''') == \"4\"\nassert solution('''4\n3 2 1\n1\n2''') == \"3\"\nassert solution('''5\n8 2 12 6 4 24 16 3\n1\n2\n3\n4\n5\n6\n7\n8''') == \"5\"\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741\n742\n743\n744\n745\n746\n747\n748\n749\n750\n751\n752\n753\n754\n755\n756\n757\n758\n759\n760\n761\n762\n763",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '-1', 'Wrong solution!'\nassert solution('2') == '4', 'Wrong solution!'\nassert solution('3') == '1', 'Wrong solution!'\nassert solution('4') == '2', 'Wrong solution!'\nassert solution('5') == '2', 'Wrong solution!'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '48', \"solution([8])\"\nassert solution('1') == '1', \"solution([1])\"\nassert solution('2') == '1', \"solution([2])\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8\\n8 2 12 6 4 24 16 3') == '48'\nassert solution('1\\n2') == '-1'\n\n\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4085,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\n8 2 12 6 4 24 16 3\n1\n2\n''') == '4', 'Test #1'\nassert solution('''\n3\n1 2 3\n1\n2\n3\n''') == '1', 'Test #2'\nassert solution('''\n5\n1 2 3 5\n1\n2\n3\n4\n5\n''') == '1', 'Test #3'\nassert solution('''\n5\n1 2 3 5\n1\n2\n3\n4\n6\n''') == '4', 'Test #4'\nassert solution('''\n6\n1 2 3 4 5\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '1', 'Test #5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"6\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''6\n1 5 5 1 6 1\n''') == '3'\nassert solution('''5\n2 4 2 4 4\n''') == '2'\nassert solution('''5\n6 6 6 6 6\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\\n\") == \"3\\n2 3\\n\"\nassert solution(\"3\\n5 6 5 1 6 1\\n\") == \"3\\n5 6 5 1 6 1\\n\"\nassert solution(\"3\\n1 2 3 4 5\\n\") == \"2\\n4 5\\n\"\nassert solution(\"5\\n2 4 2 4 4\\n\") == \"2\\n4\\n\"\n",
        "num_ids_2": 53,
        "num_ids_4": 102
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n2 4 2 4 4''') == '1'\nassert solution('''5\n6 6 6 6 6''') == '1'\nassert solution('''5\n6 6 6 6 6''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\n1 5 5 1 6 1') == '3'\nassert solution('5\\n2 4 2 4 4') == '2'\nassert solution('5\\n6 6 6 6 6') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == stdin",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n1 5 5 1 6 1\n''') == '3'\nassert solution('''\n5\n6 6 6 6 6\n''') == '1'\nassert solution('''\n5\n2 4 2 4 4\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4086,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == stdout_",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"5\") == \"5\"\nassert solution(\"14\") == \"15\"\nassert solution(\"3\") == \"3\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"42\") == \"44\"\nassert solution(\"123\") == \"123\"\nassert solution(\"1235\") == \"123\"\nassert solution(\"4321\") == \"4321\"\nassert solution(\"436\") == \"437\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"435\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('432') == '435'\nassert solution('99') == '103'\nassert solution('237') == '237'\nassert solution('42') == '44'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"432\") == \"435\"\nassert solution(\"99\") == \"103\"\nassert solution(\"237\") == \"237\"\nassert solution(\"42\") == \"44\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4087,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aac\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"aba\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"a\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"b\"\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == \"c\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'a'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\na\n2\n0\n''') == 'a'\nassert solution('''\na\n3\n1\n0\n''') == 'a'\nassert solution('''\na\n3\n2\n0\n''') == 'a'\nassert solution('''\na\n1\n0\n''') == 'a'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''abac\n    3\n    2 1 0\n    abc\n    1\n    0\n    abba\n    3\n    1 0 1\n    ecoosdcefr\n    10\n    38 13 24 14 11 5 3 24 17 0''') == \"aac\"\nassert solution('''a\n    2\n    1 0\n    a\n    1\n    0\n    ab\n    2\n    1 0 1\n    ecoosdcefr\n    10\n    38 13 24 14 11 5 3 24 17 0''') == \"ab\"\nassert solution('''a\n    1\n    0\n    b\n    2\n    1 0 1\n    ecoosdcefr\n    10\n    38 13 24 14 11 5 3 24 17 0''') == \"a\"\nassert solution('''abc\n    1\n    0\n    a\n    2\n    1 0 1\n    ecoosdcefr\n    10\n    38 13 24 14 11 5 3 24 17 0''') == \"a\"\nassert solution('''aba\n    3\n    1 0 1\n    a\n    2\n    1 0 1\n    ecoosdcefr\n    10\n    38 13 24 14 11 5 3 24 17 0''') == \"aac\"\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nabc\\n1\\n0\") == \"b\"\nassert solution(\"2\\nab\\n2\\n0\") == \"ab\"\nassert solution(\"3\\nba\\n3\\n0\") == \"ba\"\nassert solution(\"4\\nbc\\n4\\n0\") == \"bc\"\nassert solution(\"5\\nabc\\n5\\n0\") == \"abc\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aba'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'c'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == 'aba'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abac\\n3\\n2 1 0\") == \"aac\"\nassert solution(\"abc\\n1\\n0\") == \"a\"\nassert solution(\"abba\\n3\\n1 0 1\") == \"aba\"\nassert solution(\"ecoosdcefr\\n10\\n38 13 24 14 11 5 3 24 17 0\") == \"ecoosdcefr\"",
        "num_ids_2": 36,
        "num_ids_4": 87
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'aac'\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\nabba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\n\nassert solution('''\nabac\n3\n2 1 0\nabc\n1\n0\naba\n3\n1 0 1\necoosdcefr\n10\n38 13 24 14 11 5 3 24 17 0\n''') == 'b'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4088,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'a'\nassert solution('3') == 'b'\nassert solution('4') == 'aba'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'a'\nassert solution('2') == 'aa'\nassert solution('3') == 'aaa'\nassert solution('4') == 'aaaa'\nassert solution('5') == 'aaaaa'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"b\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == 'a'\nassert solution('5') == 'aa'\nassert solution('22') == 'ba'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'a'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'b'\nassert solution('3') == 'bb'\nassert solution('4') == 'bbb'\nassert solution('5') == 'bbbb'\nassert solution('6') == 'bbbbb'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'b'\nprint(solution(''))\nprint(solution('2'))\nprint(solution('5'))\nprint(solution('100'))\nprint(solution('1000'))\nprint(solution('20000'))\nprint(solution('100000'))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4089,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3''') == 'a'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output_\n\n\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(6) == '12'\nassert solution(10) == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nto be or not to be\n\n''') == '12'\nassert solution('''\n10\na ab a a b ab a a b c\n\n''') == '13'\nassert solution('''\n6\naa bb aa aa bb bb\n\n''') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"12\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\nabcd abcdabcd\") == \"12\"\nassert solution(\"30\\na b c d a b a c d\") == \"30\"\nassert solution(\"100\\nxyz xyz xyz xyz xyz xyz xyz\") == \"101\"\nassert solution(\"10\\nto be or not to be\") == \"11\"\n",
        "num_ids_2": 38,
        "num_ids_4": 82
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\nto be or not to be\\n\") == \"12\"\nassert solution(\"10\\na ab a a b ab a a b c\\n\") == \"13\"\nassert solution(\"6\\naa bb aa aa bb bb\\n\") == \"11\"",
        "num_ids_2": 43,
        "num_ids_4": 68
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"12\"\nassert solution(\"10\") == \"13\"\nassert solution(\"6\") == \"11\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4090,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"13\"\nassert solution(\"6\") == \"11\"\nassert solution(\"10\") == \"11\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1''') == '1'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\nassert solution('''4 2\n1 2000 2000 2''') == '4000'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '1'\nassert solution('8 3') == '20'\nassert solution('5 1') == '1'\nassert solution('4 2') == '4000'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1\\n1 1 1 1 1') == '1'\nassert solution('8 3\\n5 4 2 6 5 1 9 2') == '20'\nassert solution('5 1\\n1 1 1 1 1') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 57
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"5 1\n1 1 1 1 1\n\"\"\"\n) == \"4000\"\nassert solution(\n\"\"\"5 3\n1 2000 2000 2\n\"\"\"\n) == \"4000\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n\nInput\n5 1\n1 1 1 1 1\n\nOutput\n1\n5''') == '5 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''5 1\n1 1 1 1 1\n''') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\") == \"3 2 3\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"8 3\") == \"20\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 3\n1 2 3\n''') == '1'\nassert solution('''\n4 3\n1 2 3 5\n''') == '1 2 3'\nassert solution('''\n5 1\n1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 3\n5 4 2 6 5 1 9 2\n''') == '20'\nassert solution('''\n5 1\n1 1 1 1 1\n''') == '1'\nassert solution('''\n4 2\n1 2000 2000 2\n''') == '4000'\nassert solution('''\n5 1\n1 1 1 1 1\n''') == '5'\nassert solution('''\n8 2\n1 1 1 1 1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4091,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 1') == '1'\nassert solution('4 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 -5 3 2\\n\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\\n\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\\n\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\\n\") == \"3\"",
        "num_ids_2": 40,
        "num_ids_4": 94
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n1 -5 3 2') == '1'\nassert solution('5\\n4 -2 3 -9 2') == '0'\nassert solution('9\\n-1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('8\\n16 -5 -11 -15 10 5 4 -4') == '3'",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 -5 3 2\n''') == '1'\nassert solution('''5\n4 -2 3 -9 2\n''') == '0'\nassert solution('''9\n-1 1 -1 1 -1 1 1 -1 -1\n''') == '6'\nassert solution('''8\n16 -5 -11 -15 10 5 4 -4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n1 -5 3 2\") == \"1\"\nassert solution(\"5\\n4 -2 3 -9 2\") == \"0\"\nassert solution(\"9\\n-1 1 -1 1 -1 1 1 -1 -1\") == \"6\"\nassert solution(\"8\\n16 -5 -11 -15 10 5 4 -4\") == \"3\"\n",
        "num_ids_2": 36,
        "num_ids_4": 86
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n1 -2''') == '1'\nassert solution('''3\n-1\n1''') == '0'\nassert solution('''5\n4 -2 3 2''') == '0'\nassert solution('''10\n-1 1 -1 1 -1 1 1 -1 -1''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '1'\nassert solution('4') == '1'\nassert solution('9') == '0'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 -5 3 2') == '1'\nassert solution('5 -2 3 -9 2') == '0'\nassert solution('8 -1 1 -1 1 -1 1 1 -1 -1') == '6'\nassert solution('9 -1 1 -1 1 -1 1 1 -1 -1') == '3'\nassert solution('7 -1 1 -1 1 -1 1 1 -1 -1') == '5'\n",
        "num_ids_2": 30,
        "num_ids_4": 78
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10\n4 -2 3 2\n''') == '1'\nassert solution('''\n3\n1 -1 1 -1\n''') == '0'\nassert solution('''\n7\n2 5 4 -6 -3 -4 2\n''') == '3'\nassert solution('''\n1\n1 -1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4092,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n21 23\n21 24\n20 25\n19 26\n18 27\n17 28\n16 29\n15 30\n14 31\n13 32\n12 33\n11 34\n10 35\n9 36\n8 37\n7 38\n6 39\n5 40\n4 41\n3 42\n2 43\n1 44\n0 45\n''') == '2'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n21 23\n21 24\n20 25\n19 26\n18 27\n17 28\n16 29\n15 30\n14 31\n13 32\n12 33\n11 34\n10 35\n9 36\n8 37\n7 38\n6 39\n5 40\n4 41\n3 42\n2 43\n1 44\n0 45\n''') == '8'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n14 15\n15 16\n16 17\n17 18\n18 19\n19 20\n20 21\n21 22\n21 23\n21 24\n20 25\n19 26\n18 27\n17 28\n16 29\n15 30\n14 31\n13 32\n12 33\n11 34\n10 35\n9 36\n8 37\n7 38\n6 39\n5 40\n4 41\n3 42\n2 43\n1 44\n0 45\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n1 5\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '2'\nassert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '0'\nassert solution('''\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == '10'\n\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0\nassert solution('''3\n1 2 3''') == '0\nassert solution('''8\n10 50\n10 60\n10 70\n10 80\n10 90''') == '10'\nassert solution('''2\n2 2\n4 8\n6 4''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == \"0\"\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == \"10\"\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == \"0\"\nassert solution('''5\n1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == \"20\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 2\n2 3\n4 5\n''') == \"0\"\nassert solution('''\n3\n2 2\n1 3\n5 5\n''') == \"10\"\nassert solution('''\n5\n100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000\n''') == \"2000000000\"\n\n'''\nYou are given an integer $n$. You are also given an integer $m$. Write a function that, when given $n$ and $m$, returns the maximum possible value of $|x_1 - x_2| + |x_2 - x_3| + |x_3 - x_4| + |x_4 - x_5|$ for the array\n$x = (x_1, x_2, x_3, x_4, x_5)$ consisting of $n$ non-negative integers.\n\nIn your solution, you have to complete the function $maxValue$ which takes the non-negative integers as the only argument and returns the maximum possible value.\n\nNote that this is not necessarily a sum of the absolute differences between adjacent elements, but it is a sum of the absolute differences between adjacent elements in a strictly increasing order. In particular, the first element $x_1$ is not included in the sum.\n\nFor example, if $n=6$ and $m=9$ then the solution to this problem is $|x_1 - x_2| + |x_2 - x_3| + |x_3 - x_4| + |x_4 - x_5| = 15$ and your function should return $15$.\n\nIf $n=5$ and $m=10$ then the solution to this problem is $|x_1 - x_2| + |x_2 - x_3| + |x_3 - x_4| + |x_4 - x_5| = 14$ and your function should return $14$.\n\nIf $n=4$ and $m=10$ then the solution to this problem is $|x_1 - x_2| + |x_2 - x_3| + |x_3 - x_4| + |x_4 - x_5| = 12$ and your function should return $12$.\n\nIf $n=3$ and $m=10$ then the solution to this problem is $|x_1 - x_2| + |x_2 - x_3| + |x_3 - x_4| + |x_4 - x_5| = 10$ and your function should return $10$.\n\nIf $n=2$ and $m=10$ then the solution to this problem is $|x_1 - x_2| + |x_2 - x_3| + |x_3 - x_4| + |x_4 - x_5| = 7$ and your function should return $7$.\n\nIf $n=1$ and $m=10$ then the solution to this problem is $|x_1 - x_2| + |x_2 - x_3| + |x_3 - x_4| + |x_4 - x_5| = 5$ and your function should return $5$.\n\nIf $n=0$ and $m=10$ then the solution to this problem is $0$ and your function should return $0$.\n\nWrite an efficient algorithm for the following assumptions:\n\n$1 \\le n,m \\le 10^5$\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution(\"1 100\") == '2'\nassert solution(\"2 2\") == '1'\nassert solution(\"5 5\") == '0'\nassert solution(\"2 1000000000\") == '1000000000'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 1\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '2'\nassert solution('''5 1\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"1\n    100\n    2 2\n    5 5\n    2 1000000000\n    1000000000 1000000000\"\"\") == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4093,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 100\n2 2\n5 5\n2 1000000000\n1000000000 1000000000''') == '0'\nassert solution('''5\n100\n2\n5\n2\n1000000000\n1000000000 1000000000''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('101') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('101') == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '4'\nassert solution('1011') == '-1'\nassert solution('1') == '-1'\nassert solution('101') == '4'\nassert solution('1011') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('9') == '9'\nassert solution('0') == '-1'\nassert solution('-1') == '-1'\nassert solution('1') == '1'\nassert solution('-2') == '-2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == '4'\nassert solution('6') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"None\"\nassert solution(\"4\") == \"None\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('101') == '4'\nassert solution('1001') == '-1'\nassert solution('9999') == '4'\nassert solution('9999') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"101\") == \"4\"\nassert solution(\"0\") == \"None\"\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4094,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''101\n\n>>> solution(''') == '4'\nTrue\n>>> solution('''101\n...\n... ''') == '4'\nTrue\n>>> solution('''101\n...\n... ''') == '4'\nTrue\n>>> solution('''101\n...\n... ''') == '4'\nTrue\n>>> solution('''101\n...\n... ''') == '4'\nTrue\n>>> solution('''101\n...\n... ''') == '4'\nTrue\n>>> solution('''101\n...\n... ''') == '4'\nTrue\n>>> solution('''101\n...\n... ''') == '4'\nTrue\n''')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\n\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\n\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 4\") == \"4\"\nassert solution(\"5 5\") == \"1\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '4'\nassert solution('15 8') == '48'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 4 5 3 1\") == \"4\"\nassert solution(\"5 5\\n1 2 3 4 5\") == \"1\"\nassert solution(\"15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\") == \"48\"\n\n\n\"\"\"\nimport sys\nfrom collections import defaultdict",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 4\n2 4 5 3 1\n''') == '4'\nassert solution('''5 5\n1 2 3 4 5\n''') == '1'\nassert solution('''15 8\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9\n''') == '48'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '1'\nassert solution('15 8') == '48'\nassert solution('15 8') == '48'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n2 4 5 3 1') == '4'\nassert solution('15 8\\n1 15 2 14 3 13 4 8 12 5 11 6 10 7 9') == '48'\nassert solution('3 1\\n6 1 2 3 5 4') == '1'\nassert solution('3 2\\n4 2 1 3') == '1'\nassert solution('5 5\\n1 2 3 4 5') == '1'\n",
        "num_ids_2": 46,
        "num_ids_4": 82
    },
    {
        "number": 4095,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '4'\nassert solution(stdin='''5 4\n2 4 5 3 1\n''') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_1) == \"4\"\nassert solution(input_2) == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '1'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '4'\nassert solution('5 6') == '2'\nassert solution('3 7') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\n\nassert solution('''5 16\n5 5 5 5 5\n''') == '2'\n\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 8\n2 3 1 1 2\n''') == \"4\"\nassert solution('''\n5 16\n5 5 5 5 5\n''') == \"2\"\nassert solution('''\n5 26\n5 5 5 5 5\n''') == \"-1\"\n\nassert solution('''\n5 10\n2 3 1 1 2\n''') == \"4\"\nassert solution('''\n5 20\n5 5 5 5 5\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"5 8\n2 3 1 1 2\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"5 10\n1 3 1 1 2\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"5 16\n5 5 5 5 5\n\"\"\") == \"1\"\n\nassert solution(\n\"\"\"5 26\n5 5 5 5 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 8\\n2 3 1 1 2\") == \"4\"\nassert solution(\"7 10\\n1 3 4 2 1 4 2\") == \"2\"\nassert solution(\"5 16\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 26\\n5 5 5 5 5\") == \"1\"\nassert solution(\"5 1\\n1 1\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 74
    },
    {
        "number": 4096,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 8') == \"4\"\nassert solution('7 10') == \"2\"\nassert solution('5 16') == \"1\"\nassert solution('5 26') == \"-1\"\nassert solution('5 30') == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '3'\nassert solution('2') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == '3'\nassert solution(example_input_2) == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\nassert solution('3') == '-1'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n4\n24 21 14 10\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n3\n14 5 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n1 3 6 9 12\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n24 21 14 10\n\n''') == '3'\n\nassert solution('''\n5\n1 3 6 9 12\n\n''') == '1'\n\nassert solution('''\n3\n14 5 1\n\n''') == '-1'\n\nassert solution('''\n2\n500 500\n\n''') == '0'\n\nassert solution('''\n3\n14 5 1\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n24 21 14 10\") == \"3\"\nassert solution(\"2\\n500 500\\n\") == \"0\"\nassert solution(\"3\\n14 5 1\\n\") == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4097,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '3'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n1 2 15 15 15\n''') == '5'\nassert solution('''\n6 1\n36 4 1 25 9 16\n''') == '2'\nassert solution('''\n4 4\n1 10 100 1000\n''') == '4'\nassert solution('''\n9 0\n1 1 1 1 1 1 1 1 1\n''') == '9'\nassert solution('''\n6 1\n20 100 1000 100 100\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"1 10 100 1000\") == \"4\"\nassert solution(\"1 2 3 4 5 6 7 8 9\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('4 4') == '4'\nassert solution('1 10 100 1000') == '4'\nassert solution('6 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n1 2\n3 4\n''') == '3'\nassert solution('''4\n1 2 3 4\n5 6 7 8\n''') == '2'\nassert solution('''5\n10 20 50 60 90\n70 80 85 100\n20 30 40 60 80\n''') == '3'\nassert solution('''100\n1 2 3 4\n5 6 7 8\n9 10 11 12\n''') == '2'\nassert solution('''1000\n1 2 3 4\n5 6 7 8\n9 10 11 12\n13 14 15 16\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"5\"\nassert solution(\"4 4\") == \"4\"\nassert solution(\"6 1\") == \"2\"\nassert solution(\"5 2\") == \"5\"\nassert solution(\"6 1\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution(\"1 2 3 4\") == \"4\"\nassert solution(\"5 2\") == \"5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 2 15 15 15\\n\") == \"5\"\nassert solution(\"6 1\\n36 4 1 25 9 16\\n\") == \"2\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '5'\nassert solution('6 1') == '2'\nassert solution('6 1') == '2'\nassert solution('6 1') == '2'\nassert solution('6 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4098,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n1 2\\n1 2\") == \"1\"\nassert solution(\"6 1\\n36 4 1 25 9 16\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\\n\") == \"8\"\nassert solution(\"3 2 2\\n1 1 1\\n\") == \"-1\"\nassert solution(\"5 2 7\\n6 1 4 5\\n\") == \"8\"\nassert solution(\"5 5 5\\n1 2 3 4 5\\n\") == \"0\"\nassert solution(\"5 6 4\\n3 3 3 3\\n\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('4 3 3') == '-1'\nassert solution('9 1 4') == '4'\nassert solution('9 3 4') == '-1'\nassert solution('5 10 5') == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"20 20 20\") == \"20\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('5 3 2') == '2'\nassert solution('10 100 5') == '-1'\nassert solution('100 100 5') == '100'\nassert solution('3 5 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 10 7\\n8 10 3 6\\n') == '8'\nprint('Done!')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10 7\") == \"8\"\nassert solution(\"5 10 7\") == \"8\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == \"8\"\nassert solution('5 10 7\\n8 10 3 6') == \"7\"\nassert solution('5 10 7\\n8 10 3 6') == \"0\"\nassert solution('5 10 7\\n8 10 3 6') == \"-1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 10 7\\n8 10 3 6') == '8'\nassert solution('1000000000 5000000000000000 100000000000 90000000 50000000') == '-1'\nassert solution('10 10 10 10 10 10') == '-1'\n",
        "num_ids_2": 41,
        "num_ids_4": 57
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 10 7\\n8 10 3 6\") == \"8\"\nassert solution(\"3 2\\n1 1 1\") == \"1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4099,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 10 7') == '8'\nassert solution('2 2') == '-1'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 4') == 'No'\nassert solution('6 4 3') == 'No'\nassert solution('5 3 4') == 'Yes'\nassert solution('6 5 3') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3 4\\n3\\n1\\n3\\n2\\n') == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\nassert solution('6 3 4\\n1\\n2\\n3\\n4\\n5\\n6\\n') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\n'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n') == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\n'",
        "num_ids_2": 92,
        "num_ids_4": 136
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3 4\") == \"No\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"6 2\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\\nNo\\nNo\\nNo\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == 'Yes\\nNo\\nYes\\nNo\\nYes\\nNo\\n'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 3 4') == 'No\\nNo\\nYes'\nassert solution('8 3 4') == 'No\\nNo\\nYes'\nassert solution('10 3 4') == 'No\\nNo\\nYes'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input) == 'No\\nNo\\nYes\\nNo\\nNo\\nNo\\n'\nassert solution(input) == 'Yes\\nYes\\nYes\\nYes\\nYes\\nYes\\n'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4100,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 3 4\") == \"No\\nNo\\nYes\"\nassert solution(\"10 10 10\") == \"No\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\\nNo\"\nassert solution(\"5 1 3\") == \"Yes\\nYes\\nYes\\nYes\\nYes\"\n",
        "num_ids_2": 57,
        "num_ids_4": 81
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n\n''') == 'YES'\n\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES', \"First\"\n\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES', \"Second\"\n\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO', \"Third\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 2\n1 1\n0 1\n''') == 'YES', solution.__doc__\nassert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES', solution.__doc__\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'NO', solution.__doc__",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2 2\\n\"\n    \"1 1\\n\"\n    \"0 1\"\n) == \"YES\"\n\nassert solution(\n    \"3 3\\n\"\n    \"0 0 0\\n\"\n    \"0 0 0\\n\"\n    \"1 1 1\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"2 2\\n1 1\\n0 1\\n\"\n) == \"YES\\n00\\n10\"\nassert solution(\n    \"3 3\\n0 0 0\\n1 0 1\\n1 1 0\\n\"\n) == \"YES\\n010\\n0000\"\nassert solution(\n    \"3 3\\n1 1 1\\n0 0 1\\n1 1 1\\n\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('1 1') == 'YES'\nassert solution('0 0 0 1') == 'YES'\nassert solution('0 0 0 0') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == 'YES'\nassert solution('3 4') == 'YES'\nassert solution('10 10') == 'YES'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"YES\"\nassert solution(\"3 3\") == \"YES\"\nassert solution(\"1 3\") == \"YES\"\nassert solution(\"10 1\") == \"NO\"\nassert solution(\"9 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4101,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4\n0 0 0 1\n0 0 0 0\n1 1 1 1\n''') == 'YES'\nassert solution('''\n2 2\n1 1\n0 1\n''') == 'NO'\nassert solution('''\n3 3\n0 0 0\n1 0 1\n1 1 0\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('373') == 'Yes'\nassert solution('121') == 'No'\nassert solution('436') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"373\") == \"Yes\"\nassert solution(\"121\") == \"No\"\nassert solution(\"436\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"343\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"12345\") == \"Yes\"\nassert solution(\"99999\") == \"Yes\"\nassert solution(\"55544\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'Yes'\nassert solution('11') == 'No'\nassert solution('436') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('373') == 'Yes', 'failed on input: \"373\"'\nassert solution('121') == 'No', 'failed on input: \"121\"'\nassert solution('436') == 'Yes', 'failed on input: \"436\"'\nprint('Everything passed!')\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('12') == 'No'\nassert solution('1') == 'No'\nassert solution('4') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes'\nassert solution('1') == 'No'\nassert solution('2') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\n'''\n\nimport sys\n\ninput = sys.stdin.readline",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"121\") == \"Yes\"\nassert solution(\"433\") == \"No\"\nassert solution(\"243\") == \"Yes\"\n\n'''\n\nstdin = input()",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4102,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"919\") == \"Yes\"\nassert solution(\"919\") == \"Yes\"\nassert solution(\"919\") == \"Yes\"\nassert solution(\"919\") == \"Yes\"\n\n\"\"\"\n\nimport sys\n\nstdin = sys.stdin.read()\n\nprint(\"Yes\" if len(stdin) <= 10 else \"No\")\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 2 1\\n0 1 0 1 0\\n\") == \"5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"5\"\nassert solution(\n'''\n5 2 1\n0 1 0 1 0\n''') == \"5\"\nassert solution(\n'''\n6 2 1\n1 0 0 1 0 1\n''') == \"3\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 16
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution('''6 2 1\n1 0 0 1 0 1\n''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 1\\n1 0 0 1 0 1') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1 1') == '3'\nassert solution('6 2 1\\n0 1 0 1 0 1 1') == '5'\nassert solution('6 2 1\\n0 1 0 1 0 1 1 0') == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 84
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '''\n5 2 1\n0 1 0 1 0\n''') == '5'\nassert solution(\n    '''\n6 2 1\n1 0 0 1 0 1\n''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 2 1\\n\"\n    \"0 1 0 1 0\\n\"\n) == \"5\"\nassert solution(\n    \"6 2 1\\n\"\n    \"1 0 0 1 0 1\\n\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 1') == '5'\nassert solution('6 2 1') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 1\\n0 1 0 1 0\\n') == '5'\nassert solution('6 2 1\\n1 0 0 1 0 1\\n') == '3'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4103,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8-7+6-5+4-3+2-1-0''') == '4'\nassert solution('''2+2''') == '-46'\nassert solution('''112-37''') == '375'''\n",
        "num_ids_2": 45,
        "num_ids_4": 61
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'",
        "num_ids_2": 39,
        "num_ids_4": 51
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nprint(\"Congratulations! All test cases are passed!\")\n'''\n",
        "num_ids_2": 38,
        "num_ids_4": 50
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\nassert solution('112-37') == '375'\nassert solution('1+1') == '2'\n",
        "num_ids_2": 39,
        "num_ids_4": 63
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4', 'One very experienced problem writer decided to prepare a problem for April Fools Day contest.'\nassert solution('112-37') == '375', 'One very experienced problem writer decided to prepare a problem for April Fools Day contest.'\n\n\n\"\"\"\nfrom collections import deque\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8-7+6-5+4-3+2-1-0') == '4'\nassert solution('2+2') == '-46'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '4'\nassert solution(input()) == '-46'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4104,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8-7+6-5+4-3+2-1-0\") == \"4\"\nassert solution(\"2+2\") == \"-46\"\nassert solution(\"112-37\") == \"375\"\nassert solution(\"1-2+4-5+6\") == \"-13\"\n",
        "num_ids_2": 38,
        "num_ids_4": 68
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n3 2\n1 2\n''') == 'YES'\nassert solution('''\n4 3\n1 2\n2 3\n3 4\n3 2\n2 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('20 4') == 'NO'\nassert solution('100 4') == 'NO'\nassert solution('15 5') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"YES\"\nassert solution(\"10 3\") == \"YES\"\nassert solution(\"10 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n2 1\n''') == 'YES'\nassert solution('''\n4 3\n''') == 'NO'\nassert solution('''\n13 4\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == 'YES'\nassert solution('10 4') == 'YES'\nassert solution('5 5') == 'NO'\nassert solution('100 5') == 'NO'\nassert solution('12 11') == 'YES'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 4\n''') == 'YES'\nassert solution('''\n8 5\n''') == 'NO'\nassert solution('''\n15 6\n''') == 'NO'\nassert solution('''\n4 3\n''') == 'YES'\nassert solution('''\n10 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 3\n\n''') == \"YES\"\nassert solution('''\n10 4\n\n''') == \"YES\"\nassert solution('''\n13 4\n\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"YES\"\nassert solution(\"10 4\") == \"YES\"\nassert solution(\"100 4\") == \"NO\"\nassert solution(\"10 3\") == \"2 1\"\nassert solution(\"100 3\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4105,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 3\") == \"YES\"\nassert solution(\"5 3\") == \"YES\"\nassert solution(\"3 2\") == \"NO\"\nassert solution(\"10 4\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 4\") == \"6\"\nassert solution(\"10 5 3\") == \"6\"\nassert solution(\"2 2 2 2\") == \"2\"\nassert solution(\"2 1 3 4\") == \"2\"\nassert solution(\"4 4 4 4\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2 3\n5 1 3 10 1\n''') == '18'\n\nassert solution('''6 1 5\n10 30 30 70 10 10\n''') == '100'\n\nassert solution('''4 3 1\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '100'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"18\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"18\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"100\"\nassert solution(\"4 3 1\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 3 1\n10 30 30 70 10 10''') == '100'\nassert solution('''5 2 3\n5 1 3 10 1''') == '18'\nassert solution('''6 1 5\n10 30 30 70 10 10''') == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '-1'\nassert solution('''\n5 2 1\n1 100 1 1\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4106,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"18\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 1\") == \"4\"\nassert solution(\"6 1\") == \"21\"\nassert solution(\"12 1\") == \"12\"\nassert solution(\"12 6\") == \"15\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"6 1\") == \"4\"\nassert solution(\"12 6\") == \"15\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 2\\n00100\"\n) == \"3\"\n\nassert solution(\n    \"6 1\\n000000\"\n) == \"4\"\n\nassert solution(\n    \"12 6\\n000010000100\"\n) == \"15\"\n\nassert solution(\n    \"4 1\\n0011\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5 2\\n00100\"\n) == \"3\"\nassert solution(\n    \"6 1\\n000000\"\n) == \"4\"\nassert solution(\n    \"4 1\\n0011\"\n) == \"4\"\nassert solution(\n    \"12 6\\n000010000100\"\n) == \"15\"\nassert solution(\n    \"4 1\\n0011\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"4\"\nassert solution(input()) == \"21\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''4 1\n0011''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 2\n00100\n\n''') == '3'\nassert solution('''6 1\n000000\n\n''') == '4'\nassert solution('''4 1\n0011\n\n''') == '4'\nassert solution('''12 6\n000010000100\n\n''') == '15'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == str(min_cost)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 1\") == \"4\"\nassert solution(\"6 1\") == \"21\"\nassert solution(\"12 6\") == \"15\"\nassert solution(\"1000000000 1\") == \"0\"\nassert solution(\"1000000000 0\") == \"1000000000\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4107,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n00100''') == '3'\nassert solution('''6 1\n000000''') == '4'\nassert solution('''12 6\n000010000100''') == '15'\nassert solution('''4 1\n0011''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"azzel\") == \"Yes\"\nassert solution(\"apple\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"azzel\") == \"apple\"\nassert solution(\"buzz\") == \"buzz\"\nassert solution(\"buzz\") == \"buzz\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nS\nT\n''') == 'Yes'\nassert solution('''\nS\nA\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('azzel') == 'apple'\nassert solution('apple') == 'azzel'\nassert solution('bud') == 'bud'\nassert solution('juke') == 'juke'\nassert solution('koek') == 'koek'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4108,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('azzel') == 'Yes'\nassert solution('apple') == 'No'\n\"\"\"\n\nimport sys\n\ns = sys.stdin.readline().strip()\nt = sys.stdin.readline().strip()",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 10') == '2'\nassert solution('1 2 3 4 5') == '3'\nassert solution('5 2 5 6 5') == '6'\nassert solution('5 4 8 4 4') == '7'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == '0'\ninput_ = '''\n5\n2 3\n0\n3 4\n3 2\n3 1\n4 1\n1 1\n'''\nprint(solution(input_))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"3\"\nassert solution(\"10 4\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n0 1\\n3\\n1\\n1\\n2\\n1\\n0\\n\") == \"5\"\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\\n1 1 1 1 1\\n2 3 4 5\") == \"4\"\nassert solution(\"4 6\\n1 2 1 2 1\\n1 1 1 1 1\\n2 3 4 5\") == \"6\"\nassert solution(\"3 2\\n1 1 1 1\\n1 1 1 1\\n2 3 4\") == \"3\"\n",
        "num_ids_2": 62,
        "num_ids_4": 90
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 5\\n4 5\\n2 5\") == \"4\"\nassert solution(\"5\\n1 5\\n4 5\\n2 5\") == \"5\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4109,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n2 3 4 1\\n1\\n\") == \"8\"\nassert solution(\"10 3\\n1 2 5 3 2 5 2 1\\n1\\n\") == \"4\"\nassert solution(\"10 3\\n1 2 5 3 2 5 2 1\\n2\\n\") == \"8\"\nassert solution(\"10 3\\n1 2 5 3 2 5 2 1\\n3\\n\") == \"10\"\nassert solution(\"10 3\\n1 2 5 3 2 5 2 1\\n4\\n\") == \"10\"\n\nstdin = \"\"\"\n4 5\n3 1 5 4 1\n2 3\n1 2\n1\n\"\"\"\nprint(solution(stdin))\n",
        "num_ids_2": 48,
        "num_ids_4": 100
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"5 800\") == \"5\"\nassert solution(\"3 500\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 500') == '5'\nassert solution('5 800') == '2'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"3 5\") == \"2\"\nassert solution(\"100 100\") == \"101\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 700\") == \"3\"\nassert solution(\"3 500\") == \"5\"\nassert solution(\"5 800\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 700\n3 500\n5 800\n''') == '3'\nassert solution('''2 700\n3 500\n5 800\n''') == '3'\nassert solution('''10 700\n3 500\n5 800\n''') == '4'\nassert solution('''10 700\n3 500\n5 800\n''') == '3'\nassert solution('''2 700\n3 500\n5 800\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 700\\n3 500\\n5 800\") == \"3\"\nassert solution(\"3 3\\n5 500\\n3 600\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 700') == '3'\nassert solution('3 5') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"3\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"1 5\") == \"4\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 9\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4110,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 700\n3 500\n5 800''') == '3'\nassert solution('''2 700\n3 600\n5 800''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n4 5 4 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5 4 5 5 5 6') == '2'\nassert solution('8 4 8 7 8 4 4 5') == '3'\nassert solution('9 2 3 4 2 2 3 2 2 4') == '3'",
        "num_ids_2": 33,
        "num_ids_4": 52
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4') == '3'",
        "num_ids_2": 39,
        "num_ids_4": 60
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''9\n2 3 4 2 2 3 2 2 4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n5 5 4 5 5 5 6\\n') == '2'\nassert solution('8\\n4 8 8 7 8 4 4 5\\n') == '3'\nassert solution('9\\n2 3 4 2 2 3 2 2 4\\n') == '3'\n",
        "num_ids_2": 43,
        "num_ids_4": 66
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == str(answer(int(input_)))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4111,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7\n5 5 4 5 5 5 6\n''') == '2'\nassert solution('''\n8\n4 8 8 7 8 4 4 5\n''') == '3'\nassert solution('''\n9\n2 3 4 2 2 3 2 2 4\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"4 3 1\") == \"100\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2 3\\n5 1 3 10 1\\n') == '18'\nassert solution('6 1 5\\n10 30 30 70 10 10\\n') == '-1'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 3\") == \"18\", \"Wrong\"\nassert solution(\"3 2 2\") == \"-1\", \"Wrong\"\nassert solution(\"6 1 5\") == \"100\", \"Wrong\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3') == '18'\nassert solution('6 1 5') == '-1'\nassert solution('4 3 1') == '100'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 3\n5 1 3 10 1\n''') == '18'\nassert solution('''\n6 1 5\n10 30 30 70 10 10\n''') == '100'\nassert solution('''\n8 2 5\n1 1 1 1 1 1 1\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '100'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4112,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"18\"\nassert solution(\"5 2 3\") == \"18\"\nassert solution(\"6 1 5\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == 'No'\nassert solution('11') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('12') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'Yes'\nassert solution('3') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('11') == 'Yes'\nassert solution('2') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"No\"\nassert solution(\"11\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\\n\") == \"Yes\"\nassert solution(\"11\\n\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"9\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"15\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12') == 'Yes'\nassert solution('5') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Yes'\nassert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'\nassert solution('5') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n') == 'No'\nassert solution('1\\n') == 'Yes'\nassert solution('11\\n') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4113,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    4\n''') == 'Yes'\nassert solution('''\n    5\n''') == 'No'\nassert solution('''\n    6\n''') == 'No'\nassert solution('''\n    7\n''') == 'Yes'\nassert solution('''\n    8\n''') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2 2 6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2 2 6\"\nassert solution(\"20\") == \"0 0 5\"\nassert solution(\"1\") == \"0 0 1\"\nassert solution(\"5\") == \"0 0 6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == \"2 2 3\"\nassert solution('10') == \"1 1 6\"\nassert solution('100') == \"100 100 100\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '2 2 6'\nassert solution('6') == '2 2 6'\nassert solution('9') == '0 0 0'\n\"\"\"\n\nfrom math import inf\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5') == '2 2 6'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 3 5\\n2 1 5\\n1 2 5\\n3 2 5\") == \"2 2 6\"\nassert solution(\"5\\n4 2 2 2 1\\n0 3 1 3\\n1 1 2 4\\n1 1 2 5\\n1 1 2 4\\n1 1 2 5\") == \"2 4 6\"\nassert solution(\"7\\n6 4 7 8\\n6 4 7 8\\n6 4 7 8\\n6 4 7 8\\n6 4 7 8\\n6 4 7 8\") == \"6 4 8\"\n",
        "num_ids_2": 81,
        "num_ids_4": 129
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2 2 6'\nassert solution('4') == '2 2 6'\n'''\n\nn = int(input())\n\nfor _ in range(n):\n    x1, y1, h1 = map(int, input().split())\n    x2, y2, h2 = map(int, input().split())\n    x3, y3, h3 = map(int, input().split())\n    x4, y4, h4 = map(int, input().split())\n    x5, y5, h5 = map(int, input().split())\n    x6, y6, h6 = map(int, input().split())\n    x7, y7, h7 = map(int, input().split())\n    x8, y8, h8 = map(int, input().split())\n    x9, y9, h9 = map(int, input().split())\n    x10, y10, h10 = map(int, input().split())\n    x11, y11, h11 = map(int, input().split())\n    x12, y12, h12 = map(int, input().split())\n    x13, y13, h13 = map(int, input().split())\n    x14, y14, h14 = map(int, input().split())\n    x15, y15, h15 = map(int, input().split())\n    x16, y16, h16 = map(int, input().split())\n    x17, y17, h17 = map(int, input().split())\n    x18, y18, h18 = map(int, input().split())\n    x19, y19, h19 = map(int, input().split())\n    x20, y20, h20 = map(int, input().split())\n    x21, y21, h21 = map(int, input().split())\n    x22, y22, h22 = map(int, input().split())\n    x23, y23, h23 = map(int, input().split())\n    x24, y24, h24 = map(int, input().split())\n    x25, y25, h25 = map(int, input().split())\n    x26, y26, h26 = map(int, input().split())\n    x27, y27, h27 = map(int, input().split())\n    x28, y28, h28 = map(int, input().split())\n    x29, y29, h29 = map(int, input().split())\n    x30, y30, h30 = map(int, input().split())\n    x31, y31, h31 = map(int, input().split())\n    x32, y32, h32 = map(int, input().split())\n    x33, y33, h33 = map(int, input().split())\n    x34, y34, h34 = map(int, input().split())\n    x35, y35, h35 = map(int, input().split())\n    x36, y36, h36 = map(int, input().split())\n    x37, y37, h37 = map(int, input().split())\n    x38, y38, h38 = map(int, input().split())\n    x39, y39, h39 = map(int, input().split())\n    x40, y40, h40 = map(int, input().split())\n    x41, y41, h41 = map(int, input().split())\n    x42, y42, h42 = map(int, input().split())\n    x43, y43, h43 = map(int, input().split())\n    x44, y44, h44 = map(int, input().split())\n    x45, y45, h45 = map(int, input().split())\n    x46, y46, h46 = map(int, input().split())\n    x47, y47, h47 = map(int, input().split())\n    x48, y48, h48 = map(int, input().split())\n    x49, y49, h49 = map(int, input().split())\n    x50, y50, h50 = map(int, input().split())\n    x51, y51, h51 = map(int, input().split())\n    x52, y52, h52 = map(int, input().split())\n    x53, y53, h53 = map(int, input().split())\n    x54, y54, h54 = map(int, input().split())\n    x55, y55, h55 = map(int, input().split())\n    x56, y56, h56 = map(int, input().split())\n    x57, y57, h57 = map(int, input().split())\n    x58, y58, h58 = map(int, input().split())\n    x59, y59, h59 = map(int, input().split())\n    x60, y60, h60 = map(int, input().split())\n    x61, y61, h61 = map(int, input().split())\n    x62, y62, h62 = map(int, input().split())\n    x63, y63, h63 = map(int, input().split())\n    x64, y64, h64 = map(int, input().split())\n    x65, y65, h65 = map(int, input().split())\n    x66, y66, h66 = map(int, input().split())\n    x67, y67, h67 = map(int, input().split())\n    x68, y68, h68 = map(int, input().split())\n    x69, y69, h69 = map(int, input().split())\n    x70, y70, h70 = map(int, input().split())\n    x71, y71, h71 = map(int, input().split())\n    x72, y72, h72 = map(int, input().split())\n    x73, y73, h73 = map(int, input().split())\n    x74, y74, h74 = map(int, input().split())\n    x75, y75, h75 = map(int, input().split())\n    x76, y76, h76 = map(int, input().split())\n    x77, y77, h77 = map(int, input().split())\n    x78, y78, h78 = map(int, input().split())\n    x79, y79, h",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 5') == '2 2 6'\nassert solution('2 1 5') == '2 1 5'\nassert solution('1 2 5') == '1 2 5'\nassert solution('3 2 5') == '3 2 5'\nassert solution('3 3 5') == '3 3 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '2 2 6'\nassert solution('3') == '2 1 5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4114,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n2 3 5\n2 1 5\n1 2 5\n3 2 5\n''') == '2 2 6'\n\n\"\"\"\n\nN = int(input())\n\ncoords = [[] for _ in range(N)]\n\nfor i in range(N):\n    x, y, h = list(map(int, input().split()))\n    coords[i] = (x, y, h)\n\ncenter_x = coords[0][0]\ncenter_y = coords[0][1]\nh = coords[0][2]\n\nfor coord in coords:\n    center_x = max(center_x, coord[0])\n    center_y = max(center_y, coord[1])\n    h = min(h, coord[2])\n\nprint(center_x, center_y, h)",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('redcoder') == '1'\n\n---Output---\n\nProblem 67:\n\nGiven a string, S, and an integer, K, return the last K characters of S.\n\nExample:\n\nInput:\n\nS = \"welcome\"\nK = 3\n\nOutput:\n\n\"le\"\n\nExplanation:\n\nS is \"welcome\" and K = 3. The first 3 characters of S\nare \"wel\", \"oc\", and \"le\" respectively.\n\n---Hint---\n\nUse slicing.\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"redcoder\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abcde\") == \"abcde\"\nassert solution(\"redcoder\") == \"redcoder\"\nassert solution(\"abcd\") == \"abcd\"\nassert solution(\"abc\") == \"abc\"\nassert solution(\"abcba\") == \"abcba\"\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('redcoder') == '1'\nassert solution('a') == '1'\nassert solution('aabb') == '2'\nassert solution('aacdd') == '3'\nassert solution('aadddd') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('redcoder') == '1'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('redcoder') =='redcoder'\n\n------Other Solutions------\n\nSolution 1",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '1'\nassert solution('a') == '1'\nassert solution('a') == '1'\nassert solution('redcoder') == '1'\nassert solution('a redcoder') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"redcoder\") == \"1\"\nassert solution(\"\") == \"\"\nassert solution(\"redcoderredcoder\") == \"1\"\nassert solution(\"redcoder\") == \"2\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 19,
        "num_ids_4": 46
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('redcoder') =='redcoder'\nassert solution('a') == 'a'\nassert solution('aa') == 'aa'\nassert solution('aab') == 'aab'\nassert solution('abcd') == 'abcd'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4115,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('redcoder') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''12\n10\n20\n7\n8\n15\n30\n6\n1\n2\n3''') == 'Yes'\nassert solution('''1\n10\n20\n7\n8\n15\n30\n6\n1\n2\n3''') == 'No'\nassert solution('''0\n10\n20\n7\n8\n15\n30\n6\n1\n2\n3''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"Yes\", \"Wrong answer\"\nassert solution(\"4\") == \"No\", \"Wrong answer\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Yes\", \"First\"\nassert solution(\"10\") == \"No\", \"Second\"\n\n---\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"9\") == \"Yes\"\nassert solution(\"3\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"0\") == \"No\"\nassert solution(\"13\") == \"No\"\nassert solution(\"1234567891011121314151617181920212223242526272829303132333435363738394041421431441516171819202122232425262728293031323334353637383940\") == \"Yes\"\nassert solution(\"1234567891011121314151617181920212223242526272829303132333435363738394041421431441516171819202122232425262728293031323334353637383940\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 98
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('13') == \"No\"\nassert solution('3') == \"No\"\nassert solution('5') == \"Yes\"\nassert solution('6') == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2\n4\n6\n''') == 'Yes'\nassert solution('''3\n5\n4\n1\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Yes'\nassert solution('10') == 'Yes'\nassert solution('10x') == 'No'\nassert solution('10x10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4116,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '5'\nassert solution('2') == '8'\nassert solution('3') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n4 4 9 7 5') == '5'\nassert solution('2\\n3 3 3') == '6'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n4 4 9 7 5\\n') == '5\\n', 'Should be 5'\nassert solution('3\\n2 2 1\\n') == '3\\n', 'Should be 3'\nassert solution('2\\n4 4 3\\n') == '1\\n', 'Should be 1'\nassert solution('4\\n2 4 3\\n') == '4\\n', 'Should be 4'\nassert solution('7\\n5 7 9\\n') == '0\\n', 'Should be 0'\n",
        "num_ids_2": 50,
        "num_ids_4": 98
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '10'\nassert solution('100') == '4040'\nassert solution('100100') == '4040404040'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4 9 7 5') == '5'\nassert solution('4 4 9 7 5') == '5'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n4 4 9 7 5\n''') == '5'\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == \"5\"\nassert solution('4') == \"2\"\nassert solution('9') == \"8\"\nassert solution('7') == \"9\"\nassert solution('5') == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4117,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n4 4 9 7 5''') == '5'\nassert solution('''5\n5 5 5 5 5''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5') == '10', 'First'\nassert solution('3 3') == '6', 'Second'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2\n1 3\n2 4\n5 6\n''') == '1 2\\n3 4\\n5 6\\n', \"Wrong\"\nassert solution('''4 5\n1 2\n3 4\n5 6\n''') == '1 2\\n3 4\\n5 6\\n', \"Wrong\"\nassert solution('''1 2\n10 20\n''') == '-1\\n', \"Wrong\"\nassert solution('''1 2\n1 3\n2 4\n5 6\n''') == '1 2\\n3 4\\n5 6\\n', \"Wrong\"\nassert solution('''4 5\n1 2\n3 4\n5 6\n''') == '1 2\\n3 4\\n5 6\\n', \"Wrong\"",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '-1'\nassert solution('2 4') == '6'\nassert solution('3 5') == '15'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n2 5\n'''\n    ) == '10'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == '10'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 5''') == '10'\nassert solution('''2 6''') == '-1'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n\") == \"2\", 'wrong answer'\nassert solution(\"2 3\\n\") == \"3\", 'wrong answer'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"3 4\") == \"4\"\nassert solution(\"4 5\") == \"5\"\nassert solution(\"5 6\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4118,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 5') == '10'\nassert solution('1 2') == '-1'\nassert solution('3 4') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 5\n10 12 1 2 14\n''') == '5'\nassert solution('''2 6\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5') == '5'\nassert solution('10 12 1 2 14') == '5'\nassert solution('1 2 3 4 5') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"2 6\\n10 12 1 2 14\") == \"4\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\nassert solution(\"3 2\\n5 4 1 2 3\") == \"4\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n10 12 1 2 14\") == \"5\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"5 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\nassert solution(\"5 5\") == \"5\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 5\n10 12 1 2 14\n''') == '5'\nassert solution('''2 4\n10 12 1 2 14\n''') == '4'\nassert solution('''1 2\n10 12 1 2\n''') == '2'\nassert solution('''5 6\n10 12 1 2 3 4 5\n''') == '4'\nassert solution('''3 3\n10 12 1 2 3 4\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4119,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 5\n3 8 9 4 7\n''') == '2'\nassert solution('''3 2\n1 2 3\n''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n\nassert solution(\"4 4 3\") == \"2\"\nassert solution(\"5 6 2\") == \"1\"\nassert solution(\"4 6 3\") == \"1110\"",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4 4 3\n1 2\n2 3\n1 4\n4 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 3\n1 2\n2 3\n1 4\n4 3\n''') == '2'\nassert solution('''\n4 6 3\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\nassert solution('''\n5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '2'\nassert solution('''\n10 5 4\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 6\n4 7\n5 8\n5 9\n6 10\n6 11\n''') == '10'\nassert solution('''\n5 6 5\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n4 6\n4 7\n5 8\n5 9\n6 10\n6 11\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 4 3') == '2'\nassert solution('5 6 2') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\"\nassert solution(\"4 4 3\") == \"1110\"\nassert solution(\"4 6 3\") == \"110110\"\n",
        "num_ids_2": 21,
        "num_ids_4": 35
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 6 2') == '1'\nassert solution('4 6 3') == '1110'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6 2') == '1'\nassert solution('6 6 2') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4 3\") == \"2\"\nassert solution(\"5 6 2\") == \"1\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 4 3\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '2'\n\nassert solution('''5 6 2\n1 2\n1 3\n2 4\n2 5\n3 4\n3 5\n''') == '1'\n\nassert solution('''4 4 6\n1 2\n2 3\n1 4\n4 3\n2 4\n1 3\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4120,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"2\"\nassert solution() == \"11100\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n\n''') == 'YES'\n\nassert solution('''\n3\n4 5 3\n\n''') == 'YES'\n\nassert solution('''\n2\n10 10\n\n''') == 'YES'\n\nassert solution('''\n3\n1 2 3\n\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5\\n2 1 1 2 5\") == \"YES\"\nassert solution(\"3\\n4 5 3\") == \"NO\"\n",
        "num_ids_2": 25,
        "num_ids_4": 40
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2 1 1 2 5\\n\") == \"YES\"\nassert solution(\"3\\n4 5 3\\n\") == \"YES\"\nassert solution(\"2\\n10 10\\n\") == \"YES\"\nassert solution(\"3\\n1 2 3\\n\") == \"NO\"",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n5\n1 2 1 2 5\n''') == 'YES'\nassert solution('''\n2\n4 5 3\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\n\nassert solution('''3\n1 2 3\n''') == 'NO'\n\nassert solution('''2\n10 10\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''3\n1 2 3\n''') == 'NO'\nassert solution('''2\n10 10\n''') == 'YES'\nassert solution('''3\n1 2 3\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 1 1 2 5\n''') == 'YES'\nassert solution('''\n3\n4 5 3\n''') == 'YES'\nassert solution('''\n2\n10 10\n''') == 'YES'\nassert solution('''\n3\n1 2 3\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'YES'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n2 1 1 2 5\n''') == \"YES\"\n\nassert solution('''3\n4 5 3\n''') == \"YES\"\n\nassert solution('''2\n10 10\n''') == \"YES\"\n\nassert solution('''3\n1 2 3\n''') == \"NO\"\n\nassert solution('''3\n1 2 3\n''') == \"NO\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4121,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2 2 2 5\") == \"YES\"\nassert solution(\"3 4 3\") == \"NO\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '-1'\nassert solution('''\n1000 6\n-100 -200 -300 125 77 -4\n''') == '9'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1000 6\n-100 -200 -300 125 77 -4''') == '9'\nassert solution('''1000000000000 5\n-1 0 0 0 0''') == '4999999999996'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '9'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"1000000000000 5\\n-1 0 0 0 0\"\n) == \"4999999999996\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == '-1'\nassert solution(\"1\") == '-1'\nassert solution(\"10\") == '4999999999996'\nassert solution(\"100\") == '9'\nassert solution(\"1000\") == '9'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 6\\n-100 -200 -300 125 77 -4') == '9'\nassert solution('1000000000000 5\\n-1 0 0 0 0') == '4999999999996'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4122,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 6') == '9'\nassert solution('1000000000000 5') == '4999999999996'\nassert solution('10 4') == '-1'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\nABACABA''') == 'AB'\nassert solution('''5\nZZZAA''') == 'ZZ'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'AAAA'\nassert solution('1') == 'A'\nassert solution('5') == 'AB'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\nassert solution('ABCABA') == 'ABA'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == 'AB'\nassert solution('5') == 'ZZ'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\nABACABA\n''') == 'AB'\nassert solution('''\n5\nZZZAA\n''') == 'ZZ'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"AA\"\nassert solution(input()) == \"AB\"\nassert solution(input()) == \"BA\"\nassert solution(input()) == \"ZZ\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABACABA') == 'AB'\nassert solution('ZZZAA') == 'ZZ'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"AB\"\nassert solution(input()) == \"ZZ\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nZZZAA\n''') == \"ZZ\"\nassert solution('''\n''') == \"\"\nassert solution('''\n''') == \"\"\nassert solution('''\n''') == \"\"",
        "num_ids_2": 13,
        "num_ids_4": 25
    },
    {
        "number": 4123,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2\"\nassert solution('3') == \"1\"\nassert solution('4') == \"1\"\nassert solution('5') == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('west') == 2\nassert solution('codeforces') == 9\nassert solution('test') == 7\nassert solution('yes') == 1",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == ''\nassert solution('a') == ''\nassert solution('a') == ''\nassert solution('a') == ''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == str(solution_test_cases[0])\n\nfor i in range(1, len(solution_test_cases)):\n    assert solution(input()) == str(solution_test_cases[i])\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('west') == 2\nassert solution('b') == 1\nassert solution('codeforces') == 8\n",
        "num_ids_2": 16,
        "num_ids_4": 27
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('west') == 2\nassert solution('test') == 9\nassert solution('yes') == 7\nassert solution('b') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == __import__(\"sys\").stdin.read()\n\"\"\"\nimport functools\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('codeforces') == '2'\nassert solution('test') == '2'\nassert solution('yes') == '1'\nassert solution('b') == '1'\nassert solution('code') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == 0\nassert solution(\"a\") == 1\nassert solution(\"a\"*(1<<16)) == 0\nassert solution(\"a\"*(1<<16)+\"b\") == 1\nassert solution(\"a\"*(1<<16)+\"a\"*(1<<16)) == 0\n",
        "num_ids_2": 15,
        "num_ids_4": 46
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"test\") == 2\nassert solution(\"codeforces\") == 9\nassert solution(\"b\") == 1",
        "num_ids_2": 19,
        "num_ids_4": 27
    },
    {
        "number": 4124,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('west') == 2\nassert solution('codeforces') == 9\nassert solution('test') == 7\nassert solution('yes') == 1\nprint('all tests passed')\n",
        "num_ids_2": 19,
        "num_ids_4": 35
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '2'\nassert solution('10 10') == '2'\nassert solution('20 20') == '4'\nassert solution('10 20') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 3\n1 7 11\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 1\n1 3 5 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 2\n1 3 5 7\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 2\n1 2 3 4\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 3') == '2'\nassert solution('4 2') == '1'\nassert solution('4 2') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '2'\nassert solution('4 4') == '3'\nassert solution('5 5') == '4'\nassert solution('1 2') == '1'\nassert solution('10 10') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 7 11\") == \"2\"\nassert solution(\"3 5\\n1 7 11\") == \"2\"\nassert solution(\"3 5\\n1 7 11\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 3 5 7') == '6'\nassert solution('3 1') == '1'\nassert solution('2 3') == '1'\nassert solution('3 5 7') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('1 7 11') == '2'\nassert solution('3') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 3], [1, 7, 11], 2) == \"2\"\nassert solution([2, 3], [1, 2], 1) == \"1\"\nassert solution([3, 2], [1, 1], 1) == \"2\"\nassert solution([3, 2], [1, 1], 3) == \"4\"\nassert solution([3, 2], [1, 1], 2) == \"2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4125,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"7 3\") == \"2\"\nassert solution(\"3 9\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('hannah') == 'No'\n\nimport unittest\nclass Test(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution('akasaka'), 'Yes')\n        self.assertEqual(solution('hannah'), 'No')",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"a\") == \"No\"\nassert solution(\"aabcabcaa\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('aaab') == 'No'\nassert solution('kakak') == 'Yes'",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\nassert solution(\"abbba\") == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''akasaka''') == 'Yes'\nassert solution('''akasaka''') == 'Yes'\nassert solution('''akasaka''') == 'Yes'\nassert solution('''akasaka''') == 'Yes'\nassert solution('''akasaka''') == 'Yes'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('akasaka') == 'Yes', \"You Failed\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('akasaka') == 'Yes', 'Test 1 fail'\nassert solution('akasaka') == 'Yes', 'Test 2 fail'\nassert solution('akasaka') == 'Yes', 'Test 3 fail'\n\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"akasaka\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4126,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('akasaka') == 'Yes'\nassert solution('abab') == 'No'\nassert solution('akasakab') == 'No'\nassert solution('akasaka') == 'Yes'\nassert solution('akasaka') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 10') == '11'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"-198 1.10\") == \"217\"\nassert solution(\"-198 1.00\") == \"196\"\nassert solution(\"198 1.00\") == \"196\"\nassert solution(\"198 1.00\") == \"196\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"45 53 1.01\") == \"45 53 2.00\"\nassert solution(\"0 0.01\") == \"0 0.01\"",
        "num_ids_2": 31,
        "num_ids_4": 47
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('198 1.10') == '217'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('198 1.10') == '217'\nassert solution('10 1.2') == '10'\n\"\"\"\n\na,b = map(int,input().split())\na = str(a)\nb = str(b)\na,b = int(a),float(b)\nprint(a*b)",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"198 1.10\") == \"217\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.2') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"198 1.10\") == \"217\"\nassert solution(\"1223 1.2\") == \"1223\"\nassert solution(\"-1 1.0\") == \"-1\"\nassert solution(\"-12 1.0\") == \"-12\"\nassert solution(\"0 1.0\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"198 1.10\") == \"217\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4127,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2', \"First\"\nassert solution('2 3') == '4', \"Second\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '3'\nassert solution('7') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''\n3\n7\n1\n2\n3\n2000000000\n763243547\n''') == '0'\nassert solution('''\n2\n3\n5\n1\n2\n3\n6\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n1\n2\n3\n4\n5\n6\n''') == '1'\nassert solution('''\n7\n0\n1\n2\n3\n4\n5\n6\n''') == '0'\nassert solution('''\n6\n0\n1\n2\n3\n4\n5\n''') == '0'\nassert solution('''\n6\n1\n2\n3\n4\n5\n''') == '2'\nassert solution('''\n7\n1\n2\n3\n4\n5\n6\n7\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\n\"\"\"\nimport math\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n7\n1\n2\n3\n2000000000\n763243547\n''') == '3'\nassert solution('''4\n8\n1\n2\n3\n4\n5\n6\n7\n8\n''') == '0'\nassert solution('''10\n100\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1'\n\nprint(solution('''4\n8\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n'''))",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n\") == \"2\"\nassert solution(\"10\\n\") == \"1\"\nassert solution(\"0\\n\") == \"0\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"2\\n\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7\\n4\") == \"1\"\nassert solution(\"6\\n5\") == \"0\"\nassert solution(\"10\\n100\") == \"0\"\nassert solution(\"4\\n100\") == \"999999999\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4128,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n7\n1\n2\n3\n2000000000\n763243547''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '1'\n\n\"\"\"\n\n\"\"\"\nT: O(mn)\nS: O(mn)\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([9, 9, 1]) == \"3\"\nassert solution([5, 4, 5]) == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n5 5 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n10 10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 10\n''') == '3'\nassert solution('''\n10 10 10\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n1 10\n''') == '0'\nassert solution('''\n5 5 5\n1 2\n2 3\n3 4\n4 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([9, 9, 1]) == \"3\"\nassert solution([5, 4, 5]) == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 5\") == \"1\"\nassert solution(\"5 4 5\") == \"1\"\n\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '1'\nassert solution('5 4 5\\n1 2\\n2 3\\n3 4\\n4 1') == '0'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4 5\") == \"1\"\nassert solution(\"9 9 1\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4129,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 9 1\n1 2\n1 3\n2 3\n1 5\n5 6\n6 1\n1 8\n9 8\n7 1\n''') == '3'\nassert solution('''\n5 4 5\n1 2\n2 3\n3 4\n4 1\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 2 4 1\\n\"\n) == \"4\"\nassert solution(\n    \"6 1 1 4 4 4\\n\"\n) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 4 1\\n') == '4'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 1 1 4 4 4\n''') == '5'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n''') == '5'\nassert solution('''\n6\n1 1 1 4 4 4\n''') == '5'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n3 2 4 1\n''') == '4'\nassert solution('''6\n1 1 1 4 4 4\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3 2 4 1\\n') == '4'\nassert solution('6\\n1 1 1 4 4 4\\n') == '5'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"4\n3 2 4 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"6\n1 1 1 4 4 4\n\"\"\") == \"5\"\n\nassert solution(\"\"\"5\n1 1 1 4 4 4\n\"\"\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"10\") == \"8\"\nassert solution(\"12\") == \"3\"\nassert solution(\"18\") == \"9\"\nassert solution(\"20\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4130,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"4\"\nassert solution('''\n3\n3 2 4 1\n''') == \"5\"\nassert solution('''\n6\n1 1 1 4 4 4\n''') == \"5\"\nassert solution('''\n10\n1 1 1 2 1 2 1 1 1 2 1\n''') == \"9\"\nassert solution('''\n10\n1 1 1 2 1 2 1 2 1 2 1\n''') == \"8\"\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"10 1\") == \"10000000\"\nassert solution(\"5 3\") == \"000001000001\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"2 1\") == \"000001000001\"\nassert solution(\"3 1\") == \"000001000002\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3\\n1 32\\n2 63\\n1 12') == '000001000002\\n000002000001\\n000001000001'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 32\") == \"000002000001\"\nassert solution(\"2 63\") == \"000001000001\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"\nassert solution(\"2 3\") == \"000001000002\\n000002000001\\n000001000001\"",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"000001000002\"\nassert solution(\"2 3\") == \"000002000001\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"000001000002\"\nassert solution(\"1 32\") == \"000002000001\"\nassert solution(\"2 63\") == \"000001000001\"\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('2 4') == '000002000001'\nassert solution('3 4') == '000001000001'\nassert solution('2 2') == '000001000001'\nassert solution('3 3') == '000001000001'",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('5 5') == '000001000001'\nassert solution('1 5') == '000001000001'\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4131,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '000001000002'\nassert solution('1 32') == '000001000002'\nassert solution('2 63') == '000002000001'\nassert solution('1 12') == '000001000001'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2'\nassert solution('3') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n1 10\n2 20\n3 30\"\"\") == \"2\"\nassert solution(\"\"\"5\n1 10 8 40\n2 20\n3 30\n4 40\n5 50\"\"\") == \"3\"\nassert solution(\"\"\"3\n5 1 3 5\n2 4\n3 3\"\"\") == \"4\"\nassert solution(\"\"\"1\n100 100\n2 100\n3 100\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4, 2, 8, 10, 40]) == 2\n\"\"\"\nimport sys\nfrom random import randint\nfrom collections import deque",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 4 1 2 6 5') == '3'\nassert solution('4 1 2 3 1 3') == '4'\nassert solution('4 1 2 3 1 2') == '4'\nassert solution('4 1 2 3 1 2 3') == '4'\nassert solution('4 1 2 3 1 2 3 2') == '4'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 10 8 40\") == \"2\"\nassert solution(\"4\\n2 10 8 40\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2 2 2\") == \"1\"\nassert solution(\"4\\n2 10 8 40\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3 9 10 12\n''') == '6'\nassert solution('''4\n2 10 8 40\n''') == '5'\n'''\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"5 1 2 3 4\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4132,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n2 10 8 40\\n') == '2'\nassert solution('5\\n2 1 4 10 20\\n') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == '0250341'\nassert solution('?(__+___+__-___):-___>__.\\n') == '0101'\n\n\"\"\"\n\nimport functools",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8 9:9') == \"0\"\nassert solution('11:1 2:2 3:3 4:4 5:5 6:6 7:7 8:8 9:9') == \"0\"\nassert solution
        "num_ids_2": 72,
        "num_ids_4": 1575
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"0111\"\nprint(solution(input))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\n\nassert solution('') == '0101'\n",
        "num_ids_2": 50,
        "num_ids_4": 110
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == \"0010\"\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == \"false\"\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == \"0250341\"\nassert solution('?(__+___+__-___):-___>__.\\n') == \"0101\"",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('?(_-_/___*__):-___>__.\\n') == \"0010\"\nassert solution('?(__-_+_/_____):-__>__,_____<__.\\n') == \"false\"\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n') == \"0250341\"\nassert solution('?(__+___+__-___):-___>__.\\n') == \"0101\"\n\n---\n## Do not change code below\n",
        "num_ids_2": 54,
        "num_ids_4": 132
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '?(_-_/___*__):-___>__.\\n'\n) == '0010'\nassert solution(\n    '?(__-_+_/_____):-__>__,_____<__.\\n'\n) == 'false'\nassert solution(\n    '?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\\n'\n) == '0250341'\nassert solution(\n    '?(__+___+__-___):-___>__.\\n'\n) == '0101'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''?(_-_/___*__):-___>__.\n''') == '0010'\n\nassert solution(\n'''?(__-_+_/_____):-__>__,_____<__.\n''') == 'false'\n\nassert solution(\n'''?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.\n''') == '0101'\n\nassert solution(\n'''?(__+___+__-___):-___>__.\n''') == '0101'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('?(_-_/___*__):-___>__.') == '0010'\nassert solution('?(__-_+_/_____):-__>__,_____<__.') == 'false'\nassert solution('?(______________________/____+_______*__-_____*______-___):-__<___,___<____,____<_____,_____<______,______<_______.') == '0250341'\nassert solution('?(___________,___<____,____<_____,_____<______,______<_______.):-__<___,___<____,____<_____,_____<______,______<_______.') == '0101'\n",
        "num_ids_2": 50,
        "num_ids_4": 151
    },
    {
        "number": 4133,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'false'\nassert solution('?(___+___+___-___):-___>__.') == '0101'\nassert solution('?(__+___+__-___):-___>__.') == '0101'\nassert solution('?(__+___+___-___):-___>__.') == '0101'\nassert solution('?(__+___+___-___):-___>__.') == '0101'\n",
        "num_ids_2": 35,
        "num_ids_4": 85
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3 11\") == '3'\nassert solution(\"3 4 2\") == '5'\nassert solution(\"3 4 1000000000000000000\") == '0'\nassert solution(\"3 4 10000000000000000001\") == '0'\nassert solution(\"3 4 10000000000000000000\") == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4''') == '3'\n\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == '5'\n\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n\n''') == '0'",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 11') == \"3\"\nassert solution('3 4 2') == \"5\"\nassert solution('3 4 1000000000000000000') == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 11\") == \"3\"\nassert solution(\"3 4 2\") == \"5\"\nassert solution(\"3 4 1000000000000000000\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"5\"\nassert solution(\"3 4 1000000000000000000\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\\n\") == \"0\"",
        "num_ids_2": 59,
        "num_ids_4": 92
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\nassert solution(sys.stdin.read()) == \"5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 3 11\n2 1 5\n7 10 0\n12 6 4\n''') == '3'\nassert solution('''3 4 2\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '5'\nassert solution('''3 4 1000000000000000000\n1 3 3 3\n0 3 3 2\n3 0 1 1\n''') == '0'\n\nprint(solution(input()))",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 11\\n2 1 5\\n7 10 0\\n12 6 4\") == \"3\"\nassert solution(\"3 4 2\\n1 3 3 3\\n0 3 3 2\\n3 0 1 1\") == \"5\"",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4134,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_1) == '3'\nassert solution(input_2) == '5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == 'z'\nassert solution('16\\n') == 'thisisexampletwo'\nassert solution('10\\n') == 'codeforces'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"codeforces\"\nassert solution(input()) == \"thisisexampletwo\"\nassert solution(input()) == \"z\"",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'codeforces'\n\nassert solution(input()) == 'thisisexampletwo'\n\nassert solution(input()) == 'z'\n\n\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_lines) == output_lines",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('plmaetwoxesisiht') == 'thisisexampletwo'\nassert solution('z') == 'z'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"A\") == \"A\"\nassert solution(\"ABC\") == \"CBA\"\nassert solution(\"AABBBCCC\") == \"AABBCC\"\nassert solution(\"itwillwork\") == \"itwork\"\n",
        "num_ids_2": 17,
        "num_ids_4": 43
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"plmaetwoxesisiht\") == \"thisisexampletwo\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"rocesfedoc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'codeforces'\n\nassert solution(input()) == 'thisisexampletwo'\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4135,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5',\n    'rocesfedoc'\n    ) == 'codeforces', 'First example'\nassert solution(\n    '16',\n    'plmaetwoxesisiht'\n    ) == 'thisisexampletwo', 'Second example'\nassert solution(\n    '1',\n    'z'\n    ) == 'z', 'Third example'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 14') == \"19\"\nassert solution('381 492') == \"873\"\n\n---\n1. simple input\n2. the first input\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 14\") == \"19\"\nassert solution(\"381 492\") == \"873\"\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'\nassert solution('3 4') == '7'\n\nstdin = '5 14'\nstdout = '19'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"./inputs/input_test_01.txt\") == \"18\"\nassert solution(\"./inputs/input_test_02.txt\") == \"16\"\nassert solution(\"./inputs/input_test_03.txt\") == \"104\"\nassert solution(\"./inputs/input_test_04.txt\") == \"7\"\nassert solution(\"./inputs/input_test_05.txt\") == \"14\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 14') == '19'\nassert solution('381 492') == '873'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4136,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 14\") == \"19\", \"Should be 19\"\nassert solution(\"381 492\") == \"873\", \"Should be 873\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5+5''') == '++++++++>'\nassert solution('''9-7''') == '++++++++>'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\n\n\"\"\"\n\n\n\"\"\"\nfrom math import inf",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2+3\") == \"++>\", 'Check your solution!'\nassert solution(\"9-7\") == \"<[<->-]<\", 'Check your solution!'\n\"\"\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2+3\n''') == '++>'\nassert solution('''\n9-7\n''') == '+++++++++>'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2+3\n9-7\n''') == '+++++++++>\n+++++++>\n<[<->-]<\n++++++++++++++++++++++++++++++++++++++++++++++++.''')",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2+3\") == \"++>\", \"Basic example\"\nassert solution(\"9-7\") == \"<[<->-]<\", \"More complex example\"\nassert solution(\"7*9\") == \"<[<-]<+>\", \"More complex example\"\nassert solution(\"(9*3)-2\") == \"<[<->]<-]>\", \"More complex example\"",
        "num_ids_2": 39,
        "num_ids_4": 89
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"<[<->-]<\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2+3\") == \"++>\"\nassert solution(\"9-7\") == \"++++++++>\"\n\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2+3') == '++>'\nassert solution('9-7') == '+++++++++>'\nassert solution('10+10') == '+++++++>'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4137,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2+3\") == \"<+>-<\"\nassert solution(\"9-7\") == \"<->-><-\"\nassert solution(\"1234\") == \"<[->->->->->->->->->>-]<\"\nassert solution(\"0\") == \"<[->->->->->->->->->->->>-]<\"\nassert solution(\"10\") == \"<->->->->->->->->->->[-]<\"\n",
        "num_ids_2": 29,
        "num_ids_4": 78
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '0'\nassert solution('20') == '5'\nassert solution('38') == '2'\nassert solution('56') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '5'\nassert solution(input()) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"11\") == \"1\"\nassert solution(\"111\") == \"1\"\nassert solution(\"1111\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3\n4\n''') == '8'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3\\n20\\n38\\n56\\n') == '2'\nassert solution('2\\n4\\n1000000000000000000\\n') == '8'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1\n3\n20\n38\n56''') == '1'\nassert solution('''4\n2132\n506\n999999999999999999\n1000000000000000000''') == '8'\nassert solution('''4\n3\n4\n4\n4''') == '4'\nassert solution('''4\n5\n5\n5\n5''') == '5'\nassert solution('''5\n5\n6\n5\n4\n3''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4138,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''575\n''') == '4'\nassert solution('''1\n''') == '1'\nassert solution('''6\n''') == '1'\nassert solution('''1000000\n''') == '8'\nassert solution('''10\n''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 29
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"20\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('10') == '4'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('575') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '0'\nassert solution('10') == '4'\nassert solution('255') == '5'\nassert solution('1') == '1'\nassert solution('999999999999999999') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4139,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('575') == '4'\nassert solution('12345') == '0'\nassert solution('1234567') == '1'\nassert solution('123456789') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''0\n0''') == '1'\nassert solution('''111\n1''') == '2'\nassert solution('''110\n1''') == '1'\nassert solution('''101\n1''') == '1'\nassert solution('''100\n0''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('000') == '1'\nassert solution('111') == '0'\nassert solution('100') == '1'\nassert solution('101') == '1'\nassert solution('011') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('000') == '1'\nassert solution('101') == '0'\nassert solution('110') == '1'\nassert solution('000') == '0'\nassert solution('111') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('000') == 1\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"11\") == \"0\"\nassert solution(\"111\") == \"1\"\nassert solution(\"1101\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('000') == 1\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('00') == '2'\nassert solution('11') == '0'\nassert solution('01') == '1'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4140,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('\\n'.join([\n    '0001',\n    '1011',\n    '1010',\n    '0101',\n    '0111',\n    '0000'\n])) == '2'\n\nassert solution('\\n'.join([\n    '0011',\n    '0101',\n    '0111',\n    '0110',\n    '0000'\n])) == '1'\n\nassert solution('\\n'.join([\n    '0111',\n    '0110',\n    '0101',\n    '0000',\n    '0111'\n])) == '1'\n\nassert solution('\\n'.join([\n    '0011',\n    '0111',\n    '0000',\n    '0101',\n    '0011'\n])) == '1'\n\nassert solution('\\n'.join([\n    '0000',\n    '0000',\n    '0000',\n    '0000',\n    '0000'\n])) == '2'",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"APPROVED\"\nassert solution(\"6\") == \"DENIED\"\nassert solution(\"7\") == \"APPROVED\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('1\\n1 1\\n') == 'DENIED'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('3\\n4 5') == 'DENIED'\nassert solution('2\\n4 5') == 'APPROVED'\nassert solution('1\\n5') == 'DENIED'\nassert solution('1\\n4') == 'DENIED'\n",
        "num_ids_2": 34,
        "num_ids_4": 64
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n6 7 9 10 31\") == \"APPROVED\"\nassert solution(\"7\\n10 10 10 20 30 30 20\") == \"APPROVED\"\nassert solution(\"2\\n3 9\") == \"DENIED\"\nassert solution(\"2\\n9\") == \"APPROVED\"\n",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('1') == 'DENIED'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"APPROVED\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"APPROVED\"\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"DENIED\"\nassert solution(\"2\") == \"APPROVED\"\nassert solution(\"3\") == \"APPROVED\"\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n6 7 9 10 31') == 'APPROVED'\nassert solution('2\\n3 4') == 'DENIED'\n\n------SOLUTION CODE------\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4141,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'APPROVED'\nassert solution('6') == 'APPROVED'\nassert solution('7') == 'DENIED'\nassert solution('8') == 'APPROVED'\nassert solution('9') == 'DENIED'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LURDD\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''RU\nRDDD\nDDRR\nUUDL''') == 'Yes'\nassert solution('''RDDRUDR\nDUDLRD\nRDDDUDL\nRDDDUUD''') == 'No'\nassert solution('''RUDDDUURD\nUURDRRD\nDUDLRDU\nRUDDULRD\nUURDDUDD\nRUDLRUDD\nRUDDULRD''') == 'Yes'\nassert solution('''RDDDDDUDDUUDDUUURDUUDDUUDDDDRUDRDUDDUURDRDDDDDUUUURDDUUUUUDUUDDDDUUDDDRUUDDUUUDDUUUURDDUUUDUDDDUUDDDRDDRDUDUDUUDDDDUUDDUUUUDDDDUUDDUDUUDDDDUUDDUUDDDUDUUUDUDDDUUUDDUUUDDDDUUUURDDUDDUUDDUUUUURDDRUUDDUUUUDDDDUUUDDUUUDDDDUUDDUDUUDDDDUUUDDUUUUDDUUUUUDDUUUDDDDUUDDUUUUDDUUUDDDDUUDDUUDDUUUDUUUDUUUDDDDUUUDDUUUUDDDDUUUDDDUUDDUUUUDDDDUUUUDDUUUUDDDDUUUUDDUUUUDDUUUDDUUUUUDDUUUUDDDDUUUDDUUUUDDUUUUUDDUUUUDDDDUUUUDDUUUUDDUUUUUDDUUUUDDDDUUUUDDUUUUDDUUUUUDDUUUUDDDDUUUUDDUUUUDDUUUUUDDUUUUDDDDUUUUDDUUUUDDUUUUDDUUUUDDDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUUUUDDUU",
        "num_ids_2": 18,
        "num_ids_4": 1608
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"LLDRUUDD\") == \"No\"\nassert solution(\"LDRUDRR\") == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUULDR\") == \"No\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\n\n'''\n\nimport re\n\ninput = input()\n\npattern_left = re.compile(\"[RLUD]\")\npattern_right = re.compile(\"[RUDL]\")",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"\nassert solution(\"RUULDR\") == \"No\"\nassert solution(\"RUDLUURDDDR\") == \"Yes\"\nassert solution(\"RUDLUURDDDRRR\") == \"Yes\"\nassert solution(\"RRRDRRURDRLURDLLRR\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"RUDLUDR\") == \"Yes\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4142,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('RUDLUDR') == 'Yes'\nassert solution('URUDDR') == 'Yes'\nassert solution('URDDLU') == 'Yes'\nassert solution('URUDRR') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"10\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"28\"\nassert solution(\"10\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"28\"\nassert solution(\"1\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"28\"\nassert solution(\"0\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"28\"\n",
        "num_ids_2": 59,
        "num_ids_4": 127
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    5, 3, 2, 4, 3, 5\n]) == \"7\"\nassert solution([\n    4, 5, 6\n]) == \"7\"\nassert solution([\n    1\n]) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5''') == '7'\nassert solution('''8\n2\n3\n5\n3\n2''') == '7'\n\n'''\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([5, 3, 2, 4, 3, 5]) == 7\nassert solution([10, 6, 5, 3, 4, 2]) == 23\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n3\\n2\\n4\\n3\\n5\") == \"7\"\nassert solution(\"10\\n3\\n2\\n4\\n3\\n5\\n8\\n5\\n7\\n6\\n6\\n6\\n7\\n8\\n7\\n6\") == \"22\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '7'\nassert solution('2') == '3'\nassert solution('4') == '3'\nassert solution('3') == '2'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '7'\nassert solution('2') == '8'\nassert solution('3') == '10'\nassert solution('4') == '6'\nassert solution('3') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n2\n4\n3\n5\n''') == '7'\nassert solution('''1\n2\n4\n3\n5\n''') == '0'\n\n\"\"\"\n\nimport sys\nimport math\n\nsys.stdin = open('input.txt')\n\nt = int(input())\n\nfor i in range(t):\n    a, b, c, d, e = map(int, input().split())\n\n    # dp[n][m] means the minimum time required for all n people to reach the goal, where they can travel in m minutes\n    dp = [[0] * (e + 1) for _ in range(c + 1)]\n\n    # for each city, for each possible time to travel, we use the maximum number of people that can go from that city to the next city\n    # if we can only travel in the maximum number of people we can\n    # we will not need to travel any more to reach the destination\n    # the time required is equal to the maximum number of people needed to reach the destination minus the time needed to travel\n    # the number of people needed to travel to the next city is equal to the current number of people needed to travel to the current city plus 1\n    for n in range(c + 1):\n        for m in range(e + 1):\n            if n == 0:\n                dp[n][m] = 0\n            elif m == 0:\n                dp[n][m] = n\n            else:\n                dp[n][m] = max(dp[n][m - 1], n + dp[n - 1][m - 1])\n\n    # print the minimum time to reach all the people\n    print(dp[c][e])\n\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([5, 3, 2, 4, 3, 5]) == \"7\"\nassert solution([5, 3, 2, 4, 3, 5]) == \"7\"\nassert solution([10, 6, 2, 4, 4, 3, 5]) == \"7\"\n",
        "num_ids_2": 40,
        "num_ids_4": 62
    },
    {
        "number": 4143,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"7\"\nassert solution(\"3\") == \"7\"\nassert solution(\"2\") == \"7\"\nassert solution(\"4\") == \"7\"\nassert solution(\"3\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2''') == '2'\nassert solution('''1''') == '2'\nassert solution('''0''') == '2'\nassert solution('''9''') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n1') == '2'\nassert solution('2\\n1') == '2'\n\n\"\"\"\nn = int(input())\nprint(2 if n == 1 else (2 if n == 2 else (3 if n == 3 else 4)) % (10**9 + 7))\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '1'\nassert solution('6') == '1'\nassert solution('10') == '1'\n'''\n\n'''\nIntuition:\n\nTo solve this problem, we can try to construct N numbers.\n\nN numbers are separated by spaces, and we will store all possible numbers in a list.\n\nThen we can try to construct a sequence that only contains these numbers.\n\nLet's try to write some code to solve this problem.\n\nLet's try to construct a sequence of N numbers.\n\nLet's try to construct a sequence of N numbers that satisfy one of the following conditions:\n - 0 \\leq A_i \\leq 9\n - There exists some i such that A_i=0 holds.\n - There exists some i such that A_i=9 holds.\n\nThen the sequence will be:\n1) If A_i=0, the sequence will be: A_0,A_1,A_2,A_3,A_4,A_5,A_6,A_7,A_8,A_9\n2) If A_i=9, the sequence will be: A_9,A_8,A_7,A_6,A_5,A_4,A_3,A_2,A_1,A_0\n\nThen the sequence must be:\n1) If A_i=0 and A_j=0, the sequence is: A_0, A_1, A_2, A_3, A_4, A_5, A_6, A_7, A_8, A_9\n2) If A_i=0 and A_j=9, the sequence is: A_0, A_1, A_2, A_3, A_4, A_5, A_6, A_7, A_8, A_9\n3) If A_i=9 and A_j=0, the sequence is: A_9, A_8, A_7, A_6, A_5, A_4, A_3, A_2, A_1, A_0\n4) If A_i=9 and A_j=9, the sequence is: A_9, A_8, A_7, A_6, A_5, A_4, A_3, A_2, A_1, A_0\n\nSo, to solve this problem, we can try to construct a sequence that only contains these numbers.\n\nWhen we try to construct a sequence of N numbers, we can get the following equation:\n\nAn = |A| * log(|A|)\n\nLet's try to get the solution of this equation.\n\nLet's try to solve this equation:\n\nFor A_i=0:\n - (An = |A| * log(|A|)) * 1/An = An * log(An)\n\nFor A_i=9:\n - (An = |A| * log(|A|)) * 1/An = An * log(An)\n\nLet's try to solve this equation:\n\nFor A_i=0:\n - (An = |A| * log(|A|)) * 1/An = An * log(An)\n\nFor A_i=9:\n - (An = |A| * log(|A|)) * 1/An = An * log(An)\n\nLet's try to solve this equation:\n\nFor A_i=0:\n - (An = |A| * log(|A|)) * 1/An = An * log(An)\n\nFor A_i=9:\n - (An = |A| * log(|A|)) * 1/An = An * log(An)\n\nNow, if we have the solutions for A_i, we can find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.\n\nLet's try to find the solutions for A_j.",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n''') == '2'\nassert solution('''\n6\n''') == '3'\nassert solution('''\n7\n''') == '3'\nassert solution('''\n8\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('10') == '4'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4144,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('5') == '5'\nassert solution('10') == '7'\nassert solution('5') == '5'\nassert solution('20') == '23'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"23\"\nassert solution(\"20\") == \"23\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20') == '23'\nassert solution('12') == '13'\nassert solution('1') == '2'\nassert solution('5') == '7'\nassert solution('15') == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '3'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '5'\nassert solution('6') == '7'\nassert solution('8') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20') == '23'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '7'\nassert solution('8') == '11'\nassert solution('1') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '5'\nassert solution('10') == '11'\nassert solution('20') == '23'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4145,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"2\") == \"\"\nassert solution(\"3\") == \"\"\nassert solution(\"10\") == \"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3 1 3 2\n''') == '1'\nassert solution('''5\n2 2 2 2 2\n''') == '0'\nassert solution('''7\n5 5 5 5 5 5 5\n''') == '2'\nassert solution('''11\n1 2 3 4 5 6 7 8 9 10\n''') == '8'\nassert solution('''16\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1'\nassert solution('8') == '1'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n3 1 3 2\") == \"1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 4\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2 3 1 3 2') == '1'\nassert solution('8\\n3 2 6 1 7 5 8') == '2'\nassert solution('10\\n1 5 9 4 9 4 8 2 3') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 3 2\") == \"1\"\nassert solution(\"4 5 1 2 3\") == \"3\"\nassert solution(\"5 6 3 2 7\") == \"3\"\nassert solution(\"6 7 3 2 8\") == \"2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '1'\nassert solution('3') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4146,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n4 2 6 1\\n\") == \"1\"\nassert solution(\"3\\n1 1 1\\n\") == \"1\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\"",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 100 90 80\\n98\\n40\\n30\\n21\\n80') == '23'\nassert solution('7 100 90 80\\n98\\n40\\n30\\n21\\n80\\n25\\n50\\n75\\n100\\n') == '15'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 100 90 80') == '23'\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"23\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"1\\n5 2\\n4 2\\n3 2\") == \"3\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\nassert solution(\"3 2 3\\n10\\n20\\n30\") == \"16\"\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 100 90 80\\n98\\n40\\n30\\n21\\n80\") == \"23\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 100 90 80') == '23'\nassert solution('5 100 90 80 80 80 80') == '10'\nassert solution('3 100 90 80 80') == '0'\nassert solution('3 100 90 80 80 80') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"5 100 90 80\") == \"23\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 100 90 80\n98\n40\n30\n21\n80\n''') == '23'\nassert solution('''\n1 5 100 90 80\n98\n40\n30\n21\n80\n''') == '23'\nassert solution('''\n1 3 5 100 90 80\n98\n40\n30\n21\n80\n''') == '23'\nassert solution('''\n1 1 10 100 90 80\n98\n40\n30\n21\n80\n''') == '10'\nassert solution('''\n1 2 3 4 5\n10\n40\n30\n21\n80\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4147,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 100 90 80\") == \"23\"\nassert solution(\"7 100 100 90 80 90 100 100 90\") == \"29\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\", \"ABCXYZ\") == \"CDEZAB\"\nprint(solution(\"2\", \"ABCXYZ\"))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'CDEZAB', f'expected {solution(\"2\")}'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2', 'ABCXYZ') == 'CDEZAB'\nassert solution('1', 'A') == 'Z'\nassert solution('1', 'A') == 'A'\nassert solution('2', 'ABCXYZ') == 'CDEZAB'\nassert solution('2', 'ABCXYZ') == 'CDEZAB'\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\nassert solution(\"4\\nABDCDEFG\") == \"BDCEG\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"CDEZAB\"\nassert solution(\"3\") == \"DEZABC\"\nassert solution(\"4\") == \"ABCDEF\"\nassert solution(\"5\") == \"GHIJKL\"\nassert solution(\"6\") == \"OPQRST\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\nABCXYZ') == 'CDEZAB'\nassert solution('1\\nABCXYZ') == 'ABCXYZ'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\nABCXYZ\") == \"CDEZAB\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"CDEZAB\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == \"11\"\nassert solution('2') == \"22\"\nassert solution('3') == \"33\"\nassert solution('4') == \"44\"\nassert solution('5') == \"55\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4148,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"CDEZAB\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n1 2''') == '1'\nassert solution('''5\n1 2 3 4 5''') == '4'\nprint(solution('''3\n1 2 3'''))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''1\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''2\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''4\n3 5 2 3 2 4\n''') == '3 4 2'\nassert solution('''5\n3 5 2 3 2 4\n''') == '3 4 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 4 3 2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n3 5 2 3 2 4\n\n''') == '3 4 2'\nassert solution('''\n1\n3 5 2 3 2 5\n\n''') == '5 3 2'\nassert solution('''\n1\n3 2 5 2 3 2 4\n\n''') == '3 2 5 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n3 5 2 3 2 4\n\"\"\") == \"3 4 2\"\nassert solution(\"\"\"\n1\n2750131 199999\n\"\"\") == \"199999\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3 4 2\"\nassert solution(\"1\") == \"199999\"\nassert solution(\"2\") == \"2 4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('3 5 2 3 2 4') == '3 4 2'\nassert solution('1') == '1'",
        "num_ids_2": 27,
        "num_ids_4": 37
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\", \"The empty string\"\nassert solution(\"2\\n5 2 3 2 4\") == \"3 4 2\", \"Should be 3 4 2\"\nassert solution(\"3\\n5 2 3 2 4\") == \"2 3 2 4\", \"Should be 2 3 2 4\"\n",
        "num_ids_2": 39,
        "num_ids_4": 67
    },
    {
        "number": 4149,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5 2 3 2 4') == '3 4 2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\nassert solution(\"7 1\") == \"1121122\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\\n2 4 5 3 1\") == \"11111\"\nassert solution(\"5 1\\n2 1 3 5 4\") == \"22111\"\nassert solution(\"5 1\\n2 4 5 3 1\") == \"1121122\"\nassert solution(\"5 1\\n1 2 3 5 4\") == \"111122\"",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('8 5') == '123456789'\n\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2\") == \"11111\"\nassert solution(\"5 1\") == \"22111\"\nassert solution(\"7 1\") == \"1121122\"\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\nassert solution('10 1\\n1 2 3 4 5 6 7 8 9 10') == '11111111111111111'\n\n\n'''\nimport math\n\nn, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\ndistances = []\n\nfor i in range(n - 1):\n    distances.append(math.ceil(math.sqrt(\n        (a[i + 1] - a[i]) ** 2 + (a[i + 1] - a[i + 2]) ** 2) / k))\n\nmax_distance = max(distances)\n\nresult = ''\nfor i in range(n - 1):\n    if distances[i] == max_distance:\n        result += '1'\n    else:\n        result += '2'\n\nprint(result)\n",
        "num_ids_2": 38,
        "num_ids_4": 87
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2') == '11111'\nassert solution('5 1') == '22111'\nassert solution('7 1') == '1121122'\nassert solution('5 1') == '21112'\nassert solution('5 1') == '21112'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\n",
        "num_ids_2": 38,
        "num_ids_4": 60
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '11111'\nassert solution('5 1') == '22111'\nassert solution('5 1') == '1121122'\nassert solution('5 1') == '2121112'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '11111'\nassert solution(input()) == '22111'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4150,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2\\n2 4 5 3 1') == '11111'\nassert solution('5 1\\n2 1 3 5 4') == '22111'\nassert solution('7 1\\n7 2 1 3 5 4 6') == '1121122'\n\nassert solution('6 1\\n2 4 5 3 1') == '1110101'\nassert solution('6 1\\n2 5 5 5 2') == '1110101'\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n1 2 1 2 3\n''') == '2'\nassert solution('''2\n100 1\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 3 3 7') == '4'\nassert solution('3\\n1 2 1 2 3') == '2'\nassert solution('2\\n100 1') == '2'\nassert solution('2\\n1 2 3') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 62
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\n1 2 1 2 3\") == \"2\"\nassert solution(\"2\\n100 1\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == '2'\nassert solution(\"2\") == '2'\nassert solution(\"1 2 1 2 3\") == '2'\nassert solution(\"100 1\") == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(inp) == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n1 2 1 2 3\n\n2\n100 1\n\n3\n1 3 3 7\n\n4\n1 3 3 7\n\n\"\"\"\n) == '2'\n\nassert solution(\n\"\"\"\n2\n10 3\n\n1\n1\n\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n1\n2\n\n1\n1\n\n\"\"\"\n) == '1'\n\nassert solution(\n\"\"\"\n2\n1 2 1 2 3\n\n2\n100 1\n\n3\n1 3 3 7\n\n4\n1 3 3 7\n\n\"\"\"\n) == '2'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4151,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 1 2 3') == '2'\nassert solution('5 10 5 15 25') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '1'\nassert solution('5') == '0'\nassert solution('4') == '0'\nassert solution('1') == '1'\nassert solution('1023') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\n4 7 1 5 4 9\\n') == \"1\"\nassert solution('5\\n1 2 3 4 5\\n') == \"2\"\nassert solution('1\\n16\\n') == \"1\"\nassert solution('4\\n1 1 1 1023\\n') == \"0\"",
        "num_ids_2": 39,
        "num_ids_4": 73
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n4 7 1 5 4 9\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n''') == '2'\nassert solution('''1\n16\n''') == '0'\nassert solution('''4\n1 1 1 1023\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"6\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n4 7 1 5 4 9\n''') == '1'\nassert solution('''5\n1 2 3 4 5\n''') == '2'\nassert solution('''1\n16\n''') == '0'\nassert solution('''4\n1 1 1 1023\n''') == '0'\nassert solution('''6\n1 2 3 4 5\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"\nassert solution(\n\"\"\"\n1\n16\n4\n1 1 1 1023\n\"\"\"\n) == \"0\"\nassert solution(\n\"\"\"\n4\n1 1 1 1023\n\"\"\"\n) == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 16
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n4 7 1 5 4 9') == '1'\nassert solution('5\\n1 2 3 4 5') == '2'\nassert solution('1\\n16') == '1'\nassert solution('4\\n1 1 1 1023') == '0'",
        "num_ids_2": 35,
        "num_ids_4": 65
    },
    {
        "number": 4152,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n3 4 1 5 4 9\n''') == '1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '2'\nassert solution('''\n1\n16\n''') == '0'\nassert solution('''\n4\n1 1 1 1023\n''') == '0'\nassert solution('''\n6\n4 7 1 5 4 9\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n0\n\"\"\"\n) == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0011') == \"4\"\nassert solution('0001') == \"2\"\nassert solution('1010') == \"2\"\nassert solution('1111') == \"1\"\nassert solution('110') == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('01') == '1'\n\n\"\"\"\n\nimport sys\nimport math\n\ninput = lambda: sys.stdin.readline().rstrip()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0011\") == \"4\"\nassert solution(\"01010\") == \"1\"\nassert solution(\"01000\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0011\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0011') == '4'\nassert solution('100100') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1111\"\n) == \"2\"\n\"\"\"\nimport unittest",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4153,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"7 4\") == \"1\"\n\"\"\"\nn, m = list(map(int, stdin.split()))\nl_1, r_1 = list(map(int, stdin.split()))\nl_2, r_2 = list(map(int, stdin.split()))\n\nl_1_id = l_1 - 1\nl_2_id = l_2 - 1\nr_1_id = r_1 - 1\nr_2_id = r_2 - 1",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\\n1 2 3 4 5\\n2 4\\n\") == \"2\"\nassert solution(\"3 5\\n1 2 3 4 5\\n2 4\\n\") == \"2\"\nassert solution(\"3 5\\n1 2 3 4 5\\n2 4\\n\") == \"0\"\n",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n5 2\n3 1\n1 2\n2 3\n1 1\n\n\"\"\") == \"2\"\n\nassert solution(\n\"\"\"\n3 2\n4 5\n1 1\n2 2\n\n\"\"\") == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n1 3') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 3\n2 4''') == '2'\nassert solution('''4 2\n1 3\n2 4\n3 4''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"4 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 4\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2') == '2'\nassert solution('4 3') == '0'\nassert solution('4 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4\n1 3\n2 4''') == '2'\n\nassert solution('''4 3\n1 3\n2 4\n2 4''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4154,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 2') == '2'\nassert solution('6 2') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n1 2 2 1\n''') == '2'\nassert solution('''8\n1 2 1 2 1 2 1 1\n''') == '4'\nassert solution('''4\n3 1 2 2 1\n''') == '0'\nassert solution('''4\n2 3 2 1 1\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('3\\n1 2 1') == '1'\nassert solution('7\\n2 2 1 1 1 1') == '1'\nassert solution('8\\n1 2 1 1 1 1 1 1') == '0'\nassert solution('15\\n3 1 3 1 3 2 1 2') == '3'\n",
        "num_ids_2": 31,
        "num_ids_4": 69
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 2 1') == '2'\nassert solution('4') == '2'\nassert solution('4 2 1 1') == '4'\n\n'''",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 2 2 1') == '2'\nassert solution('4\\n1 2 2 1') == '2'\nassert solution('4\\n1 2 2 1') == '2'\nassert solution('4\\n1 2 2 1') == '2'\nassert solution('4\\n1 2 2 1') == '2'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n1 2 2 1\\n') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '2'\n\"\"\"\nimport sys\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == '2'\n'''",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4155,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([\"2\",\"1\",\"3\",\"2\"]) == \"2\"\nassert solution([\"10\",\"2\",\"3\",\"9\"]) == \"4\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\nprint(\"All test cases passed\")\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"4 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_0) == example_output_0\nassert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5\n2 1 -3\n''') == '3'\nassert solution('''2 4\n-1 1\n''') == '4'\nassert solution('''4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 5\n2 1 -3\n''') == '3'\nassert solution('''\n2 4\n-1 1\n''') == '4'\nassert solution('''\n4 10\n2 4 1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 1 2\") == \"4\"\nassert solution(\"2 5\") == \"3\"\nassert solution(\"4 10\") == \"2\"\nassert solution(\"3 1\") == \"0\"\nassert solution(\"2 5 3 2\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n3 5\n2 1 -3\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n2 4\n-1 1\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n4 10\n2 4 1 2\n\"\"\") == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '3'\nassert solution('2 4') == '4'\nassert solution('4 10') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4156,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3 5\n    2 1 -3\n    ''') == '3'\n\nassert solution('''\n    2 4\n    -1 1\n    ''') == '4'\n\nassert solution('''\n    4 10\n    2 4 1 2\n    ''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n4 3 5\\n') == '5 3 4'\nassert solution('5\\n6 5 7 8\\n') == '8 7 5 6'\nassert solution('2\\n1000000000000000000 3000000000000000000\\n') == '3000000000000000000 1000000000000000000'\n",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''6\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8'\nassert solution(\n'''4\n42 28 84 126\n''') == '126 42 84 28'\nassert solution(\n'''2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '9 3 6 12 4 8'\nassert solution('2') == '3000000000000000000 1000000000000000000'\nassert solution('6') == '126 42 84 28'\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8 \nassert solution('''2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000 \n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == \"156851149\"\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n5 7 9 8 10\\n') == '7 9 8 10 5'\nassert solution('4\\n7 2 6 3\\n') == '3 2 6 7'\nassert solution('3\\n9 8 6 5\\n') == '6 5 9 8'\nassert solution('2\\n1 2\\n') == '2 1'\n",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '3 2 4'\nassert solution('6') == '5 2 3 4 6'\nassert solution('2') == '1 0'\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n4 8 6 3 12 9\n''') == '9 3 6 12 4 8 \nassert solution('''\n4\n42 28 84 126\n''') == '126 42 84 28 \nassert solution('''\n2\n1000000000000000000 3000000000000000000\n''') == '3000000000000000000 1000000000000000000 \n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1000000000000000\"\nassert solution(\"6\") == \"123456789\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4157,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"9 3 6 12 4 8\"\nassert solution(\"6\") == \"9 3 6 12 4 8\"\nassert solution(\"2\") == \"3000000000000000000 1000000000000000000\"",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n-1 2 5 8 11\") == \"1 8\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n-1 2 5 8 11\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 5 4 7 10\n''') == '1 7 3'\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1 8 11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n-1 2 5 8 11\n''') == '1'\nassert solution('''6\n3 5 4 7 10 12\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\nassert solution('3 5 4 7 10 12') == '3 5 7 10'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5 4 7 10 12\n''') == '3'\nassert solution('''\n5\n-1 2 5 8 11\n''') == '1'\nassert solution('''\n6\n3 5 4 7 10 12\n''') == '3'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"3\\n7 3 5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"3\") == \"7 3 5\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4158,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1 3'\nassert solution('5') == '8 7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"2 10 5\") == \"0 1\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '2'\nassert solution('1 1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 3') == '0 2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 3') == '0 2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '0 2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"3 2 3\") == \"1 2\"\nassert solution(\"10 1 1\") == \"7 1\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\n\"\"\"\n\nA, B, K = map(int, stdin.split())\nAoki = A\nTakahashi = 0\n\nfor i in range(K):\n    if Aoki >= 1:\n        Aoki -= 1\n        Takahashi += 1\n    elif Takahashi >= 1:\n        Takahashi -= 1\n        Aoki += 1\n    else:\n        continue\n\nprint(Takahashi, Aoki)\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '0 2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 3\") == \"0 2\"\nassert solution(\"10 10 10\") == \"0 10\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4159,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3') == '0 2'\nassert solution('10 3 4') == '0 1'\n\"\"\"\n\nimport sys\nfrom typing import Dict\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('102') == '3'\nassert solution('103') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"103\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"103\") == \"3\"\nassert solution(\"101\") == \"1\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"100\") == \"1\"\nassert solution(\"300\") == \"3\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\"\n\"\"\"\n\na = input()\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"100\") == \"1\"\nassert solution(\"101\") == \"2\"\nassert solution(\"102\") == \"3\"\nassert solution(\"103\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"./tests/test_solution.txt\") == \"3\"\nassert solution(\"./tests/test_solution.txt\") == \"4\"\nassert solution(\"./tests/test_solution.txt\") == \"5\"\nassert solution(\"./tests/test_solution.txt\") == \"3\"\nassert solution(\"./tests/test_solution.txt\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"105\") == \"3\"\nassert solution(\"199\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"101\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == '3'\nassert solution('103') == '3'\nassert solution('100') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4160,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('103') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '9'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n') == '1'\nassert solution('2\\n') == '9'\nassert solution('3\\n') == '18'\nassert solution('4\\n') == '27'\nassert solution('5\\n') == '36'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '9'\nassert solution('5') == '60'\nassert solution('7') == '85'\n\n----Task-----\n\nQ. Given the integer K, print the value of \\displaystyle{\\sum_{a=1}^{K}\\sum_{b=1}^{K}\\sum_{c=1}^{K} \\gcd(a,b,c)}.\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4161,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n3 4 6\n\"\"\") == \"10\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 4 6\n''') == '10'\nassert solution('''5\n1 2 3 4 5\n''') == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '10'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n3 4 6') == '10'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4 6''') == '10'\nassert solution('''3\n3 4 6''') == '10'\nassert solution('''3\n3 4 5''') == '6'\nassert solution('''3\n3 4 5''') == '6'\nassert solution('''3\n3 4 5''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4\\n6') == '10'\nassert solution('3\\n4\\n3') == '6'\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"3\n3 4 6\n\"\"\") == \"10\"\nassert solution(\"\"\"2\n1 2\n\"\"\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4162,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '10'\nassert solution('5') == '6'\nassert solution('10') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'Yes'\nassert solution('3') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10\n2 2\n4 4\n3 3\n3 2\n\"\"\") == \"Yes\", \"First\"\nassert solution(\"\"\"\n10\n1 2\n6 6\n4 4\n3 3\n3 2\n\"\"\") == \"No\", \"Second\"\nassert solution(\"\"\"\n10\n1 1\n6 6\n4 4\n3 3\n3 2\n\"\"\") == \"No\", \"Third\"\nassert solution(\"\"\"\n10\n1 2\n6 6\n4 4\n3 3\n2 3\n\"\"\") == \"Yes\", \"Fourth\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n\"\"\") == \"No\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"5 1 1 1 1 1 1 1 1 1 1 1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n1 2\n6 6\n4 4\n3 3\n3 2\n''') == 'Yes'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4163,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == \"Yes\"\nassert solution('4') == \"No\"\n\"\"\"\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '0'\nassert solution('3') == '2'\n\"\"\"\n\nr = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'\nassert solution('100') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"4\") == \"1\"\nassert solution(\"2\") == \"1\"\n\"\"\"\n\nr: int = int(input())\n\narea_of_circle_of_radius_1 = (math.pi * r ** 2)\narea_of_circle_of_radius_2 = (math.pi * (r + 1) ** 2)\n\nprint(math.ceil(area_of_circle_of_radius_2 / area_of_circle_of_radius_1))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(4) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '4'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '4'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4164,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n3 8 5 1') == 'Yes'\nassert solution('3\\n3 8 5 1') == 'No'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == 'Yes'\nassert solution('3') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 4 2 5 2\") == \"Yes\"\nassert solution(\"2\\n1 3 2\") == \"No\"\nassert solution(\"3\\n6 3 2\") == \"Yes\"\nassert solution(\"4\\n3 2 2 4\") == \"Yes\"\nassert solution(\"5\\n1 3 4 5 4\") == \"Yes\"",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3 8 5 1\n''') == 'Yes'\nassert solution('''\n4\n7 7 9 9\n''') == 'Yes'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n3 8 5 1\n''') == 'Yes'\nassert solution('''\n4\n2 5 2 3\n''') == 'Yes'\nassert solution('''\n4\n3 8 5 1\n''') == 'No'\nassert solution('''\n4\n3 8 5 2\n''') == 'No'\nassert solution('''\n2\n2 5 2 3\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n7 4 2''') == 'No'\nassert solution('''1\n3 5 4''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('4') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'No'\nassert solution('2') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == 'Yes'\nassert solution('4') == 'No'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4165,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Yes\"\n\n\"\"\"\n\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '702'\nassert solution('4 4') == '-1'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input := '3 3\\n1 7\\n3 2\\n1 7') == '702'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1\\n7 2\\n3 2\") == \"702\"\nassert solution(\"3 1\\n7 2\\n3 2\") == \"702\"\nassert solution(\"2 1\\n7 2\\n3 2\") == \"703\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"702\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\nassert solution(\"2 2\") == \"702\"\nassert solution(\"3 2\") == \"702\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n1 7\\n3 2\\n1 7') == '702'\nassert solution('5 4\\n4 8\\n1 7\\n8 8\\n7 7') == '701'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 7\n3 2\n1 7''') == '702'\nassert solution('''2 1\n3 2\n2 3''') == '-1'\nassert solution('''3 2\n1 7\n3 2\n1 7''') == '702'\nassert solution('''5 2\n1 7\n3 2\n1 7\n0 1\n1 7''') == '-1'\nassert solution('''3 1\n1 7\n3 2\n1 7''') == '702'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"1 7\") == \"702\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '702'\nassert solution('5 5') == '-1'\nassert solution('1 0') == '-1'\nassert solution('6 10') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"702\"\nassert solution(\"5 5\") == \"702\"\nassert solution(\"4 4\") == \"-1\"\nassert solution(\"3 2\") == \"702\"\nassert solution(\"1 7\") == \"702\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4166,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n1 7\\n3 2\\n1 7\\n\") == \"702\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"4 1\") == \"10\"\nassert solution(\"4 2\") == \"15\"\nassert solution(\"10 2\") == \"27\"\nassert solution(\"1000000000000 2\") == \"22162795026400000\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n''') == '9'\nprint(solution('''2 7\n'''))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"5 4\") == \"48\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '9'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '9'\nassert solution('100') == '362880'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"9\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"4 3\") == \"10\"\nassert solution(\"4 2\") == \"10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '9'\nassert solution('100 3') == '1470'\nassert solution('1000 2') == '12345'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"9\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2\\n\") == \"9\\n\"\nassert solution(\"1 1\\n\") == \"3\\n\"\nassert solution(\"1 1 1\\n\") == \"10\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4167,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"9\"\nassert solution(\"3 2\") == \"27\"\nassert solution(\"3 3\") == \"63\"\nassert solution(\"3 4\") == \"111\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1011\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-8\") == \"1010\"\nassert solution(\"-7\") == \"1011\"\nassert solution(\"-6\") == \"1010\"\nassert solution(\"-5\") == \"1011\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1011\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"1\") == \"1\"\nassert solution(\n    \"-9\") == \"1011\"\nassert solution(\n    \"-10\") == \"0\"\nassert solution(\n    \"9\") == \"11\"\nassert solution(\n    \"-1\") == \"1011\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1011\"\nprint(solution(input()))\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"-9\") == \"1011\"\nassert solution(\"-7\") == \"111\"\nassert solution(\"-6\") == \"110\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('-9') == '1011'\nassert solution('-5') == '101'\nassert solution('-10') == '1010'\nassert solution('-7') == '101010'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"111\"\nassert solution(\"-5\") == \"101\"\nassert solution(\"-123\") == \"1011\"\nassert solution(\"-125\") == \"10110\"\n\nfrom collections import deque\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('-9') == '1011'\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4168,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('-9') == '1011'\nassert solution('-10') == '1010'\nassert solution('-100') == '1010'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 5\n4 9\n2 4\n''') == '12'\nassert solution('''\n2 7\n4 8\n2 4\n''') == '20'\n\nimport collections\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5\") == \"12\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n4 9\n2 4\n''') == '12'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n4 5\n4 9\n2 4\n\"\"\"\n) == \"12\"\nassert solution(\n\"\"\"\n2 5\n4 9\n2 4\n\"\"\"\n) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"12\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"10 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"12\"\n\n\"\"\"\nfrom math import gcd",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5') == '12'\nassert solution('2 5') == '12'\nassert solution('3 5') == '13'\nassert solution('4 5') == '13'\nassert solution('4 7') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n4 9\") == \"12\"\nassert solution(\"2 5\\n2 4\") == \"5\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10') == '10'\nassert solution('2 10') == '10'\nassert solution('4 5') == '12'\nassert solution('2 5') == '12'\nassert solution('4 5') == '12'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4169,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3\", \"Wrong\"\nassert solution(\"2 3\") == \"4\", \"Wrong\"\nassert solution(\"4 5\") == \"12\", \"Wrong\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n10 4 8 7 3') == '2'\nassert solution('6\\n4 2 5 4 1') == '3'\nassert solution('4\\n1 2 3 2') == '3'\nassert solution('4\\n1 2 3 2') == '2'\nassert solution('3\\n2 2 2') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10 4 8 7 3\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\", 'incorrect'\nassert solution(\"5\") == \"2\", 'incorrect'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n10 4 8 7 3\n''') == '2', 'Should be 2'\nassert solution('''\n6\n10 4 8 7 3 9\n''') == '3', 'Should be 3'\nassert solution('''\n5\n10 4 8 7 3\n''') == '1', 'Should be 1'\nassert solution('''\n5\n1 2 3 4 5\n''') == '1', 'Should be 1'\nassert solution('''\n5\n1 2 3 4 5\n6 7 8 9 10\n''') == '2', 'Should be 2'\n''') == '1', 'Should be 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n10 4 8 7 3\") == \"2\"\nassert solution(\"2\\n5 1 3 5 2\") == \"2\"\nassert solution(\"10\\n7 3 2 4 4 5 3 4\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4 2 3') == '2'\nassert solution('5\\n10 4 8 7 3') == '2'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('10') == '2'\nassert solution('20') == '3'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4170,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"10\") == \"2\"\nassert solution(\"5 5 5 5\") == \"3\"\nassert solution(\"10 10 10 10\") == \"3\"\nassert solution(\"100 1000 100 1000 100\") == \"3\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n1 2 2 4 5\n''') == '1'\nassert solution('''\n5 3\n1 2 3 4 5\n''') == '2'\nassert solution('''\n5 3\n1 2 3 3 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '1'\nassert solution() == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 3 3 3') == '0'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 3 4 5') == '0'\nassert solution('5 3\\n1 2 3 4 5\\n6') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\n1 2 2 4 5''') == '1'\nassert solution('''5 3\n1 2 3 4 5''') == '2'\nassert solution('''5 3\n1 2 3 4 5''') == '0'\nassert solution('''5 3\n1 2 3 4 5''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\nassert solution(\"5 3\") == \"2\"\nassert solution(\"5 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '1'\nassert solution('5 3') == '2'\nassert solution('5 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1 1\\n1 2\"\n) == \"1\\n1\\n2\"\n\nassert solution(\n    \"1 3\\n2 2\"\n) == \"1\\n2\\n2\"\n\nassert solution(\n    \"3 2\\n1 2 3\"\n) == \"1\\n2\\n1\\n1\\n2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 3\\n1 2 3 4 5') == '2'\nassert solution('5 3\\n1 2 3 3 3') == '0'\nassert solution('5 3\\n1 2 3 4 5') == '1'\nassert solution('5 4\\n4 2 3 1 5') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4171,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"1\"\nassert solution(\"5 3\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''6 5\n1 2 2 4 2 3\n''') == '3'\nassert solution('''7 5\n3 3 2 1 1 1 3\n''') == '4'\nassert solution('''12 5\n1 2 2 4 2 3\n''') == '2'\nassert solution('''13 5\n1 2 2 4 2 3\n''') == '4'\nassert solution('''15 5\n1 2 2 4 2 3\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 2 2 4 2 3\n''') == '3', 'Minimal solution'\nassert solution('''\n7 5\n3 3 2 1 1 1 3\n''') == '4', 'Minimal solution'\nassert solution('''\n11 5\n8 8 8 8 8 8 8 8 8 8 8 8\n''') == '2', 'Small'\nassert solution('''\n13 5\n5 5 5 5 5 5 5 5 5 5 5 5\n''') == '1', 'Big'\nassert solution('''\n100 5\n
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '4'\nassert solution() == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\") == \"3\"\nassert solution(\"7 5\") == \"4\"\nprint(solution(*tuple(map(int, input().split()))))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5') == '3'\nassert solution('7 5') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 2 4 2 3''') == '3'\nassert solution('''1 2 2 4 2 3''') == '4'\nassert solution('''1 2 2 4 2 3''') == '5'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('7 5') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 2 4 2 3') == '3'\nassert solution('6 5') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4172,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2 2 4 2 3') == '3'\nassert solution('6 5\\n3 3 2 1 1 1 3') == '4'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 2 2\\n1 1 2\\n') == '1'\nassert solution('1\\n1 2 2\\n1 1 2\\n') == '1'\nassert solution('2\\n3 2 4\\n3 2 4\\n') == '2'\nassert solution('2\\n3 2 4\\n3 2 4\\n') == '2'\nassert solution('1\\n1 2 2\\n1 1 2\\n') == '1'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '10'\nassert solution('''\n4\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '9'\nassert solution('''\n5\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '42000000000000'\nassert solution('''\n5\n10 1 3\n7 3 2\n1 1000 1\n1000000000000 42 88\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"10\"\nassert solution(\"5\") == \"9\"\nassert solution(\"6\") == \"1000\"\nassert solution(\"7\") == \"42000000000000\"",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5 1 3\\n10 1 2\\n\") == \"9\\n10\\n1000\\n42000000000000\"\nassert solution(\"5\\n8 1 3\\n7 3 2\\n\") == \"9\\n10\\n1000\\n42000000000000\"\nassert solution(\"10\\n8 1 3\\n7 3 2\\n\") == \"9\\n10\\n1000\\n42000000000000\"\nassert solution(\"100\\n8 1 3\\n7 3 2\\n\") == \"9\\n10\\n1000\\n42000000000000\"\nassert solution(\"50\\n8 1 3\\n7 3 2\\n\") == \"9\\n10\\n1000\\n42000000000000\"\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == \"10\\n9\\n1000\\n42000000000000\"\nassert solution(s, True) == \"10 9 1000 42000000000000\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\nassert solution([10, 1, 3]) == \"10\"\nassert solution([7, 3, 2]) == \"9\"\nassert solution([1000000000000, 10000000, 1000000000000, 200000000000000]) == \"42000000000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 62
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2\n3 5\n4 2\n\n4\n2 2\n1 3\n1 4\n\n5\n4 1000000\n1 1\n2 5\n3 4\n''') == '10000'\n\nassert solution('''\n3\n1 2\n3 5\n4 2\n\n4\n2 2\n1 3\n1 4\n\n5\n4 1000000\n1 1\n2 5\n3 4\n''') == '150000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    10 1 3\n    7 3 2\n    1 1000 1\n    1000000000000 42 88\n    ''') == '10'\nassert solution('''\n    5\n    3 4 3\n    10 10 1\n    7 1 2\n    4 1 5\n    8 5 3\n    ''') == '5'\nassert solution('''\n    3\n    100 100 100\n    100 100 100\n    100 100 100\n    ''') == '100'\nassert solution('''\n    5\n    3 4 3\n    10 10 1\n    7 1 2\n    4 1 5\n    8 5 3\n    ''') == '100'\nassert solution('''\n    5\n    3 4 3\n    10 10 1\n    7 1 2\n    4 1 5\n    8 5 3\n    ''') == '100'\n''') == '100'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4173,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 3\\n2 1 5\\n2 4 5\\n3 3 1\\n4 2 4') == '10\\n9\\n1000\\n42\\n88'\n\nassert solution('5\\n1 1 2\\n2 1 5\\n2 4 5\\n3 3 1\\n4 2 4') == '10\\n9\\n1000\\n42\\n88'\n\nassert solution('4\\n10 1 3\\n7 3 2\\n1 1000 1\\n1000000000000 42 88') == '10\\n9\\n1000\\n42000000000000'",
        "num_ids_2": 94,
        "num_ids_4": 138
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3,6]) == \"2\"\nassert solution([4,4,3]) == \"3\"\nassert solution([5,5,4]) == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 1') == '1'\nassert solution('2 3') == '2'\nassert solution('3 4 5') == '2'\nassert solution('10 20 30 40 50') == '5'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 6') == '2'\nassert solution('3 5') == '1'\nassert solution('3 7') == '1'\nassert solution('100 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '2'\nassert solution('100 4') == '1'\nassert solution('7 5') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('4 6') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 5\") == \"1\"\nassert solution(\"10 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6\") == \"2\"\nassert solution(\"10 5\") == \"3\"\nassert solution(\"10 5\") == \"3\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 6\\n') == '2'\nassert solution('20 100\\n') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4174,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 5\n3 4 5 6 7 8 9 10\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'No'\nassert solution('3') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"6\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"\nassert solution(\"7\\nhoge\\nenglish\\negg\\nfoo\\nbar\\nfoobar\\nfoofoo\") == \"Yes\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\\n\") == \"Yes\"\n\nassert solution(\"2\\nhoge\\nhaha\\n\") == \"No\"\n\nassert solution(\"2\\nhoge\\nenglish\\nhoge\\n\") == \"Yes\"\n\"\"\"\n\nn = int(input())\nprint(\"Yes\" if all(\n    [\n        len(set(input().split())) == len(input().split()),\n        all(\n            [\n                word[0] == word[-1]\n                for word in input().split()\n            ]\n        ),\n    ]\n) else \"No\")\n",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nhoge\nenglish\nhoge\nenigma''') == 'No'\nassert solution('''5\nhoge\nenglish\nhoge\nenigma\ndormitory''') == 'Yes'\nassert solution('''6\nhoge\nenglish\nhoge\nenigma\ndormitory\nenigma\nenigma''') == 'No'\nassert solution('''10\nhoge\nenglish\nhoge\nenigma\ndormitory\nenigma\nenigma\nenigma\nenigma\nenigma''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\nhoge\\nenglish\\nhoge\\nenigma\") == \"No\"\nassert solution(\"5\\nhoge\\nenglish\\nhoge\\nef\") == \"Yes\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '4\\nhoge\\neenglish\\nhoge\\ne\\nglue\\n\\n'\n    '5\\nfo\\ne\\nfo\\ne\\ngu\\n\\n'\n    '6\\nfoo\\ne\\nfoo\\ne\\nfie\\n\\n'\n    '7\\nfaa\\ne\\nfaa\\ne\\nfie\\n\\n'\n    '8\\nfoo\\n\\n'\n    '9\\nfoo\\n'\n    '10\\nfoo\\n'\n    ) == 'Yes'\nassert solution(\n    '4\\nhoge\\neenglish\\nhoge\\ne\\nglue\\n\\n'\n    '5\\nfo\\ne\\nfo\\ne\\ngu\\n\\n'\n    '6\\nfoo\\ne\\nfoo\\ne\\nfie\\n\\n'\n    '7\\nfaa\\ne\\nfaa\\ne\\nfie\\n\\n'\n    '8\\nfoo\\n\\n'\n    '9\\nfoo\\n'\n    '10\\nfoo\\n'\n    ) == 'No'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4175,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 4') == '6'\nassert solution('2 3') == '4'\nassert solution('5 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2\n1''') == '2'\nassert solution('''1 2\n2''') == '3'\nassert solution('''1 2\n3''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '6'\nassert solution('1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"1 1\") == \"4\"\nassert solution(\"10 10\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n''') == '6'\nassert solution('''\n4 4\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"7 3\") == \"12\"\nassert solution(\"1 1\") == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"3 4\") == \"6\"\nassert solution(\"2 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '6'\nassert solution('2\\n3') == '6'\nassert solution('2\\n5') == '10'\nassert solution('3\\n3') == '6'\nassert solution('3\\n5') == '8'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 2\n''') == '6'\nassert solution('''\n2 2\n''') == '3'\nassert solution('''\n5 2\n''') == '3'\nassert solution('''\n3 3\n''') == '2'\nassert solution('''\n4 4\n''') == '2'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4176,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0'\nassert solution('1 1') == '0'\nassert solution('2 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('tea') == 'tea'\nassert solution('fun') == 'unf'\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'xxxxxxx'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"abcd\") == \"xabcd\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"xxxxxxx\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('sardine') == 'xxxxxxx'\nassert solution('kitten') == 'xxxxxxx'\nassert solution('man') == 'xxxxxxx'\nassert solution('bat') == 'xxxxxxx'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4177,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"sardine\") == \"xxxxxxx\"\nassert solution(\"pythons\") == \"python\"\n\n### OR ###",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\n1 2 1 1 3\\n\") == \"Yes\"\nassert solution(\"10\\n1 2 1 1 1 1 3 1\\n\") == \"No\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([5, 3, 6, 2, 9]) == 'Yes'\nassert solution([10, 1, 5, 6, 4, 3, 2, 8]) == 'No'\n\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"1\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 2 1 1 3') == 'Yes'\nassert solution('2\\n1 2 3') == 'No'\nassert solution('5\\n1 2 1 1 3\\n5 2 4 3') == 'Yes'\nassert solution('5\\n1 2 1 1 3\\n5 2 4 3\\n4 5 4\\n1 1 1\\n5 2 4 3') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 94
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"5\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_string) == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"5\") == \"Yes\"\nassert solution(\"2\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'Yes'\nassert solution('4') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == 'Yes'\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4178,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n1 2 1 1 3\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n3\n1 1 2\n\"\"\") == \"No\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '0'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 -10') == '1'\nassert solution('2 3 -10') == '1'\nassert solution('1 2 3') == '0'\nassert solution('1 2 2') == '0'\nassert solution('1 2 2') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n') == '1'\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 -10\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"5 5 -7\") == \"3\"\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3 -10') == '1'\nassert solution('2 2 -10') == '2'\nassert solution('3 2 1') == '0'\n\"\"\"\n\nimport sys\nfrom collections import Counter\nfrom functools import reduce\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 -10') == '1', \"Wrong!\"\nassert solution('2 3 1') == '0', \"Wrong!\"\nassert solution('2 3 1') == '0', \"Wrong!\"\nassert solution('2 3 1') == '0', \"Wrong!\"\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 -10') == '1'\nassert solution('2 3 -10') == '0'\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 -10\\n1 2 3\\n3 2 1\\n1 2 2\\n\") == \"1\"\nassert solution(\"3 4 1 2\\n3 2 1 2\\n3 2 1 2\\n\") == \"2\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\n''') == '1'\nassert solution('''2 1 -10\n1 2 3\n3 2 1\n1 2 2\n\n''') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4179,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 3 -10\n1 2 3\n3 2 1\n1 2 2\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('101') == '10'\nassert solution('2000') == '10'\nassert solution('1010') == '1'\nassert solution('10101') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13') == '0'\nassert solution('12') == '1'\nassert solution('1') == '1'\n\n========================================\n\nclass Solution:\n    def solution(self, N: str) -> str:\n        N = int(N)\n        if N == 0:\n            return \"0\"\n        if N == 1:\n            return \"1\"\n        if N == 2:\n            return \"10\"\n        if N == 3:\n            return \"100\"\n        if N == 4:\n            return \"1000\"\n        if N == 5:\n            return \"10000\"\n        if N == 6:\n            return \"100000\"\n        if N == 7:\n            return \"1000000\"\n        if N == 8:\n            return \"10000000\"\n        if N == 9:\n            return \"100000000\"\n        if N == 10:\n            return \"10000000000\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1900\") == \"100\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4') == '4'\nassert solution('1') == '0'\nassert solution('200') == '200'\n\n-------Version 2-------\n'''",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1000\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('5') == '2'\nassert solution('100') == '100'\nassert solution('14') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"19\") == \"100\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '100'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1001\\n\") == \"100\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4180,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"9\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0', 'error in solution'\nassert solution('2') == '9', 'error in solution'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '9'\nassert solution('3') == '18'\n\n\"\"\"\n\n\"\"\"\nThe function is expected to return an integer.\nThe function accepts following parameters:\n1. INTEGER n - number of towns.\n2. INTEGER_ARRAY a - an array of integers representing the number of monsters at each town.\n3. INTEGER_ARRAY b - an array of integers representing the number of monsters each hero can defeat per town.\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\n3 5 2\n4 5\"\"\") == \"9\"\nassert solution(\"\"\"3\n1 2 1\n1 3\n1 4\"\"\") == \"4\"\nassert solution(\"\"\"5\n1 2 3\n2 4 4\n4 5 2\n3 5\n6 8\"\"\") == \"15\"\nassert solution(\"\"\"5\n1 1 1\n1 1\n1 1\"\"\") == \"2\"\nassert solution(\"\"\"1\n2 2\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"2\\n3 5 2\\n4 5\"\n    ) == \"9\"\nassert solution(\n    \"1\\n1 1\"\n    ) == \"1\"\nassert solution(\n    \"3\\n10 5 5\\n7 5 4\\n5 5 8\"\n    ) == \"17\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n3 5 2\n4 5''') == '9'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 3, 5, 2]) == \"9\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"2\n3 5 2\n4 5\"\"\") == \"9\"\nassert solution(\"\"\"2\n3 5 2\n4 5\"\"\") == \"9\"\nassert solution(\"\"\"2\n5 5 2\n3 4\"\"\") == \"9\"\nassert solution(\"\"\"2\n5 5 2\n3 4\"\"\") == \"9\"\nassert solution(\"\"\"2\n5 5 2\n3 4\"\"\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4181,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"14\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3 2 10 20\n8 15 13\"\"\") == \"War\"\nassert solution(\"\"\"2 6 -7\n1 3 -2\"\"\") == \"No War\"\nassert solution(\"\"\"5 3 1\n1 2 3 4 5\"\"\") == \"War\"",
        "num_ids_2": 18,
        "num_ids_4": 26
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 2 10 30') == 'War'\nassert solution('3 2 10 40') == 'War'\nassert solution('3 2 10 50') == 'War'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('3 1 5 3') == 'War'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"2 2 6 6\") == \"No War\"\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"2 2 1 1\") == \"War\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"No War\"\nassert solution(\"10 2 10 20\") == \"War\"\nassert solution(\"8 15 13\") == \"War\"\nassert solution(\"16 22\") == \"No War\"\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 2 10 20\n8 15 13\n16 22\n\"\"\") == \"War\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2 10 20') == 'No War'\nassert solution('6 6 10 20') == 'War'\nassert solution('10 10 10 10') == 'War'\nassert solution('15 15 15 15') == 'War'\nassert solution('16 16 16 16') == 'No War'\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4182,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2 10 20\") == \"War\"\nassert solution(\"3 2 10 20\") == \"War\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n3\") == \"6\"\nassert solution(\"1\\n1\") == \"1\"\nassert solution(\"3\\n5\") == \"18\"\nassert solution(\"5\\n1000000000\") == \"1000000000000\"\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n3\\n') == '6'\nassert solution('4\\n1\\n') == '1'\nassert solution('5\\n2\\n') == '8'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n1\\n3') == '6'\nassert solution('4\\n10\\n60\\n300') == '2682'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n4\\n3\\n') == '6'\nassert solution('2\\n4\\n5\\n') == '5'\nassert solution('3\\n2\\n3\\n') == '8'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3\\n4') == '6'\nassert solution('2\\n6\\n5') == '8'\nassert solution('3\\n8\\n3') == '10'\nassert solution('6\\n12\\n3') == '10'\nassert solution('100\\n1000\\n2000') == '2440'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"18\"\nassert solution(\"4\") == \"90\"\nassert solution(\"5\") == \"360\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\nassert solution('2 3') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4183,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"6\"\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin):\n        pass\n    \n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '0'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '0'\nassert solution('2 3 1 2 4 3') == '0'\nassert solution('8') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n1 2 3\") == \"0\"\nassert solution(\"4\\n4 3 1\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\n1 2\") == \"1\"\nassert solution(\"4\\n1 1 2 3\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '0'\nassert solution('''\n3\n4 6 5\n''') == '2'\nassert solution('''\n10\n2 4 5 6 8 9 3 7 11 12 13 14 15 16 17 18 19''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2 3\n''') == '0'\nassert solution('''\n3\n1 2 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '0'\nassert solution('2') == '0'\nassert solution('1') == '1'\nassert solution('10') == '9'\nassert solution('2 3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '0'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2 3\\n\") == \"0\"\nassert solution(\"3\\n1 2 3\\n\") == \"0\"\nassert solution(\"3\\n1 4 3\\n\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 1, 2, 3]) == \"0\"\nassert solution([1, 2, 3, 4]) == \"1\"\nassert solution([1, 2, 3, 4, 5]) == \"1\"\nassert solution([1, 2, 3, 4, 5, 6]) == \"1\"\nassert solution([2, 3, 4, 5, 6, 7]) == \"1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4184,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n4\n1 2 3 4\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\n\nassert solution('''4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\n\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"2\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"4 4\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\nassert solution('''\n4 3\n1 2 3\n4 5 6\n7 8 9\n10 11 12\n''') == '2'\nassert solution('''\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '0'\nassert solution('4 4') == '0'\nassert solution('3 5') == '0'\nassert solution('3 10') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n3 1 4\\n4 5 6') == '6'\nassert solution('3 3\\n1 2 3\\n4 5 6') == '0'\nassert solution('4 3\\n1 2 3\\n4 5 6') == '2'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n3 2 1\n1 2 3\n4 5 6\n''') == '6'\n\nassert solution('''3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '6'\nassert solution('4 3') == '2'\nassert solution('5 5') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 3\n3 2 1\n1 2 3\n4 5 6\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4 3\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n1 6 3 4\n5 10 7 8\n9 2 11 12\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4185,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 4\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n5 10 2 3 14 5') == '5'\nassert solution('2\\n1 100') == '99'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '5'\nassert solution('2') == '99'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"5\"\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"5\"\nassert solution(\"2\") == \"99\"\nassert solution(\"3\") == \"2\"\n\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1 100\n''') == '99', f\"expected {'99'}, got {solution('''2\n1 100\n''')}.\"\n\nassert solution('''6\n5 10 2 3 14 5\n''') == '5', f\"expected {'5'}, got {solution('''6\n5 10 2 3 14 5\n''')}.\"\n\nassert solution('''8\n1 1 1 1 1 1 1 1\n''') == '8', f\"expected {'8'}, got {solution('''8\n1 1 1 1 1 1 1 1\n''')}.\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(6) == '5'\nassert solution(2) == '99'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\nassert solution([5, 10, 2, 3, 14, 5]) == \"5\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\nassert solution('4\\n2 5 2 6\\n') == '3'\nprint(f'Solution: {solution(__import__(\"sys\").stdin.read())}')\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n5 10 2 3 14 5\\n') == '5'\nassert solution('2\\n1 100\\n') == '99'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4186,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '99'\n\n\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_1) == \"2\"\nassert solution(example_input_2) == \"3\"\nassert solution(example_input_3) == \"0\"\nassert solution(example_input_4) == \"0\"\nprint(f\"Hurray, solved {len(__file__.split('/')) - 1} of {len(__file__.split('/'))} exercises!\")\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 0 1 0 1\\n\") == \"2\"\nassert solution(\"6\\n0 1 0 1 1 0 1\\n\") == \"3\"\nassert solution(\"7\\n1 0 1 1 1 0 1\\n\") == \"0\"\nassert solution(\"3\\n0 0 0\\n\") == \"0\"\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 0 1 0 1\n''') == '2'\n\nassert solution('''6\n0 1 0 1 1 0\n''') == '3'\n\nassert solution('''7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution('''3\n0 0 0\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == \"2\"\nassert solution('''\n6\n0 1 0 1 1 0\n''') == \"3\"\nassert solution('''\n7\n1 0 1 1 1 0 1\n''') == \"3\"\nassert solution('''\n3\n0 0 0\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 0 1 0 1\n''') == '2'\n\nassert solution('''6\n0 1 0 1 1 0\n''') == '2'\n\nassert solution('''7\n1 0 1 1 1 0 1\n''') == '3'\n\nassert solution('''3\n0 0 0\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 0 1 0 1') == '2'\nassert solution('6\\n0 1 0 1 1 0') == '3'\nassert solution('7\\n1 0 1 1 1 0 1') == '3'\nassert solution('3\\n0 0 0') == '0'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"3\"\nassert solution(\"3\") == \"0\"\nassert solution(\"\") == \"0\"\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('7') == '3'\nassert solution('3') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4187,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 0 1 0 1\n''') == '2'\nassert solution('''\n6\n0 1 0 1 1 0\n''') == '2'\nassert solution('''\n7\n1 0 1 1 1 0 1\n''') == '3'\nassert solution('''\n3\n0 0 0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('5') == '1'\nassert solution('0') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"15\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution() == \"0\"\nassert solution() == \"0\"\nassert solution() == \"0\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '3'\nassert solution('7') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '0'\nassert solution('6') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '0'\nprint(solution())",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4188,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('7') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\nparmelhard\\nemmentalhard\\nceddarhard\\ngoudahard\\n') == \"4\"\n\"\"\"\nfrom collections import Counter",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 3, \"WRONG\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"9\\nbrie soft\\ncamembert soft\\nfeta soft\\ngoat soft\\nmuenster soft\\nasiago hard\\ncheddar hard\\ngouda hard\\nsweiss hard\") == \"3\"\n\nassert solution(\"6\\nparmesan hard\\nemmental hard\\nedam hard\\ncolby hard\\ngruyere hard\\nasiago hard\") == \"4\"\n\n\n\"\"\"\nfrom typing import List\n\nimport pytest\n",
        "num_ids_2": 95,
        "num_ids_4": 95
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['9', 'brie soft', 'camembert soft', 'feta soft', 'goat soft','muenster soft', 'asiago hard', 'cheddar hard', 'gouda hard','swiss hard']) == '3'\nassert solution(['6', 'parmesan hard', 'emmental hard', 'edam hard', 'colby hard', 'gruyere hard', 'asiago hard']) == '4'\nprint(solution(input().split('\\n')))\n\"\"\"",
        "num_ids_2": 102,
        "num_ids_4": 102
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('\\n'.join([\"9\", \"brie soft\", \"camembert soft\", \"feta soft\", \"goat soft\", \"muenster soft\", \"asiago hard\", \"cheddar hard\", \"gouda hard\", \"swiss hard\"])) == \"3\"\nassert solution('\\n'.join([\"6\", \"parmesan hard\", \"emmental hard\", \"edam hard\", \"colby hard\", \"gruyere hard\", \"asiago hard\"])) == \"4\"\n",
        "num_ids_2": 114,
        "num_ids_4": 114
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'Not to be confused with chessboard'\nassert solution('1') == 'Not to be confused with chessboard'\nassert solution('2') == 'Not to be confused with chessboard'\nassert solution('3') == 'Not to be confused with chessboard'\nassert solution('4') == 'Not to be confused with chessboard'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('3') == '3'\nassert solution('1') == '1'\nassert solution('0') == '0'\n\n\n[Logic]\n1. Take in N number of cheeses\n2. Iterate through the list and check if the line of the cheeses is legal and remove line if true\n3. Return the answer\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9') == '3'\nassert solution('6') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4189,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9\") == \"3\"\nassert solution(\"6\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1 0 0 2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == stdout_",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2'\nassert solution(\n    '7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1\\n') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n1 2\n3 4\n3 1\n4 4\n''') == '2 0 0 2 1 0 1'\n\nassert solution('''\n3\n0 1 2\n3 2 1\n''') == '1 0 0 2 1'\n\nassert solution('''\n2\n0 1 2\n2 3 1\n''') == '3 0 0 1 2 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n6\n2 3 2 5 4 3\n1 2 3 4 5 1\n\n'''\n) == '0 0 0 1 0 2 4'\nassert solution(\n'''\n7\n3 2 1 5 4 3 6\n2 4 3 5 6 5 1\n\n'''\n) == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"0 1 2 1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '4\\n0 1 2 1\\n3 2 1 1\\n') == '1 0 0 2'\nassert solution(\n    '7\\n2 5 1 5 3 4 3\\n2 4 3 5 6 5 1') == '0 0 0 1 0 2 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1 2 1\") == \"1 0 0 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '0 1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4190,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n2\n1\n\n''') == \"1 0 0 1 0 2 4\"\nassert solution('''\n2\n2\n1\n1\n\n''') == \"0 0 0 1 1 2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0\\n1\\n1\\n0\\n\") == \"0\"\nassert solution(\"1\\n1\\n0\\n1\\n\") == \"1\"\nassert solution(\"1\\n1\\n1\\n1\\n\") == \"1\"\nassert solution(\"0\\n0\\n0\\n0\\n\") == \"1\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0\\n1\\n1\\n0') == '0'\nassert solution('1\\n1\\n1\\n0') == '1'\nassert solution('0\\n0\\n1\\n1') == '0'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n0\n1\n1\n0\n\"\"\") == \"0\", \"Should be 0\"\nassert solution(\"\"\"\n1\n1\n1\n0\n\"\"\") == \"1\", \"Should be 1\"\nassert solution(\"\"\"\n0\n0\n0\n1\n\"\"\") == \"0\", \"Should be 0\"\nassert solution(\"\"\"\n1\n0\n1\n1\n\"\"\") == \"1\", \"Should be 1\"\n\n\n[Image]\n\nhttps://github.com/bradleypall/coding_challenge/blob/master/Python/solution.py\nhttps://github.com/bradleypall/coding_challenge/tree/master/Python/solution.py\n\"\"\"\n\n\n[Image]\n\n[Image]\n\n\"\"\"\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]\n\n[Image]",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0') == '0', \"Wrong answer\"\nassert solution('1') == '0', \"Wrong answer\"\nassert solution('1') == '1', \"Wrong answer\"\nassert solution('0') == '1', \"Wrong answer\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0\n1\n1\n0\n''') == \"0\"\nassert solution('''\n1\n1\n1\n0\n''') == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"1\\n1\\n\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4191,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('0') == '0'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 1000 80\") == \"Yes\"\nassert solution(\"10000 15 80\") == \"No\"\nassert solution(\"10000 1000 80\") == \"No\"\nassert solution(\"1 0 0\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 1 2\") == \"No\"\nassert solution(\"4 5 7\") == \"Yes\"\nassert solution(\"10 100 10\") == \"Yes\"\nassert solution(\"15 50 10\") == \"Yes\"\n\n=========================================================\n\n\u0414\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e D \u0442\u0430\u043a, \u0449\u043e \u0432 \u043e\u0434\u043d\u043e\u043c\u0443 \u0434\u0435\u043d\u044e \u0456\u0437 \u0431\u0456\u043b\u044c\u0448\u0435 \u0434\u0432\u043e\u0445 \u0441\u0435\u043a\u0443\u043d\u0434 \u0431\u0443\u0434\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u0437\u0430 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0438\u0439 \u0447\u0430\u0441.\n\u0426\u0435 \u043d\u0435 \u0447\u0430\u0441, \u0430 \u0434\u0435\u043d\u044c, \u043a\u043e\u043b\u0438 \u0431\u0443\u0434\u0435 \u043d\u0430\u0432\u0447\u0430\u0442\u0438 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0456\u0439\u043d\u0438\u0439 \u0441\u0430\u0434 \u0437\u0430 \u0441\u0435\u0431\u0435, \u0442\u0430\u043a \u0449\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0456\u0439\u043d\u0438\u0439 \u0441\u0430\u0434 \u0437\u0430 \u0441\u0435\u0431\u0435 \u0431\u0443\u0434\u0435 \u0456\u0437\u0431\u0430\u0447\u0435\u043d\u0438\u0439 \u0432\u0456\u0434 \u0441\u043f\u043e\u0432\u0456\u0449\u0435\u043d\u043d\u044f.\n\u0426\u0435 \u043d\u0435 \u043e\u043f\u0430\u0434, \u0430 \u0434\u0435\u043d\u044c, \u043a\u043e\u043b\u0438 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u0439\u0442\u0438 \u043e\u0434\u043d\u0438\u043c \u0447\u0430\u0441\u043e\u043c \u043f\u043e \u0432\u0456\u0434\u043f\u043e\u0447\u0430\u0442\u043a\u0443. \u0412 \u043e\u0434\u0438\u043d\u0456\u0447\u043d\u043e\u043c\u0443 \u0434\u0435\u043d\u044c\u0456 \u0456\u0437 \u0446\u044c\u043e\u0433\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0456\u0439\u043d\u043e\u0433\u043e \u0441\u0430\u0434\u0443 \u0431\u0443\u0434\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043d\u0435 \u0431\u0456\u043b\u044c\u0448\u0435 \u0447\u0438\u0441\u043b\u0430 \u0434\u043d\u0456\u0432.\n\n\u0422\u0430\u043a \u043a\u0430\u043a \u0434\u0435\u043d\u044c \u043d\u0435 \u043c\u0435\u043d\u0448\u0435 2, \u043d\u0430\u043f\u0440\u0438\u043a\u043b\u0430\u0434, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043f\u0440\u0438\u0439\u0442\u0438 \u0437\u0430 \u0434\u0435\u043d\u044c \u043f\u0435\u0440\u0448\u0438\u043c. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043e\u0431\u0447\u0438\u0441\u043b\u0438\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0434\u043d\u0456\u0432, \u0449\u043e \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u044e\u0442\u044c \u0434\u0430\u043d\u043e\u043c\u0443 \u0443\u043c\u043e\u0432\u0456, \u0456 \u0432\u0438\u0432\u0435\u0441\u0442\u0438 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0435 \u0447\u0438\u0441\u043b\u043e.\n\n-----Constraints-----\n - 1 \\leq D \\leq 10000\n - 1 \\leq T \\leq 10000\n - 1 \\leq S \\leq 10000\n - All values in input are integers.\n\n-----Input-----\nInput is given from Standard Input in the following format:\nD T S\n\n-----Output-----\nIf Takahashi will reach the place in time, print Yes; otherwise, print No.\n\n-----Sample Input-----\n1000 15 80\n\n-----Sample Output-----\n14\n\n\u041f\u0440\u0438 \u0442\u0435\u0441\u0442\u0430\u0445 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0446\u0456\u0454\u0457 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0438 \u0432\u0438\u043a\u043e\u0440\u0438\u0441\u0442\u0430\u043d\u043d\u044f \u0446\u0456\u0454\u0457 \u0432\u043b\u0430\u0441\u0442\u0438\u0432\u043e\u0441\u0442\u0456 \u043d\u0435 \u043f\u0440\u043e\u0434\u043e\u0432\u0436\u0443\u0432\u0430\u043b\u043e\u0441\u044f. \u041a\u0440\u0456\u043c \u043f\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044f, \u043c\u0435\u043d\u0456 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u0432\u0438\u0437\u043d\u0430\u0447\u0438\u0442\u0438 \u0447\u0438\u0441\u043b\u043e, \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0434\u043d\u0456\u0432, \u0449\u043e \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u0437\u0430 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0438\u0439 \u0447\u0430\u0441.\n\n\u0412 \u043a\u043e\u0436\u043d\u043e\u043c\u0443 \u0434\u0435\u043d\u044e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u043e\u0431\u0440\u043e\u0431\u043b\u044f\u0454 \u0432\u0438\u0433\u043b\u044f\u0434 \u0431\u0456\u043b\u044c\u0448\u0435 \u0434\u0432\u043e\u0445 \u0441\u0435\u043a\u0443\u043d\u0434 \u0431\u0443\u0434\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u0437\u0430 \u043d\u0430\u0441\u0442\u0443\u043f\u043d\u0438\u0439 \u0447\u0430\u0441. \u0422\u0430\u043a \u0449\u043e \u043d\u0435 \u0447\u0430\u0441, \u0430 \u0434\u0435\u043d\u044c, \u043a\u043e\u043b\u0438 \u0431\u0443\u0434\u0435 \u043d\u0430\u0432\u0447\u0430\u0442\u0438 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0456\u0439\u043d\u0438\u0439 \u0441\u0430\u0434 \u0437\u0430 \u0441\u0435\u0431\u0435, \u0442\u0430\u043a \u0449\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0456\u0439\u043d\u0438\u0439 \u0441\u0430\u0434 \u0437\u0430 \u0441\u0435\u0431\u0435 \u0431\u0443\u0434\u0435 \u0456\u0437\u0431\u0430\u0447\u0435\u043d\u0438\u0439 \u0432\u0456\u0434 \u0441\u043f\u043e\u0432\u0456\u0449\u0435\u043d\u043d\u044f.\n\n\u0426\u0435 \u043d\u0435 \u043e\u043f\u0430\u0434, \u0430 \u0434\u0435\u043d\u044c, \u043a\u043e\u043b\u0438 \u0431\u0443\u0434\u0435 \u043f\u0440\u043e\u0439\u0442\u0438 \u043e\u0434\u043d\u0438\u043c \u0447\u0430\u0441\u043e\u043c \u043f\u043e \u0432\u0456\u0434\u043f\u043e\u0447\u0430\u0442\u043a\u0443. \u0412 \u043e\u0434\u0438\u043d\u0456\u0447\u043d\u043e\u043c\u0443 \u0434\u0435\u043d\u044c\u0456 \u0456\u0437 \u0446\u044c\u043e\u0433\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0456\u0439\u043d\u043e\u0433\u043e \u0441\u0430\u0434\u0443 \u0431\u0443\u0434\u0435 \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438 \u043d\u0435 \u0431\u0456\u043b\u044c\u0448\u0435 \u0447\u0438\u0441\u043b\u0430 \u0434\u043d\u0456\u0432.\n\n\u0422\u0430\u043a \u043a\u0430\u043a \u0434\u0435\u043d\u044c \u043d\u0435 \u043c\u0435\u043d\u0448\u0435 2, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043f\u0440\u0438\u0439\u0442\u0438 \u0437\u0430 \u0434\u0435\u043d\u044c \u043f\u0435\u0440\u0448\u0438\u043c. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u0430 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u043e\u0431\u0447\u0438\u0441\u043b\u0438\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0434\u043d\u0456\u0432, \u0449\u043e \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u0430\u044e\u0442\u044c \u0434\u0430\u043d\u043e\u043c\u0443 \u0443\u043c\u043e\u0432\u0456, \u0456 \u0432\u0438\u0432\u0435\u0441\u0442\u0438 \u0432\u0456\u0434\u043f\u043e\u0432\u0456\u0434\u043d\u0435 \u0447\u0438\u0441\u043b\u043e.\n\n\u0420\u0435\u0430\u043b\u0456\u0437\u0443\u0439\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u0443, \u044f\u043a\u0430 \u0431\u0443\u0434\u0435 \u043e\u0431\u0447\u0438\u0441\u043b\u044f\u0442\u0438 \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0434\u043d\u0456\u0432, \u043a\u0456\u043b\u044c\u043a\u0456\u0441\u0442\u044c \u0434\u043d\u0456\u0432 \u043f\u043e\u0432\u0438\u043d\u043d\u0430 \u0431\u0443\u0442\u0438 \u043d\u0435 \u043c\u0435\u043d\u0448\u0435 \u043f\u0430\u0440\u043d\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 15 80') == 'Yes', 'Wrong'\nassert solution('1 2 3') == 'No', 'Wrong'\nassert solution('1 2 3 4') == 'Yes', 'Wrong'\nassert solution('1 2 3 4 5') == 'Yes', 'Wrong'\nassert solution('1000 10 20 30 40') == 'Yes', 'Wrong'\n",
        "num_ids_2": 32,
        "num_ids_4": 67
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000 15 80') == 'Yes'\nassert solution('10 10 5') == 'No'\n\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1 1 100\") == \"No\"\nassert solution(\"0 0 100\") == \"Yes\"\nassert solution(\"-1 0 100\") == \"No\"\nassert solution(\"1 1 0\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1000 30 80\") == \"No\"\nassert solution(\"1000 20 80\") == \"Yes\"\nassert solution(\"1000 50 80\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000 15 80\") == \"Yes\"\nassert solution(\"1234 2 1 3\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000 15 80\\n') == 'Yes', 'Sample test 1 fail'\nassert solution('1000 15 80\\n') == 'No', 'Sample test 1 fail'\nassert solution('1000 15 90\\n') == 'No', 'Sample test 1 fail'",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4192,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1000 15 80\"\n) == \"Yes\"\nassert solution(\n    \"1 1 1\"\n) == \"No\"\nassert solution(\n    \"1 1 1\"\n) == \"Yes\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n\") == \"Yes\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'Yes'\nassert solution('89') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"Yes\"\nassert solution(\"89\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"84 97 66\") == \"Yes\"\nassert solution(\"79 89 11\") == \"Yes\"\nassert solution(\"61 59 7\") == \"Yes\"\nassert solution(\"7\") == \"No\"\nassert solution(\"89\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"66 97 84\\n66 89 97\\n66 99 91\\n66 61 66\\n66 79 83\\n66 69 87\\n66 59 81\\n66 61 69\\n66 67 83\\n66 59 81\\n66 59 81\\n66 65 86\") == \"No\"\n\n'''\n",
        "num_ids_2": 113,
        "num_ids_4": 113
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"Yes\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\") == \"No\"\nassert solution(\"84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30\\n93\\n75\\n87\\n45\\n37\\n6\\n95\\n85\\n11\\n50\\n95\\n5\\n96\\n80\\n75\\n83\\n82\\n4\\n25\\n63\\n48\\n36\\n83\\n73\\n30\\n65\\n9\\n35\\n67\\n51\\n58\\n48\\n39\\n8\\n90\\n55\\n35\\n79\\n64\\n90\\n82\\n6\\n3\\n38\\n37\\n57\\n87\\n41\\n23\\n68\\n35\\n17\\n75\\n67\\n82\\n72\\n72\\n69\\n36\\n68\\n71\\n76\\n56\\n18\\n15\\n67\\n62\\n56\\n65\\n19\\n97\\n17\\n83\\n76\\n67\\n86\\n71\\n76\\n57\\n67\\n75\\n68\\n35\\n64\\n61\\n87\\n57\\n8\\n4\\n98\\n16\\n68\\n90\\n43\\n93\\n54\\n90\\n4\\n74\\n57\\n32\\n89\\n72\\n43\\n23\\n72\\n92\\n11\\n32\\n95\\n82\\n35\\n69\\n33\\n8\\n97\\n28\\n39\\n93\\n94\\n41\\n43\\n27\\n90\\n47\\n34\\n88\\n72\\n67\\n68\\n6\\n35\\n61\\n89\\n85\\n86\\n26\\n71\\n68\\n3\\n83\\n40\\n2\\n5\\n98\\n47\\n98\\n24\\n79\\n30\\n56\\n10\\n30\\n20\\n3\\n10\\n19\\n1\\n65\\n88\\n57\\n90\\n51\\n72\\n58\\n60\\n74\\n88\\n1\\n10\\n58\\n91\\n15\\n46\\n79\\n8\\n78\\n40\\n73\\n94\\n16\\n63\\n93\\n93\\n4\\n83\\n15\\n77\\n40\\n19\\n55\\n40\\n32\\n12\\n71\\n4\\n65\\n51\\n59\\n14\\n32\\n53\\n7\\n65\\n96\\n18\\n9\\n93\\n16\\n2\\n35\\n15\\n36\\n87\\n81\\n86\\n48\\n11\\n88\\n57\\n71\\n80\\n11\\n45\\n89\\n9\\n80\\n95\\n6\\n32\\n41\\n15\\n60\\n9\\n41\\n74\\n11\\n35\\n91\\n7\\n88\\n9\\n34\\n46\\n48\\n10\\n15\\n82\\n39\\n37\\n54\\n38\\n61\\n48\\n5\\n96\\n13\\n93\\n5\\n40\\n43\\n24\\n45\\n70\\n76\\n5\\n25\\n95\\n76\\n32\\n4\\n4\\n73\\n79\\n73\\n69\\n6\\n13\\n8\\n18\\n85\\n63\\n8\\n38\\n78\\n56\\n3\\n33\\n21\\n17\\n86\\n84\\n75\\n31\\n50\\n14\\n68\\n21\\n28\\n30\\n4\\n3\\n68\\n71\\n94\\n97\\n4\\n74\\n6\\n2\\n1\\n58\\n90\\n5\\n48\\n69\\n33\\n35\\n2\\n95\\n7\\n57\\n70\\n2\\n50\\n1\\n27\\n28\\n15\\n22\\n41\\n47\\n34\\n22\\n25\\n70\\n65\\n52\\n41\\n88\\n89\\n3\\n1\\n55\\n31\\n48\\n77\\n36\\n13\\n77\\n5\\n98\\n41\\n70\\n5\\n47\\n89\\n86\\n19\\n19\\n74\\n1\\n28\\n38\\n76\\n6\\n32\\n61\\n90\\n49\\n74\\n17\\n3\\n68\\n75\\n96\\n95\\n71\\n95\\n1\\n43\\n39\\n98\\n82\\n90\\n86\\n37\\n88\\n18\\n39\\n5\\n81\\n32\\n4\\n79\\n20\\n32\\n25\\n35\\n22\\n4\\n3\\n67\\n9\\n57\\n36\\n72\\n4\\n2\\n13\\n95\\n67\\n48\\n43\\n8\\n7\\n13\\n21\\n15\\n16\\n3\\n37\\n73\\n33\\n10\\n4\\n63\\n21\\n12\\n25\\n95\\n1\\n96\\n98\\n10\\n78\\n86\\n11\\n7\\n4\\n1\\n57\\n28\\n28\\n56\\n34\\n25\\n58\\n40\\n28\\n69\\n8\\n44\\n43\\n98\\n5\\n9\\n17\\n96\\n11\\n15\\n25\\n65\\n90\\n4\\n18\\n91\\n12\\n13\\n37\\n32\\n90\\n75\\n32\\n22\\n2\\n19\\n21\\n19\\n91\\n8\\n44\\",
        "num_ids_2": 92,
        "num_ids_4": 1580
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('84 97 66') == 'Yes'\nassert solution('79 89 11') == 'Yes'\nassert solution('61 59 7') == 'Yes'\nassert solution('7') == 'No'\nassert solution('89') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n65') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n89') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n80') == 'No'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n89\\n89\\n89') == 'Yes'\n",
        "num_ids_2": 59,
        "num_ids_4": 121
    },
    {
        "number": 4193,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'Yes'\nassert solution('84 97 66\\n79 89 11\\n61 59 7\\n7\\n89\\n7\\n87\\n79\\n24\\n84\\n30') == 'No'\nassert solution('1\\n1\\n1\\n1\\n1') == 'Yes'\nassert solution('1\\n1\\n1\\n1\\n1') == 'No'\n",
        "num_ids_2": 92,
        "num_ids_4": 136
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"30\"\nassert solution(\"10 2\") == \"10\"\nassert solution(\"10 20\") == \"100\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '30'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"41 2\") == \"30\"\nassert solution(\"12 5\") == \"45\"\nassert solution(\"7 9\") == \"31\"\nassert solution(\"4 1\") == \"31\"\nassert solution(\"3 2\") == \"-1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"41 2\") == \"30\"\nassert solution(\"41 3\") == \"30\"\nassert solution(\"41 4\") == \"30\"\nassert solution(\"41 5\") == \"30\"\nassert solution(\"41 6\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 4\\n1 1 1 1 1 1\\n') == '30'\nassert solution('6 2\\n5 6\\n') == '30'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''41 2\n5 6\n''') == '30'\nprint('All test cases passed.')\n\nprint(solution('''1 10\n1 10\n''')) # Should return -1\nprint(solution('''1 3\n1 3\n''')) # Should return 1\nprint(solution('''4 4\n5 2\n6 7\n3 1\n''')) # Should return 1\nprint(solution('''11 6\n6 6\n5 5\n9 9\n1 1\n''')) # Should return -1\nprint(solution('''50 4\n4 4\n1 2\n10 12\n3 5\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n1000 100\n1000 100\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n999 100\n100 100\n''')) # Should return 1\nprint(solution('''1000 100\n100 100\n999 100\n100 100\n''')) # Should return 2\nprint(solution('''10 10\n10 10\n10 10\n10 10\n''')) # Should return 1\nprint(solution('''10 10\n10 10\n10 10\n10 10\n''')) # Should return 2\nprint(solution('''10 10\n10 10\n10 10\n10 10\n''')) # Should return -1\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n3 1\n''')) # Should return 1\nprint(solution('''1 2\n3 1\n''')) # Should return 2\nprint(solution('''1 2\n1 2\n''')) # Should return -1\nprint(solution('''1 2\n1 2\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n2 1\n''')) # Should return -1\nprint(solution('''4 4\n5 2\n6 7\n3 1\n''')) # Should return 1\nprint(solution('''4 4\n5 2\n6 7\n3 1\n''')) # Should return 2\nprint(solution('''4 4\n5 2\n6 7\n3 1\n''')) # Should return 3\nprint(solution('''4 4\n5 2\n6 7\n3 1\n''')) # Should return 2\nprint(solution('''11 6\n6 6\n5 5\n9 9\n1 1\n''')) # Should return -1\nprint(solution('''11 6\n6 6\n5 5\n9 9\n1 1\n''')) # Should return -1\nprint(solution('''11 6\n6 6\n5 5\n9 9\n1 1\n''')) # Should return -1\nprint(solution('''11 6\n6 6\n5 5\n9 9\n1 1\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n1000 100\n1000 100\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n999 100\n100 100\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n999 100\n100 100\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n999 100\n100 100\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n999 100\n100 100\n''')) # Should return -1\nprint(solution('''1000 100\n100 100\n999 100\n100 100\n''')) # Should return -1\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n3 1\n''')) # Should return 1\nprint(solution('''1 2\n3 1\n''')) # Should return 2\nprint(solution('''1 2\n1 2\n''')) # Should return -1\nprint(solution('''1 2\n1 2\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution('''1 2\n2 1\n''')) # Should return 2\nprint(solution('''1 1\n1 1\n''')) # Should return 1\nprint(solution('''1 1\n2 1\n''')) # Should return 2\nprint(solution('''1 2\n2 1\n''')) # Should return 1\nprint(solution",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\") == \"30\"\nassert solution(\"41 2\") == \"30\"\nassert solution(\"5 4\") == \"40\"\nassert solution(\"41 4\") == \"40\"\nassert solution(\"5 1\") == \"40\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4') == '2'\nassert solution('4 1') == '3'\nassert solution('-1') == '-1'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2\\n5 6') == '30'\nassert solution('41 2\\n5 6') == '30'\nassert solution('5 5\\n5 6') == '30'\nassert solution('41 1\\n5 5') == '-1'\n\n'''\n\nN, M = map(int, input().split())\nassignments = [int(x) for x in input().split()]\n\ndays = 0\nfor assignment in assignments:\n    if assignment % 5!= 0:\n        days = -1\n    else:\n        days += assignment // 5\n\nprint(days)",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4194,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('41 2\\n5 6\\n') == '30'\nassert solution('41 1\\n5 5\\n') == '-1'\nassert solution('41 0\\n5 5\\n') == '-1'\nassert solution('41 0\\n1 1\\n') == '-1'\nassert solution('41 0\\n1 0\\n') == '-1'\n",
        "num_ids_2": 35,
        "num_ids_4": 71
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"6\"\nassert solution(\"3 2\") == \"6\"\nassert solution(\"3 4\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5\") == \"5\"\nassert solution(\"0 5\") == \"5\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3 5\") == \"5\"\nassert solution(\"4 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"0 5\") == \"5\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"0 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 5\") == \"5\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"2 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 5\\n') == '5'\nassert solution('1 6\\n') == '6'\nassert solution('2 7\\n') == '7'\nassert solution('3 8\\n') == '8'\nassert solution('4 9\\n') == '9'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 4') == '4'\nassert solution('1 3') == '3'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 5') == '5'\nassert solution('1 2') == '1'\nassert solution('2 1') == '1'\nassert solution('2 2') == '2'\nassert solution('2 3') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"5 1\") == \"4\"\nassert solution(\"2 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"2\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 0\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4195,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 5') == '5'\nassert solution('0 1') == '1'\nassert solution('2 1') == '2'\nassert solution('2 0') == '2'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n7 6 8\n\"\"\") == \"2\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n7 6 8\n''') == '2'\nassert solution('''\n3\n1 2 3\n''') == '1'\nassert solution('''\n3\n5 2 2\n''') == '2'\nassert solution('''\n2\n3 5\n''') == '1'\nassert solution('''\n10\n1 2 2 3 2 4 4 5 5 5 6 6 6 7 7 7 7 8 8 8 8 9 9 9 9 9 9\n''') == '1'\n\n\"\"\"\n--- Day 5: Binary Boarding ---\nYou board your plane only to discover a new problem: you dropped your boarding pass! You aren't sure which seat is yours, and all of the flight attendants are busy with the flood of people that suddenly made it through passport control.\n\nYou write a quick program to use your phone's camera to scan all of the nearby boarding passes (your puzzle input); perhaps you can find your seat through process of elimination.\n\nInstead of zones or groups, this airline uses binary space partitioning to seat people. A seat might be specified like FBFBBFFRLR, where F means \"front\", B means \"back\", L means \"left\", and R means \"right\".\n\nThe first 7 characters will either be F or B; these specify exactly one of the 128 rows on the plane (numbered 0 through 127). Each letter tells you which half of a region the given seat is in. Start with the whole list of rows; the first letter indicates whether the seat is in the front (0 through 63) or the back (64 through 127). The next letter indicates which half of that region the seat is in, and so on until you're left with exactly one row.\n\nFor example, consider just the first seven characters of FBFBBFFRLR:\n\nStart by considering the whole range, rows 0 through 127.\nF means to take the lower half, keeping rows 0 through 63.\nB means to take the upper half, keeping rows 32 through 63.\nF means to take the lower half, keeping rows 32 through 47.\nB means to take the upper half, keeping rows 40 through 47.\nB keeps rows 44 through 47.\nF keeps rows 44 through 45.\nThe final F keeps the lower of the two, row 44.\nThe last three characters will be either L or R; these specify exactly one of the 8 columns of seats on the plane (numbered 0 through 7). The same process as above proceeds again, this time with only three steps. L means to keep the lower half, while R means to keep the upper half.\n\nFor example, consider just the last 3 characters of FBFBBFFRLR:\n\nStart by considering the whole range, columns 0 through 7.\nR means to take the upper half, keeping columns 4 through 7.\nL means to take the lower half, keeping columns 4 through 5.\nThe final R keeps the upper of the two, column 5.\nSo, decoding FBFBBFFRLR reveals that it is the seat at row 44, column 5.\n\nEvery seat also has a unique seat ID: multiply the row by 8, then add the column. In this example, the seat has ID 44 * 8 + 5 = 357.\n\nHere are some other boarding passes:\n\nBFFFBBFRRR: row 70, column 7, seat ID 567.\nFFFBBBFRRR: row 14, column 7, seat ID 119.\nBBFFBBFRLL: row 102, column 4, seat ID 820.\nAs a sanity check, look through your list of boarding passes. What is the highest seat ID on a boarding pass?\n\n--- Part Two ---\nDing! The \"fasten seat belt\" signs have turned on. Time to find your seat.\n\nIt's a completely full flight, so your seat should be the only missing boarding pass in your list. However, there's a catch: some of the seats at the very front and back of the plane don't exist on this aircraft, so they'll be missing from your list as well.\n\nYour seat wasn't at the very front or back, though; the seats with IDs +1 and -1 from yours will be in your list.\n\nWhat is the ID of your seat?\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('3\\n7 7 8') == '2'\nassert solution('3\\n7 6 8') == '2'\nassert solution('3\\n7 6 8') == '2'\nassert solution('3\\n7 6 8') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n7 6 8\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n1 1 2 4 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n10\n3 4 8 9 10 7 8 6 2 8 8\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\nassert solution('100') == '2'\nassert solution('500') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\nassert solution(\"7\") == \"2\"\nassert solution(\"8\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\nassert solution('10') == '1'\nassert solution('1') == '1'\nassert solution('1 1') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n1 2 4 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n1 2 3 4 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n4\n1 2 2 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n6\n1 2 4 6 8 10\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n7 6 8') == '2'\nassert solution('4\\n3 1 2 3') == '2'\nassert solution('1\\n') == ''\nassert solution('2\\n') == ''\nassert solution('3\\n1 2 3\\n') == '2'",
        "num_ids_2": 31,
        "num_ids_4": 51
    },
    {
        "number": 4196,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('2 3 1') == '3 1 2'\nassert solution('3 2 3 1') == '3 1 2'\nassert solution('7 5 6 1 2 3 4 8 9') == '5 6 9 8 3 1 2 7 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 67
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 3 1\\n') == '3 1 2'\n\n\"\"\"\n\nfrom itertools import permutations\nn = int(input())\na = [int(x) for x in input().split()]\nperms = list(permutations(a, n))\nfor i in perms:\n    print(*i, sep=' ')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3 1 2', \"Wrong\"\nassert solution('1') == '1 1 1', \"Wrong\"\n\n\"\"\"\nimport sys\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '5 4 3 2 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n2 3 1''') == '3 1 2'\nassert solution('''5\n2 3 4 5 1''') == '2 3 4 5 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('2') == '1 2'\nassert solution('3') == '3 1 2'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3 1 2\"\nassert solution(\"5\") == \"3 1 4 2\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4197,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 3 1\") == \"3 1 2\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '9'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 100\") == \"9\"\n\n
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 2 1\n''') == '0'\nassert solution('''1 2 3\n''') == '0'\nassert solution('''1 2 5\n''') == '0'\nassert solution('''1 2 6\n''') == '0'\nassert solution('''1 2 9\n''') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 7 100') == '9'\nassert solution('1 2 3') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(None) == 0\nassert solution(\"10 7 100\") == 9\nassert solution(\"100 7 100\") == 10\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 7 100\n''') == '9'\nassert solution('''\n2 5 9\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 7 100\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10 7 100''') == '9'\nassert solution('''1 1 2''') == '0'\nassert solution('''10 5 100''') == '9'\nassert solution('''1 1 1''') == '0'\nassert solution('''9 9 9''') == '9'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4198,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 7 100\n''') == '9'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n2\n1 1 2\"\"\") == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 10\"\n    \"150 140 100 200\"\n) == \"2\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nN K\n150 140 100 200\n''') == '2'\n\nassert solution('''\n10 5\n40 50 60 100 200 500\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 150\\n150 140 100 200') == '2'\nassert solution('4 3\\n5 5 5 5') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 150\\n150 140 100 200\\n') == '2'\nassert solution('5 10\\n20 25 50 100 200\\n') == '1'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 150') == '2'\nassert solution('4 200') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"4 200\") == \"2\"\nassert solution(\"5 200\") == \"1\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"5 10\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4199,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 1\\n5 4 2 1') == 'Yes'\nassert solution('4 1\\n5 4 2 1') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 1\n5 4 2 1''') == 'Yes'\nassert solution('''6 1\n5 5 5 5 1 2''') == 'No'\n\n'''\nIn the first sample case, we are asked to get the solution of the first M=4 items.\nIn the second case, we are asked to get the solution of the first M=3 items.\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1\\n5 4 2 1') == 'Yes'\nassert solution('5 3\\n1 2 3 5 4') == 'No'\nassert solution('5 2\\n1 2 3 5 4') == 'Yes'\n",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n8 4 2 1') == 'Yes'\nassert solution('4 1\\n5 4 2 1') == 'No'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 1\") == \"Yes\"\nassert solution(\"4 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 1\") == \"Yes\"\nassert solution(\"5 4 2 1\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 1\") == \"No\"\nassert solution(\"4 1\") == \"Yes\"\nassert solution(\"5 1\") == \"Yes\"\nassert solution(\"10 1\") == \"No\"\nassert solution(\"11 1\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5 1 4 2\") == \"Yes\"\nassert solution(\"6 2 3 4 5 1\") == \"No\"\nassert solution(\"3 4 5 6 7\") == \"Yes\"\nassert solution(\"10 3 10\") == \"Yes\"\nassert solution(\"12 10 10\") == \"No\"\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4200,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 1') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('4 3') == 'No'\nassert solution('4 4') == 'No'\nassert solution('4 5') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1 2\") == \"5\"\nassert solution(\"3 3 1\") == \"4\"\nassert solution(\"2 3 1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == '5'\nassert solution('2 3 2') == '5'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 3 2\n..#\n###\n''') == \"5\"\nassert solution('''3 4 4\n###\n###\n###\n###\n''') == \"7\"\nassert solution('''3 2 4\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 2') == '5'\nassert solution('1 2 2') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '5'\nassert solution('2 3 3') == '0'\nassert solution('1 1 1') == '1'\nassert solution('3 4 2') == '5'\nassert solution('4 4 4') == '0'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3 2\") == \"5\"\nassert solution(\"2 2 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 2\\n..#\\n###') == '5'\nassert solution('6 7 5\\n##...##\\n...###') == '4'\nassert solution('6 7 5\\n#.###.#\\n#.##...#\\n.######') == '5'\n",
        "num_ids_2": 40,
        "num_ids_4": 70
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '5'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 3 2\n..#\n###\n''') == '5'\nassert solution('''\n2 2 2\n###\n''') == '4'\nassert solution('''\n2 3 2\n###\n##\n''') == '4'\nassert solution('''\n2 3 2\n###\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4201,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3 2\n...#\n###''') == '5'\nassert solution('''5 2 2\n..#\n###''') == '5'\nassert solution('''5 2 1\n###\n...#''') == '4'\nassert solution('''5 1 1\n##''') == '4'\nassert solution('''2 1 1\n###\n...#''') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\"\"\"\n\nl, r = map(int, input().split())\nprint(2019 % (l * r))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2020 2040\n''') == '2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('2020 2040') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2020 2040') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2020 2040\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4202,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2020 2040') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('ATCODER') == 'AC'\nassert solution('ATcoder') == 'AC'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"AC\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'WA'\nassert solution('AtCoder') == 'AC'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ATCODER') == 'AC'\nassert solution('ATCODERS') == 'AC'\nassert solution('ATCODES') == 'WA'\nassert solution('ATCODES') == 'WA'\nassert solution('ATCODES') == 'WA'\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AC') == 'AC'\nassert solution('ACB') == 'WA'\nassert solution('ACBC') == 'WA'\nassert solution('ABCD') == 'WA'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoderWA\") == \"WA\"\nassert solution(\"ATCoderWA\") == \"WA\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ATCODER\") == \"AC\", \"Expected AC\"\nassert solution(\"AaC\") == \"WA\", \"Expected WA\"\nassert solution(\"A\") == \"AC\", \"Expected AC\"\n",
        "num_ids_2": 35,
        "num_ids_4": 50
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('AtCoder') == 'AC'\nassert solution('AtsCoder') == 'AC'\nassert solution('Atco') == 'WA'\nassert solution('aTcO') == 'WA'\nassert solution('atcoder') == 'WA'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''AtCoder''') == 'AC', 'Failed: ATCODER'\nassert solution('''Atcoder''') == 'AC', 'Failed: ATCODER'\nassert solution('''atcoder''') == 'AC', 'Failed: ATCODER'\nassert solution('''AtCODER''') == 'AC', 'Failed: ATCODER'\nassert solution('''atCODER''') == 'AC', 'Failed: ATCODER'\n",
        "num_ids_2": 48,
        "num_ids_4": 97
    },
    {
        "number": 4203,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder\") == \"AC\"\nassert solution(\"\") == \"WA\"\nassert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoder\") == \"AC\"\nassert solution(\"AtCoder\") == \"AC\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 28
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('1214') == '2'\nassert solution('12345678') == '5'\n",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1324') == '1333224444'\nassert solution('4') == '4'\nassert solution('1') == '1'\nassert solution('11') == '1'\nassert solution('01') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 44
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1214') == '2'\nassert solution('13216') == '3'\nassert solution('1214121212') == '2'\nassert solution('12141212122222') == '2'\nassert solution('1000000000') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1214\") == \"2\"\nassert solution(\"121314\") == \"21\"\nassert solution(\"121321314\") == \"2113\"\nassert solution(\"1213121314\") == \"21121\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1324') == '2'\nassert solution('1234') == '3'\nassert solution('1221') == '3'\nassert solution('1023456789') == '8'\nassert solution('1000000000') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123456789') == '6'\nassert solution('1324') == '6'\nassert solution('123456') == '3'\nassert solution('12345') == '0'\nassert solution('1234567') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1324') == '3'\nassert solution('12214') == '2'\nassert solution('122221') == '2'\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 1599
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1214\") == \"2\"\nassert solution(\"12345\") == \"5\"\nassert solution(\"23456\") == \"7\"\nassert solution(\"123456789\") == \"9\"\nassert solution(\"12345678910\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4204,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1214') == '2'\nassert solution('1214') == '2'\nassert solution('121214') == '2'\nassert solution('1212121214') == '2'\nassert solution('121212312314') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 2 3 4 1\") == \"YES\"\nassert solution(\"10 3 5 2 1\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\n\n------Task-----\nWrite a program which accepts a sequence of comma-separated numbers from console and\nprints the numbers in a comma-separated sequence after sorting them in ascending order.\n\n-----Sample Input-----\n1, 2, 4, 3, 9\n\n-----Sample Output-----\n1, 2, 3, 4, 9\n\n------Task-----\nWrite a program which accepts a sequence of comma-separated numbers from console and\nprints the numbers in a comma-separated sequence after sorting them in ascending order.\n\n-----Sample Input-----\n1, 2, 4, 3, 9\n\n-----Sample Output-----\n1, 2, 3, 4, 9\n\n------Task-----\nWrite a program which accepts a sequence of comma-separated numbers from console and\nprints the numbers in a comma-separated sequence after sorting them in ascending order.\n\n-----Sample Input-----\n1, 2, 4, 3, 9\n\n-----Sample Output-----\n1, 2, 3, 4, 9\n\n------Task-----\nWrite a program which accepts a sequence of comma-separated numbers from console and\nprints the numbers in a comma-separated sequence after sorting them in ascending order.\n\n-----Sample Input-----\n1, 2, 4, 3, 9\n\n-----Sample Output-----\n1, 2, 3, 4, 9\n\n------Task-----\nWrite a program which accepts a sequence of comma-separated numbers from console and\nprints the numbers in a comma-separated sequence after sorting them in ascending order.\n\n-----Sample Input-----\n1, 2, 4, 3, 9\n\n-----Sample Output-----\n1, 2, 3, 4, 9\n\n------Task-----\nWrite a program which accepts a sequence of comma-separated numbers from console and\nprints the numbers in a comma-separated sequence after sorting them in ascending order.\n\n-----Sample Input-----\n1, 2, 4, 3, 9\n\n-----Sample Output-----\n1, 2, 3, 4, 9\n\n------Task-----\nWrite a program which accepts a string as input and reverse the string word by word.\nExample: If the following string is given as input to the program:\n\n> I am testing\n\nThen, the output of the program should be:\n\n> gnitset ma I\n\n-----Sample Input-----\nI am testing\n\n-----Sample Output-----\ngnitset ma I\n\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n5 2 3 4 1') == 'YES'\n\n---Time Limit exceeded---\n\"\"\"\nimport sys\n\nN = int(sys.stdin.readline())\np = list(map(int, sys.stdin.readline().split()))\n\nswap_count = 0\nswapped = False\nwhile swap_count < N:\n    if not swapped:\n        min_index = p.index(min(p))\n        max_index = p.index(max(p))\n        p[min_index], p[max_index] = p[max_index], p[min_index]\n        swap_count += 1\n    swapped = False\n    for i in range(N):\n        if p[i]!= i+1:\n            swapped = True\n            p[i], p[i+1] = p[i+1], p[i]\n            break\n\nprint('YES' if sorted(p) == p else 'NO')\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('5 1 2 3 4') == 'NO'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2 3 4 1') == 'YES'\nassert solution('5 2 3 4 1') == 'YES'\nassert solution('4 5 2 3 1') == 'YES'\nassert solution('3 1 2 4 5') == 'NO'\nassert solution('1 2 3 4 5') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3 4 1') == 'YES', solution('5 2 3 4 1')\nassert solution('5 2 3 4 1') == 'NO', solution('5 2 3 4 1')\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2 3 4 1') == 'YES'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\n\n\"\"\"\nfrom math import floor",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4205,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\", \"YES\"\nassert solution(\"5 2 3 4 1\") == \"NO\", \"YES\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == output\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n''') == '1'\nassert solution('''\n3121\n''') == '2'\nassert solution('''\n6\n''') == '1'\nassert solution('''\n201920181\n''') == '4'\nassert solution('''\n1000000000000000000000000000000000\n''') == '33'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\nassert solution(\"201920181\") == \"4\"",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3121\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"1000000000000000000000000000000000\") == \"33\"\n",
        "num_ids_2": 21,
        "num_ids_4": 35
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('1000000000000000000000000000000000') == '33'\nassert solution('201920181') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3121\") == '2'\nassert solution(\"6\") == '1'\nassert solution(\"1000000000000000000000000000000000\") == '33'\nassert solution(\"201920181\") == '4'\nassert solution(\"20192020181\") == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3121') == '2'\nassert solution('6') == '1'\nassert solution('201920181') == '4'\nassert solution('1000000000000000000000000000000000') == '33'\n\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == '1'\nassert solution(\"1\") == '1'\nassert solution(\"2\") == '1'\nassert solution(\"3\") == '1'\nassert solution(\"4\") == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3121\n''') == \"2\"\nassert solution('''6\n''') == \"1\"\nassert solution('''201920181\n''') == \"4\"\nassert solution('''1000000000000000000000000000000000\n''') == \"33\"\n",
        "num_ids_2": 15,
        "num_ids_4": 35
    },
    {
        "number": 4206,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\nassert solution(\"1 2 3 4 5\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n1 2 3 4 5\\n2 4 7 11 3\\n\") == \"2\"\nassert solution(\"3\\n1 2 3\\n1 2 3\\n\") == \"0\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"0\"",
        "num_ids_2": 48,
        "num_ids_4": 72
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n2 4 7 11 3\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n13 37 39\n1 2 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n4\n0 0 0 0\n1 2 3\n\"\"\") == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 2 3\\n2 4 7 11 3\") == \"2\"\nassert solution(\"3\\n13 37 39\\n1 2 3\\n-6 -12 6\\n\") == \"0\"\nassert solution(\"4\\n0 0 0 0\\n1 2 3 4\\n\") == \"3\"\n",
        "num_ids_2": 51,
        "num_ids_4": 75
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '3'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\n\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n2 4 7 11 3\n''') == '2'\nassert solution('''\n3\n13 37 39\n1 2 3\n''') == '3'\nassert solution('''\n4\n0 0 0 0\n1 2 3\n''') == '0'\nassert solution('''\n3\n1 2 -1\n-6 -12 6\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4207,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 2\nassert solution(stdin) == 2\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\nabaca?b\nzabbbcc\n''') == '5'\nassert solution('''\n10\ncode??????\n??????test\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nabaca?b') == '6 5'\nassert solution('8\\nabaca?b') == '10 9'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\ncodeforces\ndodivthree\n\nOutput\n5\n7 8\n4 9\n2 2\n9 10\n3 1\n\nInput\n7\nabaca?b\nzabbbcc\n\nOutput\n5\n6 5\n2 3\n4 6\n7 4\n1 2\n\nInput\n9\nbambarbia\nhellocode\n\nOutput\n0\n''') == '''5\n6 2\n1 6\n7 3\n3 5\n4 8\n9 7\n5 1\n2 4\n10 9\n8 10\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\na?b\nb?c\n''') == \"3\"\nassert solution('''\n3\nd?f\nf?g\n''') == \"5\"\nassert solution('''\n5\nzabaaaa\nzabbbbb\n''') == \"6\"\nassert solution('''\n10\n?xyz\nxyz?\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == \"6 5\"\nassert solution('6') == \"6 5\"\nassert solution('10') == \"10 9 7 5 1 2 4 6 8\"\nassert solution
        "num_ids_2": 22,
        "num_ids_4": 1298
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\nabaca?b') == '5'\nassert solution('7\\nabaca?b') == '6 5'\nassert solution('9\\nabaca?b') == '0'\nassert solution('10\\n?bambarbia') == '10'\nassert solution('7\\n?bambarbia') == '6 2'\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"5\"\nassert solution(input) == \"6 2\"\nassert solution(input) == \"1 6\"\nassert solution(input) == \"7 3\"\nassert solution(input) == \"3 5\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('9') == '6 2'\nassert solution('8') == '1 6'\nassert solution('10') == '10 9'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10\\nabaca?b') == '5'\nassert solution('7\\nabaca?b') == '6'\nassert solution('9\\nbambarbia') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 47
    },
    {
        "number": 4208,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '6 2'\nassert solution('7') == '6 5'\nassert solution('9') == '6 8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1 1 1 1'\nassert solution('7') == '1 1 1 1 5 3'\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '4 4 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n-1 -2 -3 -4''') == '4'\nassert solution('''4\n-1 -2 -3 -4''') == '4'\nassert solution('''8\n1 1 1 1 1 1 1 1''') == '8'\nassert solution('''6\n-5 -4 -3 -2 -1 0 1 2 3 4 5''') == '3 4'\n\n'''\nWrite your solution without using the helper function.\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == \"4 4\"\nassert solution('''\n4\n1 1 1 1\n''') == \"4 4\"\nassert solution('''\n11\n-5 -4 -3 -2 -1 0 1 2 3 4 5\n''') == \"3 4\"\nassert solution('''\n4\n1 1 1 1\n''') == \"4 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '2 4'\nassert solution('-5 -4 -3 -2 -1 0 1 2 3 4 5') == '2 4 4'\nassert solution('1 1 1 1') == '1 1'",
        "num_ids_2": 21,
        "num_ids_4": 62
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"3 4 4 4 4 4\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '5 4 5 4'\n\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4209,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '3'\nassert solution('11') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == '7'\nprint(solution(input))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 11\") == \"7\"\nassert solution(\"4 2\") == \"12\"\nassert solution(\"5 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([12, 11, 10, 12, 11, 7]) == 7\nassert solution([4, 2]) == 0\nassert solution([3, 7, 19, 3, 3]) == 12\nassert solution([5, 2]) == 0",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 11\\n45 1 10 12 11 7') == '7'\nassert solution('4 2\\n2 78 4 10') == '12'\nassert solution('5 2\\n3 7 19 3 3') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == str(solution.__doc__)\nprint(solution(input))\nprint(type(solution))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([6, 11],\n    [45, 1, 10, 12, 11, 7]) == 7\n\nassert solution([4, 2],\n    [2, 78, 4, 10, 12, 11, 7]) == 12\n\nassert solution([5, 2],\n    [3, 7, 19, 3, 3]) == 0\n\"\"\"\n\nn, k = list(map(int, input().split()))\n\na = list(map(int, input().split()))\n\n\ncnt = 0\nfor i in range(len(a)):\n    for j in range(i+1, len(a)):\n        if ((a[i] * a[j]) % k == 0):\n            cnt += 1\n\n\nprint(cnt)\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 11') == '7'\nassert solution('4 2') == '12'\nassert solution('5 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n\n5 2\n3 7 19 3 3\n\n''') == \"12\"\nassert solution('''\n\n6 11\n45 1 10 12 11 7\n\n''') == \"7\"\nassert solution('''\n\n5 2\n2 78 4 10\n\n''') == \"12\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4210,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n2 78 4 10\n''') == '7'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"4\") == \"7\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n5\") == \"9\", 'Just testing'\nassert solution(\"3\\n2 5\\n-1 2\") == \"9\", 'Just testing'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '9'\nassert solution('4') == '13'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"9\"\nassert solution(\"2\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"7\"\nassert solution(\"10\") == \"45\"\nassert solution(\"3\") == \"9\"\nassert solution(\"20\") == \"65\"\nassert solution(\"20\") == \"65\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '9'\nassert solution('10') == '9'\nassert solution('5') == '9'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3]) == \"9\"\nassert solution([3,5]) == \"9\"\nassert solution([3, 5, 10]) == \"17\"\nassert solution([3, 1, 5]) == \"9\"\nassert solution([3, 1, 5, 7, 9]) == \"18\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4211,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '9'\nassert solution('12') == '18'\nassert solution('123') == '162'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4 3\") == \"110\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('3 4 3') == '110'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"1 3 3\n1 2 2 10\"\"\") == \"110\"\nassert solution(\"\"\"3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\"\"\") == \"110\"\nassert solution(\"\"\"5 5 3\n5 4 4 100\n5 2 2 10\n4 3 3 10\n3 2 2 10\"\"\") == \"110\"\nassert solution(\"\"\"10 10 4\n3 4 3 100\n3 2 2 10\n4 3 3 10\n2 2 2 10\"\"\") == \"110\"\nassert solution(\"\"\"1 2 2\n1 1 1 10\n1 1 1 10\"\"\") == \"11\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 3') == '110'\nassert solution('2 3 2 10') == '110'\nassert solution('5 3 3') == '110'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('3 2 2 10') == '110'\nassert solution('2 3 2 10') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"110\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 2 3') == '50'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '10'\nassert solution('2 3 2 10') == '10'\nassert solution('2 1 1 2') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 4 3\n1 3 3 100\n1 2 2 10\n2 3 2 10\n\"\"\") == \"110\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4212,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 3') == '110'\nassert solution('1 3 3 100') == '110'\nassert solution('1 2 2 10') == '110'\nassert solution('2 3 2 10') == '110'\n\n'''",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '5'\nassert solution([[1, 4, 6, 3], [1, 2, 3]]) == '5'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '5'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n1 4 6 3\\n') == '5'\nassert solution('6\\n1 4 6 3\\n') == '5'\nassert solution('8\\n1 4 6 3\\n') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '1 2'\n\nassert solution('''\n2\n10 4 5\n''') == '10 4'\n\nassert solution('''\n4\n1 2 3 4\n''') == '3 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == '5'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"10\") == \"10\"\nassert solution(\"5\") == \"5\"\nassert solution(\"123456789\") == \"6789\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4213,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 4 6 3\n''') == '5'\nassert solution('''\n4\n1 4 6 -3\n''') == '5'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1') == '2.276142375'\nassert solution('10\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50\\n-100 -50') == '3.6282615886'\n",
        "num_ids_2": 186,
        "num_ids_4": 186
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\nassert solution(\"4\") == \"2.2761423749\"\nassert solution(\"5\") == \"2.2761423749\"\nassert solution(\"6\") == \"2.2761423749\"\nassert solution(\"7\") == \"2.2761423749\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"2.2761423749\"\nassert solution(\"3\") == \"2.2761423749\"\n\"\"\"\n\nfrom math import sqrt",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(example_input_1) == example_output_1\nprint(solution(input_data))\n\"\"\"\n\n\"\"\"\n-----SOLUTION-----\nN\nx_1 y_1\n:\nx_N y_N\n\nsum_path = sum_path_1 + sum_path_2 + sum_path_3 + sum_path_4 + sum_path_5 + sum_path_6\n\nsum_path_1 = sqrt(x_1*x_1 + y_1*y_1) + sqrt(x_2*x_2 + y_2*y_2) + sqrt(x_3*x_3 + y_3*y_3)\n\nsum_path_2 = sqrt(x_4*x_4 + y_4*y_4) + sqrt(x_5*x_5 + y_5*y_5) + sqrt(x_6*x_6 + y_6*y_6)\n\nsum_path_3 = sqrt(x_1*x_1 + y_1*y_1) + sqrt(x_2*x_2 + y_2*y_2) + sqrt(x_4*x_4 + y_4*y_4)\n\nsum_path_4 = sqrt(x_3*x_3 + y_3*y_3) + sqrt(x_5*x_5 + y_5*y_5) + sqrt(x_6*x_6 + y_6*y_6)\n\nsum_path_5 = sqrt(x_1*x_1 + y_1*y_1) + sqrt(x_3*x_3 + y_3*y_3) + sqrt(x_4*x_4 + y_4*y_4)\n\nsum_path_6 = sqrt(x_2*x_2 + y_2*y_2) + sqrt(x_5*x_5 + y_5*y_5) + sqrt(x_6*x_6 + y_6*y_6)\n\nsum_path = (sqrt(x_1*x_1 + y_1*y_1) + sqrt(x_2*x_2 + y_2*y_2) + sqrt(x_3*x_3 + y_3*y_3) + sqrt(x_4*x_4 + y_4*y_4) + sqrt(x_5*x_5 + y_5*y_5) + sqrt(x_6*x_6 + y_6*y_6))/6\n\n\"\"\"\n\nimport math",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n0 0\n1 0\n0 1\n\"\"\"\n) == \"2.2761423749\"\nprint(solution(\n\"\"\"\n3\n0 0\n1 0\n0 1\n\"\"\"\n))\n\n\"\"\"\n2.2761423749\n\"\"\"\n\n\"\"\"\n1\n0 0\n1 0\n0 1\n\"\"\"\nprint(solution(\n\"\"\"\n3\n0 0\n1 0\n0 1\n\"\"\"))\n\n\"\"\"\n2.2761423749\n\"\"\"\n\n\"\"\"\n2\n0 0\n1 0\n0 1\n\"\"\"\nprint(solution(\n\"\"\"\n3\n0 0\n1 0\n0 1\n\"\"\"))\n\n\"\"\"\n2.2761423749\n\"\"\"\n\n\"\"\"\n0\n0 0\n1 0\n0 1\n\"\"\"\nprint(solution(\n\"\"\"\n3\n0 0\n1 0\n0 1\n\"\"\"))\n\n\"\"\"\n2.2761423749\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0 0\n1 0\n0 1\n''') == '2.2761423749'\nassert solution('''4\n0 0\n1 0\n0 1\n0 2\n''') == '2.2761423749'\nassert solution('''5\n0 0\n1 0\n0 1\n0 2\n0 3\n''') == '2.2761423749'\nassert solution('''6\n0 0\n1 0\n0 1\n0 2\n0 3\n0 4\n''') == '2.2761423749'\nassert solution('''7\n0 0\n1 0\n0 1\n0 2\n0 3\n0 4\n0 5\n''') == '2.2761423749'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749'\nassert solution('3\\n0 0\\n1 0\\n0 1\\n') == '2.2761423749'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2.276142370943396'\n\"\"\"\nimport sys\nfrom math import sqrt",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2.276142373'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4214,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n1 1\n2 2''') == '1.5'\nassert solution('''3\n0 0\n1 0\n0 1''') == '2.2761423749'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 4') == '4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"8 16\") == \"16\"\nassert solution(\"10 30\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12 4\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12 4') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '12 4\\n') == '4'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"12 50\") == \"20\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"100 200\") == \"200\"\nassert solution(\"20 2\") == \"0\"\nassert solution(\"500 20\") == \"20\"\nassert solution(\"20 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12 4\") == 4\nassert solution(\"8 2\") == 8\nassert solution(\"5 1\") == 1\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"12 4\") == \"4\"\nassert solution(\"10 6\") == \"6\"\n\nimport sys\nimport io\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4215,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == 2\nassert solution(\"12 4\") == 4\nassert solution(\"20 20\") == 20",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"0\"\nassert solution(\"100\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10000') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == '2'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('20') == '3'\nassert solution('11') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10000') == '3'\n\"\"\"\n\nn = int(input())\nmax_num = 0\nfor i in range(1, 11):\n    for j in range(1, 11):\n        if n == i * j:\n            if max_num < len(str(i)) + len(str(j)):\n                max_num = len(str(i)) + len(str(j))\nprint(max_num)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10000\") == \"3\"\nassert solution(\"20\") == \"2\"\nassert solution(\"9\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"4\") == \"1\"\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 7",
        "num_ids_2": 1777,
        "num_ids_4": 1777
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10000\") == \"3\"\nassert solution(\"123\") == \"2\"\nassert solution(\"1234\") == \"2\"\nassert solution(\"12345\") == \"1\"\nassert solution(\"123456\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4216,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10000') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4\\n3 1 2 3\\n2 3 2\\n3 4 2') == '1'\nassert solution('2 1 3\\n3 1 2 3\\n2 3 2\\n3 4 2') == '3'\nassert solution('3 1 2\\n3 1 2 3\\n2 3 2\\n3 4 2') == '1'\n",
        "num_ids_2": 55,
        "num_ids_4": 83
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('2 1 3\\n3 1 2 3\\n2 3 2') == '2'\nassert solution('2 1 3\\n3 1 2 3\\n1 2 3') == '2'\nassert solution('1\\n3\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14') == '13'\n\n--other sample--\n",
        "num_ids_2": 50,
        "num_ids_4": 125
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n2 1 3\\n3 1 2 3\") == \"1\"\nassert solution(\"3 2\\n1 2 3\\n2 2\") == \"2\"\nassert solution(\"5 4\\n2 3 4\\n3 4 2\\n4 5 3\") == \"3\"\n",
        "num_ids_2": 42,
        "num_ids_4": 68
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1 3\") == \"1\"\nassert solution(\"3 1 2 3\") == \"2\"\nassert solution(\"2 3 2\") == \"1\"\nassert solution(\"1 3 2\") == \"0\"\nassert solution(\"2 1 2 3\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('3 4\\n3 1 2 3\\n2 1 3\\n2 3 2') == '2'\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 4\n2 1 3\n3 1 2 3\n2 3 2''') == '1'\nassert solution('''1 3\n3 1 2''') == '2'\nassert solution('''3 5\n1 2 2 4 1\n1 2 3 2 2 3\n2 3 2''') == '2'\nassert solution('''2 5\n1 2 2 4 1\n1 2 3 2 2 3\n2 3 2''') == '2'\nassert solution('''4 5\n1 2 2 4 1\n1 2 3 2 2 3\n2 3 2''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2') == '1'\nassert solution('10 10\\n5 5 5 6 6 6\\n8 8 8 9 9 9\\n10 10\\n2 1 2 3\\n3 2 2 2\\n4 3 3 3\\n5 4 4 4 4\\n6 5 5 5 6\\n7 6 6 6 7\\n8 7 8 7 8\\n9 9 9 9 10\\n10 10') == '11'\n",
        "num_ids_2": 115,
        "num_ids_4": 115
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 4') == '1'\nassert solution('3 4') == '0'\nassert solution('10 10') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4217,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4\\n2 1 3\\n3 1 2 3\\n2 3 2\\n') == '1'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"0.5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('3') == '0.166666666667'\nassert solution('2') == '0.0833333333333'\nassert solution('1') == '0.04166667'\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0.5\"\nassert solution(\"2\") == \"0.25\"\nassert solution(\"3\") == \"0.16666666666666666\"\nassert solution(\"4\") == \"0.16666666666666666\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n') == '0.5\\n'\nassert solution('3\\n') == '0.667\\n'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"0.5000000000\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('5') == '0.25'\n\n\"\"\"\nfrom typing import List\n\nimport sys\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.5'\nassert solution('4') == '0.5'\nassert solution('5') == '0.5'\nassert solution('10') == '0.4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '0.5000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0.5'\nassert solution('2') == '0.5'\nassert solution('3') == '0.5'\nassert solution('4') == '0.5'\nassert solution('100') == '0.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4218,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '0.5000000000'\nassert solution('1') == '0.5000000000'\nassert solution('2') == '0.5000000000'\nassert solution('3') == '0.5000000000'\nassert solution('4') == '0.5000000000'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''\n5\n1\n3 1\n3 2\n2 1\n3\n4 1\n3\n2 1 1\n4\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([2, 1, 2]) == '2'\nassert solution([2, 1, 0]) == '1'\nassert solution([2, 1, 1]) == '2'\nassert solution([1, 1, 1]) == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('5') == '4'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3]) == '2'\nassert solution([3, 1]) == '2'\nassert solution([3, 1, 1]) == '2'\nassert solution([3, 1, 1, 1]) == '2'\nassert solution([3, 1, 1, 1, 1]) == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nprint(solution('''4\n1\n2 1\n1\n1 1\n1\n2 0\n'''))\nprint(solution('''4\n1\n2 1\n1\n1 1\n1\n2 0\n'''))\nprint(solution('''10\n3\n1 2 1\n3 4 1\n2 5 1\n4 6 1\n5 7 1\n1 8 1\n6 9 1\n2 10 1\n'''))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 1\\n1') == '2'\nassert solution('2\\n0 0\\n0') == '1'\nassert solution('3\\n2 1\\n1\\n2 0\\n2') == '3'\nprint('\u2705')",
        "num_ids_2": 34,
        "num_ids_4": 58
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '3'\nassert solution('7') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\nassert solution('3\\n1\\n2 1\\n1\\n1 1\\n1\\n2 0\\n') == '2'\n",
        "num_ids_2": 66,
        "num_ids_4": 99
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1\n2 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''4\n1\n1 1\n1\n1 1\n1\n2 0\n''') == '2'\nassert solution('''5\n1\n1 1\n1\n1 1\n1\n2 0\n''') == '3'\nassert solution('''20\n1\n1 1\n1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n1 1\n2 0\n1 1\n1 1\n1\n2 0\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4219,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"123456789\") == \"123456789\"\n",
        "num_ids_2": 17,
        "num_ids_4": 45
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"nikoandsolstice\"\n\nprint(solution(input()))\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == 'nikoandsolstice', 'Your function doesn\\'t work!'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == '12'\nassert solution('123') == '123'\nassert solution('12345') == '12345'\nassert solution('1234567890') == '1234567890'\nassert solution('1234567890!@#$%^&*()_+=-') == '1234567890!'\n",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'nikoand'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n') == 'nikoandsolstice'\nassert solution('5\\n') == 'nikoandsolstice'\nassert solution('10\\n') == 'nikoandsolstice'\nassert solution('3\\n') == 'nikoandsolstice'\n\nsolution('7\\n')\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == 'nikoand'\nassert solution('8') == 'nikoandsolstice'\nassert solution('9') == 'nikoandsoldestine'\nassert solution('10') == 'nikoandsolsticeand'\nassert solution('11') == 'nikoandsolsticeandsoldest'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7\nnikoandsolstice''') == 'nikoand...'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'nikoand'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4220,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == 'nikoand'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"apple\"\n) == \"apples\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"apple\") == \"apples\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    'apple'\n    ) == 'apples'\n\nassert solution(\n    'Taknese'\n    ) == 'Takneses'\n\nassert solution(\n    'AtCoder'\n    ) == 'AtCoders'\n\nassert solution(\n    'banana'\n    ) == 'bananas'\n\nassert solution(\n    'Golf'\n    ) == 'Golfs'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('apple') == 'apples'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '','solution not defined'\nassert solution('a') == 'a','solution not defined'\nassert solution('A') == 'A','solution not defined'\nassert solution('b') == 'b','solution not defined'\nassert solution('B') == 'B','solution not defined'\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apple') == 'apples'\nassert solution('apple') == 'apples'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('apple') == 'apples'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('apple') == 'apples'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4221,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('apple') == 'apples'\nassert solution('apple') == 'apples'\nassert solution('apple') == 'apples'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2\\n2\\n1 3\\n1\\n3') == '1'\n\"\"\"\n\n##########################################################",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"2 5\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"2 1\") == \"2\"\n\"\"\"\nfrom typing import List\nfrom math import factorial\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('2 4') == '3'\nassert solution('2 2') == '2'\nassert solution('4 6') == '2'\nassert solution('5 2') == '1'\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\"\nassert solution(\"3 4\\n2\\n1 2\\n1\\n2\\n2\\n2\\n\") == \"2\"\nassert solution(\"3 3\\n2\\n1 2\\n1\\n2\\n2\\n2\\n\") == \"0\"\nassert solution(\"3 2\\n2\\n1 3\\n1\\n3\\n\") == \"1\"\nassert solution(\"3 3\\n2\\n1 2\\n1\\n2\\n2\\n2\\n\") == \"2\"\n",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '1'\nassert solution(input()) == '1'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('3 2') == '1'\nassert solution('3 3') == '0'\nassert solution('4 5') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '1'\nassert solution('5 10') == '10'\nassert solution('3 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4222,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n1\n1 2\n1''') == '1'\nassert solution('''3 2\n2\n1 3\n1''') == '1'\nassert solution('''3 3\n2\n1 3\n1''') == '2'\n\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\na\n\n''') == \"0\"\nassert solution('''\n10\naaabbbbaaca\n\n''') == \"4\"\n\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"5\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\naaa') == '5'\nassert solution('100\\naaa') == '4'\nassert solution('1000\\naaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa') == '15'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '1', \"Should return 1\"\nassert solution('2\\n') == '2', \"Should return 2\"\nassert solution('3\\n') == '3', \"Should return 3\"\nassert solution('4\\n') == '4', \"Should return 4\"\nassert solution('5\\n') == '5', \"Should return 5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '5'\nassert solution('aabbbbaaca') == '5'\nassert solution('aabbbbbaca') == '3'\nassert solution('aaaaaaa') == '1'\nassert solution('aaaaaaaaa') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"\") == \"0\"\nassert solution(\"10\") == \"10\"\nassert solution(\"aaaaaa\") == \"1\"\nassert solution(\"aaaaaaa\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '5'\nassert solution('10aabbbbaaca') == '5'\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4223,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10') == '5'\nassert solution('100') == '100'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n5 2 4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10\n100000000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\"\"\") == \"10\"\n\nassert solution(\"\"\"\n5\n100000000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n6\n100000000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n15\n100000000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000 1000000000\n\"\"\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"5\"\n\"\"\"\n\nimport itertools\nimport math\nimport sys\nfrom collections import deque\n\nn = int(input())\nl = list(map(int, input().split()))\nres = 0\n\nfor i in range(1, n+1):\n    for x in itertools.combinations(l, i):\n        if (x[0] * 3) % x[0]!= 0:\n            break\n        for j in range(1, n+1):\n            for y in itertools.combinations(x, j):\n                if (y[0] * 3) % y[0]!= 0:\n                    break\n                if sum(y) % y[0]!= 0:\n                    break\n                if sum(x) % x[0]!= 0:\n                    break\n                if (math.gcd(sum(x), sum(y))!= x[0]) | (math.gcd(sum(x), sum(y))!= y[0]):\n                    break\n                res = max(res, sum(x) // x[0] + sum(y) // y[0])\nprint(res)\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n5 2 4') == '3'\nassert solution('1\\n10\\n') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''10\n1 2 4 5 6 7 8 9 10''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5 2 4''') == '3'\nassert solution('''5\n5 2 4''') == '3'\nassert solution('''6\n1 1 1''') == '3'\nassert solution('''6\n1 1 1''') == '3'\nassert solution('''3\n5 2 4''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4224,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1000000000\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"2\"\nprint(solution(input()))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1 1 3\") == \"2\"\nassert solution(\"2 1 1 3\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 1 1 3\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 1 3') == '2'\nassert solution('2 1 1 3') == '2'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1 1 3\n''') == '2'\nassert solution('''2 1 1 3\n''') == '2'\nassert solution('''5 2 -1 1 -2 1\n''') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('2 1 2 2') == '2'\n\"\"\"\n\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"2 1 1 3\"\n    ) == \"2\"\nassert solution(\n    \"2 2 2 1 1\"\n    ) == \"2\"\nassert solution(\n    \"3 2 1 3 1 1\"\n    ) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1 1 3\") == \"2\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4225,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 1 3') == '2'\nassert solution('10 5 -1 2') == '12'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 2') == 'No'\nassert solution('5 5') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 8') == 'Yes'\nassert solution('4 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"1 3\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 5') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8\") == \"Yes\"\nassert solution(\"4 5\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"9 9\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2 3 4 5\n3 5\n1 2''') == 'Yes'\nassert solution('''2 2\n1 1\n2 2''') == 'No'\nassert solution('''1 1\n1 2\n1 3\n1 4\n1 5\n2 2\n2 3\n2 4\n2 5''') == 'Yes'\nassert solution('''5 4\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1\n1 1 1 1 1''') == 'Yes'\nassert solution('''5 2\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6''') == 'No'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 3') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"2 2\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4226,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"10 10\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"6 6\") == \"Yes\"\nassert solution(\"12 3\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '2'\nassert solution(input(\"\")) == '0'\nassert solution(input(\"12 34\")) == '0'\n\nclass Test_Solution(unittest.TestCase):\n    def test_solution(self):\n        self.assertEqual(solution(input()), 2)\n        self.assertEqual(solution(input(\"\")), 0)\n        self.",
        "num_ids_2": 21,
        "num_ids_4": 34
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 3\n1 2\n1 3\n2 3''') == '2'\n\nassert solution('''3 5\n1 2\n1 3\n1 5\n2 3\n2 4''') == '3'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 3]) == \"2\"\n\nassert solution([3, 5]) == \"3\"\n\nassert solution([8, 5]) == \"4\"\n'''\n\nimport math\nfrom collections import defaultdict",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3\\n1 2\\n1 3\\n2 3') == '2'\n\n'''",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 1') == '1'\nassert solution('4 2') == '2'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\n\n\"\"\"\nfrom collections import deque\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"3 3\n1 2\n1 3\n2 3\n\n\"\"\") == \"2\"\n\nassert solution(\"\"\"3 3\n1 2\n1 3\n2 3\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"10 8\n1 2 3 4 5 6 7 8 9 10\n1 3 2 4 6 8 10 7 9 5\n1 3 4 2 6 8 7 9 10 5\n1 3 4 6 2 8 7 9 10 5\n1 3 6 2 8 7 9 10 5 4\n1 3 6 2 7 9 10 5 4 8\n1 3 6 2 7 9 10 5 4 8\n1 3 6 2 7 9 10 5 4 8\n1 3 6 2 7 9 10 5 4 8\n1 3 6 2 7 9 10 5 4 8\n1 3 6 2 7 9 10 5 4 8\n\n\"\"\") == \"3\"\n\nassert solution(\"\"\"13 3\n1 2\n1 3\n2 3\n1 4\n2 4\n3 5\n3 6\n4 7\n4 8\n5 9\n5 10\n6 11\n6 12\n7 13\n7 14\n8 15\n8 16\n9 17\n9 18\n10 19\n10 20\n11 21\n11 22\n12 23\n12 24\n13 25\n13 26\n14 27\n14 28\n15 29\n15 30\n16 31\n16 32\n17 33\n17 34\n18 35\n18 36\n19 37\n19 38\n20 39\n20 40\n21 41\n21 42\n22 43\n22 44\n23 45\n23 46\n24 47\n24 48\n25 49\n25 50\n26 51\n26 52\n27 53\n27 54\n28 55\n28 56\n29 57\n29 58\n30 59\n30 60\n31 61\n31 62\n32 63\n32 64\n33 65\n33 66\n34 67\n34 68\n35 69\n35 70\n36 71\n36 72\n37 73\n37 74\n38 75\n38 76\n39 77\n39 78\n40 79\n40 80\n41 81\n41 82\n42 83\n42 84\n43 85\n43 86\n44 87\n44 88\n45 89\n45 90\n46 91\n46 92\n47 93\n47 94\n48 95\n48 96\n49 97\n49 98\n50 99\n50 100\n51 101\n51 102\n52 103\n52 104\n53 105\n53 106\n54 107\n54 108\n55 109\n55 110\n56 111\n56 112\n57 113\n57 114\n58 115\n58 116\n59 117\n59 118\n60 119\n60 120\n61 121\n61 122\n62 123\n62 124\n63 125\n63 126\n64 127\n64 128\n65 129\n65 130\n66 131\n66 132\n67 133\n67 134\n68 135\n68 136\n69 137\n69 138\n70 139\n70 140\n71 141\n71 142\n72 143\n72 144\n73 145\n73 146\n74 147\n74 148\n75 149\n75 150\n76 151\n76 152\n77 153\n77 154\n78 155\n78 156\n79 157\n79 158\n80 159\n80 160\n81 161\n81 162\n82 163\n82 164\n83 165\n83 166\n84 167\n84 168\n85 169\n85 170\n86 171\n86 172\n87 173\n87 174\n88 175\n88 176\n89 177\n89 178\n90 179\n90 180\n91 181\n91 182\n92 183\n92 184\n93 185\n93 186\n94 187\n94 188\n95 189\n95 190\n96 191\n96 192\n97 193\n97 194\n98 195\n98 196\n99 197\n99 198\n100 199\n100 200\n101 201\n101 202\n102 203\n102 204\n103 205\n103 206\n104 207\n104 208\n105 209\n105 210\n106 211\n106 212\n107 213\n107 214\n108 215\n108 216\n109 217\n109 218\n110 219\n110 220\n111 221\n111 222\n112 223\n112 224\n113 225\n113 226\n114 227\n114 228\n115 229\n115 230\n116 231\n116 232\n117 233\n117 234\n118 235\n118 236\n119 237\n119 238\n120 239\n120 240\n121 241\n121 242\n122 243\n122 244\n123 245\n123 246\n124 247\n124 248\n125 249\n125 250\n126 251\n126 252\n127 253\n127 254\n128 253\n128 254\n129 254\n129 254\n130 254\n130 254\n131 254\n131 254\n132 254\n132 254\n133 254\n133 254\n134 254\n134 254\n135 254\n135 254\n136 254\n136 254\n137 254\n137 254\n138 254\n138 254\n139 254\n139 254\n140 254\n140 254\n141 254\n141 254\n142 254\n142 254\n143 254\n143 254\n144 254\n144 254\n145 254\n145 254\n146 254\n146 254\n147 254\n147 254\n148 254\n148 254\n149 254\n149 254\n150 254\n150 254\n151 254\n151 254\n152 254\n152 254\n153 254\n153 254\n154 254\n154 254\n155 254\n155 254\n156 254\n156 254\n157 254\n157 254\n158 254\n158 254\n159 254\n159 254\n160 254\n160 254\n161 254\n161 254\n162 254\n162 254\n163 254\n163 254\n164 254\n164 254\n165 254\n165 254\n166 254\n166 254\n167 254\n167 254\n168 254\n168 254\n169 254\n169 254\n170 254\n170 254\n171 254\n171 254\n172 254\n172 254\n173 254\n173 254\n174 254\n174 254\n175 254\n175 254\n176 254\n176 254\n177 254\n177 254\n178 254\n178 254\n179 254\n179 254\n180 254\n180 254\n181 254\n181 254\n182 254\n182 254\n183 254\n183 254\n184 254\n184 254\n185 254\n185 254\n186 254\n186 254\n187 254\n187 254\n188 254\n188 254\n189 254\n189 254\n190 254\n190 254\n191 254\n191 254\n192 254\n192 254\n193 254\n193 254\n194 254\n194 254\n195 254\n195 254\n196 254\n196 254\n197 254\n197 254\n198 254\n198 254\n199 254\n199 254\n200 254\n200 254\n201 254\n201 254\n202 254\n202 254\n203 254\n203 254\n204 254\n204 254\n205 254\n205 254\n206 254\n206 254\n207 254\n207 254\n208 254\n208 254\n209 254\n209 254\n210 254\n210 254\n211 254\n211 254\n212 254\n212 254\n213 254\n213 254\n214 254\n214 254\n215 254\n215 254\n216 254\n216 254\n217 254\n217 254\n218 254\n218 254\n219 254\n219 254\n220 254\n220 254\n221 254\n221 254\n222 254\n222 254\n223 254\n223 254\n224 254\n224 254\n225 254\n225 254\n226 254\n226 254\n227 254",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4227,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '18'\nassert solution('5 5') == '15'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '18'\nassert solution('4 1') == '4'\nassert solution('4 -3') == '2'\nassert solution('4 -3 1') == '2'\nassert solution('6 5') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"18\"\nassert solution(\"1 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"18\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"18\"\nassert solution(\"10 2\") == \"18\"\nassert solution(\"5 2\") == \"16\"\nassert solution(\"6 3\") == \"9\"\nassert solution(\"6 0\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"4\"\nassert solution(\"6 3\") == \"18\"\nassert solution(\"8 4\") == \"14\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([10, 6, 2]) == '18'\nassert solution([2, 3, 5, 9, 5, 6, 3, 4, 7, 2, 7, 5]) == '20'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '7'\nassert solution('7 1') == '8'\nassert solution('3 6') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4228,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '18'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15') == '60'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('15') == '60'\n\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == \"1\"\nassert solution('15') == \"60\"\nassert solution('10') == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == \"1\"\nassert solution('2') == \"2\"\nassert solution('5') == \"Buzz\"\nassert solution('15') == \"60\"\nassert solution('10') == \"Buzz\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"15\") == \"60\"\nprint(\"Solution 1 passed\")\n\nassert solution(\"2\") == \"1,2\"\nprint(\"Solution 2 passed\")\n\nassert solution(\"20\") == \"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\"\nprint(\"Solution 3 passed\")\n\nassert solution(\"30\") == \"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30\"\nprint(\"Solution 4 passed\")\n",
        "num_ids_2": 22,
        "num_ids_4": 138
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('5') == 'Buzz'\nassert solution('10') == 'FizzBuzz'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"60\"\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15\\n') == '60\\n'\nassert solution('2\\n') == '1\\n'\n\n---Output---\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4229,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == '60'\nassert solution(\"15\") == '60'\nassert solution(\"20\") == '40'\nassert solution(\"1\") == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 7 10 6 5') == '8'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 6 7 8 10\") == \"8\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3 4 5\") == \"8\"\nassert solution(\"5 6 7 8 9 10\") == \"8\"\nassert solution(\"4 1 2 3 4 5\") == \"4\"\nassert solution(\"5 1 2 3 4 5\") == \"2\"\nassert solution(\"3 3 3 4 4 5\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '4', 'Should be 4'\nassert solution('8 8') == '8', 'Should be 8'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3') == '1'\nassert solution('4 5') == '2'\nassert solution('6 5') == '8'\nassert solution('1') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4\") == \"2\", \"Positive number\"\nassert solution(\"3 4\") == \"4\", \"Negative number\"\nassert solution(\"5 9\") == \"8\", \"Nearest number\"\nassert solution(\"5 12\") == \"12\", \"Nearest number\"\nassert solution(\"8 11\") == \"11\", \"Nearest number\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2 3') == '1'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '5'\nassert solution('1 2 3 4 5 6') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\nassert solution('4 5') == '4'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('10 5') == '5'\nassert solution('100 100') == '100'\nassert solution('8 10') == '8'\nassert solution('9 6') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4230,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\\n3 4\") == \"1\"\nassert solution(\"5 10\\n4 5 7\") == \"7\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\\n1 1\") == \"1\"\nassert solution(\"1 1\\n1 1\") == \"1\"\nassert solution(\"4 5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 65
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"2 3\") == \"0\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 5\") == \"9\"\nassert solution(\"10 10\") == \"101\"\n\nprint(\"All tests passed\")\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"1\", \"Wrong answer\"\nassert solution(\"5 5\") == \"4\", \"Wrong answer\"\nassert solution(\"10 10\") == \"9\", \"Wrong answer\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"6 3\") == \"1\"\nassert solution(\"4 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4231,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"3 3\") == \"5\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"4 4\") == \"5\"\nassert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"7 4\\n\"\n    \"3 7 5 1 10 3 20\"\n) == \"6\"\nassert solution(\n    \"7 2\\n\"\n    \"3 7 5 1 10 3 20\"\n) == \"-1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 4\n3 7 5 1 10 3 20\n''') == '6', 'x = 6'\nassert solution('''\n7 2\n3 7 5 1 10 3 20\n''') == '-1', 'x = -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4') == '6'\nassert solution('7 2') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4\\n3 7 5 1 10 3 20') == '6', \"First\"\nassert solution('7 2\\n3 7 5 1 10 3 20') == '-1', \"Second\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 4\\n') == '6'\nassert solution('7 2\\n') == '-1'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 4\\n3 7 5 1 10 3 20\") == \"6\"\nassert solution(\"7 2\\n3 7 5 1 10 3 20\") == \"-1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 4\n3 7 5 1 10 3 20\n''') == '6'\nassert solution('''\n7 2\n3 7 5 1 10 3 20\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 4') == '6'\nassert solution('7 2') == '-1'\nassert solution('1 10') == '-1'\nassert solution('10 10') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 4\\n\") == \"6\"\nassert solution(\"7 2\\n\") == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4232,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 4\n3 7 5 1 10 3 20\n\"\"\") == \"6\"\nassert solution(\"\"\"\n7 2\n3 7 5 1 10 3 20\n\"\"\") == \"-1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 8\") == \"3\\n3 4 1\\n3 5 2\\n3 5 1\\n3 5 2\\n3 5 1\\n3 5 2\\n3 5 1\\n3 5 2\"\nassert solution(\"5 5\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\\n3 5 1\\n3 5 2\\n3 5 1\\n3 5 2\"\n\nassert solution(\"5 5\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\\n3 5 1\\n3 5 2\\n3 5 1\\n3 5 2\"",
        "num_ids_2": 102,
        "num_ids_4": 153
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........\\n\") == \"3\\n3 4 1\\n3 5 2\"\n\nassert solution(\"5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\"\n\nassert solution(\"3 3\\n*.*\\n*.*\\n*.*\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\"\n\nassert solution(\"6 6\\n*.*.*\\n.***.*\\n.*.*.*\\n*.*.*\\n.***.*\\n*.*.*\\n*.*.*\\n\") == \"3\\n2 2 1\\n3 3 1\\n3 4 1\\n3 5 2\\n4 4 1\\n4 5 2\\n4 6 1\\n4 7 2\\n4 8 1\\n4 9 2\\n4 10 1\\n3 11 1\\n3 12 1\\n3 13 1\\n3 14 1\\n3 15 1\\n3 16 1\\n3 17 1\\n3 18 1\\n3 19 1\\n3 20 1\\n3 21 1\\n3 22 1\\n3 23 1\\n3 24 1\\n3 25 1\\n3 26 1\\n3 27 1\\n3 28 1\\n3 29 1\\n3 30 1\\n3 31 1\\n3 32 1\\n3 33 1\\n3 34 1\\n3 35 1\\n3 36 1\\n3 37 1\\n3 38 1\\n3 39 1\\n3 40 1\\n3 41 1\\n3 42 1\\n3 43 1\\n3 44 1\\n3 45 1\\n3 46 1\\n3 47 1\\n3 48 1\\n3 49 1\\n3 50 1\\n3 51 1\\n3 52 1\\n3 53 1\\n3 54 1\\n3 55 1\\n3 56 1\\n3 57 1\\n3 58 1\\n3 59 1\\n3 60 1\\n3 61 1\\n3 62 1\\n3 63 1\\n3 64 1\\n3 65 1\\n3 66 1\\n3 67 1\\n3 68 1\\n3 69 1\\n3 70 1\\n3 71 1\\n3 72 1\\n3 73 1\\n3 74 1\\n3 75 1\\n3 76 1\\n3 77 1\\n3 78 1\\n3 79 1\\n3 80 1\\n3 81 1\\n3 82 1\\n3 83 1\\n3 84 1\\n3 85 1\\n3 86 1\\n3 87 1\\n3 88 1\\n3 89 1\\n3 90 1\\n3 91 1\\n3 92 1\\n3 93 1\\n3 94 1\\n3 95 1\\n3 96 1\\n3 97 1\\n3 98 1\\n3 99 1\\n3 100 1\\n3 101 1\\n3 102 1\\n3 103 1\\n3 104 1\\n3 105 1\\n3 106 1\\n3 107 1\\n3 108 1\\n3 109 1\\n3 110 1\\n3 111 1\\n3 112 1\\n3 113 1\\n3 114 1\\n3 115 1\\n3 116 1\\n3 117 1\\n3 118 1\\n3 119 1\\n3 120 1\\n3 121 1\\n3 122 1\\n3 123 1\\n3 124 1\\n3 125 1\\n3 126 1\\n3 127 1\\n3 128 1\\n3 129 1\\n3 130 1\\n3 131 1\\n3 132 1\\n3 133 1\\n3 134 1\\n3 135 1\\n3 136 1\\n3 137 1\\n3 138 1\\n3 139 1\\n3 140 1\\n3 141 1\\n3 142 1\\n3 143 1\\n3 144 1\\n3 145 1\\n3 146 1\\n3 147 1\\n3 148 1\\n3 149 1\\n3 150 1\\n3 151 1\\n3 152 1\\n3 153 1\\n3 154 1\\n3 155 1\\n3 156 1\\n3 157 1\\n3 158 1\\n3 159 1\\n3 160 1\\n3 161 1\\n3 162 1\\n3 163 1\\n3 164 1\\n3 165 1\\n3 166 1\\n3 167 1\\n3 168 1\\n3 169 1\\n3 170 1\\n3 171 1\\n3 172 1\\n3 173 1\\n3 174 1\\n3 175 1\\n3 176 1\\n3 177 1\\n3 178 1\\n3 179 1\\n3 180 1\\n3 181 1\\n3 182 1\\n3 183 1\\n3 184 1\\n3 185 1\\n3 186 1\\n3 187 1\\n3 188 1\\n3 189 1\\n3 190 1\\n3 191 1\\n3 192 1\\n3 193 1\\n3 194 1\\n3 195 1\\n3 196 1\\n3 197 1\\n3 198 1\\n3 199 1\\n3 200 1\\n3 201 1\\n3 202 1\\n3 203 1\\n3 204 1\\n3 205 1\\n3 206 1\\n3 207 1\\n3 208 1\\n3 209 1\\n3 210 1\\n3 211 1\\n3 212 1\\n3 213 1\\n3 214 1\\n3 215 1\\n3 216 1\\n3 217 1\\n3 218 1\\n3 219 1\\n3 220 1\\n3 221 1\\n3 222 1",
        "num_ids_2": 103,
        "num_ids_4": 1310
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 8\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"3 3\") == \"2\"\nassert solution(\"5 5\") == \"3\"\n\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('3 3') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '3 3 1'\nassert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 5 2'\nassert solution('5 5') == '-1'\nassert solution('3 3') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 1\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"3 3\") == \"3 3 1\"\nassert solution(\"7 7\") == \"3 3 1\"",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"6 4\") == \"3 4 1\"\nassert solution(\"7 7\") == \"3 4 1\"\nassert solution(\"5 4\") == \"-1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 8\\n........\\n........\\n........\\n........\\n........\\n........\") == \"3\\n2 3 1\"\nassert solution(\"5 5\\n.*...\\n.*...\\n.*...\\n.*...\\n.....\\n\") == \"3\\n2 2 1\"\nassert solution(\"3 3\\n*.*\\n.*.\\n*.*\\n\") == \"-1\"",
        "num_ids_2": 71,
        "num_ids_4": 96
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 8') == '3'\nassert solution('5 5') == '3'\nassert solution('3 3') == '-1'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4233,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6 8\\n....*...\\n...**...\\n..*****.\\n...**...\\n....*...\\n........') == '3 4 1'\nassert solution('5 5\\n.*...\\n****.\\n.*...\\n.*...\\n.....') == '3 3 1'",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\ngood\n\n3\naaa\n\n2\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n\") == \"0\"\nassert solution(\"4\\n\") == \"good\"\nassert solution(\"3\\n\") == \"ab\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\ngood') == '0'\nassert solution('3\\naaa') == '3'\nassert solution('2\\nab') == '2'\nassert solution('1\\n') == ''",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n''') == ''\nassert solution('good') == 'good'\nassert solution('aa') == 'aa'\nassert solution('aaaa') == 'aaaa'\nassert solution('a' * 5) == 'a' * 5\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\ngood\n\n6\naaab\n\"\"\") == \"0\n\nassert solution(\"\"\"\n10\ngood\n\n4\naaabc\n\"\"\") == \"3\n\nassert solution(\"\"\"\n1\ngood\n\n3\naabc\n\"\"\") == \"3\n\nassert solution(\"\"\"\n6\naabc\n\n6\naaa\n\"\"\") == \"2\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 'ab'\nassert solution() == 'aabc'\nassert solution() == ''\n",
        "num_ids_2": 17,
        "num_ids_4": 23
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('good') == '0'\nassert solution('bad') == '2'\nassert solution('aa') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"aabc\") == \"ab\"\nassert solution(\"good\") == \"good\"\nassert solution(\"aa\") == \"aa\"\nassert solution(\"a\") == \"a\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\ngood') == '0'\nassert solution('3\\naaa') == '3'\nassert solution('2\\nab') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4234,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '0'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('1') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\\\n3\n5\n1 5\n2 1\n1 4\n3 1\n6 1\n\"\"\") == \"NO\"\n\nassert solution(\n\"\"\"\\\n6\n5\n1 5\n2 1\n1 4\n3 1\n6 1\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\\\n10\n5\n1 5\n2 1\n1 4\n3 1\n6 1\n5 2\n3 6\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\\\n3\n6\n1 2\n2 5\n3 4\n3 5\n\"\"\") == \"YES\"\n\nassert solution(\n\"\"\"\\\n3\n4\n1 2\n2 3\n1 4\n\"\"\") == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\nassert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 3\n1 4\n1 5\n3 2\n''') == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\") == \"NO\"\nassert solution(\"1 5\") == \"YES\"\nassert solution(\"1 4\") == \"YES\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 2\n1 3\n2 3''') == 'NO'\nassert solution('''4 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''10 10\n1 5\n2 5\n1 6\n3 8\n4 9\n5 6\n6 7\n7 8\n8 9\n9 10\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'NO'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1') == 'YES'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n6 5\\n6 1\\n6 4\\n1 5\\n5 4\\n3 1\\n') == 'NO'\nassert solution('6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\\n6 5\\n6 1\\n6 4\\n1 5\\n5 4\\n3 1\\n') == 'YES'",
        "num_ids_2": 62,
        "num_ids_4": 176
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == \"YES\", \"Wrong\"\n\nassert solution('''\n4 2\n1 2\n1 3\n1 4\n''') == \"NO\", \"Wrong\"\n\nassert solution('''\n4 2\n1 2\n3 4\n1 3\n''') == \"NO\", \"Wrong\"\n\nassert solution('''\n5 3\n1 3\n3 5\n2 4\n2 4\n''') == \"NO\", \"Wrong\"\n\nassert solution('''\n7 7\n1 2\n1 7\n2 4\n3 5\n4 6\n5 4\n6 7\n''') == \"YES\", \"Wrong\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5\") == \"NO\"\nassert solution(\"6 5\") == \"YES\"\nassert solution(\"1 5\") == \"YES\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 5\\n1 5\\n2 1\\n1 4\\n3 1\\n6 1\") == \"YES\"\n\"\"\"\n\n\"\"\"\n##########################################################################\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4235,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 5\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'YES'\nassert solution('''\n5 6\n1 5\n2 1\n1 4\n3 1\n6 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 7') == '2'\nassert solution('2 7') == '3 4'\nassert solution('3 7') == '0'",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    3 5\n    2 2\n    1 2\n    5 5\n    ''') == '2'\nassert solution('''\n    1 7\n    1 7\n    ''') == '0'\nprint(solution('''\n    3 5\n    1 3\n    2 4\n    2 5\n    3 4\n    4 6\n    4 8\n    5 7\n    6 7\n    7 8\n    8 9\n    9 10\n    9 11\n    '''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 5\\n\"\n    \"2 2\\n\"\n    \"1 2\\n\"\n    \"5 5\\n\") == \"2\"\n\nassert solution(\n    \"1 7\\n\"\n    \"1 7\\n\") == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''\n1 7\n1 7\n''') == '0'\nassert solution('''\n1 5\n3 4\n2 2\n1 2\n5 5\n''') == '3 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\nassert solution(input(stdin=True)) == '3 4'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\\n2 2\\n1 2\\n5 5\") == \"2\\n3 4\"\nassert solution(\"1 7\\n1 7\\n\") == \"0\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\nassert solution('1 7') == '3 4'\nassert solution('1 1') == '0'\nassert solution('2 3') == '1 2'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 5\n2 2\n1 2\n5 5\n''') == '2'\nassert solution('''3 7\n1 7\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2\") == \"3 4\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4236,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '2'\nassert solution('1 7') == '0'\nassert solution('3 5') == '3 4'\n\n\n\n----\n\nGiven an array of integers and an integer k, find out whether there are two distinct indices i and j in the array such that nums[i] = nums[j] and the absolute difference between i and j is at most k.\n\nExample 1:\n\nInput: nums = [1,2,3,1], k = 3\nOutput: true\n\nExample 2:\n\nInput: nums = [1,0,1,1], k = 1\nOutput: true\n\nExample 3:\n\nInput: nums = [1,2,3,1,2,3], k = 2\nOutput: false\n\nConstraints:\n\n2 <= nums.length <= 105\n-109 <= nums[i] <= 109\n0 <= k <= 105\n\"\"\"",
        "num_ids_2": 19,
        "num_ids_4": 31
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 9, 2, 3]) == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 5 2 3\") == \"2\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''4 9 2 3'''\n) == '2'\nassert solution(\n'''1 1 1 1'''\n) == '1'\nassert solution(\n'''3 10 1 4'''\n) == '2'\nassert solution(\n'''3 2 9 4'''\n) == '1'\nassert solution(\n'''1 2 1 2'''\n) == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 9 2 3') == '2'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"10 10 10 10\") == \"10\"\nassert solution(\"0 0 0 0\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\nassert solution('4 9 2 3') == '2'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '5'\n\n4 9 2 3\n2\n5 and 7 satisfy the condition.\n5 and 7 satisfy the condition.\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"1 10 1 10\") == \"1\"\nassert solution(\"6 6 2 3\") == \"3\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"3 3 0 0\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4237,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 9 2 3\") == \"2\"\nassert solution(\"100 -1\") == \"100\"\nassert solution(\"1000000000000000 -1000000000000000\") == \"1000000000000000\"\nassert solution(\"1000000000000000 0\") == \"1000000000000000\"\nassert solution(\"5 0\") == \"1\"",
        "num_ids_2": 25,
        "num_ids_4": 58
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(3) == \"No\"\nassert solution(8) == \"Yes\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123456') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"12345678\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == \"Yes\"\nassert solution(123456789) == \"Yes\"\nassert solution(162432536) == \"Yes\"\nassert solution(0) == \"No\"\nassert solution(-162432536) == \"No\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123456789') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123456789\") == \"Yes\"\nassert solution(\"99\") == \"Yes\"\nassert solution(\"0\") == \"No\"\n\"\"\"\n\nstdin = input()",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123456789') == 'Yes'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"123456789\") == \"Yes\", \"Should be Yes\"\nassert solution(\"1234567890\") == \"No\", \"Should be No\"\nassert solution(\"123456789012345678901234567890\") == \"No\", \"Should be No\"\n",
        "num_ids_2": 36,
        "num_ids_4": 64
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('123456789') == 'Yes'\nassert solution('123') == 'No'\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4238,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123456789\") == \"Yes\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('127') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\", \"Please ignore blank lines (those must be removed)\"\nassert solution(\"1\\n\") == \"\", \"Please ignore blank lines (those must be removed)\"\nassert solution(\"3\\n1\\n\") == \"4\", \"Test 1 failed: {}\".format(solution(\"3\\n1\\n\"))\nassert solution(\"100000\\n\") == \"99999\", \"Test 2 failed: {}\".format(solution(\"100000\\n\"))\n",
        "num_ids_2": 41,
        "num_ids_4": 106
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n4\\n\") == \"4\"\nassert solution(\"9\\n9\\n\") == \"2\"\nassert solution(\"63\\n\") == \"2\"\nassert solution(\"6\\n\") == \"4\"\nassert solution(\"1\\n\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n') == '4'\nassert solution('100\\n') == '5'\nassert solution('9\\n') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n\") == \"1\"\nassert solution(\"6\\n\") == \"1\"\nassert solution(\"9\\n\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n127''') == '4'\nassert solution('''0\n0''') == '1'\nassert solution('''1\n-1''') == '2'\nassert solution('''13\n-1''') == '3'\nassert solution('''10\n-1''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''127\n''') == '4'\nassert solution('''128\n''') == '3'\nassert solution('''129\n''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4239,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n''') == '4'\nassert solution('''\n10\n''') == '6'\nassert solution('''\n15\n''') == '5'\nassert solution('''\n20\n''') == '7'\nassert solution('''\n21\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"kyoto\"\n    ) == \"Yes\"\nassert solution(\n    \"tokyo\"\n    ) == \"No\"\n\n\"\"\"\n\nfrom typing import List",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('kyoto') == 'tokyo'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 'No'\nassert solution('kyoto') == 'No'\nassert solution('tokyo') == 'Yes'\nassert solution('kyoto') == 'No'\nassert solution('kyoto') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"kyoto\") == \"tokyo\"\nassert solution(\"tokyo\") == \"kyoto\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"\nassert solution(\"hello\") == \"No\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"kyoto\") == \"Yes\"\nassert solution(\"tokyo\") == \"Yes\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"kyoto\") == \"toky\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4240,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('kyoto') == 'Yes'\nassert solution('tokyo') == 'No'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"cabacc\\n\"\n    \"abc\\n\"\n) == \"1\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"c\") == \"\"\nassert solution(\"cc\") == \"\"\nassert solution(\"aabc\") == \"\"\nassert solution(\"cabacc\") == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 32
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('cabacc') == '1'\nassert solution('abc') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('cabacc') == 1\nassert solution('abc') == 0",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"cabacc\") == 1\n\nassert solution(\"abc\") == 0\n\nassert solution(\"abcd\") == 0\n\nassert solution(\"abcdabcd\") == 1\n\nassert solution(\"abcabcabcabc\") == 1",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"1\"\nassert solution(\"abcabcd\") == \"1\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"cabacc\") == \"1\"\nassert solution(\"abc\") == \"0\"\nassert solution(\"\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 31
    },
    {
        "number": 4241,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('abc') == 0\nassert solution('abcdefghijkl') == 2\nassert solution('abcabc') == 1\nassert solution('abcabcdefghijkl') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('10 9 2') == '2'\nassert solution('4 10 7 3') == '4'\nassert solution('7 3 9 4 2') == '3'\nassert solution('10 9 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('10 20 5 1') == '1'\nassert solution('10 20 5') == '5'\nassert solution('20 10 5 1') == '5'\nassert solution('12 8 2') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 8 2\") == \"2\"\nassert solution(\"8 12 2\") == \"2\"\nassert solution(\"12 4 3\") == \"3\"\nassert solution(\"5 8 2\") == \"2\"\nassert solution(\"8 12 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 2\") == \"2\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"7\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n') == '3'\nassert solution('1\\n6\\n3\\n') == '2'\nassert solution('8\\n12\\n2\\n') == '4'\nassert solution('1\\n1\\n2\\n') == '2'\nassert solution('5\\n7\\n3\\n') == '3'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 12 2\n''') == '2'\nassert solution('''8 12 3\n''') == '3'\nassert solution('''8 12 4\n''') == '4'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 12 2''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 12 2') == '2'\nassert solution('4 17 2') == '4'\nassert solution('10 50 10 2') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([8, 12, 2]) == \"2\"\nassert solution([16, 10, 9]) == \"2\"\nassert solution([16, 12, 10, 8, 9]) == \"2\"",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4242,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 12 2\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2020'\nassert solution('100') == '2040'\nassert solution('1000') == '2040'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1024\") == \"2020\"\nassert solution(\"1\") == \"1000\"\nassert solution(\"2\") == \"1000\"\nassert solution(\"1000000\") == \"10000000000\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"5\"\nassert solution(\"8\") == \"20\"\nassert solution(\"1000\") == \"10000\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"2020\"\nassert solution(input()) == \"2021\"\nassert solution(input()) == \"2022\"\nassert solution(input()) == \"2023\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1024') == '2020'\nassert solution('20') == '20'\nassert solution('10') == '10'\nassert solution('5') == '5'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"256\") == \"2019\"\nassert solution(\"1024\") == \"2020\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"2020\"\nassert solution(\"1\") == \"2020\"\nassert solution(\"0\") == \"2020\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000') == '2020'\nassert solution('500') == '1000'\nassert solution('100') == '500'\nassert solution('20') == '50'\nassert solution('10') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000\") == \"2020\"\nassert solution(\"2000\") == \"2000\"\nassert solution(\"1000\") == \"2020\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4243,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1000\n500\n100\n50\n10\n5\n1''') == '2020'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n1 4\") == \"5\"\nassert solution(\"3\\n1 2 4\") == \"5\"\nassert solution(\"4\\n1 4 3 2\") == \"7\"\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"1\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1\\n') == '5'\nassert solution('2\\n2\\n') == '4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n1 2 3') == '5'\nassert solution('1\\n1 2') == '1'\nassert solution('2\\n1 2') == '1'\n\"\"\"\n\nn = int(input())\ninput_list = list(map(int, input().split()))\nprint(min(input_list))\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 4') == '5'\nassert solution('3\\n1 2 3') == '6'\nassert solution('4\\n2 4 2 2') == '9'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 4\n''') == '5'\nassert solution('''\n2\n0 1\n''') == '1'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"5\"\nassert solution(\"5\") == \"10\"\nassert solution(\"1 2\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 4\\n\") == \"5\"\nassert solution(\"2\\n0 1\\n\") == \"1\"\nassert solution(\"1\\n1\\n\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 47
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3\n2 3 2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n3 2 5 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n4 2 6 5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n5 5 4 3 2\n\"\"\") == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4244,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n1 4') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 10\\n') == '3'\nassert solution('2 3\\n') == '1'\nassert solution('1 1\\n') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '3'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 10') == '3'\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 10') == '3'\nassert solution('3 1') == '3'\nassert solution('5 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 10') == '3'\nassert solution('4 20') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == '3'\nassert solution('1 1') == '3'\nassert solution('2 3') == '3'\nassert solution('1 2') == '2'\nassert solution('1 3') == '3'\n\n------------------------------------------------------------------------------------------\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq A \\leq 20\n - 1 \\leq B \\leq 20\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the minimum number of power strips required.\n\n-----Sample Input-----\n4 10\n\n-----Sample Output-----\n3\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n----------------------------------------------------------------------------------------------\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq A \\leq 20\n - 1 \\leq B \\leq 20\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the minimum number of power strips required.\n\n-----Sample Input-----\n4 10\n\n-----Sample Output-----\n3\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n------------------------------------------------------------------------------------------------\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq A \\leq 20\n - 1 \\leq B \\leq 20\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the minimum number of power strips required.\n\n-----Sample Input-----\n4 10\n\n-----Sample Output-----\n3\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n------------------------------------------------------------------------------------------\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq A \\leq 20\n - 1 \\leq B \\leq 20\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the minimum number of power strips required.\n\n-----Sample Input-----\n4 10\n\n-----Sample Output-----\n3\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n----------------------------------------------------------------------------------------------\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq A \\leq 20\n - 1 \\leq B \\leq 20\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the minimum number of power strips required.\n\n-----Sample Input-----\n4 10\n\n-----Sample Output-----\n3\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n------------------------------------------------------------------------------------------------\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq A \\leq 20\n - 1 \\leq B \\leq 20\n\n-----Input-----\nInput is given from Standard Input in the following format:\nA B\n\n-----Output-----\nPrint the minimum number of power strips required.\n\n-----Sample Input-----\n4 10\n\n-----Sample Output-----\n3\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n------------------------------------------------------------------------------------------\n\n3 power strips, each with 4 sockets, extend the socket into 10 empty sockets.\n\nTakahashi's house has only one socket.\n\nTakahashi wants to extend it with some number of power strips, each with A sockets, into B or more empty sockets.\n\nOne power strip with A sockets can extend one empty socket into A empty sockets.\n\nFind the minimum number of power strips required.\n\n-----Constraints-----\n - All values in input are integers.\n - 2 \\leq A \\leq 20\n - 1 \\leq B \\leq 20\n\n-----Input-----\nInput is given",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 10\n''') == '3'\nassert solution('''\n2 9\n''') == '3'\nassert solution('''\n1 10\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 10') == '3'\nassert solution('8 10') == '5'\nassert solution('12 20') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4245,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"3\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"3 1\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CSS\") == '2'\nassert solution(\"CSR\") == '2'\nassert solution(\"CSS\") == '2'\nassert solution(\"CSR\") == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('CSR') == '2'\nassert solution('CSS') == '2'\nassert solution('SRS') == '1'\nassert solution('SSS') == '3'\nassert solution('SRS') == '0'\n\ninput_data = input()\nfor char in input_data:\n    print(char)\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('CSS') == \"2\"\nassert solution('CSR') == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''CSS\nCSR\n''') == '2'\nprint(solution('''CSS\nCSR\n'''))",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"CSS\") == \"2\"\nassert solution(\"CSR\") == \"2\"\n\n##sum of cubes of consecutive numbers",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\".CSQ\") == '2'\nassert solution(\".CSS\") == '2'\nassert solution(\".CSR\") == '3'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nSS\nSS\n''') == '2'\nassert solution('''\nCSR\nCSR\n''') == '3'\n'''\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4246,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"CSS\\nCSR\") == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 3 5 4 2\") == \"2\"\nassert solution(\"4\\n1 3 5 4 2\") == \"2\"\nassert solution(\"4\\n1 3 5 4 2\") == \"2\"\nassert solution(\"4\\n1 3 5 4 2\") == \"2\"\nassert solution(\"4\\n1 3 5 4 2\") == \"2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('5\\n1 3 5 4 2') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2'\nassert solution('1\\n1 2 3 4\\n') == '1'\nassert solution('2\\n1 2 3 4\\n') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 5 4 2') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 5 4 2\\n\") == \"2\"\nprint(\"OK\")\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 3 5 4 2\\n') == '2\\n'\nassert solution('10\\n3 2 4 1 5 6 7 8 9\\n') == '8\\n'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4247,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 5 4 2') == '2'\nassert solution('4\\n1 3 2 4') == '0'\nassert solution('10\\n1 2 3 4 5 6 7 8 9 10') == '8'\nassert solution('7\\n1 3 5 2 4 6 8') == '2'\nassert solution('6\\n1 3 5 2 4 6') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 74
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '6.480'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"5.480\"\nassert solution(\"10\") == \"6.040\"\nassert solution(\"8\") == \"6.040\"\nassert solution(\"8\") == \"6.040\"\nassert solution(\"5\") == \"5.480\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\\n-2.14 2.06\\n-1.14 2.04\\n-2.16 1.46\\n-2.14 0.70\\n-1.42 0.40\\n-0.94 -0.48\\n-1.42 -1.28\\n-2.16 -1.62\\n\") == \"5.410\"\nassert solution(\"5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n\") == \"5.620\"\nassert solution(\"8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n\") == \"5.480\"\nassert solution(\"5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n\") == \"6.040\"\nassert solution(\"8\\n16.94 2.42\\n15.72 2.38\\n14.82 1.58\\n14.88 0.50\\n15.76 -0.16\\n16.86 -0.20\\n17.00 0.88\\n16.40 0.92\\n\") == \"6.720\"\n",
        "num_ids_2": 144,
        "num_ids_4": 279
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '5.410'\nassert solution('5') == '5.620'\nassert solution('8') == '5.480'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8') == '5.420'\nassert solution('5') == '6.000'\nassert solution('8') == '5.420'\nassert solution('5') == '6.000'\nassert solution('8') == '5.420'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n-----Input-----\n8\n-2.14 2.06\n-1.14 2.04\n-2.16 1.46\n-2.14 0.70\n-1.42 0.40\n-0.94 -0.48\n-1.42 -1.28\n-2.16 -1.62\n\n-----Output-----\n5.410\n\n-----Input-----\n5\n2.26 1.44\n2.28 0.64\n2.30 -0.30\n1.58 0.66\n3.24 0.66\n\n-----Output-----\n5.620\n\n-----Input-----\n8\n6.98 2.06\n6.40 1.12\n5.98 0.24\n5.54 -0.60\n7.16 0.30\n7.82 1.24\n8.34 0.24\n8.74 -0.76\n\n-----Output-----\n5.480\n\n-----Input-----\n5\n10.44 2.06\n10.90 0.80\n11.48 -0.48\n12.06 0.76\n12.54 2.06\n\n-----Output-----\n6.040\n\n-----Input-----\n8\n16.94 2.42\n15.72 2.38\n14.82 1.58\n14.88 0.50\n15.76 -0.16\n16.86 -0.20\n17.00 0.88\n16.40 0.92\n\n-----Output-----\n6.720''') == '6.720':\n    print('Good job!')\nelse:\n    print('Try again!')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5.480\"\nassert solution([8,6.98,6.40,5.98,3.24,0.66,5.54,7.82,7.82,1.24]) == \"5.480\"\nassert solution([5,10.44,10.90,11.48,12.06,12.54]) == \"6.040\"\nassert solution([8,16.94,15.72,14.82,14.88,15.76,16.86,17.00,16.40,0.88]) == \"6.040\"\n",
        "num_ids_2": 58,
        "num_ids_4": 138
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"8\") == \"5.410\"\nassert solution(\"5\") == \"5.620\"\nassert solution(\"8\") == \"5.480\"\nassert solution(\"5\") == \"6.040\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n2.26 1.44\\n2.28 0.64\\n2.30 -0.30\\n1.58 0.66\\n3.24 0.66\\n') == '5.620'\nassert solution('8\\n6.98 2.06\\n6.40 1.12\\n5.98 0.24\\n5.54 -0.60\\n7.16 0.30\\n7.82 1.24\\n8.34 0.24\\n8.74 -0.76\\n') == '5.480'\nassert solution('5\\n10.44 2.06\\n10.90 0.80\\n11.48 -0.48\\n12.06 0.76\\n12.54 2.06\\n') == '6.040'\nassert solution('7\\n20.62 3.00\\n21.06 2.28\\n21.56 1.36\\n21.66 0.56\\n21.64 -0.52\\n22.14 2.32\\n22.62 3.04\\n') == '6.720'\n",
        "num_ids_2": 135,
        "num_ids_4": 261
    },
    {
        "number": 4248,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5.480\"\nassert solution(\"8\") == \"5.620\"\nassert solution(\"5\") == \"6.040\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == \"4\"\nassert solution('''5 16\n5 5 5 5 5\n''') == \"2\"\nassert solution('''5 26\n5 5 5 5 5\n''') == \"-1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 8\n2 3 1 1 2''') == '4'\nassert solution('''5 16\n5 5 5 5 5''') == '2'\nassert solution('''5 26\n5 5 5 5 5''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"5 8\") == \"4\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 26') == '-1'\nassert solution('5 16') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 8\n2 3 1 1 2\n''') == '4'\nassert solution('''7 10\n1 3 4 2 1 4 2\n''') == '2'\nassert solution('''5 16\n5 5 5 5 5\n''') == '1'\nassert solution('''5 26\n5 5 5 5 5\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '2'\nassert solution('5 26') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"2\"\nprint(solution(input))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 8') == '4'\nassert solution('7 10') == '2'\nassert solution('5 16') == '1'\nassert solution('5 26') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 8\") == \"4\"\nassert solution(\"7 10\") == \"2\"\nassert solution(\"5 16\") == \"2\"\nassert solution(\"5 26\") == \"1\"\nassert solution(\"5 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4249,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"10 10\") == \"2\"\nassert solution(\"15 15\") == \"2\"\nassert solution(\"20 20\") == \"1\"\nassert solution(\"15 15\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1''') == '1 1'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 2'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '2 1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_) == \"1 2 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 2 3 2 4 3 1''') == '1 2 3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3') == '1 2 3'\nassert solution('10 4') == '7 3 1 3'\nassert solution('15 2') == '7 3 1 3'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2 3\n2 4 5\n1 2 3''') == '1 2 3'\nassert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\n''') == '1 1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '2 4 1 3'\nassert solution('10 4') == '7 3 1 3'\nassert solution('15 2') == '7 3 1 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3 \nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'\nprint('AoC 2020 - Day 4: Stone Game')\nprint('Part 1')\nprint('Completed')\nprint('=' * 50)\nprint('\\nPart 2')\nprint('Completed')\nprint('=' * 50)",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1''') == '1 1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''\n10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''\n15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1 1\n''') == '1 1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4250,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''7 3\n1 2 3 2 4 3 1\n''') == '1 2 3'\nassert solution('''10 4\n1 3 1 3 10 3 7 7 12 3\n''') == '7 3 1 3'\nassert solution('''15 2\n1 2 1 1 1 2 1 1 2 1 2 1 1 1 1\n''') == '1 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2') == '5'\nassert solution('2 4') == '0'\nassert solution('6 1') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 2\n3 4\n5 6\n''') == '0'\nassert solution('''\n2 4\n5 3\n1 2 3 4\n''') == '2'\nassert solution('''\n4 2\n3\n3\n1\n1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3 4\n10 8\n5 3\n4 3\n''') == '5'\nassert solution('''\n4\n1 2 3 4\n10 8\n5 3\n4 3\n''') == '0'\nassert solution('''\n6\n1 2 3 4 5\n10 3 7 3\n''') == '3'\nassert solution('''\n2\n1 2\n10 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"5\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\n1 2 3 4\") == \"3\"\nassert solution(\"6 1\\n3\\n6\\n2\\n5\\n1\\n4\") == \"0\"\nassert solution(\"4 2\\n9 9\\n10 8\\n5 3\\n4 3\") == \"3\"",
        "num_ids_2": 46,
        "num_ids_4": 73
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"5\"\nassert solution(\"2 4\") == \"0\"\nassert solution(\"6 1\") == \"3\"\nassert solution(\"4 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"4 2\\n\"\n    \"9 9\\n\"\n    \"10 8\\n\"\n    \"5 3\\n\"\n    \"4 3\\n\"\n) == \"5\"\n\nassert solution(\n    \"6 1\\n\"\n    \"3\\n\"\n    \"6\\n\"\n    \"2\\n\"\n    \"5\\n\"\n    \"1\\n\"\n    \"4\\n\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0'\nassert solution('4 2') == '5'\nassert solution('6 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4251,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"5\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('x') == 'x'\nassert solution('xxx') == 'xxx'\nassert solution('xxo') == 'xxo'\nassert solution('xxxiii') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"01\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nxxxxxx\n''') == '1'\nassert solution('''10\nxxxxxxxxxx\n''') == '8'\nassert solution('''20\nxxxxxxxxxxxxxx\n''') == '12'\nassert solution('''50\nxxxxxxxxxxxxxxxxxxxxx\n''') == '49'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''xiii\n\n''') == '1'\n\nassert solution('''xxxxx\n\n''') == '0'\n\nassert solution('''xxxiii\n\n''') == '3'\n\nassert solution('''xxoxx\n\n''') == '8'\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\\nxxxiii\") == \"1\"\nassert solution(\"10\\nxxxxxxxxxx\") == \"8\"\n\n\n\n\"\"\"\nimport math",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"x\") == \"x\"\nassert solution(\"xx\") == \"xx\"\nassert solution(\"xxx\") == \"xxx\"\nassert solution(\"xXXX\") == \"xxXx\"\n\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"0\"\nassert solution(\"10\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1'\nassert solution('''5\n1\n2\n3\n4\n5\n''') == '0'\nassert solution('''4\n1\n2\n3\n''') == '0'\nassert solution('''7\n1\n2\n3\n4\n5\n6\n''') == '0'\nassert solution('''12\n11\n10\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\nxxxiii\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\nxxoxx\n\"\"\") == \"0\"\nassert solution(\"\"\"\n10\nxxxxxxxxxx\n\"\"\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4252,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('1') == '1'\nassert solution('abc') == ''\nassert solution('abac') == ''\nassert solution('123abc') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '50'\nassert solution('10') == '100'\nassert solution('100') == '500'\nassert solution('3') == '18'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nr\n''') == '48'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '48'\nassert solution('4') == '48'\nassert solution('5') == '100'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0'\nassert solution('3') == '9'\nassert solution('4') == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"48\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '32'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"48\"\nassert solution(\"12\") == \"3680\"\nassert solution(\"16\") == \"7808\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"48\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"9\"\nassert solution(\"5\") == \"16\"\nassert solution(\"10\") == \"37\"\nassert solution(\"0\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4253,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '48'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([4, 5]) == 'unsafe'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4 5\n''') == 'unsafe'\nassert solution('''\n1 2\n''') =='safe'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"unsafe\", \"1st Test Case\"\nassert solution(\"10 4\") == \"unsafe\", \"2nd Test Case\"\nassert solution(\"10 1\") == \"safe\", \"3rd Test Case\"\nassert solution(\"15 1\") == \"unsafe\", \"4th Test Case\"\nassert solution(\"5 2\") == \"safe\", \"5th Test Case\"\n",
        "num_ids_2": 36,
        "num_ids_4": 71
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 5\") == \"unsafe\"\nassert solution(\"2 3\") == \"safe\"\nassert solution(\"3 1\") == \"unsafe\"\nassert solution(\"4 1\") == \"safe\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"unsafe\"\nassert solution(\"10 10\") == \"safe\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') =='safe'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 5\") == \"unsafe\"\nassert solution(\"5 5\") == \"safe\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 5\n1 3\n1 5\n2 5\n''') == 'unsafe'\nassert solution('''1 5\n1 3\n1 5\n2 5\n''') =='safe'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 5') == 'unsafe'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4254,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == 'unsafe'\nassert solution('4 5') =='safe'\n\"\"\"\n\n\"\"\"\n3\n1 2\n2 3\n0 0\n\nunsafe\n\n5\n2 3 4 1 5\n4 3 2 5 1\n3 4 1 2 5\n3 4 1 5 2\n3 4 1 5 2\n\nsafe\n\n3\n1 2\n2 3\n0 0\n\nsafe\n\"\"\"\n\nn, m = map(int, input().split())\narr = list(map(int, input().split()))\nres = []\n\nfor i in range(n):\n    for j in range(i + 1, n):\n        if arr[i] + arr[j] > m:\n            break\n        elif arr[i] + arr[j] < m:\n            res.append(arr[i])\n            res.append(arr[j])\n            break\n\nprint(' '.join(map(str, sorted(res))))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3\\n5') == '6'\nassert solution('1 1\\n1 1\\n1') == '1'\n\nstdin = input().split('\\n')\n\nassert len(stdin) == 2\n\nsolution(stdin[0])\nassert stdin[1] == '6'\n\n----Hint----\nWe can solve this problem by using the Pythagorean theorem, which states that:\n\n|AB| + |BC| = |CA|\n\nWe can factorize the sides into the two smaller values:\n\n|AB| = sqrt( |AB|\u00b2 - (4*|BC|) )\n|BC| = sqrt( |AB|\u00b2 - (4*|BC|) )\n\nTo solve for the given sides, we can subtract the two smaller sides by the larger side:\n\n|AB| = sqrt( |AB|\u00b2 - 4*|BC| )\n|AB| = sqrt( |AB|\u00b2 - (4*|BC|) )\n\nOr we can subtract the smaller sides from the larger sides to get:\n\n|AB| - |BC| = |CA|\n|AB| - |CA| = |BC|\n\nOr we can get the square roots to get:\n\n|AB| = sqrt( |AB|\u00b2 )\n|AB| = sqrt( (4*|BC|) )\n|BC| = sqrt( (4*|AB|) )\n|CA| = sqrt( |AB|\u00b2 )\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4 5''') == '6'\nassert solution('''3 4 5\n5 7 8''') == '16'\nassert solution('''3 4 5\n5 7 8\n9 10 11''') == '12'",
        "num_ids_2": 24,
        "num_ids_4": 33
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 4\") == \"6\"\n\nprint(solution(\"3 4 5\"))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4 5\") == \"6\"\nassert solution(\"4 5 4\") == \"12\"\nassert solution(\"7 8 4\") == \"20\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 3\") == \"6\"\nassert solution(\"3 4 5\") == \"12\"\nassert solution(\"6 5 4\") == \"20\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"6\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 2 3') == '6'\nassert solution('10 20 30') == '36'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4255,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 4 5') == '6'\nassert solution('1 2 3') == '6'\nassert solution('2 2 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 10 20\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 1 2') == '1'\nassert solution('20 11 4') == '4'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('2 5 4') == '4'\nassert solution('1 5 3') == '3'\nassert solution('1 5 3') == '3'\nassert solution('1 5 4') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 11 4\\n\") == \"4\"\nprint(\"--- %s seconds ---\" % (time.time() - start_time))\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 11 4\") == \"4\"\nassert solution(\"1 10 1\") == \"10\"\nassert solution(\"1 100 1\") == \"100\"\nassert solution(\"1 10 1\") == \"100\"\nassert solution(\"1 10 1\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 11 4') == '4'\nassert solution('1 1 1') == '1'\nassert solution('10 10 10') == '10'\nassert solution('20 21 22') == '11'\nassert solution('11 10 11') == '11'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 11 4\") == \"4\"\nassert solution(\"1 10 8\") == \"8\"\nassert solution(\"1 12 8\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4256,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 10 4\") == \"4\", \"Should be 4\"\nassert solution(\"5 4 4\") == \"5\", \"Should be 5\"\nassert solution(\"9 10 2\") == \"10\", \"Should be 10\"\nassert solution(\"1 10 8\") == \"8\", \"Should be 8\"\nassert solution(\"1 1 1\") == \"1\", \"Should be 1\"",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '2', \"Wrong!\"\nassert solution('1 0') == '0', \"Wrong!\"\nassert solution('0 0') == '0', \"Wrong!\"\nassert solution('1 1') == '2', \"Wrong!\"\nassert solution('2 2') == '4', \"Wrong!\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\\n\") == \"1 2\\n\"\nassert solution(\"2 3\\n\") == \"2 3\\n\"\nassert solution(\"3 4\\n\") == \"6\\n\"\nassert solution(\"4 5\\n\") == \"10\\n\"\nassert solution(\"5 6\\n\") == \"15\\n\"\n",
        "num_ids_2": 32,
        "num_ids_4": 62
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\n\"\"\"\n\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '10'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"10\"\n\nprint(solution(\"3 4\"))\nprint(solution(\"3 2\"))\n\n2 2\n3 3\n5 4\n\n2 3\n5 4\n\n3 4\n2 3\n\n-4 5\n4 1\n\n1 -5\n-2 -3\n\n3 4\n1 3\n\n4 -3\n-1 -2\n\n5 -4\n-1 1\n\n4 -3\n-1 -2\n\n-5 -4\n1 1\n\n5 4\n\n1 5\n\n3 4\n\n1 2\n\n5 4\n\n-3 1\n-1 2\n\n3 3\n\n1 2\n\n2 1\n\n3 3\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 -3\n\n3 4\n\n2 -3\n\n-3 4\n-1 2\n\n-5 -4\n1 1\n\n-4 -3\n-1 1\n\n-5 4\n-1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-2 -1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-5 4\n-1 2\n\n4 -3\n-1 2\n\n-5 4\n-1 2\n\n4 -3\n-1 2\n\n1 2\n\n-5 -4\n-1 1\n\n-4 -3\n-1 1\n\n-5 4\n-1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n\n-2 1\n1 2\n\n-4 3\n-1 1\n\n4 -3\n-1 2\n\n-2 -1\n1 2\n\n5 4\n\n1 2\n\n3 4\n\n1 2\n\n-3 4\n-1 2\n\n-3 3\n\n1 2\n\n2 1\n\n3 4\n\n1 2\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"2 1\") == \"1 2\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5') == '10'\nassert solution('12 4') == '20'\nassert solution('3 5') == '15'\n\"\"\"\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2\n2 3\n3 4\n4 5''') == '15'\nassert solution('''1 5\n5 2\n2 4\n4 1''') == '25'\nassert solution('''1 3\n3 2\n2 1\n1 4''') == '24'\nassert solution('''1 2\n2 3\n3 1\n1 4''') == '31'\n'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\", \"Wrong!\"\nassert solution(\"2 2\") == \"4\", \"Wrong!\"\nassert solution(\"10 10\") == \"100\", \"Wrong!\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4257,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('3 5 7') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('5 5 7') == '10'\nassert solution('3 2 5 7') == '6'\nassert solution('5 2 5 7') == '6'\nassert solution('3 3 5 7') == '6'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 7') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('5 5 7') == '15'\nassert solution('3 5 7') == '10'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 1 2') == '3'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"1 2 3\") == \"9\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"-1 1 1\") == \"1\"\nassert solution(\"0 0 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5 7\n''') == '10'\nassert solution('''\n4 5 7\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('10 2 5') == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 7\") == \"10\"\nassert solution(\"5 4 5\") == \"10\"\nassert solution(\"15 12 7\") == \"10\"\nassert solution(\"10 10 10\") == \"10\"\nassert solution(\"3 5 4 5\") == \"10\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4258,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 7') == '10'\nassert solution('1 1 1') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n500 600\\n\") == \"OK\"\nassert solution(\"6\\n1000 500\\n\") == \"NG\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"OK\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7') == 'OK'\nassert solution('10') == 'NG'\nassert solution('50') == 'NG'\nassert solution('500') == 'OK'\nassert solution('600') == 'OK'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n10\\n') == 'OK'\nassert solution('6\\n100\\n') == 'NG'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == 'OK'\nassert solution('7 3') == 'NG'\nassert solution('7 6') == 'OK'\n\n\"\"\"\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7') == 'OK'\nassert solution('15') == 'NG'\n\n\"\"\"\n\nstdin = input()\n\nk, a, b = [int(x) for x in stdin.split(' ')]",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"7\\n9 27\") == \"NG\"\nassert solution(\"7\\n10 50\") == \"NG\"\nassert solution(\"7\\n-12 4\") == \"NG\"\n",
        "num_ids_2": 28,
        "num_ids_4": 57
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\n500 600\") == \"OK\"\nassert solution(\"4\\n2 5\") == \"NG\"\nassert solution(\"5\\n500 100\") == \"NG\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n5\\n\") == \"OK\"\nassert solution(\"2\\n10\\n\") == \"NG\"\nassert solution(\"3\\n15\\n\") == \"NG\"\nassert solution(\"4\\n30\\n\") == \"OK\"\nassert solution(\"5\\n45\\n\") == \"NG\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4259,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"OK\"\nassert solution(\"3\") == \"NG\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 5\") == \"2.6666\"\nassert solution(\"6 3\") == \"2.6666\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"1 0.1\") == \"0.1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 3') == '2.6644915254'\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '2.6666'\nassert solution('5 4') == '3.3333'\nassert solution('5 5') == '3.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '0.0000'\nassert solution('5 5') == '0.333333'\nassert solution('5 10') == '0.33333'\nassert solution('10 10') == '1.000000'\nassert solution('6 6') == '1.000000'\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '2.6666666667'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"2.0\"\nassert solution(\"2 3\") == \"1.3333333333\"\nassert solution(\"1 10\") == \"10.0\"\nassert solution(\"8 5\") == \"1.166666666667\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '2.3333333333'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"1.5\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2.0\"\nassert solution(\"1000000000 3\") == \"2.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4260,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5') == '2.3333333333'\nassert solution('3 1') == '2.3333333333'\nassert solution('1 2') == '2.0'\nassert solution('0 0') == '0.0'\nassert solution('1 0') == '1.0'\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 5') == '2'\nassert solution('8 2 10') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 6 3\") == \"1\"\nassert solution(\"5 4 3\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 4 3') == '1'\nassert solution('10 10 10') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 4 3\") == \"1\"\nassert solution(\"5 5 5\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"6 4 3\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 3\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 4 3\") == \"1\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(stdin) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 4 3\\n\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4261,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6 4 3\\n\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == '3'\nassert solution(\"3\") == '6'\nassert solution(\"5\") == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n1 3 2\") == \"3\"\nassert solution(\"3\\n1 3 2\\n1 3 2\\n1 3 2\") == \"3\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '3'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 3 2\n3 1 2\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '8'\nassert solution('10') == '7'\n\nprint(solution('''3\n1 2 3\n3 2 1\n'''))",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('1 3 2') == '3'\nassert solution('3 1 2') == '2'\nassert solution('1 3 2 3') == '1'\nassert solution('3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n''') == '3'\nassert solution('''3\n2 2 1\n1 2 1\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4262,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 3 2\n3 1 2\n''') == '3'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '', 'Should be empty string'\nassert solution('A') == '', 'Should be empty string'\nassert solution('AC') == '', 'Should be empty string'\nassert solution('ACD') == '', 'Should be empty string'\nassert solution('GTTT') == '', 'Should be empty string'\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('ATCODER') == 'ATC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\\\nACGTAACGT\nACTGACGT\nACGTAACGT\nACTGACGT\nACGTAACGT\nACTGACGT\nACGTAACGT\nACTGACGT\nACGTAACGT\n''') == 'ACGTAACGT'\n\nassert solution('''\\\nACGACGT\n''') == 'ACGACGT'\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('ATCODER') == 'ATC'\nassert solution('AAACCCTTT') == 'AAC'\nassert solution('AAAABAABCCCDDEEEFFGGGHHHIIJJKKKKKKSSSSSVVVVVVVVVVVV') == 'VVV'\nassert solution('AAAACCCDDDEEFFFFFFFFFFGGGHHHIIJJKKKKSSSSSSVVVVVVVVV') == 'VVV'\n",
        "num_ids_2": 22,
        "num_ids_4": 80
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ACGT\") == \"ACGT\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ATCODER') == 'ATC'\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 0\nassert solution('ATCODER') == 3\nassert solution('ACGT') == 4\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == OUTPUT\n\"\"\"\n\ns = stdin",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4263,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ATCODER') == 'AT'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('11') == '9'\nassert solution('-4') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"11\") == \"9\"\nassert solution(\"12345\") == \"10\"\nassert solution(\"123456\") == \"8\"\nassert solution(\"123456789\") == \"9\"\nassert solution(\"101\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '1'\nassert solution('100') == '9'\nassert solution('1000') == '8'\nassert solution('13579') == '12'\nassert solution('987654321') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"13\") == \"8\"\nassert solution(\"123\") == \"6\"\nassert solution(\"1234\") == \"9\"\nassert solution(\"12345\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11') == '9'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11') == '9'\nassert solution('1') == '1'\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e N (1 \\leq N \\leq 10^5).\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0432 \u0441\u0442\u043e\u043b\u0431\u0438\u043a \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e N, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c \u0437\u0430\u0434\u0430\u0447\u0438.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435:\n    \u041f\u0440\u0438\u043c\u0435\u0440 1.1. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e N, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c \u0437\u0430\u0434\u0430\u0447\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0446\u0438\u043a\u043b.\n    \u041f\u0440\u0438\u043c\u0435\u0440 1.2. \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e N, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c \u0437\u0430\u0434\u0430\u0447\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u0433\u043b\u043e\u0431\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435.\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"9\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11') == '9'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4264,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"11\") == \"9\"\nassert solution(\"12\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''cupofcoffee\ncupofhottea''') == '4'\nassert solution('''cupofcoffee\ncupofhottea''') == '4'\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\"\"\"\n\nimport math",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\n\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n\"\"\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"cupofcoffee\") == \"cupofhottea\"\nassert solution(\"cupofhottea\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\nassert solution(\"cupofcoffee\") == \"cupofcoffee\"\n",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('cupofcoffee') == 'cupofhottea'\nassert solution('cupofhottea') == 'cupofcoffee'\n\n'''\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4265,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\nassert solution('10 5') == '5 6 7 8 9 10'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 4\") == \"1 4 5 6 7 8\"\nassert solution(\"3 5\") == \"1 2 3 4 5 6 7\"\nassert solution(\"10 2\") == \"3 4 5 6 7 8 9 10\"\nassert solution(\"3 7\") == \"5 6 7 8 9 10\"\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 7\") == \"5 6 7 8 9\"\nassert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 7\") == \"5 6 7 8 9\"\nassert solution(\"5 7\") == \"5 6 7 8 9\"\nassert solution(\"6 7\") == \"5 6 7 8 9\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 7') == '5 6 7 8 9'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 7\") == \"5 6 7 8 9\"\nassert solution(\"4 4\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"3 7\\n\"\n) == \"5 6 7 8 9\"\nassert solution(\n    \"5 6 7 8 9\\n\"\n) == \"5 6 7 8 9\"\nassert solution(\n    \"1 1 1 1 1 1 1 1 1 1\\n\"\n) == \"1 1 1 1 1 1 1 1 1 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4266,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 7') == '5 6 7 8 9'\nassert solution('2 1') == '1 2 3 4 5'\nassert solution('4 2') == '1 2 3 4 5 6'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'No'\nassert solution('1') == 'Yes'\nassert solution('3') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == 'No'\nassert solution('20') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('25') == 'Yes'\nassert solution('-40') == 'No'\nassert solution('35') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"30\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"-3\") == \"No\"\nassert solution(\"0\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('25') == \"Yes\"\n\nassert solution('20') == \"No\"\n\nassert solution('-40') == \"No\"\n\nassert solution('40') == \"Yes\"\n\nassert solution('-40.5') == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"Yes\"\nassert solution(\"-40\") == \"No\"\nassert solution(\"30\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'Yes', \"Should return Yes\"\nassert solution('7') == 'No', \"Should return No\"\nassert solution('9') == 'Yes', \"Should return Yes\"\nassert solution('12') == 'No', \"Should return No\"\nassert solution('-40') == 'No', \"Should return No\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"Yes\"\nassert solution(\"-5\") == \"No\"\nassert solution(\"-40\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"X\") == \"Yes\"\nassert solution(\"-5\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4267,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"-5\") == \"No\"\nassert solution(\"20\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"3 5\") == \"1\"\nassert solution(\"-2 8\") == \"1\"\nassert solution(\"12 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"3 2\") == \"2\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"10 4\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"1\"\nassert solution(\"5 2\") == \"0\"\nassert solution(\"6 2\") == \"1\"\nassert solution(\"9 2\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 2') == '1'\nassert solution('3 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == '1'\nassert solution('6 7') == '0'\nassert solution('10 10') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n1 2\n5 5\n-2 8\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == '1'\nassert solution('10 10') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 2\") == \"1\"\nassert solution(\"3 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4268,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 2\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''5 2\n1 2\n5 5\n-2 8''') == '0'\nassert solution('''4 2\n1 2\n5 5\n-2 8''') == '0'\nassert solution('''5 4\n1 2\n5 5\n-2 8''') == '1'\nassert solution('''5 3\n1 2\n5 5\n-2 8''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('9232') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('1234') == 'Good'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3776\") == \"Bad\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5343452\") == \"Good\"\nassert solution(\"734536\") == \"Good\"\nassert solution(\"1234567\") == \"Good\"\nassert solution(\"1234566\") == \"Good\"\nassert solution(\"123456\") == \"Good\"\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Bad\"\nassert solution(input()) == \"Good\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1234\") == \"Good\"\nassert solution(\"1230\") == \"Bad\"\nassert solution(\"1235\") == \"Bad\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'Good'\nassert solution('3776') == 'Bad'\nassert solution('12345') == 'Good'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3776') == 'Good'\nassert solution('1234') == 'Bad'\nassert solution('1234') == 'Good'\nassert solution('12345') == 'Bad'\nassert solution('1234') == 'Good'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3776') == 'Bad'\nassert solution('8888') == 'Good'\nassert solution('3200') == 'Good'\nassert solution('1212') == 'Bad'\nassert solution('3366') == 'Bad'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4269,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Bad\"\nassert solution(\"13\") == \"Bad\"\nassert solution(\"37\") == \"Good\"\nassert solution(\"3779\") == \"Good\"\nassert solution(\"37795\") == \"Good\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3 4') == '3.5'\nassert solution('1\\n1') == '1.0'\n\nIf you start with two ingredients, the only choice is to put both of them in the pot. The value of the ingredient resulting from the ingredients of values 3 and 4 is (3 + 4) / 2 = 3.5.\nPrinting 3.50001, 3.49999, and so on will also be accepted.\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"3.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '2.0'\nassert solution('3') == '3.0'\nassert solution('4') == '4.0'\nassert solution('5') == '5.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n3 4\") == \"3.5\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3.5'\nassert solution('3') == '3.5'\nassert solution('4') == '3.5'\nassert solution('5') == '3.5'\nassert solution('6') == '3.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"2 3 4\") == \"3.5\"\nassert solution(\"2 3 4 5\") == \"3.5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"3.5\"\nassert solution(\"4\") == \"3.5\"\nassert solution(\"5\") == \"3.5\"\nassert solution(\"6\") == \"3.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3.5\"\nassert solution(\"3\") == \"3.50001\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"1.5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4270,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3.5'\nassert solution('1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\"\n    \"1 2\"\n    \"2 5 4\"\n    \"3 6\"\n) == \"14\"\nassert solution(\n    \"4\"\n    \"3 1 2\"\n    \"2 5 4\"\n    \"3 6\"\n) == \"18\"\nassert solution(\n    \"5\"\n    \"4 1 2\"\n    \"2 5 4\"\n    \"3 6\"\n) == \"20\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_str) == std_out_str",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '14'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"14\", \"Wrong\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '14'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"14\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"14\"\nassert solution(\"4\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 5\n3 6\n''') == '14'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n3 1 2\\n2 5 4\\n3 6') == '14'\nassert solution('5\\n5 1 2\\n2 5 4\\n3 6') == '27'\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4271,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '14'\nassert solution('4') == '18'\nassert solution('5') == '34'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == '2'\nassert solution(\"10\\nZABCDBABCQ\") == '3'\nassert solution(\"10\\nZABCDBABC\") == '2'\nassert solution(\"10\\nZABCDBABC\") == '2'\nassert solution(\"10\\nZABCDBABC\") == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '2'\nassert solution('123') == '2'\nassert solution('ABC') == '1'\nassert solution('ABCD') == '1'\nassert solution('ABCDBABCQ') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 0\nassert solution('A') == 1\nassert solution('AAAA') == 4\nassert solution('AAABBC') == 3\nassert solution('AAABBCA') == 4\n",
        "num_ids_2": 16,
        "num_ids_4": 34
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\nassert solution(\"6\") == \"5\"\nassert solution(\"7\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(10) == \"2\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\\nZABCDBABCQ\") == \"2\"\nassert solution(\"1\\nA\") == \"1\"\nassert solution(\"10\\nZZZ\") == \"0\"\nassert solution(\"10\\nZZZZ\") == \"0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '2'\nassert solution('11') == '0'\nassert solution('12') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4272,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == 0\nassert solution(\"ABCD\") == 1\nassert solution(\"ABCDBABCQ\") == 2\n",
        "num_ids_2": 16,
        "num_ids_4": 28
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\n\n\"\"\"\n\nn = int(input())\nS = []\n\nfor i in range(n):\n    S.append(input())\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"2\"\nassert solution(\"10\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\nMASHIKE\\nRUMOI\\nOBIRA\\nHABORO\\nHOROKANAI') == '2'\n\"\"\"\nimport collections",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\nMASHIKE\nRUMOI\nOBIRA\nHABORO\nHOROKANAI\n\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4\nMASHIKE\nRUMOI\nOBIRA\nHABORO\n\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '2'\n'''\n\nfrom collections import Counter",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\nMASHIKE:RUMOI:OBIRA:HABORO:HOROKANAI\") == \"2\"\n'''",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"2\"\n\"\"\"\nfrom collections import defaultdict",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"2\"\n\"\"\"\nfrom typing import List\nimport sys\nfrom collections import defaultdict\nfrom itertools import product\n\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, *data = map(str, stdin.split())\n        m, *letters = data\n        m_char_counts = {\n            chr(i): 0 for i in range(ord(\"A\"), ord(\"Z\") + 1)\n        }  # letter to position mapping\n        m_char_counts[m[0]] = 1\n        for i in range(1, len(m)):\n            m_char_counts[m[i]] += 1\n\n        letters_char_counts = defaultdict(int)\n        for letter in letters:\n            letters_char_counts[letter] += 1\n\n        # starting with letter A\n        ans = 1\n        for key, val in m_char_counts.items():\n            if letters_char_counts[key] == val:\n                ans += 1\n\n        return str(ans)\n\n\nprint(Solution().solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4273,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n\"\"\"\nimport math\n\nnum = int(input())\ns_list = input().split()\nres = 0\n\nfor i in range(len(s_list)):\n    if s_list[i][0].lower() in ('m', 'a', 'r', 'c', 'h'):\n        if s_list[i][0]!= s_list[i - 1][0]:\n            count = 1\n            for j in range(i + 1, len(s_list)):\n                if s_list[j][0] == s_list[i][0]:\n                    count += 1\n                else:\n                    break\n            res = max(res, math.ceil(count / 3))\n\nprint(res)",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 4') == 'Yes'\nassert solution('5 5') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"3\") == \"Yes\"\n\nprint(solution(input()))\n\"\"\"\nn, m = map(int, input().split())\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 1') == 'No'\nassert solution('2 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 3\n1 1 1\n2 2 2\n2 2 2''') == 'Yes'\n\nassert solution('''3 3\n1 1 1\n2 2 2\n2 2 2''') == 'No'\n\nassert solution('''3 3\n1 1 1\n2 2 2\n2 2 2''') == 'Yes'\n''')",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 3''') == 'Yes'\nassert solution('''5 5''') == 'Yes'\nassert solution('''10 10''') == 'No'\n''')\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'Yes'\nassert solution('5 3') == 'No'\nassert solution('4 2') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"6 1\") == \"No\"\n\"\"\"\n\nn, m = map(int, input().split())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4274,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"4 4\") == \"Yes\"\n\n\"\"\"\nfrom typing import List\nimport unittest\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\n\nprint(solution('sippuu'))\n\nprint(solution())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('sippuu') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('a') == 'No'\nassert solution('b') == 'No'\n\n---Algorithm---\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('hello') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('sippuu') == 'Yes'\nassert solution('hello') == 'No'\nassert solution('qweasdzxcvbnm') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"sipuu\") == \"No\"\nassert solution(\"sippuu\") == \"Yes\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"sippuu\") == \"Yes\"\nassert solution(\"aaa\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 'No'\nassert solution('sippuu') == 'Yes'\nassert solution('sipu') == 'No'\nassert solution('sipp') == 'Yes'\nassert solution('sippkk') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4275,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 70') == '4'\nassert solution('1 80') == 'TLE'\nassert solution('4 50') == '4'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 70\\n7 60\\n1 80\\n4 50\\n\") == \"4\"\nassert solution(\"3 10\\n1 5\\n2 2\\n2 2\\n\") == \"1\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"1 80\") == \"TLE\"\nassert solution(\"4 50\") == \"7\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 70') == '4'\nassert solution('4 50') == 'TLE'\nassert solution('4 50') == '4'\n\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 70') == '4'\nassert solution('1 80') == 'TLE'\n\"\"\"\n\nimport sys",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 70') == '4'\nassert solution('5 10') == '10'\nassert solution('2 5') == '5'\n\"\"\"\n\nfrom functools import reduce",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 70') == '4'\nassert solution('4 50') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 70\") == \"4\"\nassert solution(\"3 100\") == \"TLE\"\nassert solution(\"1 80\") == \"80\"\nassert solution(\"4 50\") == \"TLE\"\nassert solution(\"1 100\") == \"TLE\"\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4276,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3 70\"\n    \"7 60\"\n    \"1 80\"\n    \"4 50\"\n    ) == \"4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 3 3') == '10'\nassert solution('4 7 7') == '10'\nassert solution('4 3 3') == '8'\nassert solution('4 3 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 8') == '8'\nassert solution('10 0') == '10'\n\"\"\"\n\nn, a, b = map(int, stdin.readline().split())\nprint(n * a + b)\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('5 3 7') == '10'\nassert solution('20 1 10') == '20'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 1 2\") == \"8\", \"Wrong Answer\"\nassert solution(\"2 3 2\") == \"8\", \"Wrong Answer\"\nassert solution(\"10 5 3\") == \"8\", \"Wrong Answer\"\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 2 9\n''') == '8'\nassert solution('''\n4 2 9\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 2 9') == '8'\nassert solution('4 2 3') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1 1\") == \"0\"\nassert solution(\"2 2 4\") == \"6\"\nassert solution(\"3 5 5\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 9\") == \"8\"\nassert solution(\"4 2 9\") == \"8\"\nassert solution(\"12 3 7\") == \"12\"\nassert solution(\"5 2 8\") == \"8\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\") == \"6\", \"Should return 6\"\nassert solution(\"4 2 9\") == \"8\", \"Should return 8\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4277,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == '8'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\nacornistnt\npeanutbomb\nconstraint\n''') == '1'\nassert solution('''\n2\nbrown\nbrick\n''') == '2'\nassert solution('''\n1\none\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\n\"\"\"\nimport math",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nacornistnt\\npeanutbomb\\nconstraint\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nacornistnt\\npeanutbomb\\n') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\nacornistnt\\npeanutbomb\\nconstraint') == '1'\nassert solution('4\\nacornistnt\\npeanutbomb\\nconstraint\\nstardust') == '0'\nassert solution('5\\nstardust\\npeanutbomb\\nconstraint\\nacornistnt') == '5'\n",
        "num_ids_2": 57,
        "num_ids_4": 88
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '2'\nassert solution('10') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nacornistnt\\npeanutbomb\") == \"1\"\n\"\"\"\nimport collections\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nacornistnt\npeanutbomb\nconstraint''') == \"1\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4278,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\nacornistnt\\npeanutbomb\\n') == '1'\nassert solution('3\\nacornistnt\\npeanutbomb\\nconstraint\\n') == '1'\nassert solution('4\\nab\\nt\\n\\n\\na\\n') == '3'\n",
        "num_ids_2": 51,
        "num_ids_4": 74
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n20\n38\n56\n''') == '2'\nassert solution('''4\n20\n38\n56\n''') == '9'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2132') == '8'\nassert solution('506') == '2'\nassert solution('999999999') == '9'\nassert solution('1000000000') == '8'\nassert solution('111111') == '0'\n\n\"\"\"\n\n\nimport sys\nimport math\n\nsys.setrecursionlimit(100000)\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"20\") == \"5\"\nassert solution(\"38\") == \"2\"\nassert solution(\"56\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '2'\nassert solution('5') == '8'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == '2'\nassert solution(input) == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3\\n') == '2'\nassert solution('1\\n3\\n') == '2'\nassert solution('1\\n2\\n3\\n') == '2'\nassert solution('1\\n2\\n3\\n') == '2'\nassert solution('1\\n2\\n3\\n') == '2'\n",
        "num_ids_2": 33,
        "num_ids_4": 69
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4279,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"0\"\nassert solution(\"6\") == \"0\"\nassert solution(\"7\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1 1 1 1'\nassert solution('100 2') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 38,
        "num_ids_4": 1290
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2') == '2'\nassert solution('4 2') == '1 2 1 1 2'\nassert solution('10 2') == '1 1 1 1 1 1 1 1 1 1 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 47
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"1 1\"\nassert solution(\"4 2\") == \"1 1 2 2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''\n10 2\n3 1\n1 4\n1 2\n''') == '1'\nassert solution('''\n10 2\n3 1\n1 4\n1 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''') == '2', solution('''\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n''')\nassert solution('''\n4 2\n3 1\n1 4\n1 2\n''') == '1', solution('''\n4 2\n3 1\n1 4\n1 2\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n3 4\n3 5\n3 6\n5 2\n''') == '2'\nassert solution('''\n6 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1 1 1 1 \nInput\n4 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 2 3 2 3 1 3 1\nInput\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1 2 1 1 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n6 2\n1 4\n4 3\n3 5\n3 6\n5 2\n\n\"\"\") == \"\"\"\n2\n1 2 1 1 2 \nInput\n4 2\n3 1\n1 4\n1 2\n\nOutput\n1\n1 1 1 \nInput\n10 2\n10 3\n1 2\n1 3\n1 4\n2 5\n2 6\n2 7\n3 8\n3 9\n\nOutput\n3\n1 1 2 3 2 3 1 3 1\n\"\"\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4280,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n3 1\n1 4\n1 2\n2 5\n3 4''') == '1'\nassert solution('''6 2\n3 1\n1 4\n1 2\n2 5\n3 6\n4 7''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '2 4'\nassert solution('9') == '3 8'\n\nimport sys\nfrom collections import deque",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8\n1 1 2 4 4 4 4 4\n''') == \"2 4\"\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n''') == \"3 8\"\nassert solution('''7\n4 3 7 1 4 3 3\n''') == \"3 6\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 2 4 4') == '2 4'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n\n\n'''\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n1 2 4 4\n''') == '2 4'\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 6'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '5 2'\nassert solution('7\\n4 3 7 1 4 3 3') == '4 3 6'\nassert solution('8\\n1 1 8 8 8 4 4 4 4') == '3 8'\n",
        "num_ids_2": 40,
        "num_ids_4": 62
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n4 5 7 1 4 3 3\n''') == '4 6'\nassert solution('''7\n4 3 7 1 4 3 3\n''') == '3 8'\nassert solution('''9\n1 1 8 8 8 4 4 4 4\n''') == '3 8'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == '2 4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 2 4 4\n\"\"\") == \"2 4\"\n\nassert solution(\"\"\"\n7\n4 3 7 1 4 3 3\n\"\"\") == \"3 6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n1 2 4 4\\n\") == \"2 4\"\nassert solution(\"9\\n1 1 8 8 8 4 4 4 4\\n\") == \"3 8\"\nassert solution(\"7\\n4 3 7 1 4 3 3\\n\") == \"3 6\"\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4281,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n1 2 4 4') == '2 4'\nassert solution('9\\n1 1 8 8 8 4 4 4 4') == '3 8'\nassert solution('7\\n4 3 7 1 4 3 3') == '3 6'\n",
        "num_ids_2": 39,
        "num_ids_4": 59
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3\\n\"\n    \"2 3\\n\"\n    \"3 1\\n\"\n    \"1 2\\n\") == \"3 1 2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3 2 4 1 5\"\nassert solution(\"5\") == \"3 2 4 1 5\"\nassert solution(\"5\") == \"3 2 4 1 5\"\nassert solution(\"5\") == \"3 2 4 1 5\"\nassert solution(\"5\") == \"3 2 4 1 5\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3 2 4 1 5', solution('5')\nassert solution('3') == '3 2 4 1', solution('3')\nassert solution('2') == '2 3 1', solution('2')\n",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 3\n3 1\n1 2\n''') == '3 1 2'\n\nassert solution('''\n4\n1 2 3 4\n3 2 1 4\n4 1 2 3\n1 4 2 3\n''') == '1 4 2 3'\n\nassert solution('''\n3\n2 3\n3 1\n1 2\n''') == '3 1 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3 2 4 1 5'\nassert solution('3') == '3 2 4 1'\nassert solution('2 3') == '2 3 1'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 3\\n3 1') == '3 1 2'\nassert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\nassert solution('3\\n1 4\\n2 3') == '1 2 3 4'\nassert solution('3\\n3 1\\n2 4') == '3 1 2 4'\n",
        "num_ids_2": 54,
        "num_ids_4": 96
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3 5\\n1 4\\n2 4\\n1 5\\n2 3') == '3 2 4 1 5'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3 1 2'\nassert solution('5') == '3 2 1 4'\nassert solution('5 2') == '3 1 5 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n') == '3 2 1 5'\nassert solution('2\\n') == '3 1 2'\nassert solution('1\\n') == '1 2 3'",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4282,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2 1\"\nassert solution(\"4\") == \"2 1\"\nassert solution(\"5\") == \"3 1 2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_stdin) == output_stdout\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1000 10000 10 100 1000000000\n\n''') == \"1\"\nassert solution('''\n6\n1 10 17 12 15 2\n\n''') == \"3\"\nassert solution('''\n10\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n\n''') == \"10\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    6\n    1 10 17 12 15 2\n    ''') == '3'\nassert solution('''\n    10\n    1337 1337 1337 1337 1337 1337 1337 1337 1337 1337\n    ''') == '1'\nassert solution('''\n    6\n    1 1000 10000 10 100 1000000000\n    ''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(6) == 3, \"Your solution needs to return the maximum possible number of students in a balanced team.\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(s) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\n1 10 17 12 15 2') == '3'\nassert solution('10\\n1337 1337 1337 1337 1337 1337 1337 1337 1337 1337 1337') == '1'\nassert solution('6\\n1 1000 10000 10 100 1000000000') == '1'",
        "num_ids_2": 52,
        "num_ids_4": 71
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4283,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == str(1)\nassert solution(input(False)) == str(2)\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n20 5 7 3\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n''') == '4'\n\nassert solution('''\n1 1 2 5\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '5'\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''11\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n3\n11\n10\n20\n18\n19''') == '4'\nassert solution('''13\n15 5 4 2\n15 5 3 2\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3\n2\n12\n11\n10\n20\n18\n19''') == '-1'",
        "num_ids_2": 17,
        "num_ids_4": 31
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2\"\nassert solution() == \"4\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n20 5 7 3\n''') == '2'\nassert solution('''\n15 5 3 2\n''') == '-1'\nassert solution('''\n15 5 4 3\n''') == '5'\nassert solution('''\n15 5 2 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\n\nassert solution('''6\n15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '4'\nassert solution('''15 5 3 2\n15 5 4 3\n15 5 2 1\n15 5 5 1\n16 7 5 2\n20 5 7 3''') == '-1'\nassert solution('''10 5 4 1\n10 5 2 1\n10 5 5 1\n10 5 5 2\n10 5 5 3\n10 5 5 4\n10 5 5 5\n10 5 5 6\n10 5 5 7\n10 5 5 8\n10 5 5 9''') == '-1'\nassert solution('''20 5 7 3\n20 5 7 5\n20 5 7 6\n20 5 7 7\n20 5 7 8\n20 5 7 9\n20 5 7 10\n20 5 7 11\n20 5 7 12\n20 5 7 13\n20 5 7 14\n20 5 7 15''') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"2\"\nassert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"4\"\nassert solution(\"6\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n16 7 5 2\\n20 5 7 3\") == \"0\"\n",
        "num_ids_2": 92,
        "num_ids_4": 138
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n') == '4'\nassert solution('2\\n15 5 3 2\\n15 5 4 3\\n15 5 2 1\\n15 5 5 1\\n') == '-1'\nassert solution('3\\n10 5 3 2\\n10 5 4 3\\n10 5 2 1\\n10 5 5 1\\n') == '5'\n\nstdin = '10 5 3 2\\n10 5 4 3\\n10 5 2 1\\n10 5 5 1\\n'\nprint(solution(stdin))\n",
        "num_ids_2": 73,
        "num_ids_4": 109
    },
    {
        "number": 4284,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n2 3 4\") == \"2\"\nassert solution(\"1\\n2 4 3\") == \"-1\"\nassert solution(\"1\\n5 2 2\") == \"4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\nac?b?c''') == '24'\nassert solution('''7\n???????''') == '2835'\nassert solution('''9\ncccbbbaaa''') == '0'\nassert solution('''5\na???c''') == '46'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == '24'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\nassert solution('9') == '0'",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nabab\n''') == '4'\nassert solution('''6\nac?b?c\n''') == '24'\nassert solution('''7\n???????\n''') == '2835'\nassert solution('''9\ncccbbbaaa\n''') == '0'\nassert solution('''5\na???c\n''') == '46'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == \"24\"\nassert solution('7') == \"2835\"\nassert solution('5') == \"46\"\nassert solution('9') == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"28\"\nassert solution(\"6\") == \"24\"\nassert solution(\"9\") == \"0\"\nassert solution(\"7\") == \"28\"\nassert solution(\"5\") == \"46\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(test_case_0) == \"24\"\nassert solution(test_case_1) == \"2835\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\nac?b?c\n''') == '24'\nassert solution('''7\n???????\n''') == '2835'\nassert solution('''5\na???c\n''') == '46'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '24'\nassert solution('7') == '2835'\nassert solution('5') == '46'\nassert solution('4') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4285,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\") == \"2835\"\nassert solution(\"9\") == \"0\"\nassert solution(\"5\") == \"46\"\nassert solution(\"10\") == \"0\"\nassert solution(\"12\") == \"0\"",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\nassert solution('''\n5 0\n1 3 3 7\n''') == '12'\nassert solution('''\n5 1\n1 2\n''') == '9'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == output_string",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 3 3\n2 3 5\n2 1 1''') == '5'\nassert solution('''4 0\n1 3 3 7\n\n''') == '16'\nassert solution('''5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15''') == '18''')",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"16\"\nassert solution(input(stdin_example)) == \"16\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"18\"\n\nassert solution(input_) == \"16\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '5'\nassert solution('4 0') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '5'\nassert solution('4 0') == '16'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4286,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n1 3 3\n2 3 5\n2 1 1\n''') == '5'\nassert solution('''\n4 0\n1 3 3 7\n''') == '16'\nassert solution('''\n5 4\n1 2 3 4 5\n1 2 8\n1 3 10\n1 4 7\n1 5 15\n''') == '18'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2''') == \"14\"\nassert solution('''10 1 1\n0 9\n1 5\n\n''') == \"-1\"\nassert solution('''10 1 1\n0 9\n1 5\n\n''') == \"45\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 2 4') == '14'\nassert solution('10 1 1') == '45'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 2 4\") == \"14\"\nassert solution(\"10 1 1\") == \"45\"\nassert solution(\"10 1 1\") == \"-1\"\nassert solution(\"10 1 1\") == \"-1\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '14'\nassert solution([int(i) for i in stdin.strip().split('\\n')]) == '14'\n\n'''\n\nimport math",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\\n\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\n",
        "num_ids_2": 60,
        "num_ids_4": 82
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_) == '14'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 1 1\n0 9\n1 5\n\n''') == '45'\nassert solution('''\n10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n\n''') == '14'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 2 4\n3 7\n8 10\n0 10\n3 4\n8 1\n1 2\n''') == \"14\"\n\nassert solution('''10 1 1\n0 9\n0 5\n''') == \"45\"\n\nassert solution('''10 1 2\n2 6\n3 4\n''') == \"45\"",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 2 4\\n3 7\\n8 10\\n0 10\\n3 4\\n8 1\\n1 2\") == \"14\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"45\"\nassert solution(\"10 1 1\\n0 9\\n1 5\\n\") == \"-1\"\n",
        "num_ids_2": 58,
        "num_ids_4": 80
    },
    {
        "number": 4287,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 1 1') == '45'\nassert solution('10 1 1') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 5 5') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('2 2 3') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 5') == 'Yes', 'Wrong Answer'\nassert solution('5 5 5') == 'No'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('5 5 5') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 2 1') == 'No'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 7 5') == 'Yes', 'Your solution needs to return \"Yes\"'\nassert solution('10 10 10') == 'No', 'Your solution needs to return \"No\"'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('4 3 4') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7 5') == 'Yes'\nassert solution('1 1 2') == 'No'\nassert solution('1 1 1') == 'Yes'\nassert solution('1 1 3') == 'No'\nassert solution('1 2 2') == 'No'\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"5 8 5\") == \"Yes\"\nassert solution(\"5 8 7\") == \"Yes\"\nassert solution(\"5 7 8\") == \"No\"\nassert solution(\"7 5 5\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4288,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"1 1 1\") == \"No\"\nassert solution(\"1 1 2\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n2\\n1 2') == '1'\nassert solution('2\\n3\\n1 2') == '1'\nassert solution('2\\n100\\n1 2') == '2'\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5\n10 20 30 50\n''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n4 5') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1'\nprint(solution(input()))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4289,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"7\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"4 1\") == \"2\"\nassert solution(\"5 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '1'\nassert solution('3 1') == '1'\nassert solution('4 1') == '1'\nassert solution('5 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1\") == \"1\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '1'\nassert solution('5 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '1'\nassert solution('4 5') == '1'\nassert solution('3 5') == '0'\nassert solution('9 11') == '0'\nassert solution('3 12') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 1\") == \"1\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4290,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n') == '2'\nassert solution('8 5\\nACTTACT\\n3 7\\n2 3\\n1 8\\n') == '0'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3\\nACAC\\nAC\\nTAC\\nACTC\\nATC\\nAC\\nTCCCCG\\nACACCC\\nTCCCCGT') == '2'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == '2'\nassert solution('8 3') == '1'\nassert solution('4 1') == '0'\nassert solution('7 4') == '2'\nassert solution('10 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4 2\\nACGT\"\n) == \"1\"\nassert solution(\n    \"4 3\\nACGT\"\n) == \"2\"\nassert solution(\n    \"4 3\\nACGT\"\n) == \"3\"\nassert solution(\n    \"4 2\\nACGT\"\n) == \"0\"\nassert solution(\n    \"4 3\\nACGT\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 3\nACACTACG''') == '2'\nassert solution('''8 3\nACACTACG''') == '0'\nassert solution('''5 3\nACACTACG''') == '3'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2\\nACACTACG\\n3 7\\n2 3\\n1 8\\n') == '2'\nassert solution('10 10\\nAACCTGACCTAAACGCCCCTA\\n8 3\\n2 3\\n1 8\\n') == '3'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n') == '2'\nassert solution('8 3\\nACACTACG\\n3 7\\n2 3\\n1 8\\n') == '3'",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8 3\\nACACTACG\\n3 7\\n2 3') == '2\\n0\\n3'\nassert solution('8 3\\nACACTACG\\n3 7\\n1 8') == '3\\n0\\n3'\nassert solution('8 3\\nACACTACG\\n3 7\\n0 1') == '3\\n0\\n3'\nassert solution('8 3\\nACACTACG\\n0 1\\n3 7') == '2\\n0\\n3'\n",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4291,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8 3\nACACTACG\n3 7\n2 3\n1 8''') == '2'\nassert solution('''8 4\nACACTACG\n3 7\n2 3\n1 8\n7''') == '3'\nassert solution('''8 5\nACACTACG\n3 7\n2 3\n1 8\n7 9''') == '3'\nassert solution('''8 5\nACACTACG\n3 7\n2 3\n1 8\n7 9\n9''') == '3'\nassert solution('''8 6\nACACTACG\n3 7\n2 3\n1 8\n7 9\n9 9''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '210'\nassert solution('5 1') == '51'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\") == \"210\"\nassert solution(\"4 4\") == \"23\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"15\"\nassert solution(\"5 3\") == \"75\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n50 100 80 120 80\n''') == '210'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"210\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"4 5\\n25 30 40 50 80\\n\") == \"125\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\") == \"210\"\nassert solution(\"5 3\\n100 50 80 120 80\") == \"210\"\n\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\\n50 100 80 120 80\\n\") == '210'\nassert solution(\"6 3\\n50 100 80 120 80 50\\n\") == '220'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"210\"\n\"\"\"\n\nn, k = map(int, input().split())\nprices = list(map(int, input().split()))\n\nminimum = float(\"inf\")\nfor i in range(k):\n    price = prices[i]\n    if minimum > price:\n        minimum = price\n\nprint(minimum * k)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4292,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"210\"\nassert solution(\"5 5\") == \"120\"\nassert solution(\"6 4\") == \"240\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input := \"1 3 4\") == \"4\"\nassert solution(input := \"1 4 3\") == \"7\"\nassert solution(input := \"4 1 3\") == \"5\"\nassert solution(input := \"4 3 1\") == \"7\"\nassert solution(input := \"3 4 1\") == \"5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"5\"\nassert solution(\"3 5 6\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 4\\n\") == \"4\"\nassert solution(\"2 3 4\\n\") == \"7\"\nassert solution(\"3 4 3\\n\") == \"7\"\nassert solution(\"4 3 2\\n\") == \"5\"\nassert solution(\"5 4 2\\n\") == \"5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 4\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"6 8 5\") == \"10\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"10\"",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 4\") == \"4\"\nassert solution(\"1 2 3\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 4') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\") == \"4\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"4 2 2\") == \"8\"\nassert solution(\"4 1 1\") == \"5\"\nassert solution(\"3 3 1\") == \"3\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4\") == \"4\"\nassert solution(\"1 3 4\") == \"4\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4293,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1,3,4]) == \"4\"\nassert solution([3,4,5]) == \"10\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5\") == \"0\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"10\"\n\n\n    \n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '0'\nassert solution('1 2') == '10'\nassert solution('1 1') == '0'\n\"\"\"\n\na, x = map(int, input().split())\nprint(0 if x < a else 10)",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"1 1\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"0\"\nassert solution(\"3 5\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\n\n\"\"\"\n\nx, a = map(int, input().split())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5') == '0'\nassert solution('-5 6') == '10'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"6 5\") == \"10\"\nassert solution(\"6 6\") == \"10\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0') == '0'\nassert solution('3') == '10'\nassert solution('5') == '10'\nassert solution('7') == '0'\nassert solution('9') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4294,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(X, A) == '0'\n\n'''\n\nx, a = input().split()\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 4') == '1'\nassert solution('0 5') == '5'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 4') == '1'\nassert solution('1 2') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 4\") == \"1\"\nassert solution(\"0 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3 4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '2'\nassert solution('7 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7') == '1'\nassert solution('9 8') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 4''') == '1'\nassert solution('''10 11''') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6') == '0'\nassert solution('4 5') == '0'\nassert solution('3 7') == '1'\nassert solution('1 2') == '1'\nassert solution('13 12') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4295,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('3 4 5') == 'bust'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 7 9') == 'win'\nassert solution('0 0 0') == 'bust'\nassert solution('1 2 3') == 'win'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 7 9') == \"win\"\nassert solution('5 5 5') == \"bust\"\nassert solution('1 2 3') == \"win\"\nassert solution('4 4 4') == \"bust\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"1 1 1\") == \"bust\"\nassert solution(\"2 2 2\") == \"bust\"\nassert solution(\"1 1 1 1\") == \"win\"\nassert solution(\"3 4 5\") == \"win\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 9\") == \"win\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"0 0 0\") == \"bust\"\nassert solution(\"1 2 3\") == \"win\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 9\") == \"win\"\nassert solution(\"10 10 10\") == \"bust\"\n\"\"\"\nimport sys\nsys.stdin = open(\"input.txt\", \"rt\")\nfrom math import floor",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"win\", \"Your solution doesn't pass the test!\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(None) == 'win'\nassert solution('5 7 9') == 'win'\nassert solution('1 2 3') == 'bust'\nassert solution('5 7 8') == 'bust'\nassert solution('1 2 2') == 'bust'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4296,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 9\") == \"win\", \"5+7+9=21, so print win.\"\nassert solution(\"5 5 5\") == \"win\", \"5+5+5=10, so print win.\"\nassert solution(\"2 2 2\") == \"bust\", \"2+2+2=10, so print bust.\"\nassert solution(\"-2 -2 -2\") == \"bust\", \"-2+2+2=10, so print bust.\"\nassert solution(\"0 0 0\") == \"bust\", \"0+0+0=0, so print bust.\"\n\"\"\"\n\na1, a2, a3 = input().split(\" \")\na1 = int(a1)\na2 = int(a2)\na3 = int(a3)",
        "num_ids_2": 50,
        "num_ids_4": 105
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"8\"\nassert solution(\"4\") == \"4\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n') == '1'\nassert solution('10\\n') == '1'\nassert solution('4\\n') == '1'\nassert solution('10\\n') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '2'\nassert solution('100') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '6'\nassert solution('3') == '6'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n') == '6\\n'\n\"\"\"\n\nn = int(input())\ndiv = 0\nwhile n!= div:\n    div = 2 * div + n\n\nprint(div)\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\nassert solution('4') == '7'\nassert solution('5') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4297,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '6'\nassert solution('12') == '12'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\\n\") == \"2\"\nassert solution(\"3 2\\n\") == \"1\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"1 2\\n\") == \"0\"\nassert solution(\"3 3\\n\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"6 2\") == \"1 3\"\n\"\"\"\n\nfrom functools import reduce\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 2') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 6\n4 3\n5 2\n5 3\n1 4\n2 4''') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\", 'You failed this challenge!'\nassert solution(\"2\") == \"2\", 'You failed this challenge!'\nassert solution(\"3\") == \"2\", 'You failed this challenge!'\nassert solution(\"4\") == \"1\", 'You failed this challenge!'\nassert solution(\"5\") == \"1\", 'You failed this challenge!'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 2\") == \"2\"\nassert solution(\"6 5\") == \"3\"\nassert solution(\"6 10\") == \"4\"\nassert solution(\"6 20\") == \"5\"\nassert solution(\"6 30\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 5\") == \"2\"\nassert solution(\"5 6\") == \"1\"\n\"\"\"\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        n, d = list(map(int, stdin.split(\" \")))\n        left = 1\n        right = n\n        ans = 0\n        while left <= right:\n            mid = (left + right) // 2\n            if (n + d) % mid == 0:\n                ans = mid\n                right = mid - 1\n            else:\n                left = mid + 1\n        return str(ans)",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 2') == '2'\nassert solution('7 7') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == '2'\nassert solution('4 3') == '1'\nassert solution('2 1') == '1'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4298,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"1 2\"\nassert solution(\"1 2\") == \"2 1\"\nassert solution(\"2\") == \"3 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('16') == 'pon'\nassert solution('0') == 'bon'\nassert solution('3') == 'bon'\nassert solution('5') == 'bon'\nassert solution('7') == 'bon'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"16\") == \"pon\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6\n12\n''') == 'bon\n'''\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == \"hon\"\nassert solution('3') == \"bon\"\nassert solution('5') == \"pon\"\nassert solution('10') == \"bon\"\nassert solution('11') == \"pon\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0\") == \"honz\"\nassert solution(\"1\") == \"pon\"\nassert solution(\"2\") == \"bon\"\nassert solution(\"3\") == \"pon\"\nassert solution(\"4\") == \"hon\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"hon\"\nassert solution(\"2\") == \"pon\"\nassert solution(\"3\") == \"bon\"\nassert solution(\"4\") == \"hon\"\nassert solution(\"5\") == \"hon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''16\n''') == 'pon'\nprint('Done!')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('16') == 'pon'\nassert solution('255') == 'bon'\nassert solution('9') == 'hon'\nassert solution('8') == 'hon'\nassert solution('7') == 'pon'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"16\") == \"pon\"\nassert solution(\"17\") == \"bon\"\nassert solution(\"18\") == \"pon\"\nassert solution(\"19\") == \"bon\"\nassert solution(\"20\") == \"hon\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4299,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('16') == 'pon'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"29\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n2 1 2') == '11'\nassert solution('4\\n3 4 2 3') == '12'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\\n\", \"Wrong result\"\nassert solution(\"6\\n2 3 4 1 5\") == \"10\\n\", \"Wrong result\"\nassert solution(\"9\\n2 3 4 1 5 2\") == \"15\\n\", \"Wrong result\"\nassert solution(\"13\\n1 2 3 4 5 6 7 8 9 10 11\") == \"40\\n\", \"Wrong result\"\nassert solution(\"5\\n7 4 1 1\") == \"17\\n\", \"Wrong result\"\n",
        "num_ids_2": 46,
        "num_ids_4": 101
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"17\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"33\"\nassert solution(\"6\") == \"111\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"11\"\nassert solution(\"2\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"11\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n3 1 2\") == \"11\"\nassert solution(\"5\\n6 5 5 1\") == \"30\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '11'\nassert solution('4') == '21'\nassert solution('5') == '31'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4300,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 1\n''') == '3'\nassert solution('''5\n0 0 0 0 0\n''') == '0'\nassert solution('''10\n0 0 1 1 1 1 1 1 1 1\n''') == '3'\nassert solution('''100\n1 1 1 1 1 1 1 1 1 1\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3]) == \"4\"\nassert solution([1, 4, 3]) == \"4\"\nassert solution([1, 3, 4]) == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 38
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n1\n4\n3''') == '4'\nassert solution('''5\n1\n4\n3\n2\n5\n''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"1\") == \"4\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\\n4\\n3\") == \"4\\n3\\n4\"\nprint(solution.__doc__)\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1\n4\n3\n''') == '4\\n3\\n4', \"Wrong Answer\"\n\nprint('Correct')",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n1\n4\n:\n2\n:\n\"\"\") == \"\"\"1 4\"\"\"\nassert solution(\"\"\"\n3\n1\n4\n3\n:\n2\n:\n\"\"\") == \"\"\"3 2 4\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\nassert solution('6') == '5'\nassert solution('10') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"3\") == \"4\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4301,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '9'\nassert solution('5 3') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3\\n\") == \"9\"\nassert solution(\"15 3\\n\") == \"20\"\nassert solution(\"5 3\\n\") == \"9\"\nassert solution(\"1 1\\n\") == \"1\"\nassert solution(\"5 1\\n\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"10 2\") == \"8\"\nassert solution(\"5 4\") == \"9\"\nassert solution(\"5 6\") == \"10\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\") == \"9\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"10 20\") == \"20\"\nassert solution(\"10 50\") == \"50\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"5 3\") == \"5\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"5 5\") == \"7\"\nassert solution(\"8 5\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '9'\nassert solution('1 2') == '3'\nassert solution('1 1') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4302,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 3\n5 3''') == '9'\nassert solution('''10 10\n10 8''') == '3'\nassert solution('''10 10\n10 10''') == '0'\nassert solution('''4 5\n4 5''') == '0'\nassert solution('''3 2\n3 2''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"5 4\") == \"0\"\nassert solution(\"10 3\") == \"0\"\nassert solution(\"5 5\") == \"0\"\nassert solution(\"2 1\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"1 2 3 4\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"40\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == '40'\nassert solution('4 3') == '40'\nassert solution('10 3') == '40'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"10 1\") == \"10\"\nassert solution(\"50 3\") == \"75\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '40'\nassert solution
        "num_ids_2": 1688,
        "num_ids_4": 1688
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"3 3\") == \"6\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"5 3\n-30 -10 10 20 50\n\"\"\") == \"40\"\n\nassert solution(\"\"\"7 2\n10 -20 30 50 60 10 40\n\"\"\") == \"50\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\\n-30 -10 10 20 50\") == \"40\"\nassert solution(\"2 3\\n1 2 3\") == \"2\"\nassert solution(\"1000000000\\n0\") == \"1000000000\"\n",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4303,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\") == \"40\"\nassert solution(\"10 5\") == \"210\"\nassert solution(\"10 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3\\n') == '2'\nassert solution('10 10\\n') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\") == \"2\"\nassert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 1, 1, 1, 1, 1]) == 1",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 13\\n') == '2'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 13''') == '2'\nassert solution('''10 20 30 40 50 60''') == '4'\nassert solution('''11 22 33 44 55 66''') == '1'\nassert solution('''12 23 34 45 56 67''') == '3'\nassert solution('''14 25 36 47 58 69''') == '4'\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 13') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8 13\") == \"2\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"4 4\") == \"3\"\nassert solution(\"1 2 2 3 4 5\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"2\"\nassert solution(\"2\\n1\") == \"2\"\nassert solution(\"3\\n2\") == \"1\"\nassert solution(\"1\\n4\") == \"0\"\nassert solution(\"1\\n4\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 13\n4\n2\n2\n4\n5\n4\n3\n''') == '2'\nassert solution('''0 0\n5\n3\n2\n1\n4\n''') == '4'\nassert solution('''0 0\n6\n2\n2\n2\n2\n''') == '4'\nassert solution('''0 0\n3\n1\n2\n''') == '2'\nassert solution('''0 0\n1\n1\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4304,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 13') == '2'\n\"\"\"\nfrom math import sqrt\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 2') == '3'\nassert solution('2 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 4') == '3'\nassert solution('20 5') == '3'\nassert solution('40 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('1 2') == '1'\nassert solution('10 4') == '3'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 8') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 4') == '3'\nassert solution('10 5') == '4'\nassert solution('10 6') == '5'\nassert solution('10 7') == '5'\nassert solution('10 8') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 4\") == \"3\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4\\n') == '3'\nassert solution('10 4\\n') == '3'\nassert solution('10 4\\n') == '3'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 4\\n') == '3'\nassert solution('1 5\\n') == '5'\nassert solution('10 1\\n') == '10'\nassert solution('1 9\\n') == '10'\nassert solution('2 10\\n') == '12'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4305,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\") == \"3\"\nassert solution(\"10 4\") == \"3\"\nassert solution(\"11 1\") == \"1\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"5 6\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '50'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"15 6 1 50\") == \"70\"\nassert solution(\"1 1 1 50\") == \"50\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 75 25 100\") == \"50\", 'not true'\nassert solution(\"0 0 0 0\") == \"0\", 'not true'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('1 0 0 100') == '50'\nassert solution('1 1 0 100') == '50'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\nassert solution(\"0 50 25 100\") == \"50\"\nassert solution(\"0 0 25 100\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 75 25 100\") == \"50\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 75 25 100\") == '50'\nassert solution(\"1 0 1 0\") == '1'\nassert solution(\"0 0 0 0\") == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4306,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 75 25 100') == '50'\nassert solution('0 75 100 25') == '50'\nassert solution('1 1 1 1') == '1'\nassert solution('0 0 0 0') == '0'\nassert solution('1 0 0 0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('105') == '1'\nassert solution('1000000') == '11'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"105\") == \"1\", \"Wrong result\"\nassert solution(\"10\") == \"1\", \"Wrong result\"\nassert solution(\"1\") == \"1\", \"Wrong result\"\nassert solution(\"100\") == \"2\", \"Wrong result\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == '1'\nassert solution('100') == '2'\nassert solution('1000000') == '8'\nassert solution('105') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2\n1\n''') == '1'\nassert solution('''\n4\n3\n1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 1, 'First'\nassert solution('5') == 1, 'Second'\nassert solution('6') == 2, 'Third'\nassert solution('13') == 3, 'Fourth'\nassert solution('105') == 1, 'Fifth'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '1'\nassert solution('10') == '1'\nassert solution('15') == '3'\nassert solution('20') == '4'\nassert solution('25') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\") == \"1\"\nassert solution(\"101\") == \"1\"\nassert solution(\"1000000\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('105') == '1'\nassert solution('1') == '1'\nassert solution('10') == '2'\nassert solution('20') == '2'\nassert solution('50') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n') == '1'\nassert solution('21\\n') == '2'\nassert solution('26\\n') == '3'\nassert solution('105\\n') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4307,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"1\", \"Should return 1\"\nassert solution(\"2 3\") == \"1\", \"Should return 1\"\nassert solution(\"1 2\") == \"0\", \"Should return 0\"\nassert solution(\"7 3\") == \"1\", \"Should return 1\"\nassert solution(\"4 1\") == \"2\", \"Should return 2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\\n\") == \"1\\n\"\nassert solution(\"5 5\\n\") == \"0\\n\"\nassert solution(\"10 1\\n\") == \"1\\n\"\nassert solution(\"10 10\\n\") == \"0\\n\"\nassert solution(\"1000 1\\n\") == \"0\\n\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 3') == '1'\nassert solution('1 2') == '0'\nassert solution('4 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7 3\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 3\n1 2 1\n2 3 2\n3 4 3\n4 5 4\n5 6 5\n6 7 6\n7 8 7\n8 9 8''') == '1'\nassert solution('''1 100\n1\n2\n3\n4\n5\n6\n7\n8\n9''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n3\n4\n5\n6\n''') == '1'\nassert solution('''\n10\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '1'\nassert solution('''\n7\n5\n4\n3\n2\n1\n''') == '1'\nassert solution('''\n10\n3\n5\n7\n9\n11\n14\n15\n16\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0'\nassert solution('5 7') == '6'\nassert solution('1 5') == '1'\nassert solution('100 100') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4308,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('11') == '111'\n\nstdin = '222'\nassert solution(stdin) == '222'\n\nstdin = '3'\nassert solution(stdin) == '3'\n\nstdin = '40'\nassert solution(stdin) == '4'\n\nstdin = '345'\nassert solution(stdin) == '345'\n\nstdin = '80'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"111\") == \"111\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('111') == '111'\nassert solution('1000000') == '1000000'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('111') == '111'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == \"111\"\nassert solution(\"\") == \"111\"\nassert solution(\"1\") == \"111\"\nassert solution(\"11\") == \"111\"\nassert solution(\"1110\") == \"110\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"111\") == \"111\"\nassert solution(\"111\") == \"111\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('111') == '111'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('111') == '111'\nassert solution('1234') == '1234'\nassert solution('1634') == '1634'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4309,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"111\") == \"111\"\nassert solution(\"1111\") == \"111\"\nassert solution(\"11111\") == \"111\"\nassert solution(\"111111\") == \"111\"\nassert solution(\"11111111\") == \"111\"\n\n\"\"\"\n\nimport math\n\nN = int(stdin)",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('2 1 5') == '9'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('5 8 10') == '15'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 6 3') == '5'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 6 3') == \"5\"\nassert solution('1 10 3') == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 1 2\") == \"4\"\nassert solution(\"1 2 5\") == \"7\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 6 3\") == \"5\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"-1 2 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"5\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('10 20 30') == '25'\nassert solution('1 1 1') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4310,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 6 3') == '5'\nassert solution('1 1 1') == '2'\nassert solution('1 10 10') == '11'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '1'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(8) == '5'\nassert solution(4) == '5'\nassert solution(2) == '5'\nassert solution(1) == '5'\nassert solution(4) == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(1) == '5'\nassert solution(2) == '5'\nassert solution(3) == '5'\nassert solution(4) == '4'\nassert solution(5) == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"12\") == \"7\"\nassert solution(\"13\") == \"8\"\nassert solution(\"16\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8') == '5'\nassert solution('1') == '1'\nassert solution('4') == '2'\nassert solution('2') == '3'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '5'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('8') == '5'\nassert solution('11') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('8') == '5'\nassert solution('4') == '2'\nassert solution('2') == '1'\nassert solution('1') == '1'\nassert solution('4') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4311,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8') == '5'\nassert solution('2') == '1'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6 10 12') == 'No'\nassert solution('6 10 8 10') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 9 10 10') == 'No'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"11 1 21 1\") == \"Yes\"\nassert solution(\"1 1 1 1\") == \"Yes\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 9 10 10') == 'Yes'\nassert solution('1 1 1 1') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 3 4\") == \"No\"\nassert solution(\"10 9 10 10\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 9 10 10') == 'No'\nassert solution('5 5 5 5') == 'Yes'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"7 9 5 12\") == \"Yes\"\nassert solution(\"6 10 5 12\") == \"Yes\"\nassert solution(\"6 10 10 10\") == \"No\"\nassert solution(\"7 10 5 12\") == \"Yes\"\n\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 9 10 10\") == \"No\"\nassert solution(\"0 0 1 0\") == \"Yes\"\nassert solution(\"5 10 7 5\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3 4\n5 6 7 8''') == 'No'\n\nassert solution('''5 5 6 6\n5 5 5 6''') == 'Yes'\n\nassert solution('''6 6 9 9\n9 9 9 9''') == 'Yes'\n\nassert solution('''100 100 10 10\n10 100 10 10''') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4312,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'Yes'\nassert solution('10 9 10 10') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '5'\nassert solution('10 2 5') == '15'\nassert solution('6 3 4') == '10'\nassert solution('1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n10 2 5\n6 3 4\n\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4\n20 25 20 4\n0 1 2 2\n\n\"\"\") == \"16\"\nassert solution(\"\"\"\n5\n20 20 10 20 5\n10 1 2 5\n\n\"\"\") == \"6\"\nassert solution(\"\"\"\n3\n25 5 20\n1 2 3\n\n\"\"\") == \"9\"\nassert solution(\"\"\"\n6\n10 5 1 1 4 1\n2 5 1\n\n\"\"\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '5'\nassert solution('10 2 5') == '15'\nassert solution('6 3 4') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n10 2 5\n6 3 4\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4\n10 3 4 8\n4 8 2 4\n\"\"\") == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"10\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '5'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '5'\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4313,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n10 2 5\\n6 3 4') == '5'\nassert solution('2\\n10 2 5\\n6 3 4') == '10'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.#.#\") == \"###\\n###\\n.##\\n\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '###\\n###\\n.##\\n'\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\n\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"4 4\") == \"###\\n###\\n.##\\n\"\nassert solution(\"##.##\") == \"###\\n###\\n.##\\n\"\nassert solution(\"###\\n###\") == \"###\\n###\\n###\\n\"\n\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 69
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"11\"\nassert solution(\"3 3\") == \"222\"\nassert solution(\"4 4\") == \"2222\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n##.#\\n....\\n##.#\\n.##.\") == \"###\\n###\\n.##\\n\"\nassert solution(\"4 4\\n.##.#\\n....\\n.##.#\\n.##.\") == \"###\\n###\\n.##\\n\"\nassert solution(\"10 10\\n.##.###.#\\n###.#.#.#\\n.##.###.#\\n.###.#.#.#\\n.###.###.#\\n###.##.###\\n###.###.###\\n.##.###.###\\n##.####.###\\n.###.###.###\\n###.####.###\\n#.#.###.###\\n#.###.#.###\\n#.###.###.###\\n#.#####.###\\n#.###.###.###\\n###.###.###\\n###.#######\\n###.###.###\\n###.#####.###\\n.###.###.###\\n#.###.#.###\\n#.###.###.###\\n#.###.###.###\\n#.#####.###\\n.#######.###\\n#.#####.###\\n#.###.#######\\n###.###.#######\\n###.#######\\n###.#####.###\\n.###.####.###\\n#.###.#######\\n#.###.#.#######\\n#.###.####.###\\n#.#####.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n###.####.#######\\n###.###.#######\\n###.###.#######\\n###.###.#######\\n###.###.#######\\n###.###.#######\\n###.###.#######\\n###.###.#######\\n###.####.#######\\n###.####.#######\\n#.###.#######\\n#.#####.#######\\n#.#####.#######\\n#.###.#####.###\\n#.###.###.###\\n###.###.###.###\\n###.###.###.###\\n###.#####.###\\n###.#######.###\\n#.###.###.###\\n#.###.#####.###\\n#.###.###.###\\n#.###.###.###\\n#.###.###.###\\n#.###.###.###\\n#.#####.###\\n###.#######.###\\n###.#######.###\\n#.#####.#######\\n#######.#######\\n#######.#######\\n#.###.#######\\n#.###.#######\\n#.###.#######\\n#.###.#######\\n#.###.#######\\n#.#####.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#.#####.#######\\n#.#####.#######\\n#.#####.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#.###.#######\\n#.###.#######\\n#.###.#######\\n#.###.#######\\n#.###.#######\\n#.#####.#######\\n#.#####.#######\\n#.#####.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\n#######.#######\\",
        "num_ids_2": 72,
        "num_ids_4": 1622
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4\\n##.#\\n##..\\n####\\n\") == \"###\\n###\\n####\"\nassert solution(\"2 2\\n##.#\\n##..\\n####\\n\") == \"##\\n##\\n####\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 4\") == \"###\"\nassert solution(\"2 4\") == \"###\"\nassert solution(\"10 1\") == \"##\"\nassert solution(\"10 10\") == \"##\"\nassert solution(\"3 3\") == \"###\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 4\n##.#\n....\n##.#\n.#.#\n''') == '###\\n###\\n.##\\n'\nassert solution('''\n3 5\n###.\n.###\n####\n##..\n''') == '####\\n####\\n####'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4314,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '###\\n###\\n.##\\n'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '6.28318530717958623200', \"Wrong solution\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('100') == '6.28318530717958623200'\nassert solution('-1') == '0.0'\nassert solution('0') == '0.0'\n",
        "num_ids_2": 36,
        "num_ids_4": 61
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '12.566370614359172'\nassert solution('5') == '39.65559947038962'\nassert solution('100') == '3.8269908169872414'\nassert solution('1') == '1.5707963267948966'\n",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"3\") == \"7.52360877551020408163\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"3\") == \"7.0837836948367096\"\n\n'''\n\nimport math",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"1\")!= \"6.28\"\nassert solution(\"1\")!= \"6.2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1.5707963267948966\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"1\"\n    ) == \"6.28318530717958623200\"\nassert solution(\n    \"0\"\n    ) == \"0.0\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '6.28318530717958623200'\nassert solution('2') == '0.5355339059327394801'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4315,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"6.28318530717958623200\"\nassert solution(\"2\") == \"1.5707963267948966192\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('AABA') == 'Yes'\nassert solution('AAAB') == 'No'\nassert solution('AAAA') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ASSA\") == \"Yes\", \"Wrong!\"\nprint(solution(\"ASSA\"))\n\n-----Explanation-----\nIf S consists of exactly two kinds of characters which both appear twice in S, then they are A and S.\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('BAAB') == 'No'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ASSA') == 'Yes'\n\"\"\"\n\nimport sys\n\nsys.stdin = open('input.txt')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''ASSA''') == 'Yes'\nassert solution('''ASSA''') == 'No'\nassert solution('''ASSA''') == 'Yes'\nassert solution('''ASSA''') == 'No'\nassert solution('''ASSA''') == 'Yes'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ASSA') == 'Yes'\nassert solution('ASSH') == 'No'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4316,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'No'\nassert solution('ASSA') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n-13 3\n\n''') == '-10', \"Should be -10\"\nassert solution('''\n0 0\n\n''') == '0', \"Should be 0\"\nassert solution('''\n0\n\n''') == '0', \"Should be 0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '', 'Empty input'\nassert solution('-13 3') == '-10', 'Negative numbers'\nassert solution('1 2') == '4', 'Two numbers'\n\n\"\"\"\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n\"\"\") == \"10\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"1\\n2\"\nassert solution(\"-1 -1\") == \"-1\"\nassert solution(\"-5 -3\") == \"-10\"\nassert solution(\"10 11\") == \"14\"\nassert solution(\"-3 0\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '2'\nassert solution('3 1') == '3'\nassert solution('4 1') == '4'\nassert solution('5 1') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('-13 3') == '-10'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '-10'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n-13 3\n''') == '-10'\nassert solution('''\n-2 5\n''') == '-12'\nassert solution('''\n1 2\n''') == '2'\nassert solution('''\n2 -4\n''') == '-6'\nassert solution('''\n3 -1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4317,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '-10', \"First\"\nassert solution('12 -10') == '-18', \"Second\"\nassert solution('-10 -20') == '-40', \"Third\"\nassert solution('30 -20') == '20', \"Fourth\"\nassert solution('-100') == '-100', \"Fifth\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n4 5 6 8\n''') == '3'\nassert solution('''\n3\n4 6 7\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"1\"\nassert solution(\"8\") == \"4\"\nassert solution(\"10\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\nassert solution(\"3\\n4 5 2\\n\") == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '3'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('8') == '6'\nassert solution('10') == '8'\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n6 5 6 8') == '3'\nassert solution('4\\n3 5 6 8') == '0'\nassert solution('5\\n5 5 5 5') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3'\nassert solution('3') == '3'\nassert solution('6 5 6 8') == '3'\nassert solution('1') == '0'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4318,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n6 5 6 8\") == \"3\"\n\n---",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 1 2 3 4''') == '2'\nassert solution('''1 1 1 1''') == '1'\nassert solution('''5 1 2 3 4''') == '4'\nassert solution('''5 1 2 1 2 3''') == '3'\nassert solution('''4 1 2 1 2 3''') == '2'\n",
        "num_ids_2": 35,
        "num_ids_4": 70
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1\n1 2\n1 2 3\n1 2 3 4\n1 2 3 4 5''') == '1 3 5'\nassert solution('''5\n1 2 1 2 1\n1 2 1 2 1''') == '4 3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n1 2 3 1 2 3 4\n\n''') == '2'\n\nassert solution('''\n3\n1 1 1 1\n\n''') == '4'\n\nassert solution('''\n5\n1 2 3 4 5\n\n''') == '1'\n\nassert solution('''\n5\n1 1 1 1 1\n\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '2'\n\nassert solution('''\n4\n1 1 1 1\n''') == '4'\n\nassert solution('''\n5\n1 2 1 2 1\n''') == '3'\n\nassert solution('''\n4\n1 1 1 1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n1 2 3 4 5\n\n''') == '2'\nassert solution('''\n3\n1 2 3 4 5\n\n''') == '1'\nassert solution('''\n4\n1 2 1 2 1\n\n''') == '4'\nassert solution('''\n5\n1 2 1 2 1\n\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\\n3 4\"\nassert solution(\"5\\n1 2 1 2 1\") == \"1\\n5 1 1 1\"\nassert solution(\"1\\n1\") == \"1\\n1\"",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n1 2 3 1 2 3 4') == '2'\nassert solution('4\\n1 1 1 1') == '4'\nassert solution('5\\n1 2 1 2 1') == '3'",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7\\n1 2 3 1 2 3 4\\n\") == \"2\\n3 4\"\nassert solution(\"4\\n1 1 1 1\\n\") == \"4\"\nassert solution(\"5\\n1 2 1 2 1\\n\") == \"3\"\n",
        "num_ids_2": 43,
        "num_ids_4": 62
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    1 1 1 1\n    ''') == '1\nInput\n6\n1 2 3 4 5 6\n\nOutput\n2\n5 6\nInput\n7\n1 2 3 1 2 3 4\n\nOutput\n2\n3 4 5 6 \nInput\n8\n1 2 3 1 2 3 4 5 6\n\nOutput\n3\n2 3 4 5 6 \nInput\n9\n1 2 1 2 1 2 1 2 1\n\nOutput\n3\n1 1 1 1\nInput\n10\n1 1 1 1 1 1 1 1 1\n\nOutput\n4\n1 2 1 2 1\nInput\n11\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1 1 1 1 \nInput\n12\n1 1 1 1 1 1 1 1 1\n\nOutput\n3\n1 1 1 1 1 1 1 1\nInput\n13\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1 1 1\nInput\n14\n1 1 1 1 1 1 1 1 1\n\nOutput\n4\n1 1 1 1 1 1 1\nInput\n15\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n16\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1 1 1\nInput\n17\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1 1 1\nInput\n18\n1 1 1 1 1 1 1 1 1\n\nOutput\n3\n1 1 1 1 1 1 1\nInput\n19\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1\nInput\n20\n1 1 1 1 1 1 1 1 1\n\nOutput\n3\n1 1 1 1 1 1 1\nInput\n21\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n22\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n23\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n24\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n25\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1\nInput\n26\n1 1 1 1 1 1 1 1 1\n\nOutput\n3\n1 1 1 1 1 1\nInput\n27\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n28\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n29\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n30\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n31\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n32\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1\nInput\n33\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n34\n1 1 1 1 1 1 1 1 1\n\nOutput\n3\n1 1 1 1 1\nInput\n35\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n36\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n37\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n38\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1 1\nInput\n39\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n40\n1 1 1 1 1 1 1 1 1\n\nOutput\n3\n1 1 1 1 1\nInput\n41\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n42\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1\nInput\n43\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n44\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n45\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n46\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n47\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n48\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n49\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n50\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n51\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n52\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n53\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n54\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n55\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n56\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1\nInput\n57\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n58\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n59\n1 1 1 1 1 1 1 1 1\n\nOutput\n2\n1 1 1 1 1 1\nInput\n60\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n61\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n62\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n63\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n64\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput\n65\n1 1 1 1 1 1 1 1 1\n\nOutput\n1\n1 1 1 1 1 1\nInput",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4319,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2 3 1 2 3 4\\n') == '2\\n3 4'\nassert solution('4\\n1 1 1 1\\n') == '1\\n1 1 1 1'\nassert solution('5\\n1 2 3 4 5\\n') == '1\\n5'\nassert solution('5\\n1 1 1 1\\n') == '3'\n",
        "num_ids_2": 49,
        "num_ids_4": 89
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '1'\nassert solution('''3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '2'\nassert solution('''13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100''') == '1'\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3\n6\n7\n21\n28''') == '1'\n\nassert solution('''5\n3\n6\n7\n21\n28''') == '2'\n\nassert solution('''5\n3\n6\n7\n21\n28''') == '1'\n\nassert solution('''5\n3\n6\n7\n21\n28''') == '7'\n\nassert solution('''5\n3\n6\n7\n21\n28''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '3'\nassert solution('6') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n6\\n1\\n7\\n1\\n9\\n1\\n1') == '1'\nassert solution('2\\n3\\n1\\n3\\n1\\n4\\n1') == '2'\nassert solution('3\\n3\\n1\\n3\\n1\\n4\\n1') == '1'\nassert solution('4\\n5\\n1\\n3\\n1\\n4\\n1') == '3'\nassert solution('5\\n8\\n1\\n3\\n1\\n4\\n1') == '4'\n",
        "num_ids_2": 59,
        "num_ids_4": 115
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n3\") == \"1\"\nassert solution(\"2\\n7\") == \"1\"\nassert solution(\"3\\n9\") == \"2\"\nassert solution(\"4\\n12\") == \"2\"\nassert solution(\"5\\n13\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '1'\nassert solution('6') == '2'\nassert solution('7') == '1'\nassert solution('21') == '7'\nassert solution('28') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '2'\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '1'\nassert solution('''\n1\n2\n1\n7\n4\n333333333\n333333328\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n7\n''') == '1'\n\nassert solution('''\n4\n6\n''') == '1'\n\nassert solution('''\n7\n''') == '1'\n\nassert solution('''\n3\n8\n''') == '2'\n\nassert solution('''\n1\n10\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n6\n7\n21\n28\n999999999\n999999984\n''') == '2'\nassert solution('''\n7\n3\n2\n6\n7\n21\n28\n999999999\n999999984\n''') == '1'\nassert solution('''\n7\n3\n2\n6\n7\n21\n28\n999999999\n999999984\n''') == '4'\nassert solution('''\n7\n3\n2\n6\n7\n21\n28\n999999999\n999999984\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4320,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\\n6\\n\") == \"2\\n1\\n2\"\nassert solution(\"3\\n\") == \"1\\n2\\n1\"\nassert solution(\"4\\n\") == \"1\\n2\\n1\"\nassert solution(\"5\\n\") == \"1\\n3\\n2\"\nassert solution(\"6\\n\") == \"1\\n2\\n1\"\n",
        "num_ids_2": 39,
        "num_ids_4": 75
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('9000000000 9') == '1'\nassert solution('1000000000 9') == '1'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_string) == \"50\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('123456789') == '123456789'\n",
        "num_ids_2": 24,
        "num_ids_4": 40
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"512 4\") == \"50\"\nassert solution(\"1000000000 9\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000000000 9') == '1'\nassert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\nassert solution('1000000000 9') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4321,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('512 4') == '50'\nassert solution('1000000000 9') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''5\n3 7 5 1 5\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1 1 1\"\nassert solution(\"4\") == \"2 2 2 2\"\nassert solution(\"7\") == \"1 2 2 2 2 2 2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"7\") == \"7\"",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n4 3 5 1 2 2 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n3 7 5 1 5\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n5 1 4\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '2'\nassert solution('7') == '7'\nassert solution('8') == '7'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''3\n7 5 1 5\n''') == '2'\nassert solution('''7\n2 2 3 2 1 2 2\n''') == '7'\nassert solution('''7\n5 1 4\n''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3 5 1 2 2 1\") == \"5\"\nassert solution(\"7 3 7 5 1 5\") == \"2\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 3 5 1 2 2 1\n''') == '5'\nassert solution('''\n5\n3 7 5 1 5\n''') == '2'\nassert solution('''\n7\n2 2 3 2 1 2 2\n''') == '7'\n\nprint(solution(input()))",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '7'\nassert solution('3') == '4'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4322,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7') == '5'\nassert solution('3') == '4'\nassert solution('5') == '2'\nassert solution('7') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 16') == '2'\nassert solution('4 21') == '-1'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 10\n10 8\n7 4\n3 1\n5 4\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 21\\n10 8\\n7 4\\n3 1\\n5 4\\n\"\n) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 21\") == \"2\"\nassert solution(\"4 16\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 21\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '2'\nassert solution('4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n') == '-1'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4 16\n10 8\n7 4\n3 1\n5 4\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 2\n2 4\n4 2\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n3 3\n2 2\n4 4\n\"\"\") == \"-1\"\nassert solution(\"\"\"\n3 3\n1 2\n4 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2 2\n1 2\n1 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 10\\n1 2 3\\n2 5 4\\n1 7 8\\n1 9 8\\n1 8 8\\n1 7 2\\n1 7 1\\n1 1 7\\n4 3 1\") == \"2\"\nassert solution(\"4 16\\n10 8\\n7 4\\n3 1\\n5 4\\n\") == \"-1\"\nassert solution(\"3 7\\n5 8\\n2 5\\n3 1\\n4 4\\n\") == \"2\"\nassert solution(\"5 7\\n6 8\\n2 5\\n3 1\\n4 4\\n\") == \"2\"\nassert solution(\"5 7\\n6 8\\n2 5\\n3 1\\n4 4\\n\") == \"-1\"\n",
        "num_ids_2": 85,
        "num_ids_4": 143
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 21\n10 8\n7 4\n3 1\n5 4\n''') == '2'\nassert solution('''4 21\n10 8\n7 4\n3 1\n5 4\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 21\n10 8\n7 4\n3 1\n5 4\n''') == '2'\n\nassert solution('''\n4 16\n10 8\n7 4\n3 1\n5 4\n''') == '-1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4323,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 10\") == \"1\"\nassert solution(\"4 16\") == \"2\"\nassert solution(\"4 10\") == \"-1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3 4\") == \"2 4\"\nassert solution(\"1 2 3 4 5\") == \"3 4\"\nassert solution(\"1 2 3 4 5 6\") == \"2 5\"\nassert solution(\"1 2 3 4 5 6 7\") == \"2 5 7\"\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5 3\") == \"tleel\"\nassert solution(\"6 1 1\") == \"qwerty\"\nassert solution(\"6 6 1\") == \"vvvvvv\"\nassert solution(\"5 2 2\") == \"abcde\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 5 3') == 'tleelte'\nassert solution('6 1 1') == 'qwerty'\nassert solution('6 6 1') == 'vvvvvv'\nassert solution('5 2 2') == 'abcde'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'tleelte'\nassert solution('''\n6 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == 'qwerty'\nassert solution('''\n5 1 1\n5 1 1\n''') == 'abcde'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"tleelte\"\nassert solution(input()) == \"qwerty\"\nassert solution(input()) == \"vvvvv\"\nassert solution(input()) == \"abcde\"\nprint(solution(input()))\n\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"7 5 3\\n6 1 1\\n6 6 1\\n5 2 2\") == \"tleelte\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"tleelte\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"tleelte\"\nprint(\"SUCCESS\")\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n7 5 3\n6 1 1\n6 6 1\n5 2 2''') == \"tleelte\"\nassert solution('''3\n3 1 1\n1 1 1\n1 1 1''') == \"qwerty\"\nassert solution('''2\n2 2 2\n2 2 2''') == \"abcde\"\nassert solution('''3\n3 2 2\n1 1 1\n1 1 1''') == \"aabde\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4324,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"tleelte\"\nassert solution('''4\n7 5 3\n6 1 1\n6 6 1\n5 2 2\n''') == \"qwerty\"\nassert solution('''3\n7 5 3\n6 1 1\n6 6 1\n''') == \"vvvvvv\"\nassert solution('''2\n7 5 3\n6 1 1\n''') == \"abcde\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"20\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([20, 12, 6]) == '12'\nassert solution([10, 5, 6]) == '5'\nassert solution([1, 1, 1]) == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(s) == str(13)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_sample_1) == \"12\"\nassert solution(input_sample_2) == \"12\"\nassert solution(input_sample_3) == \"21\"\nassert solution(input_sample_4) == \"12\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"0\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"20 12 6\") == \"12\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 6\") == \"12\"\nassert solution(\"3 4 6\") == \"6\"\nassert solution(\"10 10 10\") == \"10\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3\") == \"3\"\nassert solution(\"3 3 3\") == \"6\"\nassert solution(\"5 3 8\") == \"7\"\nassert solution(\"3 2 4\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 12 6\") == \"12\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"20 12 6\") == \"12\"\nassert solution(\"20 1 5\") == \"14\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4325,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3 2') == '4'\nassert solution('1 3 2') == '2'\nassert solution('20 12 6') == '12'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '3'\nassert solution('10') == '5'\nassert solution('20') == '5'\n\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"18\") == \"4\"\nassert solution(\"20\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '2'\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8\") == \"2\"\nassert solution(\"100\") == \"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\") == \"2\"\n\n\"\"\"\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"6\") == \"5\"\nassert solution(\"10\") == \"7\"\nassert solution(\"11\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"./test_input_1.txt\") == \"2\"\nassert solution(\"./test_input_2.txt\") == \"3\"\nassert solution(\"./test_input_3.txt\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('8') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4326,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n3\n7\n4\n3\n7\n8\n1''') == '2'\nassert solution('''8\n6\n5\n4\n4\n5\n6\n6''') == '8'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"10 1\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"3\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"2 2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '4'\nassert solution('10 4') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"4 3\") == \"4\"\nassert solution(\"1 10\") == \"11\"\nassert solution(\"1 0\") == \"0\"\nassert solution(\"9 3\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 4') == '4'\nassert solution('5 7') == '8'\nassert solution('2 4') == '2'\nassert solution('2 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3\") == \"3\"\nassert solution(\"2 10\") == \"10\"\nassert solution(\"3 20\") == \"20\"\nassert solution(\"2 100\") == \"100\"\nassert solution(\"4 100\") == \"100\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['1', '3']) == '3'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3') == '3'\nassert solution('2 3') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4327,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '3'\nassert solution('1 2 3') == '1 1'\nassert solution('2 3') == '1'\nassert solution('3 1') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '16'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"5\"\nassert solution(\"2 2\") == \"0\"\nassert solution(\"10 10\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"5 9\") == \"14\"\nassert solution(\"2 -10\") == \"8\"\nassert solution(\"2 10\") == \"18\"\nassert solution(\"2 7\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 12') == '16'\nassert solution('4 20') == '16'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 12') == '16'\nassert solution('10 5') == '15'\n\"\"\"\nimport sys\nfrom functools import reduce",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '3'\nassert solution('4 5') == '9'\nassert solution('5 5') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 12\") == \"16\"\nassert solution(\"1 0\") == \"1\"\nassert solution(\"-4 6\") == \"-10\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"-6 -2\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1 1\", \"First\"\nassert solution(\"3 4\") == \"2 2\", \"Second\"\nassert solution(\"8 9\") == \"7 7\", \"Third\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4328,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 20\n''') == '30'\nassert solution('''\n30 10\n''') == '50'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('chokudai') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"chokudai1\") == \"No\"\nassert solution(\"chokudai2\") == \"No\"\nassert solution(\"chokudai3\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('chokudai') == 'Yes'\n\nassert solution('chokudaziz') == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'\n\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'Yes'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('chokudai') == 'Yes'\nassert solution('chokudaiz') == 'No'\n\n\"\"\"\n\nS, T = input().split()",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4329,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"chokudai\") == \"Yes\"\nassert solution(\"chokudaiz\") == \"Yes\"\nassert solution(\"ABCD\") == \"No\"\nassert solution(\"abcd\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 16\") == \"9\"\nassert solution(\"2 8\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 16') == '9'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5') == '9'\nassert solution('3 4') == '9'\nassert solution('2 3') == 'IMPOSSIBLE'\nassert solution('4 5') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'IMPOSSIBLE'\nassert solution('10 20') == 'IMPOSSIBLE'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"9\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 3\") == \"IMPOSSIBLE\"\nassert solution(\"2 3\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 16') == '9'\nassert solution('4 2') == 'IMPOSSIBLE'\nassert solution('1 1') == 'IMPOSSIBLE'\nassert solution('8 8') == '8'\nassert solution('8 9') == '9'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '9'\nassert solution('2 1') == '9'\nassert solution('4 2') == 'IMPOSSIBLE'\nassert solution('6 3') == '9'\nassert solution('3 2') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1\\n') == 'IMPOSSIBLE'\nassert solution('2 1\\n') == '9'\nassert solution('3 1\\n') == 'IMPOSSIBLE'\n",
        "num_ids_2": 29,
        "num_ids_4": 45
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 16') == '9'\nassert solution('1 5') == '2'\n\"\"\"\nA, B = map(int, input().split())",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4330,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '9'\nassert solution('2 2') == '2'\nassert solution('10 3') == '7'\nassert solution('10 5') == '7'\nassert solution('0 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"117\") == \"Yes\"\nassert solution(\"55\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == 'Yes'\nassert solution('117') == 'Yes'\nassert solution('11') == 'No'\nassert solution('0000') == 'Yes'\nassert solution('2') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('7') == 'Yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('117') == 'Yes'\nassert solution('11') == 'No'\nassert solution('12') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('11') == 'Yes'\nassert solution('1') == 'Yes'\nassert solution('0') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('117') == 'Yes'\nassert solution('121') == 'No'\nassert solution('7') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('117') == 'Yes'\nassert solution('12') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('117') == 'Yes'\nassert solution('12') == 'No'\nassert solution('10') == 'Yes'\nassert solution('5') == 'No'\nassert solution('0') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('117') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4331,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('117') == 'Yes'\nassert solution('123') == 'No'\nassert solution('11') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('101') == \"Yes\"\nassert solution('1000000') == \"No\"\n\nsolution(10) == \"No\"\nsolution(11) == \"Yes\"\nsolution(99) == \"Yes\"\nsolution(24) == \"Yes\"\nsolution(19) == \"Yes\"\nsolution(27) == \"Yes\"\n\nsolution(2) == \"No\"\nsolution(7) == \"Yes\"\nsolution(0) == \"Yes\"\nsolution(1) == \"Yes\"\nsolution(1000000) == \"Yes\"\nsolution(10) == \"Yes\"\nsolution(7) == \"Yes\"\nsolution(100) == \"No\"\nsolution(100) == \"Yes\"\n\"\"\"\nfrom math import floor\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"10\") == \"No\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"201\") == \"Yes\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"11\") == \"No\"\nassert solution(\"10\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('21') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == 'Yes'\nassert solution('50') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"123\") == \"No\"\nassert solution(\"20\") == \"Yes\"\nassert solution(\"99\") == \"Yes\"\nassert solution(\"98\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"12\") == \"Yes\"\nassert solution(\"101\") == \"Yes\"\nassert solution(\"1234\") == \"No\"\nassert solution(\"34\") == \"No\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('101') == 'No'\nassert solution('1245') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4332,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12') == 'Yes'\nassert solution('12') == 'No'\nassert solution('123') == 'Yes'\nassert solution('999') == 'No'\nassert solution('1234') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 -1') == '0 0 0 -1'\n\nx_1,y_1,x_2,y_2=list(map(int,input().split()))\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\", \"Your code is wrong!\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 0 1\") == \"1 1 -1 0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nassert solution(\"0 0 0 2\") == \"-1 1 -1 -1\"\n\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"\nprint(solution(input()))\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\nassert solution('0 0 0 -1') == '-1 1 -1 0'\nassert solution('0 0 0 1 1') == '0 0 0 1 1'\nassert solution('0 0 0 -1 1') == '0 0 0 -1 1'\nassert solution('-1 1 -1 0') == '0 0 0 1'\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 0 0 1\") == \"-1 1 -1 0\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"x_1 y_1 x_2 y_2\") == \"x_3 y_3 x_4 y_4\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 0 0 1') == '-1 1 -1 0'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4333,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 0 0 1\") == \"1 -1 0 -1\"\nassert solution(\"0 0 0 0\") == \"1 1 1 0\"\nassert solution(\"0 0 1 0\") == \"1 1 1 -1\"\nassert solution(\"0 0 -1 0\") == \"1 1 0 -1\"\nassert solution(\"0 0 0 0\") == \"1 1 1 1\"\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('red blue\\n3 4\\nred\\n') == '2 4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"1 3\") == \"1 1\"\nassert solution(\"3 2\") == \"2 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('red blue') == '2 4'\nassert solution('5 5') == '1 2'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('red blue') == '2 4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2 4'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"a b\") == \"2 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2 4'\n\"\"\"\nimport sys",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"red blue\") == \"2 4\"\nassert solution(\"3 4\") == \"2 4\"\nassert solution(\"5 5\") == \"2 4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('red blue\\n') == '2 4'\nassert solution('red blue\\n') == '2 4'\nassert solution('red blue\\n') == '2 4'\nassert solution('red blue\\n') == '2 4'\nassert solution('red blue\\n') == '2 4'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4334,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"red blue\") == \"2 4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"123\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"3\") == \"Yes\"\nassert solution(\"4\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"2\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6\\nabcabc\\n') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('12\\nabcd') == 'No'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\nabcabc') == 'Yes'\nassert solution('8\\nabcabcd') == 'No'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"Yes\"\nassert solution(\"3\") == \"No\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4335,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == 'Yes'\nassert solution('1') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5 2 2') == '0'\nassert solution('4 3 1 2') == '3.000000 0'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\nassert solution('10 10 10 1') == '20.000000 0'\nassert solution('1 1 2 3') == '1.000000 0'\nassert solution('10 1 2 3') == '2.000000 0'\nassert solution('1 1 1 2') == '1.000000 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n'''1 2 2\n2 2 2\n3 2 1\n1 2 1\n'''\n) == '1.000000 1'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3 2 1\") == \"0\"\nassert solution(\"1 1 2 2\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3 1 2') == '3.000000 0'\nassert solution('2 3 1 2') == '3.000000 1'\n\n\"\"\"\nimport unittest\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3 1 2''') == '3.000000 0'\nassert solution('''4 5 5 6''') == '0'\nassert solution('''5 5 5 6''') == '0'\n\n''')",
        "num_ids_2": 35,
        "num_ids_4": 51
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1 2') == '3.000000 0'\nassert solution('8 1 2 5') == '1.000000 1'\nassert solution('8 4 8 5') == '1.000000 1'\nassert solution('10 10 10 10') == '0.000000 0'\nassert solution('8 0 0 0') == '1.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 2') == '0'\nassert solution('2 1 1 2') == '3.000000 0'\nassert solution('2 2 2 2') == '0'\nassert solution('3 3 1 2') == '3.000000 0'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 1 2\") == \"3.000000 0\"\nassert solution(\"100 100 1 1\") == \"1\"\nassert solution(\"1 100 100 1\") == \"0\"\nassert solution(\"50 50 50 50\") == \"2\"\n",
        "num_ids_2": 29,
        "num_ids_4": 55
    },
    {
        "number": 4336,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3 1 2') == '3.000000 0'\nassert solution('2 2 0 2') == '3.000000 0'\nassert solution('4 5 7 5') == '4.000000 0'\nassert solution('2 2 5 5') == '4.000000 0'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'Four'\nassert solution('5') == 'Three'\nassert solution('4') == 'Two'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('1\\nP') == 'Three'\nassert solution('5\\nY W') == 'Four'\nassert solution('12\\nP Y') == 'Three'\nassert solution('10\\nY W P Y') == 'Four'\n",
        "num_ids_2": 31,
        "num_ids_4": 59
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == 'Three'\nassert solution('4') == 'Four'\nassert solution('6') == 'Four'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"Four\"\nassert solution(\"4\") == \"Three\"\nassert solution(\"5\") == \"Three\"\nassert solution(\"2\") == \"Three\"\nassert solution(\"1\") == \"Three\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"Four\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nG W Y P Y W\") == \"Four\"\nassert solution(\"6\\nP Y\") == \"Three\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6\\nG W Y P Y W') == 'Four'\nassert solution('6\\nP Y W Y G') == 'Three'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Three\"\nassert solution(\"4\") == \"Four\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Three'\nassert solution('4') == 'Four'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4337,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\nP Y W G\") == \"Four\"\nassert solution(\"5\\nP Y W G\") == \"Four\"\nassert solution(\"6\\nP Y W G\") == \"Three\"\nassert solution(\"6\\nP Y W G\") == \"Three\"\nassert solution(\"6\\nP Y W G\") == \"Three\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution(input()) == '2'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(t) == solution_ref(t)\n\"\"\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 2\n2 3 1 3 4 2''') == '6'\nassert solution('''5 3 3\n1 2 4 2 3\n\n''') == '2'\nassert solution('''5 5 6\n1 2 6 10 3\n\n''') == '2'",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 3 2\n2 3 1 3 4 2\n''') == '6'\nassert solution('''\n5 3 3\n1 2 4 2 3\n''') == '2'\nassert solution('''\n5 5 6\n1 2 6 10 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == 6\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '6'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3') == 2\n\nassert solution('6 3 2') == 6\n\n\"\"\"\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input) == \"6\"\nassert solution(input) == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4338,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3 2') == '6'\nassert solution('5 3 3') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(in1) == \"7\"\nassert solution(in2) == \"0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '7'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1', \"Wrong answer in test case 3\"\nassert solution('4') == '1', \"Wrong answer in test case 4\"\nassert solution('5') == '7', \"Wrong answer in test case 5\"\nassert solution('10') == '0', \"Wrong answer in test case 10\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n5\n1 3 2 4\n1 3 2 4\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 3 2 4\n1 3 2 4\n''') == '7'\nassert solution('''\n3\n4 3 4\n3 2 1 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4 8 2 6 2\n4 5 4 1 3\n''') == '7'\nassert solution('''\n10\n4 5 6 4 3 3 1 1 1\n4 7 6 3 5 1 2 1 3\n''') == '6'\nassert solution('''\n7\n5 8 1 3 3 2 2\n4 7 2 3 3 4 1\n3 8 1 4 4 5 1\n6 4 5 1 4 3 1\n1 6 3 3 1 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == '1'\nassert solution(\"3\") == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4339,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '7'\nassert solution('2') == '0'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example_input_stdin) == example_output\n\nassert solution(input_data) == output\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 4 5 10') == '1 1 3 5 9'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 1 3 5 9'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"5\"\n) == \"1 1 3 5 9\"\n\nassert solution(\n    \"10\"\n) == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n\nassert solution(\n    \"10\"\n) == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 4 5 10\\n') == '1 1 3 5 9'\nassert solution('10\\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000\\n') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 75,
        "num_ids_4": 75
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"1 1 3 5 9\"\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\nassert solution(\"10\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\nassert solution(\"100\") == \"9999 9 50605065 1 5 89 5 999999999 60506055 999999999\"\n",
        "num_ids_2": 43,
        "num_ids_4": 101
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 4 5 10''') == '1 1 3 5 9'\nassert solution('''10\n10000 10 50605065 1 5 89 5 999999999 60506056 1000000000''') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '1 1 3 5 9'\nassert solution('10') == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n\n\n'''\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == '1 1 3 5 9'\nassert solution(input) == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4340,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '9999 9 50605065 1 5 89 5 999999999 60506055 999999999'\nassert solution() == '1 1 3 5 9'\n\n\"\"\"\n\nimport sys\nimport numpy",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"2\"\n\nassert solution(\"5 4\") == \"1\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"3 4\") == \"1\"\nassert solution(\"5 4\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'\n\n\"\"\"\n\nfrom collections import defaultdict\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 4\n1 2\n3 4\n5 4\n3 5\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(EXAMPLE) == '1'\nassert solution(TEST) == '2'\n\n\n\"\"\"\nfrom collections import defaultdict\nimport math\nfrom collections import deque\n\nn, m = [int(i) for i in input().split()]",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1'\nassert solution('5 4\\n1 2\\n3 4\\n5 4\\n3 5\\n') == '1'\nassert solution('17 15\\n1 8\\n1 12\\n5 11\\n11 9\\n9 15\\n15 5\\n4 13\\n3 13\\n4 3\\n10 16\\n7 10\\n16 7\\n14 3\\n14 4\\n17 6\\n') == '2'\n",
        "num_ids_2": 37,
        "num_ids_4": 110
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '1'\nassert solution('17 15') == '2'\nassert solution('8 12') == '1'\nassert solution('5 11') == '2'\nassert solution('11 9') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"1\"\nassert solution(\"17 15\") == \"2\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4341,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n1 2\n3 4\n5 4\n3 5\n''') == '1'\nassert solution('''17 15\n1 8\n1 12\n5 11\n11 9\n9 15\n15 5\n4 13\n3 13\n4 3\n10 16\n7 10\n16 7\n14 3\n14 4\n17 6\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '2'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\n\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(example_input_1) == \"1\"\nassert solution(example_input_2) == \"4\"\nassert solution(example_input_3) == \"0\"\nassert solution(input) == str(answer)",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n1 0 0 0 2\n1 2\n2 3\n3 4\n4 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '1'\nassert solution('''\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n''') == '4'\nassert solution('''\n3\n1 1 2\n2 3\n1 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n0 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5\n1 0 0 0 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n2 0 0 1 2\n1 2\n2 3\n2 4\n2 5\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n3\n1 1 2\n2 3\n1 3\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 0 0 1 2\\n1 2') == '1'\nassert solution('5\\n1 0 0 0 2\\n1 2') == '0'\nassert solution('3\\n1 1 2') == '0'\nassert solution('6\\n1 1 2 3\\n2 3 4') == '0'\nassert solution('4\\n1 2 3\\n1 2 3') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 78
    },
    {
        "number": 4342,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 0 0 1 2\\n1 2\\n2 3\\n2 4\\n2 5\\n') == '1'\nassert solution('3\\n1 1 2\\n2 3\\n1 3\\n') == '0'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nafogk\\nasdji') == 'qoztvz'\nassert solution('6\\nnijfvj\\ntqhwp') == 'def'\nassert solution('10\\nabcdefghijklmnopqrstuvwxyz') == 'zyxwvutsrqponmlkjihgfedcba'\nassert solution('2\\naz\\ntbf') == 'bc'\n",
        "num_ids_2": 43,
        "num_ids_4": 100
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\naz\nbf\n''') == 'bc'\nassert solution('''\n5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''\n6\nnijfvj\ntvqhwp\n''') == 'qoztvz'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\nprint('all tests passed')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2\naz\nbf\"\"\") == \"bc\"\nassert solution(\"\"\"5\nafogk\nasdji\"\"\") == \"alvuw\"\nassert solution(\"\"\"6\nnijfvj\ntvqhwp\"\"\") == \"qoztvz\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'qoztvz'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\n\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\n\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\naz\nbf\n\n\"\"\") == \"bc\", \"First example\"\nassert solution(\"\"\"\n5\nafogk\nasdji\n\n\"\"\") == \"alvuw\", \"Second example\"\nassert solution(\"\"\"\n6\nnijfvj\ntvqhwp\n\n\"\"\") == \"qoztvz\", \"Third example\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(r\"3\") == \"efg\"\nassert solution(r\"1\") == \"fg\"\nassert solution(r\"2\") == \"fg\"\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\naz\nbf''') == 'bc'\nassert solution('''5\nafogk\nasdji\n''') == 'alvuw'\nassert solution('''6\nnijfvj\ntvqhwp\n''') == 'qoztvz'\nprint('All tests passed!')\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4343,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2\\naz\\nbf\\n\") == \"bc\"\nassert solution(\n    \"5\\nafogk\\nasdji\\n\") == \"qoztvz\"\nassert solution(\n    \"6\\nnijfvj\\ntvqhwp\\n\") == \"def\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n    15 13 15 15 12\n    ''') == 'YES'\nassert solution('''5 4\n    20 10 40 30\n    ''') == 'NO'\nassert solution('''4 4\n    20 10 40 30\n    ''') == 'YES'\nassert solution('''1 2 3\n    5 6 7\n    ''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\n\nassert solution(input()) == \"NO\"\n\n\"\"\"\n\nn, k = map(int,input().split())\narr = list(map(int,input().split()))\n\ndic = {}\nfor i in range(n):\n    if arr[i] in dic:\n        dic[arr[i]].append(i)\n    else:\n        dic[arr[i]] = [i]\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"4 4\") == \"YES\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n15 13 15 15 12''') == 'YES'\nassert solution('''4 4\n20 10 40 30''') == 'NO'\nassert solution('''1 2 3\n4 5 6''') == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 25
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n15 13 15 15 12') == \"YES\\n1 2 5\"\nassert solution('5 4\\n20 10 40 30') == \"NO\"\nassert solution('4 4\\n20 10 40 30') == \"YES\\n1 2 3 4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 63
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n') == 'YES\\n1 2 5'\nassert solution('5 4\\n') == 'NO'\nassert solution('4 4\\n') == 'YES\\n1 2 3 4'\n",
        "num_ids_2": 31,
        "num_ids_4": 50
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3\n15 13 15 15 12''') == 'YES'\nassert solution('''4 4\n20 10 40 30''') == 'NO'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4344,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3\n15 13 15 15 12\n''') == 'YES'\nassert solution('''\n4 4\n20 10 40 30\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 4 0 2''') == \"YES\"\nassert solution('''5 1 3 6 8 2 9 0 10''') == \"YES\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1 3 6 8 2 9 0 10') == 'YES'\nassert solution('5 1 3 6 8 2 9 0 10') == 'YES'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\nassert solution(input()) == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4 5\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 3 6 8 2 9 0 10''') == 'YES'\nassert solution('''5\n1\n3\n6\n8\n2\n9\n0\n10''') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n9\n5 1 3 6 8 2 9 0 10\n''') == 'YES'\nassert solution('''\n5\n1 2 4 0 2\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"YES\"\nassert solution(\"5 1 3 6 8 2 9 0 10\\n\") == \"1 0 0 0 0 1 0 1 0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1 1 1 1 1 1') == 'YES'\nassert solution('3 5 4 2 2') == 'YES'\nassert solution('3 3 4 4') == 'NO'",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4345,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n4\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n1000000000 1 1 1000000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n5 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''1\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''3\n5 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''2\n5 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '3'\nassert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '0'\nassert solution('4\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000') == '1134'\n",
        "num_ids_2": 76,
        "num_ids_4": 115
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''\n4\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n5\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''\n6\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n\n\n'''\n5\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n6\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\nassert solution('''3\n10 2 3 7\n100 99 99 100\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''6\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\nassert solution('''5\n10 2 3 7\n100 99 99 100\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''100\n10 2 3 7\n100 99 99 100\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 7\") == \"0\"\nassert solution(\"2 2 2 2\") == \"0\"\nassert solution(\"10 2 3 7\") == \"3\"\nassert solution(\"10 2 3 7\") == \"0\"\nassert solution(\"100 51 51 51\") == \"1134\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\nassert solution('''\n5 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1'\nassert solution('''\n3 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n10 2 3 7\\n100 51 51 51\\n1234 1 100 199\\n1000000000 1 1 1000000000\\n') == '3'\nassert solution('1\\n10000000 4 5 6\\n7 8 9 10\\n10000000 10000 10000 10000\\n') == '0'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4346,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '3'\n\nassert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n10000000 2 1 1000000000\n''') == '0'\n\nassert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n1000000000 1 1 1000000000\n''') == '1134'\n\nassert solution('''\n10 2 3 7\n100 51 51 51\n1234 1 100 199\n10000000 2 1 1000000000\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n\n''') == '1', solution\nassert solution('''\n4\n\n''') == '3', solution\nassert solution('''\n8\n\n''') == '1260', solution\n\nassert solution('''\n20\n\n''') == '12164510040883200', solution\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\nassert solution(\"20\") == \"12164510040883200\"\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2''') == '1'\nassert solution('''3\n4''') == '3'\nassert solution('''8\n20''') == '12164510040883200'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n1\n\"\"\"\n) == \"1\"\n\nassert solution(\n\"\"\"\n2\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"\n3\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"\n4\n\"\"\"\n) == \"6\"\n\nassert solution(\n\"\"\"\n8\n\"\"\"\n) == \"1260\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n3\n6\n5\n7''') == '1'\nassert solution('''4\n3\n4\n5''') == '2'\nassert solution('''8\n7\n8\n9\n10''') == '1260'\nassert solution('''20\n12\n13\n14''') == '121645100408832000'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"8\") == \"1260\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4347,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('4') == '3'\nassert solution('8') == '1260'\nassert solution('20') == '12164510040883200'\n",
        "num_ids_2": 20,
        "num_ids_4": 47
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '15 3\\n'\n    'cccaabababaccbc') == 'cccbbabaccbc'\nassert solution(\n    '15 9\\n'\n    'cccaabababaccbc') == 'cccccc'\nassert solution(\n    '1 1\\n'\n    'u') == ''\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15 3') == 'cccbbabaccbc'\nassert solution('1 1') == 'def'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '2'\n\nassert solution('3 2') == '2'\n\nassert solution('4 2') == '2'\n\nassert solution('5 2') == '2'\n\nassert solution('10 3') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"u\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == stdin.splitlines()[1], \"Should be: {}, got: {}\".format(stdin.splitlines()[1], solution(input()))\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"abc\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '', 'Function not defined'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '', 'Empty solution'\nassert solution('1 2') == '', 'Empty solution'\nassert solution('2 2') == '', 'Empty solution'\nassert solution('3 2') == '', 'Empty solution'\nassert solution('4 2') == '', 'Empty solution'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('15 3') == 'cccbbabaccbc'\nassert solution('1 1') == ''\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4348,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 2') == '10'\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4\") == \"8\"\nassert solution(\"5 2\") == \"20\"\nassert solution(\"5 3\") == \"20\"\nassert solution(\"5 4\") == \"20\"\nassert solution(\"5 5\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 5\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''5 3\n1 2 1 2 3\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '20'\nassert solution('''5 3\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    6 6\n    1 2 0 2 0\n    2 4\n    3 3\n    1 5\n    1 2\n    1 5\n    2 3\n    ''') == '8'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4 2 1 3 2\n3 5\n4 2\n2 5\n''') == \"8\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\nassert solution('''\n5 3\n4 2\n2 5\n1 2\n1 5\n2 3\n''') == '20'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 5\n1 2\n2 5\n''') == '8'\nassert solution('''\n1 5\n1 2\n2 3\n3 4\n''') == '20'\nassert solution('''\n1 5\n1 2\n2 3\n3 4\n5 1\n''') == '7'\nassert solution('''\n5 6\n2 3\n2 4\n1 5\n1 2\n1 5\n2 3\n3 4\n''') == '20'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '14'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4349,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\") == \"20\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 8\n....*...\n...**...\n..*****.\n...**...\n....*...\n........\n\n''') == '3'\n\nassert solution('''\n5 5\n.*...\n***..\n.*...\n.*...\n.....\n\n''') == '-1'\n\nassert solution('''\n3 3\n*.*\n.*.\n*.*\n\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5\\n.*...') == '3 4 1'\nassert solution('3 3\\n.*..') == '3 3 1'\nassert solution('5 5\\n.*...') == '-1'\nassert solution('3 3\\n.*..') == '-1'",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 8') == '3 4 1'\nassert solution('5 5') == '3 3 1'\nassert solution('5 5') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 4\n.*.\n***\n.*.\n''') == '3 4 1'\nassert solution('''\n5 5\n.*.\n***\n*.*\n.***\n.*.\n''') == '3 4 1'\nassert solution('''\n5 5\n.*.\n***\n*.*\n.***\n.*.\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\\n3 4 1\\n3 5 2\\n3 5 2\"\n\n\n\"\"\"\n\nfrom functools import lru_cache\n\n@lru_cache(maxsize=None)\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 8\") == \"3 4 1\"\nassert solution(\"5 5\") == \"3 3 1\"\nassert solution(\"5 5\") == \"-1\"\nassert solution(\"5 5\") == \"3 4 1\"",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6 8') == '3\\n3 4 1'\nassert solution('5 5') == '3\\n2 2 1'\nassert solution('3 3') == '3\\n4 3 1'\nassert solution('5 5') == '-1'\n",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 8\") == \"3\"\nassert solution(\"5 5\") == \"3\"\nassert solution(\"3 3\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4350,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"-1\"\nassert solution(\"5 5\") == \"3 4 1\"\nassert solution(\"4 4\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"575\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('575') == 'Yes'\n\"\"\"\n\nN=int(input())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"15\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('575') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('575') == 'Yes'\n\"\"\"\n\nimport re",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('575') == 'Yes'\nassert solution('101') == 'No'\nassert solution('5') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('575') == 'Yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('575') == 'Yes'\nassert solution('100') == 'No'\nassert solution('15') == 'Yes'\nassert solution('20') == 'No'\nassert solution('200') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('575') == 'Yes'\nassert solution('10') == 'No'\nassert solution('10') == 'Yes'\nassert solution('100') == 'Yes'\nassert solution('111') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4351,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"575\") == \"Yes\"\nassert solution(\"5\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == 'Alice'\nassert solution('2 2') == 'Draw'\nassert solution('3 2') == 'Bob'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Draw'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input := '8 6') == 'Alice'\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"10\") == \"Alice\"\nassert solution(\"9\") == \"Bob\"\nassert solution(\"8\") == \"Alice\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 2') == 'Bob'\nassert solution('4 3') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 6\\n') == 'Alice'\nassert solution('10 10\\n') == 'Draw'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Alice\"\nassert solution(\"8 7\") == \"Bob\"\nassert solution(\"1 1\") == \"Draw\"\nassert solution(\"7 5\") == \"Alice\"\nassert solution(\"3 8\") == \"Alice\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('8 7') == 'Bob'\nassert solution('8 5') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"Alice\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4352,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 6') == 'Alice'\nassert solution('7 7') == 'Draw'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('s') =='s'\nassert solution('a, b, c, d, e') == 'a b c d e'\nassert solution('x, y, z') == 'x y z'\nassert solution('a,b,c,d,e') == 'a b c d e'\n",
        "num_ids_2": 18,
        "num_ids_4": 56
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nprint(solution(input()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(['happy,newyear,enjoy']) == 'happy newyear enjoy'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\nassert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"happy,newyear,enjoy\") == \"happy newyear enjoy\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4353,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('happy,newyear,enjoy') == 'happy newyear enjoy'\nassert solution('happen,newyear,enjoy') == 'happy newyear enjoy'\n\"\"\"\n\nimport re\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '1\\n2'\nassert solution('4 4') == '1\\n2\\n3\\n4'\n\n'''\n\nfrom math import inf",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"1 1\") == \"1 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2 1'\n\"\"\"\n\nimport sys\n\ninput = lambda: sys.stdin.readline().rstrip()\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '1 2 1'\nassert solution('4 1') == '1 1 1 1'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '1'\nassert solution('1 1') == '0'\nassert solution('1 10') == '10'\n\n\"\"\"\n\nimport math",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1\\n2'\nassert solution('2 1') == '1\\n2'\nassert solution('10 20') == '10\\n20'\nassert solution('1 1') == '1\\n1'\nassert solution('5 3') == '4\\n3'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4354,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"2 1\"\nassert solution(\"10 8\") == \"2 1\"\nassert solution(\"7 3\") == \"1 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '14'\nassert solution('1') == '1'\nassert solution('3') == '10'\nassert solution('4') == '24'\nassert solution('5') == '120'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"4\"\n\n----------------------------------------\n\nWrite a program to determine whether a given number is an Armstrong number. An Armstrong number\nis a number that is equal to the sum of its own digits each raised to the power of the number of\nits digits.\n\n-----Constraints-----\n - Given an integer a, return True if a is an Armstrong number else return False.\n\n-----Sample Input-----\n153\n\n-----Sample Output-----\nTrue\n\n-----Hints-----\n - You can use ** operator to calculate the power of a number.\n - You can use Python\u2019s len function to calculate the length of an integer.\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"14\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"3\") == \"17\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '14'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"14\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(0) == 0\nassert solution('2') == 14\nassert solution('1') == 1\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"14\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1.4\") == \"2.0\"\nassert solution(\"3.6\") == \"4.0\"\nassert solution(\"0.5\") == \"1.0\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 48
    },
    {
        "number": 4355,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 27
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"\"\"2 3\n##\n##\"\"\"\n) == \"Yes\"\nassert solution(\n    \"\"\"2 2\n##\n###\"\"\"\n) == \"Yes\"\nassert solution(\n    \"\"\"3 3\n##.\n##.\n##.\"\"\"\n) == \"No\"\nassert solution(\n    \"\"\"5 5\n###.\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"No\"\nassert solution(\"3 3\\n#.#.#\\n.##.\\n.##.\\n.##.\\n#.#.\\n\") == \"Yes\"\n",
        "num_ids_2": 58,
        "num_ids_4": 96
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"Yes\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n#.\\n\") == \"No\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n.\\n\") == \"No\"\nassert solution(\"3 2\\n#.#\\n.#.\\n#.#\\n.\\n\") == \"No\"\n",
        "num_ids_2": 58,
        "num_ids_4": 114
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == 'Yes'\nassert solution('7 5') == 'No'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2\") == \"Yes\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2\\n.#.\\n#.#') == 'Yes'\nassert solution('1 2\\n.#.\\n#.#') == 'No'\nassert solution('1 2\\n.#.\\n#.#\\n.##') == 'No'\n",
        "num_ids_2": 38,
        "num_ids_4": 61
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2\\n#.#\\n.#.\\n#.#\\n.#') == 'Yes'\nassert solution('3 3\\n.#.\\n.##\\n.#.\\n.##') == 'No'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4356,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == 'Yes'\nassert solution('3 2') == 'No'\nassert solution('4 4') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('4 5') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '53'\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 2 1\") == \"2\"\nassert solution(\"1 2 2\") == \"4\"\nassert solution(\"1 2 3\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('2 4 5 3') == '23'\nassert solution('4 5 2 3') == '8'\nassert solution('5 4 2 3') == '9'\nassert solution('10 4 5 2') == '39'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"6\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"3 5 7\") == \"8\"\nassert solution(\"4 6 8\") == \"0\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5 2\") == \"53\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"3 6 7\") == \"9\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"2 3 4\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"1 10 3\") == \"28\"\nassert solution(\"1 4 4\") == \"12\"\nassert solution(\"0 1 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5 2\") == \"53\"\nassert solution(\"2 5 3\") == \"14\"\nassert solution(\"2 4 6\") == \"36\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"1 2 2\") == \"2\"\nassert solution(\"1 2 3\") == \"5\"\nassert solution(\"1 1 1\") == \"2\"\nassert solution(\"1 1 1 1\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4357,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 5 2') == '53'\nassert solution('1 2 2') == '3'\nassert solution('1 2 5') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"15950\"\nassert solution(\"7\") == \"2425\"\nassert solution(\"10\") == \"50\"\nassert solution(\"3\") == \"15950\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n4980\n7980\n6980\n''') == '15950'\nassert solution('''\n2\n4980\n7980\n''') == '15950'\nassert solution('''\n1\n4980\n''') == '15950'\nassert solution('''\n4\n4980\n7980\n6980\n''') == '15950'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2'\nassert solution('10') == '22'\nassert solution('1') == '1'\nassert solution('5') == '5'\nassert solution('3') == '0'\n\nprint('All tests passed')\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '15950'\n\"\"\"\n\nimport sys\nimport math\n\nn = int(stdin.readline())\nprices = []\ntotal = 0\nfor i in range(n):\n    price = int(stdin.readline())\n    prices.append(price)\n    if i == 0:\n        total += price\n    elif price >= prices[i - 1]:\n        total += math.floor(price / 2) + prices[i - 1]\n    else:\n        total += prices[i - 1]\nprint(total)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1.5'\nassert solution('3') == '2.0'\nassert solution('4') == '3.0'\nassert solution('5') == '4.5'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"15950\", \"Test 1\"\nassert solution(\"4\") == \"2120\", \"Test 2\"\nassert solution(\"7\") == \"1490\", \"Test 3\"\nassert solution(\"10\") == \"1680\", \"Test 4\"\nassert solution(\"2\") == \"0\", \"Test 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n4980\n7980\n6980\n\n\"\"\") == '15950.0'\nassert solution(\"\"\"\n1\n10\n11\n\n\"\"\") == '928.0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n4980\\n7980\\n6980') == '15950'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n4980\n7980\n6980\n''') == '15950'\nassert solution('''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n''') == '1999989499999'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4358,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n99\n100\n''') == '99'\nassert solution('''\n2\n100\n100\n''') == '0'\nprint(solution('''\n3\n4980\n7980\n6980\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"29\\n20\\n7\\n35\\n120\") == \"215\"\nassert solution(\"0\\n10\\n7\\n35\\n120\") == \"29\"\nassert solution(\"0\\n10\\n7\\n35\\n120\") == \"195\"\nassert solution(\"0\\n0\\n0\\n0\\n0\") == \"0\"\nassert solution(\"0\\n10\\n7\\n35\\n120\") == \"195\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n\n----\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29\\n20\\n7\\n35\\n120') == '215'\nassert solution('27\\n30\\n9\\n35\\n120') == '215'\nassert solution('24\\n21\\n7\\n35\\n120') == '215'\nassert solution('25\\n21\\n7\\n35\\n120') == '215'\nassert solution('24\\n21\\n7\\n35\\n119') == '215'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"29\") == \"215\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''A\nB\nC\nD\nE\n''') == '215'\nassert solution('''29\n20\n7\n35\n120\n''') == '215'\nassert solution('''29\n20\n7\n35\n120\n''') == '215'\nassert solution('''30\n10\n8\n55\n55\n''') == '135'\nassert solution('''30\n10\n8\n55\n55\n''') == '135'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"29\") == \"215\"\nassert solution(\"20\") == \"50\"\nassert solution(\"7\") == \"29\"\nassert solution(\"35\") == \"60\"\nassert solution(\"120\") == \"180\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('29') == '215'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '29\\n20\\n7\\n35\\n120') == '215'\nassert solution(\n    '8\\n0\\n1\\n1\\n1') == '4'\nassert solution(\n    '8\\n0\\n1\\n1\\n1') == '4'\nassert solution(\n    '8\\n0\\n1\\n1\\n1') == '4'\nassert solution(\n    '8\\n0\\n1\\n1\\n1') == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '30'\nassert solution('35') == '120'\nassert solution('120') == '180'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4359,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == '215'\nassert solution('20') == '50'\nassert solution('7') == '57'\nassert solution('35') == '120'\nassert solution('120') == '215'\n\"\"\"\n\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n10 30\\n') == '7.5'\nassert solution('2\\n100 100\\n') == '7.5'\nassert solution('2\\n10000 1000\\n') == '7.50001'\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 55
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '7.5'\nassert solution('10 30') == '7.5'\nassert solution('5') == '3.0'\nassert solution('3') == '1.0'",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n10 30') == '7.5'\nprint(solution('2\\n10 30'))\nassert solution('2\\n10 30') == '7.5'\n\n\"\"\"\n\nn = int(input())\n_input = input()\narr = list(_input.split())\n\nsum_ = 0\ninv_sum = 1\n\nfor i in range(n):\n    inv_sum = inv_sum * int(arr[i])\n    sum_ = sum_ + inv_sum\n\nprint(sum_ // inv_sum)",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '7.5'\nassert solution('3') == '7.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n10 30''') == '7.5'\nassert solution('''4\n10 30''') == '7.5'\nassert solution('''8\n10 30''') == '7.5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"10 30\") == \"7.5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"10 30\") == \"7.5\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"7.5\"\nassert solution(\"1\") == \"7\"\nassert solution(\"10\") == \"7.5\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub(r\"(\\d+)\", r\"\\1.5\", __import__('re').sub",
        "num_ids_2": 1724,
        "num_ids_4": 1724
    },
    {
        "number": 4360,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '7.5'\nassert solution('1') == '7.5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"1 1\") == \"0\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12''') == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3\\n10\\n15\\n11\\n14\\n12') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3\n10\n15\n11\n14\n12\n\n''') == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '2'\nassert solution('1 1') == '1'\nassert solution('1 2') == '0'\nassert solution('2 3') == '1'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1\n2\n''') == '2'\nassert solution('''\n5\n10\n15\n11\n14\n12\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3') == '2'\nassert solution('10 10') == '0'\nassert solution('10 10') == '0'\nassert solution('10 10') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('2 2') == '0'\n\"\"\"\n\nn, k = map(int, input().split())\narr = list(map(int, input().split()))\n\nmin_h, max_h = 0, max(arr)\n\nwhile min_h <= max_h:\n    mid = (min_h + max_h) // 2\n    num_of_lights = 0\n    for i in arr:\n        num_of_lights += max(0, i - mid)\n    if num_of_lights >= k:\n        min_h = mid + 1\n    else:\n        max_h = mid - 1\n\nprint(max_h - min_h)\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"2\"\nassert solution(\"1 5\") == \"4\"\nassert solution(\"3 10\") == \"1\"\n\n'''\n\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4361,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 3\\n10\\n15\\n11\\n14\\n12\\n\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('B') == 'A'\nassert solution('a') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"A\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('B') == 'a'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\n\"\"\"\n\nimport re",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"A\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('B') == 'a'\nassert solution('C') == 'A'\nassert solution('D') == 'a'\nassert solution('E') == 'A'\nassert solution('F') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'A'\nassert solution('a') == 'a'\nassert solution('B') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"A\"\nassert solution(input()) == \"a\"\n\"\"\"\n\nuppercase = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nlowercase = \"abcdefghijklmnopqrstuvwxyz\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4362,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('B') == 'A'\nassert solution('a') == 'a'\nassert solution('z') == 'Z'\nassert solution('b') == 'b'\nassert solution('Z') == 'Z'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \"6\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"2 5\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 2\") == \"6\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '6'\nassert solution('8 2') == '21'\nassert solution('1000 2') == '0'\nassert solution('1 1') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2\") == \"6\"\nassert solution(\"3 3\") == \"10\"\nassert solution(\"4 5\") == \"14\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '6'\nassert solution('2 5') == '27'\nassert solution('1 0') == '2'\nassert solution('2 20') == '136'\nassert solution('3 4') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n0 0 2\n0 2 0\n2 0 0''') == '6'\n\n'''---Time Limit Exceeded---'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2''') == '6'\nassert solution('''1 1''') == '3'\nassert solution('''2 2''') == '6'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '6'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4363,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '6'\nassert solution('1 1') == '2'\nassert solution('0 0') == '3'\nassert solution('1 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('05') == 'AMBIGUOUS'\nassert solution('12') == 'NA'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"5253\") == \"AMBIGUOUS\"\nassert solution(\"\") == \"NA\"\nassert solution(\"1706\") == \"NA\"\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"YYMM\"\n\"\"\"\n\nfrom typing import Dict",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'YYMM'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1905') == 'YYMM'\nassert solution('0123') == 'AMBIGUOUS'\nassert solution('012345') == 'NA'\nassert solution('123') == 'AMBIGUOUS'\nassert solution('1') == 'AMBIGUOUS'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'YYMM'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"19\") == \"YYMM\"\nassert solution(\"1910\") == \"AMBIGUOUS\"\nassert solution(\"17\") == \"AMBIGUOUS\"\nassert solution(\"1704\") == \"AMBIGUOUS\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1905\") == \"YYMM\"\nassert solution(\"1212\") == \"AMBIGUOUS\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1905') == 'YYMM'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4364,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1905') == 'YYMM', \"2905\"\nassert solution('19') == 'YYMM', \"29\"\nassert solution('05') == 'YYMM', \"29\"\nassert solution('05') == 'YYMM', \"29\"\nassert solution('19') == 'AMBIGUOUS', \"29\"\n",
        "num_ids_2": 30,
        "num_ids_4": 58
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '2'\nassert solution('15') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('6') == '3'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('7') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3''') == '2'\nassert solution('''4''') == '1'\n\n---Submission---\n\n---Part 1---\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"3\"]) == \"2\"\nassert solution([\"4\"]) == \"0\"\nassert solution([\"1\"]) == \"1\"\nassert solution([\"2\"]) == \"1\"\nassert solution([\"2\",\"3\"]) == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"2\"\n\"\"\"\n\n\"\"\"\n6. Given a 2D matrix representing a field, and a list of strings representing moves,\ntell whether the last move was a valid move or not\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nMOVES:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\nFalse\n\n\"\"\"\n\n\"\"\"\n7. Given a 2D matrix representing a field, and a list of strings representing moves,\nreturn the index of the first row and column to which the last move belongs\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nMOVES:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n(2,1)\n\n\"\"\"\n\n\"\"\"\n8. Given a 2D matrix representing a field, and a string of commands,\ncount the number of positions to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n6\n\n\"\"\"\n\n\"\"\"\n9. Given a 2D matrix representing a field, and a string of commands,\nreturn the maximum number of positions to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n4\n\n\"\"\"\n\n\"\"\"\n10. Given a 2D matrix representing a field, and a string of commands,\nreturn the minimum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n2\n\n\"\"\"\n\n\"\"\"\n11. Given a 2D matrix representing a field, and a string of commands,\nreturn the minimum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n2\n\n\"\"\"\n\n\"\"\"\n12. Given a 2D matrix representing a field, and a string of commands,\nreturn the maximum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n4\n\n\"\"\"\n\n\"\"\"\n13. Given a 2D matrix representing a field, and a string of commands,\nreturn the minimum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n2\n\n\"\"\"\n\n\"\"\"\n14. Given a 2D matrix representing a field, and a string of commands,\nreturn the maximum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n4\n\n\"\"\"\n\n\"\"\"\n15. Given a 2D matrix representing a field, and a string of commands,\nreturn the minimum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n2\n\n\"\"\"\n\n\"\"\"\n16. Given a 2D matrix representing a field, and a string of commands,\nreturn the maximum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move is a valid vertical move\n  - The move is a valid horizontal move\n  - The move is a valid diagonal move\n  - The move is not a valid anti-diagonal move\n\n-----Input-----\nMATRIX:\n3 3\n2 1 3\n1 3 2\n3 2 1\n\nCOMMANDS:\nUP 3\nDOWN 2\nDOWN 3\n\n-----Output-----\n4\n\n\"\"\"\n\n\"\"\"\n17. Given a 2D matrix representing a field, and a string of commands,\nreturn the minimum number of moves to which the last move was a valid move\n\n-----Constraints-----\n - The number of moves is equal to the length of the matrix\n - The move is a valid move if:\n  - The move",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"15\") == \"4\"\nassert solution(\"100\") == \"19\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('100') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4365,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n\") == \"2\"\nassert solution(\"4\\n\") == \"1\"\nassert solution(\"6\\n\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12') == '21'\nassert solution('9') == '21'\nassert solution('0') == '21'\nassert solution('4') == '21'\nassert solution('16') == '21'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n9 12\n''') == '21'\nassert solution('''\n3 0\n''') == '3'\nassert solution('''\n9 2\n''') == '9'\nassert solution('''\n2 9\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"9\") == \"21\"\nassert solution(\"9 12\") == \"21\"\n",
        "num_ids_2": 17,
        "num_ids_4": 28
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"9 10\") == \"9\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 10\") == \"21\"\nassert solution(\"1 1\") == \"21\"\nassert solution(\"0 0\") == \"21\"\nassert solution(\"1 0\") == \"21\"\nassert solution(\"0 1\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('9 12') == '21'\nassert solution('9 10') == '19'\nassert solution('3 12') == '3'\nassert solution('3 23') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"9 12\") == \"21\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '20'\nassert solution('3') == '18'\nassert solution('7') == '21'\nassert solution('8') == '19'\nassert solution('11') == '20'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '18', 'Wrong output'\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4366,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"9 12\") == \"21\"\nassert solution(\"0 0\") == \"00\"\nassert solution(\"23 23\") == \"00\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == '4'\nassert solution('2 3') == '5'\nassert solution('3 3') == '0'\nassert solution('4 4') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2919') == '3719'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2919') == '3719'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2919\") == \"3719\"\nassert solution(\"1 101\") == \"101\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"5 0\") == \"0\"\nassert solution(\"6 9\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5\") == \"6\"\nassert solution(\"2 7\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\\n4 5\\n\") == \"3\"\nassert solution(\"2 4\\n5 2\\n\") == \"3\"\nassert solution(\"1 1\\n2 2\\n\") == \"3\"\nassert solution(\"4 4\\n4 4\\n\") == \"4\"\nassert solution(\"3 4\\n4 3\\n\") == \"4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"3719\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 5\\n10') == '25'\nassert solution('2 5\\n5') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4367,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '3719'\nassert solution('2 2919') == '3719'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''11 2''') == '4'\n\nimport unittest\n\nclass TestStringMethods(unittest.TestCase):\n\n    def test_input(self):\n        pass",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(solution.__doc__) == \"4\"\nassert solution('11 2') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11 2') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"11 2\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''11 2\n''') == '4'\nassert solution('''123456 7 9\n''') == '3'\nassert solution('''100000000 3 9\n''') == '5'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 2') == '4'\n\n---Explanation---\nIn binary, 11 is represented as 1011, so there are 4 digits in the binary representation of 11.\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 2') == '4'\nassert solution('1 10') == '3'\nassert solution('11 11') == '3'\nassert solution('8 13') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"11\") == \"4\"\nassert solution(\"11 2\") == \"4\"\nassert solution(\"11 2 4\") == \"5\"\nassert solution(\"11 2 4 5\") == \"6\"\n\n\"\"\"\n",
        "num_ids_2": 17,
        "num_ids_4": 40
    },
    {
        "number": 4368,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12 2\") == \"4\"\n\"\"\"\n\nn, k = stdin.strip().split()\nn = int(n)\nk = int(k)\n\nn_base = str(bin(n))\nn_base = n_base.replace(\"0b\", \"\")\nn_base = len(n_base)\n\nprint(n_base // k)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n') == '3'\nassert solution('6\\n') == '3'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '3'\nassert solution('2') == '3'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"2\"\n\n\"\"\"\n\nN = int(input())\n\nn = N\nanswer = 0\n\nwhile n > 1:\n    if n % 2 == 1:\n        answer = answer + 1\n    n = n // 2\n\nprint(answer)",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '3'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"3\"\nassert solution(\"5\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4369,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '1\\n'\nassert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '1\\n'\nassert solution('4\\n') == '2\\n'\nassert solution('5\\n') == '3\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"1 2\") == \":(\n\n(A, B)\nA: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]\nB: [2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,1]",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([5,4]) == \"Yay!\"\nassert solution([5,5]) == \"Yay!\"\nassert solution([5,6]) == \"Nay!\"\n\"\"\"\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4') == 'Yay!'\nassert solution('5 5') == 'Yay!'\nassert solution('10 10') == 'Yay!'\nassert solution('1 1') == 'Yay!'\nassert solution('1 10') == 'Yay!'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"6 6\") == \"Yay!\"\nassert solution(\"5 7\") == \"Yay!\"\nassert solution(\"7 5\") == \"Yay!\"\nassert solution(\"7 8\") == \"Yay!\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\"\"\"\nimport math\nimport itertools\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n') == 'Yay!'\nassert solution('2 3\\n') == ':(\\n'\nassert solution('1 1\\n') == 'Yay!'\nassert solution('3 1\\n') == 'Yay!'\nassert solution('5 2\\n') == ':(\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 5\") == \"Yay!\"\nassert solution(\"1 2\") == \"Yay!\"\nassert solution(\"1 2 3\") == \"Yay!\"\nassert solution(\"1 1\") == \"Yay!\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\nassert solution(\"5 3\") == \":(\n\nE869120 can take desired number of pieces as follows:",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 4\") == \"Yay!\"\n\nE869120's 16-th birthday is coming soon.\n\nsquare1001's 16-th birthday is coming soon.\n\n-----Extras-----\n[Sample test case by default]\n\nIf you want to test your code with the provided input, then use this function as follows:",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4370,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4\\n\") == \"Yay!\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '11'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1234567876') == '34'\nassert solution('67678') == '67'\nassert solution('12345') == '123'\nassert solution('1') == '1'\nassert solution('2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"\") == \"\"\nassert solution(\"1234567\") == \"34\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"24683649\") == \"2468\"\n\n-1 is not less than -2.\n-2 is not less than -1.\n-1 is not less than -1.\n\n2 and 3 are the minimum required numbers for a given integer.\n\n3 is at least as big as 2.\n\n1 is never equal to 0.\n\nThe program can be implemented as follows:\n\ns = str(input())\n\nx = int(s[0:3])\ny = int(s[3:6])\nz = int(s[6:])",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234567876') == '34'\nassert solution('1234') == '5'\nassert solution('12') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1234567876') == '34'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1234567876') == '34'\nassert solution('456') == '0'\nassert solution('234') == '1'\nassert solution('789987654321') == '134'\n\n\"\"\"\n\n\nimport sys",
        "num_ids_2": 23,
        "num_ids_4": 48
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"76543210\") == \"36\"\nassert solution(\"121789746\") == \"28\"\nassert solution(\"12345678\") == \"36\"\nassert solution(\"12345\") == \"36\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1234567876\") == \"34\"\nassert solution(\"12345678\") == \"6\"\nassert solution(\"1234567\") == \"0\"\nassert solution(\"123456789\") == \"0\"\nassert solution(\"12345678910\") == \"0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4371,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1234567876') == '34'\nassert solution('123456789') == '0'\nassert solution('12345678901') == '34'\nassert solution('123456789012345678901') == '34'\nassert solution('123456789012345678901234567890') == '34'\n",
        "num_ids_2": 26,
        "num_ids_4": 59
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n3 12 6\n''') == \"5 3\"\nassert solution('''\n2\n2 9\n''') == \"1 7\"\nassert solution('''\n7\n2 1000000000 4 6 8 4 2\n''') == \"2999999987 2\"\nassert solution('''\n6\n13 52 0 13 26 52\n''') == \"12 13\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"5 3\"\nassert solution(\"2\") == \"1 7\"\nassert solution(\"7\") == \"12 13\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 12, 6]) == '5 3'\nassert solution([2, 9]) == '1 7'\nassert solution([7]) == '12 13'\n",
        "num_ids_2": 28,
        "num_ids_4": 39
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"5 3\"\nassert solution(\"2\") == \"1 7\"\nassert solution(\"7\") == \"12 13\"\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nprint(solution.__name__, ':', '%s ms' % round(((time.time() - start_time) * 1000), 3), '\\n')",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"5 3\"\nassert solution() == \"1 7\"\nassert solution() == \"2999999987 2\"\nassert solution() == \"12 13\"\n",
        "num_ids_2": 18,
        "num_ids_4": 39
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n3 12 6\n''') == '5 3'\nassert solution('''\n2\n2 9\n''') == '1 7'\nassert solution('''\n7\n13 52 0 13 26 52\n''') == '12 13'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n3 12 6') == '5 3'\nassert solution('2\\n2 9') == '1 7'\nassert solution('7\\n2 1000000000 4 6 8 4 2') == '2999999987 2'\nassert solution('6\\n13 52 0 13 26 52') == '12 13'",
        "num_ids_2": 31,
        "num_ids_4": 74
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1 7'\nassert solution('3') == '5 3'\nassert solution('7') == '2999999987 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4372,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n3\n3 12 6\n    \"\"\") == \"5 3\"\n\n\nassert solution(\n    \"\"\"\n2\n2 9\n    \"\"\") == \"1 7\"\n\n\nassert solution(\n    \"\"\"\n7\n2 1000000000 4 6 8 4 2\n    \"\"\") == \"2999999987 2\"\n\n\nassert solution(\n    \"\"\"\n6\n13 52 0 13 26 52\n    \"\"\") == \"12 13\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n3 1 4 1\n''') == '3'\nassert solution('''\n5\n1 1 1 2 2\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n1 1 1\\n') == '3\\n'\nassert solution('4\\n3 1 4 1\\n') == '2\\n'\nassert solution('5\\n1 1 1 2 2\\n') == '3\\n'\nassert solution('10\\n0 0 0 1 1 1 1 1 1\\n') == '2\\n'\nassert solution('20\\n0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1\\n') == '2\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 85
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '3'\nassert solution('5\\n') == '2'\nassert solution('4\\n') == '1'\nassert solution('3\\n') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n3 1 4 1\") == \"3\"\nassert solution(\"4\\n3 1 4 1\") == \"4\"\nassert solution(\"5\\n1 1 1 2 2\") == \"2\"",
        "num_ids_2": 32,
        "num_ids_4": 49
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_) == \"2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin) == '2'\nprint(solution(sys.stdin))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution(\"3\\n1\\n1\\n1\") == \"1\"\nassert solution(\"1\\n3\\n2\\n1\\n2\") == \"3\"\nassert solution(\"5\\n1\\n1\\n1\\n2\") == \"2\"",
        "num_ids_2": 27,
        "num_ids_4": 71
    },
    {
        "number": 4373,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n3 1 4 1\n''') == '3'\nassert solution('''4\n3 1 4 1\n''') == '4'\nassert solution('''5\n1 1 1 2 2\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 2\n1 2\n2 3\n''') == '2'\n\nassert solution('''\n3 2\n1 3\n2 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '2'\nassert solution('3 2') == '1'\nassert solution('2 0') == '1'\nassert solution('2 2') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 2\n1 2\n2 3\n\n''') == '2'\n\nassert solution('''\n3 2\n1 3\n2 3\n\n''') == '1'\n\nassert solution('''\n2 0\n\n''') == '1'\n\nassert solution('''\n3 2\n1 3\n2 3\n\n''') == '2'\n\nassert solution('''\n4 2\n1 2\n2 3\n3 4\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '2'\nassert solution('2 0') == '1'\nassert solution('3 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 0\") == \"1\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"2 0\") == \"1\"\nassert solution(\"3 2\") == \"2\"\n\n\n\"\"\"\n\n\nfrom collections import deque\nimport sys\nsys.stdin = open(\"input.txt\", \"rt\")\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '2'\nassert solution('3 2') == '3'\nassert solution('2 0') == '1'\nassert solution('3 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '2'\nassert solution('3 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4374,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"11\"\nassert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\nassert solution(\"15 1\") == \"13\"\nassert solution(\"1 1\") == \"2\"\nassert solution(\"5 1\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 1\n1 2 3 4 5\n1 2\n2 3\n3 4\n3 5\n''') == '11'\nassert solution('''\n7 2\n2 1 2 1 2 1 1\n6 4\n1 5\n3 1\n2 3\n7 5\n7 4\n''') == '4'\nassert solution('''\n1\n2\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('10 20') == '21'\nassert solution('100 100') == '101'\nassert solution('100 100') == '101'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('7 3') == '4'\nassert solution('7 4') == '4'\nassert solution('7 5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1') == '11'\nassert solution('7 2') == '4'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4375,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 1\") == \"11\"\nassert solution(\"7 2\") == \"4\"\nassert solution(\"10 2\") == \"9\"\nassert solution(\"1000000000 1\") == \"10000000\"\nassert solution(\"10 3\") == \"10\"",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\\n'\n\nassert solution('''\n2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994\\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 6') == '1 1\\n1 9\\n2 2'\nassert solution('2 3') == '1 5\\n2 1'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\"\nassert solution(\"2 3\") == \"1 5\\n2 1\\n2 9999999994\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 6\") == \"1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n3 6\n10 15 12\n1 9 12 23 26 37\n''') == '1 1\\n1 9\\n2 2\\n2 13\\n3 1\\n3 12'\n\nassert solution(\n'''\n2 3\n5 10000000000\n5 6 9999999999\n''') == '1 5\\n2 1\\n2 9999999994'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n5 10000000000\n5 6 9999999999''') == '1 5\\n2 1\\n2 9999999994'\nassert solution('''2 2\n6 1 2\n3 2''') == '1 3\\n2 1\\n2 1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 6\n10 15 12\n1 9 12 23 26 37\n''') == '''1 1\n1 9\n2 2\n2 13\n3 1\n3 12'''\nassert solution('''2 3\n5 10000000000\n5 6 9999999999\n''') == '''1 5\n2 1\n2 9999999994'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2 2\n1 5\n2 4\n3 4''') == '1 5\\n2 4\\n2 5\\n3 4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1 5\\n1 9\\n2 2\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4376,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1 1\\n1 9\\n2 2\\n2 13\"\nassert solution(input()) == \"1 5\\n2 1\\n2 9999999994\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    1 1 1\n    2 1 2\n    1 1 2\n    1 1 1\n    ''') == '1 2 1 1 1'\nassert solution('''\n    1 1 1\n    1 1 2\n    1 1 2\n    1 1 1\n    ''') == '1 1 1 1 1 1'\nassert solution('''\n    1 1 1\n    1 2 1\n    1 2 1\n    1 1 1\n    ''') == '1 1 1 1 1 1'\n\n''') == '1 2 1 2 1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 6 5 4\n''') == '2 1 3'\nassert solution('''40 40 40 60\n''') == '20 20 20'\nassert solution('''201 101 101 200\n''') == '1 100 100'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n40 40 40 60\n''') == '20 20 20'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n40 40 40 60\n''') == '20 20 20'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 6 5 4\n''') == '2 1 3'\nassert solution('''\n40 40 40 60\n''') == '20 20 20'\nassert solution('''\n201 101 101 200\n''') == '1 100 100'\n\n\n'''\n\nfrom itertools import combinations_with_replacement\n\nstdin = '''\n3 6 5 4\n'''\n\nnumbers = list(map(int, stdin.split()))\nn = numbers[0]\nx1, x2, x3, x4 = numbers[1:]\n\nprint(list(combinations_with_replacement(x1, n)))\nprint(list(combinations_with_replacement(x2, n)))\nprint(list(combinations_with_replacement(x3, n)))\nprint(list(combinations_with_replacement(x4, n)))\n\nprint(x1)\nprint(x2)\nprint(x3)\nprint(x4)",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 6 5 4\") == \"2 1 3\"\nassert solution(\"40 40 40 60\") == \"20 20 20\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 6 5 4') == '2 1 3'\nassert solution('201 101 101 200') == '1 100 100'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4377,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 6 5 4') == '2 1 3'\nassert solution('40 40 40 60') == '20 20 20'\nassert solution('201 101 101 200') == '1 100 100'",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\nassert solution('RBRR') == 'BGRRGBRGR'\nassert solution('BBBBGBRRR') == 'BRBGBRGR'\nassert solution('BBRR') == 'BGRRGBRGR'\n",
        "num_ids_2": 24,
        "num_ids_4": 58
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\nR\nR\nR\nR\nR''') == '1'\n\nassert solution('''4\nR\nR\nG\nB''') == '1'\n\nassert solution('''5\nR\nR\nG\nB\nB''') == '2'\n\nassert solution('''7\nR\nR\nG\nB\nB\nB\nB''') == '1'\n\nassert solution('''13\nB\nB\nB\nB\nB\nB\nB''') == '5'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == '2'\nassert solution(input()) == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('12') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '0'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4378,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9') == '2'\nassert solution('8') == '2'\nassert solution('13') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6\n1 3 5 2 4 6\n''') == '1'\n\nassert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\n\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '6'\n\nassert solution('''\n4\n10 9 8 7\n''') == '6'\n\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '4'\nassert solution(\"8\") == '2'\nassert solution(\"7\") == '2'\nassert solution(\"6\") == '1'\nassert solution(\"10\") == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '1'\nassert solution('8') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\nassert solution('''\n6\n1 3 5 2 4 6\n''') == '2'\nassert solution('''\n4\n10 9 8 7\n''') == '1'\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 3 5 2 4 6\n''') == '4'\nassert solution('''\n6 7 8 3 4 5 9 10 11\n''') == '6'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n1 2 3 4 5 6 7 8 9 10 11\n''') == '1'\nassert solution('''\n2\n''') == '2'\n\n\"\"\"\n--- Day 10: Adapter Array ---\n\nAn urgent matter has been announced: an array of adapters is being purchased for a new smart phone!\n\nAs a quick check, before purchasing the phone, they'd like you to make sure they're getting at least one additional\nadapter. They'll get very tired if they don't, and don't want any less than a few hundreds for their phone.\n\nThe best way to make sure they have at least some adapters is to build an ad-hoc array that has the following structure: an element (always a positive integer) is composed of:\n\n    * a pair of other elements (the number of which is an odd number);\n    * an adjacent pair of elements (the number of which is an even number);\n    * a pair of other adjacent elements (the number of which is an odd number).\n\nThe idea here is that if the array has the form A1 A2 A3... An, then if we can add the number 1 and 2 to the end, then we can add the number 3 and 4 to the end, and so on. However, if we add 1 to the front, we can only add 2 to the front and 3 to the back.\n\nGiven an array of integers $n$ (1\u2264n\u2264100,000) and an integer $m$ (1\u2264m\u2264100,000), write a function that returns the minimum number of elements that must be added to the end of the array so that the resulting array contains at least one element satisfying the above condition. For example, if n=12 and m=12, then the minimum number of elements needed to satisfy the above condition is 9 (1,2,3,4,5,6,7,8,9,10,11).\n\nNote that we need to find a minimum, not a maximum.\n\nLINK: https://app.codility.com/programmers/lessons/4-counting_elements/maximal_number_of_meetings/\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n6 7 8 9 10 11\n''') == '6'\n\nassert solution('''\n6\n5 6 7 8 9 10 11\n''') == '2'\n\nassert solution('''\n7\n3 3 4 7 5 6 8\n''') == '4'\n\nassert solution('''\n4\n10 9 8 7\n''') == '1'\n\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'\n\nassert solution(input_1) == '2'\n\nassert solution(input_2) == '1'\n\nassert solution(input_3) == '6'\n\nprint(solution(input_4))\nprint(solution(input_5))\nprint(solution(input_6))\nprint(solution(input_7))\nprint(solution(input_8))",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 3 4 7 5 6 8\\n') == '4'\nassert solution('6\\n1 3 5 2 4 6\\n') == '2'\nassert solution('9\\n6 7 8 3 4 5 9 10 11\\n') == '6'\nassert solution('10\\n10 9 8 7\\n') == '1'",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n3 4 7 5 6 8\n''') == \"4\"\nassert solution('''\n6\n1 3 5 2 4 6\n''') == \"2\"\nassert solution('''\n4\n10 9 8 7\n''') == \"1\"\nassert solution('''\n9\n6 7 8 3 4 5 9 10 11\n''') == \"6\"\nassert solution('''\n9\n10 11 22 33 44 55 66 77 88 99 100\n''') == \"8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4379,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"8\") == \"1\"\nassert solution(\"9\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"3 1\"\n) == \"Yes\"\n\"\"\"\n\nn, m = list(map(int, input().split()))\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 1\n''') == 'Yes'\nassert solution('''\n3 1\n''') == 'No'\nassert solution('''\n3 1\n''') == 'No'\nassert solution('''\n3 1\n''') == 'No'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('2 1') == 'No'\nassert solution('2 2') == 'No'\nassert solution('4 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('3 1') == 'No'\nassert solution('3 1') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    3 1\n''') == 'Yes'\nassert solution('''\n    3 2\n''') == 'No'\nassert solution('''\n    3 4\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1') == 'Yes', 'Should be Yes'\nassert solution('2 1') == 'No', 'Should be No'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1\") == \"Yes\"\nassert solution(\"4 5\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'Yes'\nassert solution('1 2') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2\") == \"Yes\"\nassert solution(\"3 1\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4380,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 2\n3 2''') == 'Yes'\nassert solution('''2 1\n1 2\n3 2''') == 'No'\nassert solution('''2 1\n1 2\n1 3''') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"X Y\") == \"110\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"31 5\") == \"110\"\nassert solution(\"80 9\") == \"200\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('81 58\\n') == '110'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == '10'\nassert solution('10 8') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('11 5') == '55'\nassert solution('12 6') == '55'\nassert solution('22 8') == '110'\nassert solution('15 10') == '55'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 5') == '30'\nassert solution('5 1') == '7'\nassert solution('4 7') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"80 79\") == \"81\"\nassert solution(\"82 78\") == \"110\"\nassert solution(\"76 55\") == \"110\"\nassert solution(\"84 53\") == \"110\"\nassert solution(\"97 52\") == \"110\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 10\") == \"20\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 100\") == \"100\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4381,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"81 58\") == \"110\"\nassert solution(\"3 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '16'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '8'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"8\"\n\n\"\"\"\n\nN = int(input())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8'\nassert solution('10') == '89888'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"12\"\n\n## A - TAKAHASHI\n## B - TA\n## C - TA\n## D - TA\n## E - TA\n## F - TA\n## G - TA\n## H - TA\n## I - TA\n## J - TA\n## K - TA\n## L - TA\n## M - TA\n## N - TA\n## O - TA\n## P - TA\n## Q - TA\n## R - TA\n## S - TA\n## T - TA\n## U - TA\n## V - TA\n## W - TA\n## X - TA\n## Y - TA\n## Z - TA\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"5\"\nassert solution(\"1\") == \"10\"\nassert solution(\"10\") == \"50\"\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"27\"\nassert solution(\"3\") == \"405\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n\") == \"8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4382,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"8\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'YES'\nassert solution('5') == 'YES'\nassert solution('7') == 'NO'\nassert solution('2') == 'NO'\nassert solution('9') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == 'YES'\nassert solution('1') == 'NO'\nassert solution('10') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'NO'\nassert solution('4') == 'YES'\nassert solution('12') == 'YES'\nassert solution('99') == 'NO'\nassert solution('85') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(stdin) == \"YES\"\n\"\"\"\n\na = int(input())",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'YES'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == 'NO'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"7\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"9\") == \"YES\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4383,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'YES'\nassert solution('9') == 'NO'\nassert solution('5') == 'YES'\nassert solution('15') == 'NO'\nassert solution('10') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n\n''') == 'ABD'\nassert solution('''4\n\n''') == 'ABD'\nassert solution('''3\n\n''') == 'ABD'\nassert solution('''2\n\n''') == 'ABD'\nassert solution('''1\n\n''') == 'ABD'\n\nprint(solution('''5\n\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1') == 'ABC'\nassert solution('10') == 'ABC'\nassert solution('99') == 'ABC'\nassert solution('999') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('999') == 'ABC'\nassert solution('1') == 'ABD'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"1\") == \"ABC\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'ABC'\nassert solution(input()) == 'ABD'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('999') == 'ABC'\nassert solution('10') == '10'\nassert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"123\") == \"ABC\"\nassert solution(\"12\") == \"ABC\"\nassert solution(\"123\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"999\") == \"ABC\"\nassert solution(\"0\") == \"ABC\"\nassert solution(\"123\") == \"ABC\"\nassert solution(\"999\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4384,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9999') == 'ABC'\nassert solution('1000') == 'ABD'\nassert solution('1001') == 'ABD'\nassert solution('1002') == 'ABD'\nassert solution('1003') == 'ABD'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n4\n8\n9\n15\n''') == \"Yay!\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"3\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"5\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\\n\") == \"Yay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n16\\n\") == \"Nay!\"\nassert solution(\"1\\n2\\n4\\n8\\n9\\n18\\n\") == \"Nay!\"\n",
        "num_ids_2": 56,
        "num_ids_4": 84
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n4\\n8\\n9\\n15') == 'Yay!'\nassert solution('3\\n4\\n5\\n6\\n7\\n10') == 'Nay!'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Yay!'\nassert solution('2') == 'Yay!'\nassert solution('4') == 'Yay!'\nassert solution('8') == 'Yay!'\nassert solution('9') == 'Yay!'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"./sample-input.txt\") == \"Yay!\"\nassert solution(\"./input.txt\") == \"Yay!\"\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\\n4\\n8\\n9\\n15\") == \"Yay!\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4385,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Yay!\"\nassert solution(\"2\") == \"Yay!\"\nassert solution(\"4\") == \"Yay!\"\nassert solution(\"8\") == \"Yay!\"\nassert solution(\"9\") == \"Yay!\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3200') == 'pink'\nassert solution('4') =='red'\nassert solution('5000') =='red'\nassert solution('3200abcdef') =='red'\nassert solution('3200xyz') =='red'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n\n''') == 'pink', 'Should be \"pink\" or \"red\"'\nassert solution('''\n\n''') =='red', 'Should be \"red\" or \"pink\"'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3200\") == \"pink\", \"3200\"\nassert solution(\"4200\") == \"red\", \"4200\"\nassert solution(\"3200\") == \"pink\", \"3200\"\nassert solution(\"4200\") == \"red\", \"4200\"\nassert solution(\"-3200\") == \"red\", \"-3200\"\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'pink'\nassert solution(input()) =='red'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"a = 3200 is not less than 3200, so we print s = pink.\") == \"pink\"\nassert solution(\"a = 775 is less than 3200, so we print red.\") == \"red\"\n\n\"\"\"\n\na = int(stdin.readline())\ns = stdin.readline()",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3200') == 'pink'\nassert solution('3200') == 'pink'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3200\") == \"pink\"\nassert solution(\"16\") == \"pink\"\nassert solution(\"3200\") == \"pink\"\nassert solution(\"3201\") == \"red\"\nassert solution(\"16\") == \"red\"",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3200') == 'pink'\nassert solution('3201') =='red'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(5) =='red'\nassert solution(3200) == 'pink'\nassert solution(3201) =='red'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4386,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3200') == 'pink', \"Should be pink\"\nassert solution('123') =='red', \"Should be red\"\nassert solution('asd') =='red', \"Should be red\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1199\") == \"ABC\", \"Should be ABC\"\nassert solution(\"2\") == \"ARC\", \"Should be ARC\"\nassert solution(\"3\") == \"AGC\", \"Should be AGC\"\nassert solution(\"1142\") == \"ARC\", \"Should be ARC\"\nassert solution(\"120\") == \"ARC\", \"Should be ARC\"\n",
        "num_ids_2": 31,
        "num_ids_4": 64
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1199\") == \"ABC\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('123') == 'ABC'\nassert solution('1199') == 'ABC'\nassert solution('99999') == 'ARC'\nassert solution('11111') == 'AGC'",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1199') == 'ABC'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1111') == 'ABC'\nassert solution('1111') == 'ARC'\nassert solution('1111') == 'AGC'",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"ABC\"\nassert solution(\"2\") == \"ARC\"\nassert solution(\"3\") == \"AGC\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"ABC\"\nassert solution(\"2\") == \"ARC\"\nassert solution(\"3\") == \"AGC\"\nassert solution(\"4\") == \"ABC\"\nassert solution(\"5\") == \"ARC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1199\") == \"ABC\"\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('R') == 'ABC'\nassert solution('1199') == 'ABC'\nassert solution('1230') == 'ARC'\nassert solution('2800') == 'ARC'\nassert solution('3400') == 'AGC'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4387,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1214\n''') == 'ARC'\nassert solution('''1215\n''') == 'AGC'\n''')",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('101') == '10'\nassert solution('1019') == '10'\nassert solution('1101') == '10'\nassert solution('11001') == '100'\nassert solution('111001') == '100'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"123\") == \"111\"\nassert solution(\"100\") == \"100\"\nassert solution(\"555\") == \"555\"\nassert solution(\"999\") == \"999\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('119') == '991'\nassert solution('9') == '1'\nassert solution('1234') == '134321'\nassert solution('123') == '32'\nassert solution('1222') == '11222'\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('991') == '991', 'Wrong answer'\nassert solution('1101') == '1101', 'Wrong answer'\nassert solution('1234') == '1234', 'Wrong answer'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"991\") == \"991\"\nprint(solution(input()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"991\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '9'\nassert solution('9') == '1'\nassert solution('99') == '91'\nassert solution('991') == '9'\nassert solution('9' * 4) == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"119\") == \"991\"\nassert solution(\"112\") == \"111\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"991\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4388,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('119') == '991'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''aba''') == 'aba'\nassert solution('''aaaa''') == 'aaaa'\nassert solution('''aaaaa''') == 'aaaaa'\nassert solution('''aaaaab''') == 'aaaaab'\nassert solution('''aaaaaaaaa''') == 'aaaaaaaaa'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz') == 'abac'\nassert solution('3\\nabbaac\\nac\\nbccddaaf\\nzzzzzzzzzz') == 'abac'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nabac\\nac') == 'abac'\nassert solution('4\\nbccddaaf\\nzzzzzzzzzz') == 'zzzzzzzzzz'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"aba\"\nassert solution(\"3\") == \"abc\"\nassert solution(\"4\") == \"ac\"\nassert solution(\"5\") == \"zaz\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'abac'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'ac'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'bcdaf'\nassert solution('''\n4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == 'bccddaaf'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\nabac\\nac\\nbccddaaf\\nzzzzzzzzzz') == 'abac'\nassert solution('2\\nabbaac') == 'abac'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\nabac\nac\nbccddaaf\nzzzzzzzzzz''') == 'ac'\nassert solution('''\n1\nabac''') == 'abac'\nassert solution('''\n4\nabac''') == 'abac'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nabbaac\") == \"abac\"\nassert solution(\"2\\nac\") == \"ac\"\nassert solution(\"2\\nbccddaaf\") == \"bcdaf\"",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nabac\nac\nbcdaf\nzzzzzzzzzz\n''') == \"abac\"\nassert solution('''4\nabbaac\nac\nbccddaaf\nzzzzzzzzzz\n''') == \"ac\"\nassert solution('''5\naaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4389,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nabbaac') == 'abac'\nassert solution('2\\nac') == 'ac'\nassert solution('3\\nbccddaaf') == 'bcdaf'\nassert solution('4\\nzzzzzzzzzz') == 'zzzzzzzzzz'\n",
        "num_ids_2": 28,
        "num_ids_4": 67
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n10 4\\n13 9') == '2'\nassert solution('5\\n100 13') == '333'\nassert solution('5\\n123 456') == '0'\n",
        "num_ids_2": 32,
        "num_ids_4": 47
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution() == \"5\"\nassert solution() == \"4\"\nassert solution() == \"333\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n10 4\") == \"2\\n5\\n4\\n\"\nassert solution(\"2\\n10 4\") == \"2\\n5\\n4\\n\"\nassert solution(\"3\\n10 4\") == \"2\\n5\\n4\\n\"\nassert solution(\"10\\n10 4\") == \"2\\n5\\n4\\n\"\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10 4\") == \"2\\n5\"\nassert solution(\"2\\n13 9\") == \"4\\n5\"\nassert solution(\"5\\n100 13\") == \"333\\n0\"\nassert solution(\"10\\n16 19\") == \"7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\n7\\",
        "num_ids_2": 34,
        "num_ids_4": 1763
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"2\\n5\\n4\\n333\\n0\\n\"\nprint(solution())\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n10 4\\n') == '2'\nassert solution('1\\n3 2\\n') == '0'\nassert solution('1\\n2 2\\n') == '1'\nassert solution('1\\n2 4\\n') == '1'\nassert solution('1\\n3 4\\n') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"2\\n5\\n4\\n333\\n0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n10 4\n13 9\n100 13\n123 456\n92 46''') == '333'\n\nassert solution('''1\n1\n1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == '0'\nassert solution(\"5\") == '5'\nassert solution(\"10 4\") == '2'\nassert solution(\"100 13\") == '333'\nassert solution(\"123 456\") == '5'",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4390,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '5\\n4\\n333\\n0\\n'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == \"2.666666666666667\", \"Wrong answer\"\nassert solution('''\n4 3\n1 2 3 4\n''') == \"2.5\", \"Wrong answer\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n3 4 1 2\n''') == '2.666666666666667', 'First example'\nassert solution('''3 3\n1 2\n''') == '2.666666666666667', 'Second example'\nassert solution('''5 3\n3 4 1 2\n''') == '2.666666666666667', 'Third example'\nassert solution('''7 3\n2 3 6 5 4 2 1\n''') == '3.2500000000000002', 'Fourth example'\nprint('Tests passed')\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3\\n3 4 1 2') == '2.666666666666667'\nassert solution('10 5\\n0 0 0 1 1 1 2 3 4\\n4\\n6 7 8 9 10') == '2.5'\nassert solution('3 5\\n4 3 1 2 1 3\\n3\\n2 1 2\\n4\\n1\\n5\\n') == '2.0'\nassert solution('100 5\\n0 0 0 1 1 1 2 3 4\\n4\\n6 7 8 9 10\\n1\\n5\\n') == '1.0'\nassert solution('20 100\\n19 9 9 9 9 0 0 0 0 1 1 1 2 3 4 5 5 5 5 5 5 5\\n7\\n6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\\n7\\n6 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\\n7\\n5 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7\\n5\\n') == '1.0'",
        "num_ids_2": 55,
        "num_ids_4": 137
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5 2\n4 5 1 2 3\n''') == '2.666666666666667'\nassert solution('''3 2\n4 5 1 2 3\n''') == '2.666666666666667'\nassert solution('''4 2\n4 5 1 2 3\n''') == '2.666666666666667'\nassert solution('''5 2\n4 5 1 2 3\n''') == '2.666666666666667'\nassert solution('''5 2\n3 4 1 2 3\n''') == '2.666666666666667'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == '2.666666666666667'\nassert solution('2 4') == '2.0'\nassert solution('4 5') == '2.0'\nassert solution('10 10') == '1.0'\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 3\n3 4 1 2\n''') == '2.666666666666667'\nassert solution('''\n5 2\n1 2 3 4 5\n''') == '4.0'\n\nassert solution('''\n10 2\n1 2 3 4 5 6 7 8 9 10\n''') == '5.5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\n5 4 1 2\n''') == '2.50000000000001'\nassert solution('''\n10\n4 3 1 2\n''') == '2.50000000000001'\n\nassert solution('''\n10\n10 5 9 2\n''') == '3.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2.666666666666667'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4391,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4\\n2 4 1 2') == '2.666666666666667'\nassert solution('4 4\\n1 2 2 3') == '1.333333333333333'\nassert solution('5 2\\n3 3 1 2') == '1.333333333333333'\nassert solution('2 4\\n1 2 3 4') == '2.5'\nassert solution('6 4\\n4 2 5 1 3 2') == '2.833333333333333'\n\n'''\nfrom math import sqrt\n",
        "num_ids_2": 43,
        "num_ids_4": 84
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('3 2 1') == 'YES'\nassert solution('1 2') == 'YES'\nassert solution('4 2') == 'NO'\nassert solution('4 1 2 3') == 'YES'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n5 3\n5 3 1 2 4\n1 2 3 4 5\n1 4\n4 1 2 3 5\n''') == 'YES'\nassert solution('''\n2 2\n2 2 1\n1 1\n''') == 'YES'\nassert solution('''\n2 3\n2 3 1\n1 2\n''') == 'NO'\nassert solution('''\n4 3\n4 3 1 2\n1 2 3 4\n1 3\n4 2\n2 1 4 3\n1 3\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n7\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n6\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1\n4 2\n2 1 4 3\n1 3\n4 2\n4 3 2 1\n1 3\n5 2\n2 1 2 3 3\n1 4\n\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n6\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2\\n4 2\\n2 1 4 3\\n1 3\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\"\n\nassert solution(\"6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 2 3 4 5\\n1 2\\n4 2\\n2 1 4 3\\n1 3\") == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\\nYES\\nYES\"\n",
        "num_ids_2": 188,
        "num_ids_4": 188
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'YES'\nassert solution('3 2 1') == 'YES'\nassert solution('1 2') == 'NO'\nassert solution('4 2') == 'YES'\nassert solution('4 1 2 3') == 'NO'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == 'YES', \"Simple test\"\nassert solution('3 2') == 'YES', \"Simple test\"\nassert solution('3 2 1') == 'NO', \"Simple test\"\nassert solution('1 2') == 'YES', \"Simple test\"\nassert solution('4 2') == 'YES', \"Simple test\"\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 3\\n4 2\\n2 1 4 3\\n1 3') == 'YES'\nassert solution('6\\n3 2\\n3 2 1\\n1 2\\n4 2\\n4 1 2 3\\n3 2\\n5 1\\n1 2 3 4 5\\n1 3\\n4 2\\n4 3 2 1\\n1 3') == 'NO'\n",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4392,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'NO'\n\nassert solution('''\n3 2\n3 2 1\n1 2\n4 2\n4 1 2 3\n3 2\n5 1\n1 2 3 4 5\n1 3\n4 2\n2 1 4 3\n1 3\n5 2\n2 1 2 3 3\n1 4\n''') == 'YES'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\nbab\n\n\"\"\") == \"bab\"\n\nassert solution(\"\"\"\n10\nooopppssss\n\n\"\"\") == \"oops\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"baabbb\"]) == \"bab\"\nassert solution([\"baabbb\", \"baabab\"]) == \"bab\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdin.readline()[:-1]\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"2\\nhello\\nworld\\n123\\n\") == \"hello\\nworld\\n123\"\nassert solution(\n    \"5\\n*\\n**\\n***\\n****\\n*****\") == \"*\\n**\\n***\\n****\\n*****\"\nassert solution(\n    \"6\\n13\\n12\\n*\\n**\\n***\\n****\\n*****\\n\") == \"13\\n12\\n*\\n**\\n***\\n****\\n*****\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == 'z'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bab') == 'bab'\nassert solution('ooopppssss') == 'oops'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\nz\n''') == 'z'\n\nassert solution('''\n6\nbaabbb\n''') == 'bab'\n\nassert solution('''\n10\nooopppssss\n''') == 'oops'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''\n    s = s_{1}s_{2} \\dots s_{m}\n    '''\n) == 'bab'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"11\"\nassert solution(\"10\") == \"10\"\nassert solution(\"11\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4393,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == stdin.strip()\nassert solution(input()) == stdin.strip()\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 4') == '1'\nassert solution('5 6') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4\\n') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 3\\n1 3 3\\n') == '1'\nassert solution('1 0\\n') == '0'\nassert solution('5 6\\n1 2 2\\n2 3 1\\n4 5 3\\n2 4 2\\n1 4 2\\n1 5 3\\n') == '2'\n",
        "num_ids_2": 91,
        "num_ids_4": 132
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8 10') == '1'\nassert solution('4 3') == '1'\nassert solution('3 3') == '1'\nassert solution('1 0') == '0'\nassert solution('5 6') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 2') == '1'\nassert solution('4 3 2') == '0'\nassert solution('4 3 2') == '0'\nassert solution('1 0') == '0'\nassert solution('5 6') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 10\\n1 2 1\\n2 3 2\\n2 4 5\\n1 4 2\\n6 3 3\\n6 1 3\\n3 5 2\\n3 7 1\\n4 8 1\\n6 2 4') == '1'\nassert solution('4 3\\n2 1 3\\n4 3 4\\n2 4 1\\n') == '0'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 3\\n') == '1'\n",
        "num_ids_2": 89,
        "num_ids_4": 117
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4\") == \"1\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8 10\n1 2 1\n2 3 2\n2 4 5\n1 4 2\n6 3 3\n6 1 3\n3 5 2\n3 7 1\n4 8 1\n6 2 4\n''') == '1'\nassert solution('''\n4 3\n2 1 3\n4 3 4\n2 4 1\n''') == '0'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 3\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4394,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_stdin) == \"1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    1\n    G\n    ''') == \"1\"\nassert solution('''\n    2\n    BR\n    ''') == \"2\"\nassert solution('''\n    3\n    RB\n    ''') == \"2\"\nassert solution('''\n    5\n    RRBBGGR\n    ''') == \"2\"\nassert solution('''\n    10\n    BGBGGRBBGGR\n    ''') == \"3\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"0\"\nassert solution('3') == \"0\"\nassert solution('4') == \"0\"\nassert solution('5') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\nassert solution('RGBGRBB') == 'RGBRGBR'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4395,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1'\nassert solution('7') == '3'\nassert solution('BRB') == 'GRB'\nassert solution('RGBGRBB') == 'RGBRGBR'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"1\") == \"48000.0\"\nassert solution(\"2\") == \"48000.0\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\\n\") == \"48000.0\"\nassert solution(\"3\\n110000 JPY\\n1200000 BTC\\n\") == \"300000.0\"\n\"\"\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1520,
        "num_ids_4": 1520
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n100000000 JPY\\n100000000 BTC\") == \"100000000.0\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.0\"\nassert solution(\"2\\n10000 JPY\\n0.10000000 BTC\") == \"48000.1\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC') == '48000.0'\nassert solution('1\\n-1.0\\n-0.10000000') == '-1.0'\n\n\"\"\"\nfrom math import floor",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"48000.0\"\nassert solution(\"10000 JPY\") == \"48000.0\"\nassert solution(\"0.10000000 BTC\") == \"48000.0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 45
    },
    {
        "number": 4396,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n10000 JPY\\n0.10000000 BTC\\n') == '48000.0'\nassert solution('2\\n100000000 JPY\\n1000000000 BTC\\n') == '48000000.0'\nassert solution('2\\n100000000 JPY\\n1000000000 BTC\\n') == '48000000.0'\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 5\\n') == '2'\nassert solution('4 6\\n') == '3'\nassert solution('3 5\\n') == '2'\nassert solution('3 6\\n') == '1'\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '3'\nassert solution('5 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin := input()) == \"3\"\n\nIn a 2-car train, the second car from the front is the first car from the back.\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4\") == \"3\"\nassert solution(\"1 5\") == \"4\"\nassert solution(\"3 6\") == \"1\"\n\n\"\"\"\n\nn,i=map(int,input().split())\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3') == '3'\nassert solution('10 3') == '3'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 2\") == \"3\"\n\n##My solution\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\") == \"3\"\nassert solution(\"5 3\") == \"3\"\nassert solution(\"6 5\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 2') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4397,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1 2'\nassert solution('2 1') == '1 2'\nassert solution('3 1') == '1 2'\nassert solution('4 1') == '1 2'\nassert solution('5 1') == '1 2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == ''\nassert solution('1\\na\\n') == 'a'\nassert solution('2\\nab\\n') == 'ab'\nassert solution('3\\nabc\\n') == 'abc'\nassert solution('4\\nabcd\\n') == 'abcd'\n",
        "num_ids_2": 22,
        "num_ids_4": 52
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nip cc') == 'icpc'\nassert solution('3\\nabc dfg') == 'adfg'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nab\nbc\n''') == 'acb'\nassert solution('''3\nabc\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'icpc'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'icpc'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == 'abcabcd'\nassert solution('5') == 'aabbcdd'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(2) == 'icpc'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'icpc'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"1\\nabcd\\n\"\n    \"ab\\ncd\\n\"\n    ) == \"acdbc\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4398,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'icpc', \"Wrong answer\"\nassert solution('1') == '', \"Wrong answer\"\nassert solution('100') == '', \"Wrong answer\"\nassert solution('a') == 'a', \"Wrong answer\"\nassert solution('ab') == 'ba', \"Wrong answer\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('ABC') == 'No'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"BBB\") == \"No\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('ABA') == 'Yes'\n\n-------",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ABA''') == 'Yes'\nassert solution('''AA''') == 'No'\nassert solution('''ABA''') == 'Yes'\nassert solution('''AA''') == 'No'\nassert solution('''ABA''') == 'Yes'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAB') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABA\") == \"Yes\"\nassert solution(\"ABC\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABA') == 'Yes'\nassert solution('AAB') == 'No'\nassert solution('ABAB') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''ABA''') == 'Yes'\nassert solution('''ABC''') == 'No'\nassert solution('''ACD''') == 'No'\nassert solution('''ABABC''') == 'Yes'\nassert solution('''ABCDEFGHIJKL''') == 'No'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4399,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"ABA\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"\"\nassert solution('') == \"\"\nassert solution('RRR') == \"2\"\nassert solution('R') == \"2\"\nassert solution('RR') == \"2\"\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"R\") == \"2\"\nassert solution(\"RR\") == \"2\"\nassert solution(\"RRSRR\") == \"3\"\nassert solution(\"RRSR\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRR') == '1'\n\n---------------------\n2.    Fibonacci Number\n\nQ.    The Fibonacci numbers are defined by the following recurrence relation:\n\nFn = Fn\u22121 + Fn\u22122, where F1 = 1 and F2 = 1.\n\nFind the 10-th Fibonacci number Fn.\n\n-----Constraints-----\nQ.    Fn will be a positive integer.\n\n-----Input-----\nInput is given from Standard Input in the following format:\n\nFn\n\n-----Output-----\nPrint the 10-th Fibonacci number Fn.\n\n-----Sample Input-----\n11\n\n-----Sample Output-----\n12\n\n---------------------\n3.    Palindrome Permutation\n\nQ.    Check whether a given string, s, is a permutation of a palindrome.\n\nA palindrome is a string that reads the same forwards and backwards.\n\nAll permutations of a string are palindromes.\n\nPalindrome Permutation:\n\nQ.    Given an input string, check whether the input string can be rearranged to form a palindrome.\n\nA palindrome is a string that reads the same forwards and backwards.\n\nPalindrome Permutation:\n\nQ.    An input string, s, can be rearranged to form a palindrome if you can remove one or more characters from the front of s, or one or more characters from the back of s.\n\nFind out if a given string, s, can be rearranged to form a palindrome.\n\nA palindrome is a string that reads the same forwards and backwards.\n\nSolution:",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''RR\n''') == '2'\nassert solution('''RRS\n''') == '2'\nassert solution('''RRR\n''') == '1'\n",
        "num_ids_2": 15,
        "num_ids_4": 23
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('RRS') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RRRR\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RR') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRS') == '2'\nassert solution('RRRSRR') == '2'\nassert solution('RRRRRRRRRR') == '3'\nassert solution('RRRRRRRRRRRRRRRR') == '4'\nassert solution('RRRRRRRRRRRRRRRRRRRR') == '5'\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"S\nRR\nR\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"R\nRS\nRR\n\"\"\"\n) == \"2\"\n\nassert solution(\n\"\"\"S\nRR\nR\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"RR\nR\nS\n\"\"\"\n) == \"3\"\n\nassert solution(\n\"\"\"RR\nR\nR\n\"\"\"\n) == \"2\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4400,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"RRS\") == \"2\"\nassert solution(\"RR\") == \"2\"\nassert solution(\"R\") == \"1\"\nassert solution(\"R\") == \"1\"\nassert solution(\"RRR\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\\n\") == \"3 1 2\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3\") == \"3 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('2 1 3') == '3 1 2'\nassert solution('3 1 2') == '2 1 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"3 1 2\") == \"2 1 3\"\nassert solution(\"2 2 2\") == \"1 1 1\"\nassert solution(\"1 1 1\") == \"1 1 1\"\nassert solution(\"1 1 1 2\") == \"1 1 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '3 1 2'\nassert solution('4 2 3') == '1 2 3'\nassert solution('2 5 4') == '2 5 4'\nassert solution('5 4 2') == '2 5 4'\nassert solution('1 2 3 4') == '3 1 2 4'\n\"\"\"\nfrom typing import List",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 1 2\") == \"2 1 1\"\nassert solution(\"3 4 1\") == \"1 3 4\"\nassert solution(\"1 2 3\") == \"2 1 3\"\nassert solution(\"2 1 3\") == \"3 2 1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 3\n3 1 2''') == '3 1 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4401,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3\") == \"3 1 2\"\nassert solution(\"1 2 3 4 5\") == \"3 1 2 5 4\"\nassert solution(\"1 2 3 4 5 6\") == \"5 4 1 3 2 6\"\nassert solution(\"1 2 3 4 5 6 7\") == \"5 4 1 3 2 7 6\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"5 4 1 3 2 7 8 6\"\n",
        "num_ids_2": 32,
        "num_ids_4": 74
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('30 100') == '100'\nassert solution('20 20') == '50'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('10 10') == '10'\nassert solution('15 10') == '20'\nassert solution('20 15') == '15'\nassert solution('20 1') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"30 -100\") == \"-100\"\nassert solution(\"30 -100\") == \"-100\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1, 5, 3, 10, 1]) == \"1\"\nassert solution([20, 13, 15, 10, 1]) == \"20\"\nassert solution([30, 20, 15, 10, 1]) == \"100\"\nassert solution([40, 26, 22, 13, 1]) == \"200\"\nassert solution([60, 40, 26, 22, 13, 1]) == \"300\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('expect', fromlist=['expect']).expect('Takahashi', '100')\n\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('30 100') == '100'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 1\") == \"5\"\nassert solution(\"7 4\") == \"10\"\nassert solution(\"1 0\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"30 100\") == \"100\"\nassert solution(\"-30 -100\") == \"200\"\nassert solution(\"30 -100\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4402,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5\\n') == '0'\nassert solution('0 0\\n') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+-++\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('+-++') == '2'\nassert solution('+-++-') == '2'\nassert solution('+-++-+') == '2'\nassert solution('+-++-++') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+-++\") == \"2\"\n\ninput()\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+-++') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '2'\nassert solution('+-++') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-++-++-++-++-++\") == \"2\"\nassert solution(\"+-++-++-++-++-++\") == \"2\"\nassert solution(\"-++-++-++-++-++\") == \"0\"\nassert solution(\"+-++-++-++-++-++\") == \"2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 71
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"-++\") == \"1\"\nassert solution(\"-++\") == \"0\"\nassert solution(\"-++\") == \"1\"\nassert solution(\"-++\") == \"2\"\n\nstdin = \"++-+\"\nprint(solution(stdin))\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-++-+++-+-+++-+-+++-+++-+-++-+--+++---+++-++-++\") == \"5\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4403,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+-++\") == \"2\"\nassert solution(\"+-++-++\") == \"2\"\nassert solution(\"+-++-++-++\") == \"2\"\nassert solution(\"+-++-++-++-++\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2020/04/30\") == \"Heisei\"\nassert solution(\"2020/04/29\") == \"TBD\"\nassert solution(\"2020/04/28\") == \"Heisei\"\n",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/30') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2019/04/30') == 'Heisei'\nassert solution('2019/04/29') == 'TBD'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/10/30\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2019/04/30') == 'Heisei', 'Check Example 1'\nassert solution('2019/04/30') == 'TBD', 'Check Example 2'\nassert solution('2019/04/31') == 'TBD', 'Check Example 3'\nassert solution('2019/05/01') == 'TBD', 'Check Example 4'",
        "num_ids_2": 41,
        "num_ids_4": 81
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"Should print Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\", \"Should print TBD\"\nassert solution(\"2019/04/28\") == \"TBD\", \"Should print TBD\"\nassert solution(\"2019/04/27\") == \"TBD\", \"Should print TBD\"\nassert solution(\"2019/04/26\") == \"Heisei\", \"Should print Heisei\"\n",
        "num_ids_2": 43,
        "num_ids_4": 83
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\", \"3.1\"\nassert solution(\"2019/04/29\") == \"TBD\", \"3.2\"\nassert solution(\"2019/05/31\") == \"TBD\", \"3.3\"\nassert solution(\"2019/04/30\") == \"Heisei\", \"3.4\"\nassert solution(\"2019/03/31\") == \"TBD\", \"3.5\"\n",
        "num_ids_2": 41,
        "num_ids_4": 82
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/27\") == \"TBD\"",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/31\") == \"TBD\"\nassert solution(\"2019/10/12\") == \"TBD\"\nassert solution(\"2019/10/13\") == \"TBD\"\nassert solution(\"2019/10/14\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4404,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2019/04/30\") == \"Heisei\"\nassert solution(\"2019/04/29\") == \"TBD\"\nassert solution(\"2019/04/27\") == \"TBD\"\nassert solution(\"2019/04/28\") == \"TBD\"\nassert solution(\"2019/04/22\") == \"TBD\"\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(samples[0]) == solution(samples[1]) == solution(samples[2]) == samples[3]\nassert solution(samples[4]) == solution(samples[5]) == samples[6] == samples[7]\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10\n
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_data) == '10'\nassert solution(input_data2) == '3'\nassert solution(input_data3) == '3'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == \"14\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '2'\nassert solution('''\n10\n2 2 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''\n2\n1 2\n''') == '3'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\\n\"\n) == \"14\\n\"\n\nassert solution(\n    \"10\\n6 6 6 3 6 1000000000 3 3 6 6\\n\"\n) == \"9\\n\"\n\nassert solution(\n    \"3\\n1337 1337 1337\\n\"\n) == \"3\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 1 1 10 10\n''') == '14'\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"14\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n18\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10 10\n''') == '14'\nassert solution('''\n3\n1337 1337 1337\n''') == '3'\nassert solution('''\n10\n6 6 6 3 6 1000000000 3 3 6 6\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4405,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"18\\n2 1 2 10 2 10 10 2 2 1 10 10 10 10 1 1 10 10 10 10 10 1 1 10 10\") == \"14\"\nassert solution(\"10\\n6 6 6 3 6 1000000000 3 3 6 6\") == \"9\"\nassert solution(\"3\\n1337 1337 1337\") == \"3\"\n",
        "num_ids_2": 60,
        "num_ids_4": 78
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 2\\n1 2 3 2 1 3 2') == '2\\n2 1'\nassert solution('10 4\\n2 3 3 1 1 2 1 2 3 3') == '3\\n1 3 2'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2\n1 2 3 2 1\n''') == '2 1'\nassert solution('''\n5 4\n2 3 3 1 1 2\n''') == '3 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '2'\nassert solution('''\n1\n2\n2\n3\n2\n3\n2\n1\n2\n''') == '2'\nassert solution('''\n2\n2\n2\n2\n2\n2\n2\n1\n2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''10 4\n1 2 3 2 1 3 2\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n    10 2\n    1 2 3 2 1 3 2\n    \"\"\") == \"2 1 2\"\n\nassert solution(\n    \"\"\"\n    10 4\n    2 3 3 1 1 2 1 2 3 3\n    \"\"\") == \"3 1 2\"\n\nassert solution(\n    \"\"\"\n    1\n    \"\"\") == \"1\"\n\nassert solution(\n    \"\"\"\n    10 5\n    2 3 3 1 1 2 1 2 3 3\n    \"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n    10 6\n    2 3 3 1 1 2 1 2 3 3\n    \"\"\") == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2\") == \"2\"\nassert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_data) == '3'\n\ninput_data = \"7 2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_) == stdout_\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4406,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"2 3 3 1 1 2 1 2 3\\n\"\n    ) == \"2\\n1 3 2\"\n\nassert solution(\n    \"10 4\\n\"\n    \"2 3 3 1 1 2 1 2 3 3\\n\"\n    ) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n1\n2\n3\n\"\"\") == \"1\"\nassert solution(\"\"\"\n2\n1\n1\n2\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\n1\n2\n3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n2\n4\n6\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '1'\nassert solution('3 4') == '1'\nassert solution('5 4') == '1'\nassert solution('3 4') == '2'\nassert solution('5 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8\\n5\\n14\\n10') == '3 2'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 2 3\n1\n2\n3\n3\n1\n2\n''') == '3\n2\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1\n1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n2 4 8 2 4\") == \"1\"\nassert solution(\"5 2\\n7 8\\n5\\n14\") == \"3\"\n\nstdin = \"\"\"\n10\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1000000000000000\n1",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"3\") == \"3\"\nassert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"4\") == \"3\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n2 4 8 2 4\\n8') == '3'\nassert solution('5 4\\n2 4 8 2 4\\n10') == '-1'\nassert solution('5 4\\n2 4 8 2 4\\n5') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 64
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"3 2\"\n\nassert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"3 2\"\n\nassert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"3 2\"\n\nassert solution(\"\"\"\n5 4\n2 4 8 2 4\n8\n5\n14\n10\n\"\"\") == \"3 2\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2 4\n2 4 8 2 4\n8\n5\n14\n10\n\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 2\n1 2 3\n4 5\n\n\"\"\") == \"-1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4407,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3\n2 4 8 2 4\n8\n5\n14\n10\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n5 3 5 1 1\n5\n10\n\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n3 1\n5\n10\n\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '21'\nassert solution('3 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == \"21\"\nassert solution('''\n3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\") == \"21\"\nassert solution(\"\"\"\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n2 6 7\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == '21'\nassert solution('4 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\\n1 3 2 8 5 5 8 2 2 8 5 2\") == \"21\"\nassert solution(\"3 3\\n9 9 9 9 9 9 9 9 9\\n1 2 3\\n1 2 3\\n1 2 3\") == \"0\"\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"21\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '21'\nassert solution('4 3') == '0'\nassert solution('3 3') == '21'\nassert solution('4 3') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '21'\n\nassert solution('''3 3\n9 9 9 9 9 9 9 9 9\n1 2 3\n1 2 3\n''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4408,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '21'\nassert solution('''\n4 3\n1 3 2 8 5 5 8 2 2 8 5 2\n1 2 2 5\n2 6 7\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\\n2\\n\") == \"1\"\nassert solution(\"1\\n3\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1 2 3'\nassert solution('4') == '2 3 2 1'\nassert solution('1') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2 4 6 6 6\\n\") == \"2\\n1 2 3\"\nassert solution(\"3\\n2 8 10\\n\") == \"2\\n2 3 2\"\nassert solution(\"6\\n1 1 1 1 1 1\\n\") == \"0\"\n",
        "num_ids_2": 46,
        "num_ids_4": 66
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 3 2\n''') == '2'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(example_input_1) == example_output_1\nassert solution(example_input_2) == example_output_2\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4 6 6 6') == '2'\nassert solution('3 2 4 6 6 6') == '3'\nassert solution('5 7 8 6 5') == '3'\nassert solution('1 1 1 1') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 56
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 6 6 6\") == \"2\"\nassert solution(\"3 2 8 10\") == \"2 3 2 1\"\nassert solution(\"3 1 2 2\") == \"1 1 2 1\"\nassert solution(\"1 1 1 1\") == \"0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 59
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 4 6 6 6\n''') == '2'\nassert solution('''\n3\n2 8 10\n''') == '2 2 3'\nassert solution('''\n4\n1 1 1 1\n''') == '0'\nprint('You are a setter!') if __name__ == \"__main__\" else None\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4409,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('3') == '2 3'\nassert solution('4') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n10 1\n00001100101\n100000100110\n100011101001101\n1000001011100101\n1100010011000101\n1111111111000101\n0110010011000101\n1011101101110100\n1100010100011101\n0001110111000111\n''') == '4'\nassert solution('''\n3 1\n001\n1\n''') == '0'\nassert solution('''\n8 1\n1000101\n1001010\n1001001\n1011010\n1001010\n1011000\n11010100\n10100100\n''') == '2'\nassert solution('''\n100000\n000110001\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 1\") == \"1\"\nassert solution(\"6 2\") == \"2\"\nassert solution(\"5 1\") == \"1\"\nassert solution(\"10101\") == \"1\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\nassert solution(input()) == \"0\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 1\\n100010\") == \"1\"\nassert solution(\"6 2\\n000000\") == \"0\"\nassert solution(\"5 1\\n10101\") == \"1\"\nassert solution(\"3 1\\n001\") == \"1\"\nassert solution(\"2 2\\n00\") == \"1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '1'\nassert solution('''6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '1'\n\nassert solution('''\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1'\nassert solution('6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '1'\nassert solution('6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n0') == '2'\nassert solution('6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n1 1\\n0') == '2'\nassert solution('6 1\\n100010\\n6 2\\n000000\\n5 1\\n10101\\n3 1\\n001\\n2 2\\n00\\n0') == '1'\n",
        "num_ids_2": 102,
        "num_ids_4": 200
    },
    {
        "number": 4410,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n6 1\n100010\n6 2\n000000\n5 1\n10101\n3 1\n001\n2 2\n00\n1 1\n0\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5 1\n01101100\n00110110\n00101010\n00010110\n01101010\n01101000\n00110101\n00010100\n00000100\n\"\"\") == \"5\"\nassert solution(\"\"\"\n8 1\n01100000\n10000001\n10011001\n00010101\n01110001\n11011101\n00110001\n00011010\n01000100\n00010100\n\"\"\") == \"5\"\nassert solution(\"\"\"\n8 1\n10011001\n00100100\n01110001\n01000100\n11011101\n00010100\n00011010\n01000100\n01110001\n00010100\n\"\"\") == \"5\"\nassert solution(\"\"\"\n8 1\n10001010\n00000100\n11010110\n01100100\n01110001\n00010100\n00011010\n11011101\n00010100\n00010100\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\nassert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '4'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(example_input_easy) == '4'\nassert solution(example_input_hard) == '1'\nassert solution(input) == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2 3 4 5 6'\nassert solution(stdin=\"6 1\\n2 3\") == '4 5 6 1'\nassert solution(stdin=\"7 1\\n11 11\\n9 11\") == '3 6 7 1'\n",
        "num_ids_2": 33,
        "num_ids_4": 58
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 1\") == \"4\"\nassert solution(\"5 2\") == \"1 4 5\"\nassert solution(\"5 2\") == \"1 4 5\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '1 4 5'\n\n\"\"\"\n\n\n\nfrom typing import List\nimport sys\nfrom collections import deque\nfrom collections import namedtuple\n\nPoint = namedtuple('Point', ('x', 'y'))\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 1') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"7 2\") == \"3\"\nassert solution(\"5 1\") == \"1 4 5\"\nassert solution(\"6 1\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6 1\\n2 3\\n3 3\") == \"4\\n1 3 5 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4411,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '3\\n4 1 3 5 6'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == \"31\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\nassert solution('''\n3\n3 4 6\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n3\n5 6 15 30\n4\n10 6 30 15''') == '31'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n\"\"\") == \"30\"\n\nassert solution(\"\"\"\n5\n3\n5 2 5 2\n1\n1\n5\n5\n\"\"\") == \"5\"\n\nassert solution(\"\"\"\n1\n1\n0\n\"\"\") == \"0\"\n\nprint(\"All test cases passed!\")",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31', 'First'\nassert solution('''\n3\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10', 'Second'\nassert solution('''\n3\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30', 'Third'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '31'\n\nassert solution('''\n2\n5\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '30'\n\nassert solution('''\n2\n5\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '10'\n\nassert solution('''\n2\n4\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '3'\n\nassert solution('''\n2\n5\n5 6 15 30\n4\n10 6 30 15\n3\n3 4 6\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '30'\nassert solution('4') == '31'\nassert solution('3') == '30'\nassert solution('4') == '31'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4412,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == '30'\nassert solution('3\\n4\\n5 6 15 30\\n4\\n10 6 30 15\\n3\\n3 4 6') == '30'\nassert solution('1\\n3\\n1 3 4 5\\n1\\n10 3 5 4') == '10'\n",
        "num_ids_2": 72,
        "num_ids_4": 100
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"2\\n1\"\n\nassert solution('''\n5\n5\n1 1 1 1 1\n2\n5 5\n4\n3 3\n5\n2 3\n3\n''') == \"1\\n1\"\n\nassert solution('''\n4\n4\n3 1 2 3\n3\n2 3 4\n1\n2\n''') == \"2\\n1\"\n\nassert solution('''\n5\n5\n1 1 1 1 1\n2\n5 5\n4\n3 3\n5\n2 3\n3\n''') == \"1\\n1\"\n\nassert solution('''\n8\n8\n2 2 1 1 1 4 1 3 1 1\n2\n3 4\n1\n4\n5\n1 2\n2\n1\n5\n''') == \"1\\n1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6') == '2\\n1\\n2'\n\nprint(solution(input()))\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\\n2\\n1\\n\"\nassert solution(input(\"\")) == \"1\\n\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100') == '2\\n1\\n2\\n1'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n') == '2'\n\nstdin = '''2\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n\n'''\nprint(solution(stdin))",
        "num_ids_2": 138,
        "num_ids_4": 138
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n4\\n2 10 1 20\\n2\\n3 6\\n5\\n2 3 4 99 100\\n1\\n42\\n') == '2\\n1\\n2\\n1'\n\n\n\nIn the third and the fourth queries of the example, both students with the skills $a=[3, 6]$ can't be in the same team (because of $|a_1 - a_3|=|2-1|=1$). To solve the problem, you have to test whether $|a_1 - a_3| = 1$ meets the restriction.\n\nIn the first query of the example, it is not possible to create two teams.\n\nIn the second query of the example, you can create just one team: $a_1$ can be in the first team only and the student $2$ can be in the second team only.\n\nIn the third query of the example, you can create just one team: $a_2$ can be in the first team only and the student $4$ can be in the second team only.\n\nIn the fourth query of the example, you can create just one team: $a_3$ can be in the first team only and the student $5$ can be in the second team only.\n\n'''\n\nfrom math import inf\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42''') == \"2\"\nassert solution('''5\n2\n1 3 6\n5\n2 3 4 99 100\n1\n1\n3\n2\n4\n2''') == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n42\n''') == \"2\"\nassert solution('''\n5\n3\n2\n5\n2 3 4 99 100\n1\n''') == \"1\"\nassert solution('''\n4\n4\n2 10 1 20\n2\n3 6\n5\n2 3 4 99 100\n1\n''') == \"2\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4413,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\\n4\\n2 10 1 20\\n2\") == \"2\"\nassert solution(\"4\\n4\\n3 6\\n5\") == \"1\"\n\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"YES\"\nassert solution('''\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1 2 3 4\n1 2 3 6\n5 2 6 27\n3 3 5 18\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n0 1 2 3\n0 1 2 3\n0 1 2 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n2 1 4\n2 1 4\n2 1 4\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n0 1 2 3\n0 1 2 3\n0 1 2 3\n\"\"\") == \"NO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == 'YES', solution('1 2 3 4')\nassert solution('1 2 3 6') == 'NO', solution('1 2 3 6')\nassert solution('5 2 6 27') == 'YES', solution('5 2 6 27')\nassert solution('3 3 5 18') == 'YES', solution('3 3 5 18')",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3 4') == 'YES', 'Small'\nassert solution('1 2 3 6') == 'NO', 'Medium'\nassert solution('5 2 6 27') == 'YES', 'Large'\nassert solution('3 3 5 18') == 'YES', 'Zilch'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 1\") == \"NO\"\nassert solution(\"3 2 3\") == \"YES\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"\nassert solution(\"1 2 3\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == 'YES'\nassert solution('1 2 3 6') == 'NO'\nassert solution('5 2 6 27') == 'YES'\nassert solution('3 3 5 18') == 'YES'\nassert solution('100000000000000000') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 3 4\") == \"YES\"\nassert solution(\"1 2 3 6\") == \"NO\"\nassert solution(\"5 2 6 27\") == \"YES\"\nassert solution(\"3 3 5 18\") == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4\\n1 2 3 6\\n5 2 6 27\\n3 3 5 18') == 'YES'\nassert solution('0\\n0\\n0\\n0') == 'NO'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(open('test_input.txt')) == 'YES\\nYES\\nYES\\nYES'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4414,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == 'YES', \"2\"\nassert solution('1 2 3 6') == 'NO', \"3\"\nassert solution('5 2 6 27') == 'YES', \"4\"\nassert solution('3 3 5 18') == 'YES', \"5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution(\"YES\") == \"YES\"\nassert solution(\"NO\") == \"NO\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n7 2 7 3 3 1 4\n''') == \"YES\"\nassert solution('''\n5\n4 3 1 5 3\n''') == \"YES\"\nassert solution('''\n5\n0 1 2 3 4\n''') == \"YES\"\nassert solution('''\n4\n0 1 2 3\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n7\n7 2 7 3 3 1 4\n\nOutput\nYES\n2\n3 7 \n5\n7 4 3 2 1 \n\nInput\n5\n4 3 1 5 3\n\nOutput\nNO\n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n\n5\n4 3 2 1 0''') == 'YES'\nassert solution('''\n1\n1 1 2 1 2\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n1 1 2 1 2\n\nOutput\nYES\n1\n3 \n4\n5 4 3 1 \n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n\nInput\n5\n4 3 2 1 0\n\nOutput\nNO\n\nInput\n5\n0 1 2 3 4\n\nOutput\nYES\n0\n\n5\n4 3 2 1 0\n''') == 'YES'\n\nassert solution('''\n1\n\nOutput\nYES\n1\n\n5\n4 3 2 1 0\n''') == 'YES'\nassert solution('''\n1\n\nOutput\nYES\n1\n\n5\n4 3 2 1 0\n''') == 'YES'\n",
        "num_ids_2": 13,
        "num_ids_4": 25
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"2 5\") == \"YES\"\nassert solution(\"6 1 2 3 4 5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 45
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2 7 3 3 1 4\n''') == \"YES\"\nassert solution('''\n5 4 3 2 1 0\n''') == \"YES\"\nassert solution('''\n5\n4 3 2 1 0\n''') == \"NO\"\nassert solution('''\n5\n0 1 2 3 4\n''') == \"YES\"\n\nassert solution('''\n10 1 2 3 4 5 6 7 8 9 0\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '7 2 7 3 3 1 4'\n) == 'YES'\n\nassert solution(\n    '5 4 3 2 1 0'\n) == 'YES'\n\nassert solution(\n    '3 3 5 8 7 4 2 1'\n) == 'YES'\n\nassert solution(\n    '1 1 2 1 2'\n) == 'NO'\n\nassert solution(\n    '0 1 2 3 4'\n) == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 2 7 3 3 1 4\") == \"YES\"\nassert solution(\"4 3 1 5 3\") == \"YES\"\nassert solution(\"1 1 2 1 2\") == \"NO\"\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4415,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\", solution(\n    )\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '18'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '18'\nassert solution('1') == '-1'\n\ninput_string = input()\nl, k = map(int, input().split())\nbooks = []\nfor i in range(l):\n    books.append(list(map(int, input().split())))\nbest = -1\nfor i in range(1 << l):\n    t = 0\n    a = 0\n    b = 0\n    for j in range(l):\n        if i & (1 << j):\n            t += books[j][0]\n            a += books[j][1]\n            b += books[j][2]\n    if best == -1 or t < best:\n        best = t\nprint(best)",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n''') == \"8\"\nassert solution('''\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == \"-1\"\nassert solution('''\n8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0\n\n''') == \"18\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 4\n7 1 1\n2 1 1\n4 0 1\n8 1 1\n1 0 1\n1 1 1\n1 0 1\n3 0 0''') == '18'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0''') == '8'\nassert solution('''5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1''') == '-1'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"7 4\\n\"\n    \"7 1 1\\n\"\n    \"2 1 1\\n\"\n    \"4 0 1\\n\"\n    \"8 1 1\\n\"\n    \"1 0 1\\n\"\n    \"1 1 1\\n\"\n    \"1 0 1\\n\"\n    \"3 0 0\\n\"\n) == \"18\"\nassert solution(\n    \"5 2\\n\"\n    \"6 0 0\\n\"\n    \"9 0 0\\n\"\n    \"1 0 1\\n\"\n    \"2 1 1\\n\"\n    \"5 1 0\\n\"\n) == \"8\"\nassert solution(\n    \"5 3\\n\"\n    \"3 0 0\\n\"\n    \"2 1 0\\n\"\n    \"3 1 0\\n\"\n    \"5 0 1\\n\"\n    \"3 0 1\\n\"\n) == \"-1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 3\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n''') == '8'\nassert solution('''5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\nOutput\n18\n\nInput\n5 2\n7 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n\nOutput\n-1\n''') == '-1'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"18\", \"second\"\nassert solution(\"8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0\") == \"6\", \"third\"\nassert solution(\"5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n\") == \"8\", \"fourth\"\n",
        "num_ids_2": 109,
        "num_ids_4": 150
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 4\\n7 1 1\\n2 1 1\\n4 0 1\\n8 1 1\\n1 0 1\\n1 1 1\\n1 0 1\\n3 0 0') == '18'\nassert solution('5 2\\n6 0 0\\n9 0 0\\n1 0 1\\n2 1 1\\n5 1 0\\n') == '8'\nassert solution('5 3\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('5 4\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\nassert solution('5 5\\n3 0 0\\n2 1 0\\n3 1 0\\n5 0 1\\n3 0 1\\n') == '-1'\n\nprint(solution(input()))\n",
        "num_ids_2": 89,
        "num_ids_4": 167
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"18\"\nassert solution(\"\"\"\n5 2\n6 0 0\n9 0 0\n1 0 1\n2 1 1\n5 1 0\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5 3\n3 0 0\n2 1 0\n3 1 0\n5 0 1\n3 0 1\n\"\"\") == \"-1\"\n",
        "num_ids_2": 13,
        "num_ids_4": 18
    },
    {
        "number": 4416,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"18\"\nassert solution(input) == \"8\"\nassert solution(input) == \"-1\"\nassert solution(input) == \"7\"\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 5') == '7'\nassert solution('2\\n1 1 2 3 1') == '2'\nassert solution('4\\n2 2') == '-1'",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '7'\nassert solution('4\\n5 2\\n1 6\\n3 5\\n5 2 5\\n') == '7'\nassert solution('4\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6\\n3 5\\n5 2 5\\n') == '-1'\n\n\n'''\n",
        "num_ids_2": 79,
        "num_ids_4": 130
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '2'\nassert solution('1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '6'\nassert solution('1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '-1'\nassert solution('1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '7'\nassert solution('1\\n5 1\\n1 1 2 3 1\\n4 2\\n6 4 8 5\\n2 2\\n1 6') == '7'\n",
        "num_ids_2": 78,
        "num_ids_4": 157
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"7\"\n\nassert solution(\"\"\"\n2\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n\"\"\") == \"6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == '2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == \"7\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2'\nassert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '6'\nassert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '7'\nassert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '7'\nassert solution('''5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"7\"\nassert solution(\"3 5 1 2 2\") == \"7\"\nassert solution(\"4 2\") == \"3\"\nassert solution(\"3 5 4 4\") == \"3\"\nassert solution(\"10 10 10 10 10 10 10 10 10 10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4417,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"2\"\nassert solution('''\n5 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"7\"\nassert solution('''\n3 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"-1\"\nassert solution('''\n1 1\n1 1 2 3 1\n4 2\n6 4 8 5\n2 2\n1 6\n3 5\n5 2 5\n''') == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '5'\nassert solution('12') == '0'\nassert solution('15') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '5'\nassert solution() == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''12\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '0'\nassert solution('''15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n4 8 15 16 23') == '5'\nassert solution('12\\n4 8 4 8 15 16 8 16 23 15 16 42 23 42') == '0'\nassert solution('15\\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42') == '3'\n",
        "num_ids_2": 43,
        "num_ids_4": 70
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n4 8 15 16 23\n''') == '5'\nassert solution('''10\n4 8 4 8 5 6 7 8\n''') == '0'\nassert solution('''13\n10 20 30 40 50 60 70 80 90 100\n''') == '6'\nassert solution('''99\n
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n8\n15\n16\n23\n\n''') == '5'\nassert solution('''\n\n15\n8\n4\n8\n15\n16\n23\n15\n16\n42\n23\n42\n\n''') == '0'\nassert solution('''\n\n4\n8\n15\n16\n23\n''') == '0'\nassert solution('''\n\n15\n8\n4\n8\n15\n16\n23\n15\n16\n42\n23\n42\n\n''') == '1'\nassert solution('''\n\n15\n8\n4\n8\n15\n16\n23\n15\n16\n42\n23\n42\n\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n4 8 15 16 23\n\"\"\") == \"5\"\nassert solution(\"\"\"\n10\n4 8 4 8 4 8 4 8 4 8 4 8\n\"\"\") == \"0\"\nassert solution(\"\"\"\n15\n4 8 4 8 15 16 8 16 23 15 16 4 42 23 42\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"1\"\nassert solution(\"12\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4418,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n8\n15\n16\n23\n42''') == '5'\n\nassert solution('''5\n4\n8\n15\n16\n23\n42''') == '0'\n\nassert solution('''15\n4\n8\n15\n16\n23\n42''') == '3'\n\nassert solution('''12\n4\n8\n15\n16\n23\n42\n43\n43\n44\n4\n8\n15\n16\n23\n42\n43\n43\n43\n4\n8\n15\n16\n23\n42\n43\n43\n44\n4\n8\n15\n16\n23\n42\n43\n43\n43\n4\n8\n15\n16\n23\n42\n43\n43\n43\n4\n8\n15\n16\n23\n42''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\n5 5\\n13 42\") == \"0\\n3\"\nassert solution(\"6\\n5 5\\n1337 420\") == \"92\\n87654322\"\nassert solution(\"6\\n5 5\\n123456789 1000000000\") == \"9150\"\nassert solution(\"6\\n5 5\\n100500 9000\") == \"0\\n2\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 46,
        "num_ids_4": 91
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6\\n5 5\\n13 42\\n18 4\\n1337 420\\n123456789 1000000000\\n100500 9000\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\nassert solution(\"1\\n15 12\\n17 5\\n19 8\\n21 7\\n25 6\\n29 5\\n33 4\\n37 3\\n41 2\\n45 1\\n49 0\\n53 0\") == \"0\\n3\\n2\\n92\\n87654322\\n9150\"\nassert solution(\"1\\n10 10\\n11 11\\n15 15\\n18 18\\n19 19\\n22 22\\n25 25\\n28 28\\n31 31\\n34 34\\n37 37\\n40 40\\n43 43\\n46 46\\n49 49\\n52 52\\n55 55\\n58 58\\n61 61\\n64 64\\n67 67\\n70 70\\n73 73\\n76 76\\n79 79\\n82 82\\n85 85\\n88 88\\n91 91\\n94 94\\n97 97\\n100 100\\n103 103\\n106 106\\n109 109\\n112 112\\n115 115\\n118 118\\n121 121\\n124 124\\n127 127\\n130 130\\n133 133\\n136 136\\n139 139\\n142 142\\n145 145\\n148 148\\n151 151\\n154 154\\n157 157\\n160 160\\n163 163\\n166 166\\n169 169\\n172 172\\n176 176\\n179 179\\n182 182\\n185 185\\n188 188\\n191 191\\n194 194\\n197 197\\n200 200\\n203 203\\n206 206\\n209 209\\n212 212\\n215 215\\n218 218\\n221 221\\n224 224\\n227 227\\n230 230\\n233 233\\n236 236\\n239 239\\n242 242\\n245 245\\n248 248\\n251 251\\n254 254\\n257 257\\n260 260\\n263 263\\n266 266\\n269 269\\n272 272\\n275 275\\n278 278\\n281 281\\n284 284\\n287 287\\n290 290\\n293 293\\n296 296\\n299 299\\n302 302\\n305 305\\n308 308\\n311 311\\n314 314\\n317 317\\n320 320\\n323 323\\n326 326\\n329 329\\n332 332\\n335 335\\n338 338\\n341 341\\n344 344\\n347 347\\n350 350\\n353 353\\n356 356\\n359 359\\n362 362\\n365 365\\n368 368\\n371 371\\n374 374\\n377 377\\n380 380\\n383 383\\n386 386\\n389 389\\n392 392\\n395 395\\n398 398\\n401 401\\n404 404\\n407 407\\n410 410\\n413 413\\n416 416\\n419 419\\n422 422\\n425 425\\n428 428\\n431 431\\n434 434\\n437 437\\n440 440\\n443 443\\n446 446\\n449 449\\n452 452\\n455 455\\n458 458\\n461 461\\n464 464\\n467 467\\n470 470\\n473 473\\n476 476\\n479 479\\n482 482\\n485 485\\n488 488\\n491 491\\n494 494\\n497 497\\n500 500\\n503 503\\n506 506\\n509 509\\n512 512\\n515 515\\n518 518\\n521 521\\n524 524\\n527 527\\n530 530\\n533 533\\n536 536\\n539 539\\n542 542\\n545 545\\n548 548\\n551 551\\n554 554\\n557 557\\n560 560\\n563 563\\n566 566\\n569 569\\n572 572\\n575 575\\n578 578\\n581 581\\n584 584\\n587 587\\n590 590\\n593 593\\n596 596\\n599 599\\n602 602\\n605 605\\n608 608\\n611 611\\n614 614\\n617 617\\n620 620\\n623 623\\n626 626\\n629 629\\n632 632\\n635 635\\n638 638\\n641 641\\n644 644\\n647 647\\n650 650\\n653 653\\n656 656\\n659 659\\n662 662\\n665 665\\n668 668\\n671 671\\n674 674\\n677 677\\n680 680\\n683 683\\n686 686\\n689 689\\n692 692\\n695 695\\n698 698\\n701 701\\n704 704\\n707 707\\n710 710\\n713 713\\n716 716\\n719 719\\n722 722\\n725 725\\n728 728\\n731 731\\n734 734\\n737 737\\n740 740\\n743 743\\n746 746\\n749 749\\n752 752\\n755 755\\n758 758\\n761 761\\n764 764\\n767 767\\n770 770\\n773 773\\n776 776\\n779 779\\n782 782\\n785 785\\n788 788\\n791 791\\n794 794\\n797 797\\n800 800\\n803 803\\n806 808\\n809 809\\n812 812\\n815 815\\n818 818\\n821 821\\n824 824\\n827 827\\n830 830\\n833 833\\n836 836\\n839 839\\n842 842\\n845 845\\n848 848\\n851 851\\n854 854\\n857 857\\n860 860\\n863 863\\n866 866\\n869 869\\n872 872\\n875 875\\n888 888\\n891 891\\n894 894\\n797 897\\n900 900\\n903 903\\n906 906\\n908 908\\n911 911\\n914 914\\n917 917\\n920 920\\n923 923\\n926 926\\n930 930\\n933 933\\n936 936\\n939 939\\n942 942\\n945 945\\n948 948\\n951 951\\n954 954\\n957 957\\n960",
        "num_ids_2": 136,
        "num_ids_4": 1605
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '3'\nassert solution('''\n6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '92'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution('''1\n1337''') == '1'\nassert solution('''1\n1234''') == '2'\nassert solution('''1\n12345''') == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000\n''') == '0\n\nassert solution('''\n4 5\n12 32\n20 4\n1234 5\n123456789 1000000000\n100500 9000\n''') == '2\n'''\n\n\nimport sys\nimport math",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 5') == '0'\nassert solution('13 42') == '3'\nassert solution('18 4') == '2'\nassert solution('1337 420') == '92'\nassert solution('123456789 1000000000') == '9150'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '0'\nassert solution('''6\n5 5\n13 42\n18 4\n1337 420\n123456789 1000000000\n100500 9000''') == '3'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"0\"\nassert solution(\"4\\n3\\n1\\n4\") == \"2\"\nassert solution(\"4\\n13\\n45\") == \"4\"\n",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n5 5\\n13 42') == '0'\nassert solution('2\\n5 5\\n13 42') == '3'\nassert solution('3\\n5 5\\n13 42') == '2'\nassert solution('4\\n5 5\\n13 42') == '92'\nassert solution('5\\n5 5\\n13 42') == '87654322'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4419,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '0'\nassert solution('13 42') == '3'\nassert solution('18 4') == '2'\nassert solution('1337 420') == '92'\nassert solution('123456789 1000000000') == '9150'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 0 4\") == \"0\", \"Should be 0\"\nassert solution(\"10 5 15\") == \"15\", \"Should be 15\"\nassert solution(\"17 8 54321\") == \"54306\", \"Should be 54306\"\nassert solution(\"499999993 9 1000000000\") == \"999999995\", \"Should be 99999949\"\nassert solution(\"10 5 187\") == \"185\", \"Should be 185\"\n",
        "num_ids_2": 34,
        "num_ids_4": 80
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nprint('all tests passed')\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 5 12345\") == \"12339\"\nassert solution(\"5 0 4\") == \"0\"\nassert solution(\"10 5 15\") == \"15\"\nassert solution(\"17 8 54321\") == \"54306\"\nassert solution(\"499999993 9 1000000000\") == \"185\"\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"12339\"\nassert solution() == \"0\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 5 187\n2 0 999999999\n''') == '185'\nassert solution('''\n5 0 4\n''') == '0'\nassert solution('''\n10 5 187\n499999993 9 1000000000\n''') == '999999995'\nassert solution('''\n10 5 187\n2 0 999999999\n''') == '999999998'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 5 12345\\n5 0 4\\n10 5 15\\n17 8 54321\\n499999993 9 1000000000\\n10 5 187\\n2 0 999999999') == '12339\\n0\\n15\\n54306\\n999999995\\n185'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nassert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\nassert solution('''\n10 5 187\n2 0 999999999\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '12339'\nprint(solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n'''))\nassert solution('''\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4420,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 5 12345\n5 0 4\n10 5 15\n17 8 54321\n499999993 9 1000000000\n10 5 187\n2 0 999999999\n''') == \"12339\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"8 2\") == \"8\"\nassert solution(\"7 3\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 2\n1 2 2 3 2 4 10\n''') == '6'\nassert solution('''8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5\n''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\n\n\n'''\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 2\n1 2 2 3 2 4 6 10''') == '6'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\nassert solution('''7 4\n1 2 2 3 2 4 5''') == '4'\nassert solution('''9 3\n1 2 2 3 2 4 5 6 8''') == '5'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''8 2\n1 2 2 3 2 4 6 10''') == '8'\nassert solution('''7 3\n1 2 2 3 2 4 5''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n1 2 3 4\\n\") == \"6\"\nassert solution(\"8 2\\n1 2 3 4 5 6 7\\n\") == \"8\"\nassert solution(\"7 3\\n1 2 2 3 2 4 5\\n\") == \"4\"",
        "num_ids_2": 41,
        "num_ids_4": 63
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 2\n2 2 2 3 2 4 10\n''') == '6'\nassert solution('''\n8 2\n1 2 2 3 2 4 6 10\n''') == '8'\nassert solution('''\n7 3\n1 2 2 3 2 4 5\n''') == '4'\nassert solution('''\n7 4\n1 2 2 3 2 4 5\n''') == '4'\nassert solution('''\n5 1\n1 2 2 3 2 4 5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4421,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 2\\n1 2 2 3 2 4 10') == '6'\nassert solution('8 2\\n1 2 2 3 2 4 6 10') == '8'\nassert solution('7 3\\n1 2 2 3 2 4 5') == '4'",
        "num_ids_2": 41,
        "num_ids_4": 61
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('4 5 6') == '4 5 6'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\") == \"aBC\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n2 3\nCC\n\"\"\") == \"cC\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3\\nABC') == 'abc'\nassert solution('2 4\\nABC') == 'abC'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['ABC', '123']) == 'abc123'\nassert solution(['ABC', '124']) == 'abc124'\nassert solution(['ABC', '125']) == 'abc125'\nassert solution(['ABC', '126']) == 'abc126'\nassert solution(['ABC', '127']) == 'abc127'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 1\") == \"aBC\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"\"\nassert solution(\"1 2\") == \"12\"\nassert solution(\"ABC\") == \"abC\"\nassert solution(\"ABCD\") == \"Abcd\"\n",
        "num_ids_2": 15,
        "num_ids_4": 37
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == 'aBC'\nassert solution('2 2') == 'ac'\nassert solution('4 3') == 'ac'\nassert solution('1 2') == 'a'\nassert solution('1 3') == 'a'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 1\") == \"aBC\"\nprint(solution(\"3 1\"))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4422,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == 'abc', 'Check your code!'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nmoscow 60\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\") == \"3 4 6 1 5 2\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nhb\") == \"1 2 3 4 5\"\nassert solution(\"5\\nkazan\") == \"1 2 3 4 5\"\nassert solution(\"5\\nkazan 50\") == \"1 2 3 4 5\"\nassert solution(\"5\\nmoscow\") == \"1 2 3 4 5\"\nassert solution(\"5\\nkazan 10\") == \"1 2 3 4 5\"\n",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '3 4 6 1 5 2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3,4,6,1,5,2'\n\nassert solution('''\n1\nmoscow 20\nmoscow 10\nmoscow 60\nmoscow 40\nmoscow 35\nmoscow 50\nkazan 35\nkazan 50\nkazan 60\nkazan 40\nkhabarovsk 40\nkhabarovsk 20\nkhabarovsk 10\nkhabarovsk 60\nkhabarovsk 50\n''') == '1,2,3,4,6,5,7,8,9,10,11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n\") == \"3\\n4\\n6\\n1\\n5\\n2\"\n\n----Hints----\n",
        "num_ids_2": 63,
        "num_ids_4": 63
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6\nkhabarovsk 20\nmoscow 10\nkazan 50\nkazan 35\nmoscow 60\nkhabarovsk 40\n''') == '3,4,6,1,5,2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\nkhabarovsk 20\\nmoscow 10\\nkazan 50\\nkazan 35\\nmoscow 60\\nkhabarovsk 40\\n') == '3 4 6 1 5 2'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4423,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '3'\nassert solution('2') == '1'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 900') == 'Yes'\nassert solution('1 1') == 'No'\nassert solution('1 1') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 900\\n') == 'Yes'\nassert solution('1 1000\\n') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\nassert solution(sys.stdin.read()) == \"Yes\"\nassert solution(sys.stdin.read()) == \"No\"\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == 'Yes'\nassert solution('2 5') == 'Yes'\nassert solution('3 4') == 'No'\nassert solution('2 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"5 1000\") == \"No\"\nassert solution(\"10 300\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n3\") == \"Yes\"\nassert solution(\"2\\n4\") == \"No\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 3') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 900\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 900\") == \"Yes\"\nassert solution(\"4 9\") == \"No\"\nassert solution(\"3 3\") == \"Yes\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4424,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 10\") == \"0.145833333333\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('2 1') == '0.333333333333'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('5 10') == '0.145833333333'\nassert solution('1 5') == '0.145833333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10') == '0.145833333333'\nassert solution('1 1') == '1.0'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n4 10\n\"\"\") == '0.145833333333'\nassert solution(\"\"\"\n3 10\n\"\"\") == '0.145833333333'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 10') == '0.145833333333'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 10') == '0.145833333333'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 10\") == \"0.145833333333\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '0.1458333333'\nassert solution('3 3') == '0.1458333333'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4425,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 10\n''') == '0.1458333333'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('SAT') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"SUN\") == \"7\"\nassert solution(\"MON\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('SUN') == '1'\nassert solution('MON') == '2'\nassert solution('TUE') == '3'\nassert solution('WED') == '4'\nassert solution('THU') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '1'\nassert solution('SAT') == '1'\n\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('SUN'))\nprint(solution('",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('SAT') == '1'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('SAT') == '1'\nassert solution('SUN') == '2'\nassert solution('TUE') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"MON\") == \"2\"\nassert solution(\"SUN\") == \"0\"\nassert solution(\"THU\") == \"3\"\nassert solution(\"TUE\") == \"3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"SAT\") == \"1\"\nassert solution(\"WED\") == \"0\"\nassert solution(\"SUN\") == \"1\"\nassert solution(\"MON\") == \"0\"\nassert solution(\"TUE\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(1) == '1'\nassert solution(2) == '2'\nassert solution(3) == '3'\nassert solution(4) == '4'\nassert solution(5) == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4426,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 10 20') == '30'\nassert solution('2 10 20') == '50'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 10 20\n''') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"\nassert solution(\"2 10 20\") == \"30 50 90 170 330 650 1290 2570 5130 10250\"",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 10 20\") == \"30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10 20') == '30\\n50'\nassert solution('2 10 20') == '30\\n50'\n\n\"\"\"\n\nr, D, *xs = list(map(int, input().split()))\n\nfor i in range(2001, 2011):\n    x_i = r * xs[i - 2000] + D\n    xs.append(x_i)\n\nfor i in range(2000, 2011):\n    print(xs[i])",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4427,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 10 20') == '30\\n50\\n90\\n170\\n330\\n650\\n1290\\n2570\\n5130\\n10250\\n'\nassert solution('1 2 3') == '1\\n3\\n6\\n'\nassert solution('3 5 1') == '3\\n5\\n5\\n'\nassert solution('2 4 1') == '2\\n4\\n4\\n'\nassert solution('-1 -2 -3') == '-1\\n-2\\n-3\\n'\n",
        "num_ids_2": 65,
        "num_ids_4": 105
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"3\") == \"4\"\nassert solution(\"1 3 1 1 4\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 3 1 1 4\n\n''') == '5'\nassert solution('''\n3\n4 1 2\n\n''') == '0'\nassert solution('''\n1\n1 2\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''5\n1 3 2 1 4\n''') == '4'\n\nassert solution('''3\n4 1 2\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 3 1 1 4\n''') == '5'\n\nassert solution('''3\n4 1 2\n''') == '4'\n\nassert solution('''3\n1 2\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 3 1 1 4') == '5'\nassert solution('3\\n4 1 2') == '0'",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n1 3 1 1 4\\n\") == \"5\\n\", \"First Example\"\nassert solution(\"5\\n1 3 2 1 4\\n\") == \"4\\n\", \"Second Example\"\nassert solution(\"3\\n4 1 2\\n\") == \"0\\n\", \"Third Example\"\n",
        "num_ids_2": 50,
        "num_ids_4": 73
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1 3 1 1 4\") == \"5\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4 1 2\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 3 1 1 4\n\n''') == '5'\n\nassert solution('''\n5\n1 3 2 1 4\n\n''') == '4'\n\nassert solution('''\n3\n4 1 2\n\n''') == '0'\n\nassert solution('''\n2\n1 3\n\n''') == '0'\n\nassert solution('''\n8\n1 2 1 1 1 1 1 2\n\n''') == '8'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1 3 1 1 4\") == \"5\"\nassert solution(\"5\\n1 3 2 1 4\") == \"4\"\nassert solution(\"3\\n4 1 2\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4428,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 3 1 1 4') == \"5\"\nassert solution('5\\n1 3 2 1 4') == \"4\"\nassert solution('3\\n4 1 2') == \"0\"",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000''' == '''YES\n3 2 1\nYES\n100 100 100\nNO\nNO\nYES\n1 1 1000000000'''\nassert solution('''10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10 10 10\n10",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nYES\\n1 1 1000000000\\n\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2 3\n100 100 100''') == \"YES\\n3 2 1\"\nassert solution('''5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == \"YES\\n3 2 1\"\nassert solution('''3\n3\n3\n3''') == \"NO\\nNO\\nNO\"\nassert solution('''5\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3''') == \"YES\\n1 2 3\\n1 2 3\"\nassert solution('''5\n1 2 3\n1 2 3\n1 2 3\n1 2 3\n1 2 3''') == \"NO\\nNO\\nNO\\nNO\\nNO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n3\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n4\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'NO'\nassert solution('''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\nassert solution('''\n6\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES'\n'''\n4\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n4\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n5\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n6\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n6\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n7\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n8\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n8\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n10\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n10\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n11\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n12\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n12\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n13\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n14\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n15\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n16\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n17\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n18\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n19\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n20\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n21\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n22\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n23\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n24\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n25\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n26\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n27\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n28\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n29\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n30\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n31\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n32\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n33\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n34\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n35\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n36\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n37\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n38\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n39\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n40\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n41\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n42\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n43\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n44\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n45\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n46\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n47\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n'''\n'''\n48\n3 2 3\n100 100 100\n50 49",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n3''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000''') == \"YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == 'YES\\n3 2 1\\nYES\\n100 100 100\\nNO\\nNO\\nYES\\n1 1 1000000000\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4429,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 2 3\n100 100 100\n50 49 49\n10 30 20\n1 1000000000 1000000000\n''') == \"YES\"\n\nassert solution('''\n1 1\n''') == \"NO\"\nassert solution('''\n2\n''') == \"NO\"\nassert solution('''\n3\n''') == \"YES\"\nassert solution('''\n4\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_data) == \"4\"\nprint(solution(input_data))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"\nassert solution(\"5 2 5 5 2\") == \"2\"\nassert solution(\"1000000000\") == \"10000000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"5\"\nassert solution(\"5 3 3\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 6\\n5 2 1 4 2\") == \"4\"\nassert solution(\"5 1 4\\n4 2 3 4 1\") == \"1\"\nassert solution(\"5 3 3\\n1 2 3 1 1\") == \"5\"",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2 6') == '4'\nassert solution('5 1 4') == '1'\nassert solution('5 3 3') == '5'\nassert solution('3 3 3') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 6\") == \"4\"\nassert solution(\"5 1 4\") == \"1\"\nassert solution(\"5 3 3\") == \"5\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 6\\n5 2 1 4 2\\n') == '4'\nassert solution('5 1 4\\n4 2 3 4 1\\n') == '5'\nassert solution('5 3 3\\n1 2 3 1 1\\n') == '5'",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4430,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"6 5\", \"a b c d e f\"]) == \"6\"\nassert solution([\"4 4\", \"a b c d e\"]) == \"10\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 3\nsadfaasdda\nf a d''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\nassert solution('''7 1\naaaaaaa\nb''') == '0'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d''') == '21'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"7 2\\n\"\n    \"abacaba\\n\"\n    \"a b\"\n) == \"12\"\n\nassert solution(\n    \"7 1\\n\"\n    \"aaaaaaa\\n\"\n    \"b\"\n) == \"0\"\n\nassert solution(\n    \"10 3\\n\"\n    \"sadfaasdda\\n\"\n    \"f a d\"\n) == \"21\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'\nassert solution('10 1') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(s) == '12'\n\"\"\"\nfrom math import comb\nfrom itertools import combinations\nimport re",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == stdout\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 2\nabacaba\na b\n''') == '12'\nassert solution('''10 3\nsadfaasdda\nf a d\n''') == '21'\nassert solution('''7 1\naaaaaaa\nb\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 2') == '12'\nassert solution('10 3') == '21'\nassert solution('7 1') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4431,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_string) == answer\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '2\\n-1'\nassert solution('''\n2\n-1000000000 1 -1000000000 1 -1000000000\n''') == '6\\n-2999999997'\nassert solution('''\n4\n-1 -2 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '6\\n-2999999997'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"2\"\nassert solution('''\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == \"6\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '-1'\nassert solution('''4\n5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n5\\n1 2 3 -1 -2\") == \"2\"\nassert solution(\"4\\n4\\n-1 -2 -1 -3\") == \"6\"\nassert solution(\"6\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\") == \"2999999997\"",
        "num_ids_2": 45,
        "num_ids_4": 78
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '2'\nassert solution('''4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == '6'\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n''') == '-2999999997'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == \"2\"\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == \"-2999999997\"\nassert solution('''4\n-1 -2 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1\n6\n1 -1000000000 1 -1000000000 1 -1000000000''') == \"6\"\n\nassert solution('''2\n1 2 3 -1 -2\n4\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == \"2\"\nassert solution('''6\n1 -1000000000 1 -1000000000 1 -1000000000\n-1 -2 -1 -3\n10\n-2 8 3 8 -4 -15 5 -2 -3 1''') == \"-2999999997\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"2\\n1 2 3 -1 -2\\n4\\n-1 -2 -1 -3\\n10\\n-2 8 3 8 -4 -15 5 -2 -3 1\"\n) == \"2\\n-1\\n6\\n-2999999997\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"2\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n5\\n1 2 3 -1 -2') == '2'\nassert solution('4\\n-1 -2 -1 -3') == '6'\nassert solution('10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '-2999999997'\n",
        "num_ids_2": 42,
        "num_ids_4": 73
    },
    {
        "number": 4432,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n5\\n1 2 3 -1 -2') == '2'\nassert solution('4\\n-1 -2 -1 -3') == '6'\nassert solution('10\\n-2 8 3 8 -4 -15 5 -2 -3 1') == '-2999999997'\nassert solution('6\\n1 -1000000000 1 -1000000000 1 -1000000000') == '-1'\n",
        "num_ids_2": 42,
        "num_ids_4": 101
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 5\") == \"3 5\\n2 1\\n3 2\\n3 4\"\nassert solution(\"4 6\") == \"4 1\\n1 2\\n1 3\"\nassert solution(\"8 9\") == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\"",
        "num_ids_2": 44,
        "num_ids_4": 76
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4\\n'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5\\n2 1\\n3 2\\n3 4\\n'\n\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1\\n1 2\\n1 3\\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution('4 6') == '4 1\\n1 2\\n1 3\\n'",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 4\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4\n\"\"\"\n) == \"\"\"\n3 2\n2 5\n8 5\n6 1\n2 7\n1 2\n3 4\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 5\n1 2\n2 3\n3 5\n4 3\n1 5''') == '3 5'\nassert solution('''4 6\n1 2\n1 3\n1 4\n2 3\n2 4\n3 4''') == '4 1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\\n') == '3 5\\n2 1\\n3 2\\n3 4'\nassert solution(\n    '4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '4 1'\nassert solution(\n    '8 9\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\\n') == '3 2\\n2 5\\n8 5\\n6 1'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5') == '3 5'\nassert solution('4 6') == '4 1'\nassert solution('8 9') == '3 2'\n\n-------------------------------------------------------\n\nI could not manage to write all the tests\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4433,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5 5\\n1 2\\n2 3\\n3 5\\n4 3\\n1 5\"\n) == \"3 5\\n2 1\\n3 2\\n3 4\"\n\nassert solution(\n    \"4 6\\n1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n3 4\"\n) == \"4 1\\n1 2\\n1 3\"\n\nassert solution(\n    \"8 9\\n1 2\\n1 3\\n1 4\\n3 4\\n6 5\\n4 5\\n2 7\\n5 8\"\n) == \"3 2\\n2 5\\n8 5\\n6 1\\n2 7\\n1 2\\n3 4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n499993\n''') == '40'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5') == '40'\nassert solution('499993') == '41664916690999888'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n5\n499993\n''') == '40'\nassert solution('''2\n5\n3\n499993\n''') == '41664916690999888'\nassert solution('''3\n5\n3\n499993\n''') == '0'\nprint(solution('''2\n5\n3\n499993\n'''))\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '40'\nassert solution() == '41664916690999888'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"0\"\nassert solution(__import__('sys').stdin.read()) == \"40\"\nassert solution(__import__('sys').stdin.read()) == \"41664916690999888\"\n",
        "num_ids_2": 38,
        "num_ids_4": 62
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n2\\n1\") == \"0\"\nassert solution(\"5\\n1\") == \"40\"\nassert solution(\"5\\n100000\") == \"41664916690999888\"",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n2''') == '0'\nassert solution('''1\n2\n1''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"40\"\nassert solution(input()) == \"41664916690999888\"\n\nstdin = \"\"\"3\n2\n4\n5\n\"\"\"\n\nprint(solution(stdin))\n",
        "num_ids_2": 20,
        "num_ids_4": 35
    },
    {
        "number": 4434,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n3\n5\n''') == '0'\nassert solution('''\n1\n1\n5\n''') == '40'\nassert solution('''\n1\n7\n5\n''') == '41664916690999888'\nassert solution('''\n2\n8\n100\n''') == 'None'\nassert solution('''\n1\n1\n2\n''') == '40'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n0\n''') == '1 1 1 2 -1 1 1 2 -1'\n\nassert solution('''\n1\n0\n''') == '1 1 1 2 -1 -1'\n\nassert solution('''\n4\n1 2 1\n''') == '4 -1'\n\nassert solution('''\n10\n5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5 7 6 7 5 4 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\", \"Testing\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\nassert solution('''\n5\n7 3 5 6 1 2 1\n''') == '1 2 1 1 2 -1 -1'\nassert solution('''\n1\n2\n''') == '1 -1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n6\n1 2 3 4 5 6\n''') == '1 1 2 1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 5 7 6 7 5 4 4 6 4\n''') == '1 1 1 2 -1 1 1 3 1 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 3 6 7 4 5 4 6 4\") == \"1 1 1 2 -1 1 1 3 1 1\", \"First example\"\nassert solution(\n    \"5 1 3 2 4 4 4 4 4\") == \"1 1 1 2 -1 1 1 3 1 1\", \"Second example\"\nassert solution(\n    \"5 6 7 8 5 5 5 5 5\") == \"1 1 1 2 -1 1 1 3 1 1\", \"Third example\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4435,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n4 5 7 6 7 5 4 4 6 4''') == '1 1 1 2 -1 1 1 3 1 1'\nprint(solution('''6\n5 5 7 6 7 5 4 4 6 4'''))\n'''\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7\n12\n12\n24\n8\n32\n''') == 'YES'\nassert solution('''\n11\n11\n12\n12\n13\n''') == 'NO'\nassert solution('''\n8\n8\n8\n''') == 'NO'\nassert solution('''\n4\n16\n8\n8\n''') == 'YES'\nassert solution('''\n4\n10\n10\n10\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\nassert solution('''\n10\n80\n40\n60\n100\n50\n30\n20\n10\n5\n''') == 'NO'\nassert solution('''\n5\n56\n36\n37\n7\n''') == 'NO'\nassert solution('''\n10\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100\n100",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '''\n    5\n    64\n    32\n    97\n    2\n    12345\n    '''\n    ) == 'YES'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\n5\") == \"YES\\n2 4 8\"\nassert solution(\"3\\n9\") == \"YES\\n3 5 8\"\nassert solution(\"5\\n50\") == \"NO\"\n",
        "num_ids_2": 36,
        "num_ids_4": 49
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"64\") == \"NO\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n64\n32\n97\n2\n12345\n''') == 'YES'\nassert solution('''\n1\n1\n1\n1\n1\n1\n''') == 'YES'\nassert solution('''\n4\n4\n4\n4\n4\n4\n''') == 'NO'\nassert solution('''\n7\n8\n12\n13\n67\n89\n123\n45\n''') == 'YES'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n9\n8\n7\n10\n''') == 'YES'\nassert solution('''\n2\n9\n8\n7\n10\n''') == 'YES'\nassert solution('''\n4\n5\n7\n6\n10\n''') == 'NO'\nassert solution('''\n4\n5\n7\n6\n10\n''') == 'NO'\nassert solution('''\n3\n2\n3\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"YES\"\nassert solution(\"2\\n\") == \"YES\"\nassert solution(\"5\\n\") == \"YES\"\nassert solution(\"8\\n\") == \"YES\"\nassert solution(\"12345\\n\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4436,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"4\") == \"NO\"\nassert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"ba\"\n\"\"\"\n\nn = int(input())\ns = input()",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\nbbbb\n''') == 'abba'\nassert solution('''6\nababab\n''') == 'ababab'\nassert solution('''2\naa\n''') == 'ba'\nassert solution('''4\nbbbb\n''') == 'abba'\nprint(solution(stdin))",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\nbbbb\n\n''') == 'abba'\nassert solution('''6\nababab\n\n''') == 'ababab'\nassert solution('''2\naa\n\n''') == 'ba'\nassert solution('''1\na\n\n''') == 'a'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nbbbb\n''') == 'abba'\nassert solution('''6\nababab\n''') == 'ababab'\nassert solution('''2\naa\n''') == 'ba'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nabcd\") == \"a2b4cd\"\nassert solution(\"2\\naba\") == \"b2a2\"\nassert solution(\"3\\nab\") == \"a2b2\"\nassert solution(\"4\\nabb\") == \"b2a1\"\nassert solution(\"5\\nabbbbaa\") == \"b2a1b2a2\"",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"abba\"\nassert solution(input()) == \"aba\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\nababab''') == \"0\"\nassert solution('''4\nbbbb''') == \"2\"\nassert solution('''6\nababab''') == \"1\"\nassert solution('''2\naa''') == \"1\"\nassert solution('''10\nababab''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\nbbbb''') == \"2\"\nassert solution('''6\nababab''') == \"0\"\nassert solution('''2\naa''') == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4437,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"15\"\n\nassert solution(\"\"\"\n2\n2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n\"\"\") == \"9\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '15'\nassert solution(input_data=\"5\\n2 1\\n1 0\\n2 0\\n3 2\\n0 3\\n\")) == '9'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '15'\nassert solution('''\n4\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"9\"\nassert solution(\"8\") == \"15\"",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '15'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '15'\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == '9'\nassert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == '9'\nassert solution('''\n10\n1 1\n1 0\n1 1\n1 1\n1 1\n0 0\n0 0\n0 0\n0 0\n0 0\n''') == '5'\nprint('All test cases passed!')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 1\n1 0\n2 0\n3 2\n0 3\n''') == \"9\"\nassert solution('''\n8\n2 2\n1 4\n2 3\n3 1\n3 4\n1 1\n4 3\n1 2\n''') == \"15\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4438,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '15'\nassert solution('2 3') == '9'\nassert solution('4 4') == '12'\nassert solution('1 3') == '4'\nassert solution('2 2') == '3'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('1') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1\") == \"2\"\nassert solution(\"3\\n1\\n2\") == \"2\"\nassert solution(\"3\\n1\\n2\\n3\") == \"3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 48
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n\") == \"2\"\nassert solution(\"2\\n\") == \"2\"\nassert solution(\"3\\n\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n1') == '2'\nassert solution('5\\n2') == '3'\nassert solution('1\\n3') == '2'\nassert solution('1\\n3') == '2'\nassert solution('2\\n3') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4439,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1.000000000000\"\nassert solution(\"1\") == \"0.800000000000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1.000000000000\"\nassert solution(\"1\") == \"1.000000000000\"\n\"\"\"\n\nimport math\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1.000000000000'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('2') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('4') == '1.000000000000'\nassert solution('5') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1.000000000000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '4.0'\nassert solution('3') == '1.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1.000000000000\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1.000000000000'\nassert solution('3') == '1.000000000000'\nassert solution('1.5') == '1.000000000000'\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '1.000000000000'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4440,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.000000000000'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n\") == \"Hello World\"\nassert solution(\"2\\n\") == \"Hello World\"\nassert solution(\"1\\n2\\n\") == \"Hello World\"\nassert solution(\"2\\n1\\n\") == \"Hello World\"\nassert solution(\"1\\n2\\n3\\n\") == \"Hello World\"\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == 'A+B'\nassert solution('2') == 'A+B'\n\"\"\"\nimport sys",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1\\n2\\n\") == \"3\\n4\\n5\\n\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"10\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"Hello World\"\nassert solution(\"2\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '1+2'\nassert solution('1') == 'Hello World'\nassert solution('2') == '1+2'",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"Hello World\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Hello World'\nassert solution('2') == '10'\nassert solution('1') == 'Hello World'\nassert solution('2') == '11'\nassert solution('1') == 'Hello World'",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n\") == \"Hello World\"\nassert solution(\"2\\n\") == \"2\"\n\nassert solution(\"1\\n1\\n\") == \"Hello World\"\nassert solution(\"2\\n1\\n\") == \"3\"\n\nassert solution(\"2\\n2\\n\") == \"5\"\n",
        "num_ids_2": 25,
        "num_ids_4": 56
    },
    {
        "number": 4441,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"Hello World\"\nassert solution(\"2\\n\") == \"19\"\n\ninput = input(\"Enter a number (1 or 2): \")\nage = int(input)",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"12345\") == \"12345\"\nassert solution(\"12\") == \"21\"\nassert solution(\"111\") == \"121\"\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '3333', \"Wrong!\"\nassert solution('10 20') == '100', \"Wrong!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '3333'\nassert solution('22 11') == '22 11'\nassert solution('8 9') == '8 9'\nassert solution('5 6') == '5 6'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '3333'\nassert solution('5 3') == '3333'\nassert solution('5 3') == '3333'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 11\\n\") == \"10\"\nassert solution(\"4 3\\n\") == \"3\"\nassert solution(\"1 1\\n\") == \"11\"\nassert solution(\"1 1\\n\") == \"11\"\nassert solution(\"10 1\\n\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 3') == '3333'\nassert solution('6 5') == '5555'\n\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3') == '3333'\nassert solution('1 2') == '1 2'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3\") == \"13\"\nassert solution(\"1 2 4\") == \"1234\"\nassert solution(\"1 2 3 4\") == \"1234\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 0 1\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"5\"\nassert solution(\"2 4\") == \"4\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"2 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4442,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1 2\"\nassert solution(\"12 1\") == \"12 1\"\nassert solution(\"14 2\") == \"1 2\"\nassert solution(\"13 2\") == \"1 2\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('a') == 'b'\nassert solution('c') == 'd'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"a\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'b'\nassert solution('a') == 'b'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'b'\n\"\"\"\n\nC = input()",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"b\"\nassert solution(input()) == \"b\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('a') == 'b'\nassert solution('b') == 'a'\nassert solution('z') == 'a'\nassert solution('c') == 'b'\nassert solution('d') == 'c'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'b'\nassert solution('z') == 'a'\nassert solution('C') == 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'b'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''a''') == 'b'\nassert solution('''c''') == 'd'\nassert solution('''z''') == 'a'\n''')",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4443,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a') == 'b'\nassert solution('A') == 'B'\nassert solution('z') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'atcoder'\nprint(solution(input()))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"atcoder\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"atcoder\"\n\n---Submissions---\n1. \n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('oder atc') == 'atcoder'\nassert solution('oder') == 'oder'\nassert solution('oder oder oder') == 'oder oder oder'\nassert solution('oder oder oder oder') == 'oder oder oder oder'\n",
        "num_ids_2": 24,
        "num_ids_4": 64
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('oder atc') == 'atcoder'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('oder atc') == 'atcoder', f\"solution('oder atc') == 'atcoder', {solution('oder atc')}!= {'atcoder'}\"\nassert solution('oeam') == 'amoe', f\"solution('oeam') == 'amoe', {solution('oeam')}!= {'amoe'}\"\nassert solution('hello world') == 'helloworld', f\"solution('hello world') == 'helloworld', {solution('hello world')}!= {'helloworld'}\"\n",
        "num_ids_2": 88,
        "num_ids_4": 132
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"atcoder\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(['oder', 'atc']) == 'atcoder'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'atcoder'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4444,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('oder atc') == 'atcoder'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 5 7 8 2') == '0'\nassert solution('6\\n5 1 2 4 6 3') == '1000000'\nassert solution('2\\n1000000 1000000') == '1000000'\n",
        "num_ids_2": 36,
        "num_ids_4": 53
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('6') == '1000000'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '0'\nassert solution(input('6\\n')) == '0'\nassert solution(input('3\\n1\\n2\\n')) == '1'",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '0'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1 5 7 8 2\n''') == '0'\nassert solution('''6\n5 1 2 4 6 3\n''') == '1000000'\nassert solution('''8\n100000000000000 100000000000000\n''') == '100000000000000'\nassert solution('''20\n1000000000 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001 1000000001 1000000001 1000000001\n1000000001 1000000001 1000000001",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_data) == '1000000'\nprint(solution(input_data))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3') == '0\\n'\nassert solution('5\\n1 2 3 4 5') == '0\\n'\nassert solution('6\\n1000000 1000000') == '1000000\\n'\nassert solution('2\\n1 2') == '1\\n'\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    1 5 7 8 2\n''') == '0'\nassert solution('''\n    6\n    5 1 2 4 6 3\n''') == '1000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4445,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"5 1 5 7 8 2\") == \"0\"\nassert solution(\"5 1 5 7 8 2 3\") == \"0\"\nassert solution(\"5 1 5 7 8 2 3 4\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 50
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"6 2 3 3\"\n    ) == \"5\"\nassert solution(\n    \"1 1 100 99\"\n    ) == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2 3 3\") == \"5\"\nassert solution(\"1 1 100 99\") == \"1\"\nassert solution(\"7 4 2 1\") == \"6\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1 1 100 99\n100\n\"\"\") == \"5\"\nassert solution(\"\"\"\n6 2 3 3\n7 10 50 12 1 8\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''\n7 4 2 1\n1 3 5 4 2 7 6\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1 100 99\n100\n\n5 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100''') == '6'\nassert solution('''2 1 100 99\n100\n\n2 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100''') == '6'\nassert solution('''5 1 100 99\n100\n\n5 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100\n\n6 1 100 99\n100''') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''6 2 3 3\n7 10 50 12 1 8''') == '5'\nassert solution('''1 1 100 99\n100''') == '1'\nassert solution('''7 4 2 1\n1 3 5 4 2 7 6''') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 3\") == \"2\"\nassert solution(\"1 1 100 99\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == '5'\nassert solution('''\n1 1 100 99\n100\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4446,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 2 3 3\n7 10 50 12 1 8\n''') == \"5\"\nassert solution('''\n1 1 100 99\n100\n''') == \"1\"\nassert solution('''\n7 4 2 1\n1 3 5 4 2 7 6\n''') == \"6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3\n1 2 3\n''') == '3'\nassert solution('''\n2 2\n1 0\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"3 2\"\nassert solution(\"10 20\") == \"10 20\"\nassert solution(\"10 20 2 3 5 6 7 8 9\") == \"10 20 10 11 12 13 14 15 16 17 18 19\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 3\") == \"3 2 0 6 10 12\"\nassert solution(\"4 2\") == \"0 1 2 3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"0\"\nassert solution(\"2 4\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n2 1 0 3 5') == '3 2'\nassert solution('7 3\\n2 3 6 4 1 5 2 8') == '4 5'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 3\n3 2 0 6 10 12\n''') == '3'\nassert solution('''\n4 2\n0 1 2 3\n''') == '0 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3\\n') == '2'\nassert solution('6 3\\n') == '3'\nassert solution('2 2\\n') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4447,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3\\n2 5 0 6') == '3 2 5 0 7'\nassert solution('4 2\\n0 1 2 3') == '0 1 2 3'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(example) == '14'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '5 6'\n    '1 2 0 2 0'\n    '2 4'\n    '3 3'\n    '1 5'\n    '1 2'\n    '1 5'\n    '2 3'\n    ) == '8'\nassert solution(\n    '5 3'\n    '4 2'\n    '2 5'\n    '3 3'\n    '1 5'\n    '1 2'\n    '1 5'\n    '2 3'\n    ) == '20'\nassert solution(\n    '5 1'\n    '0 1'\n    '3 5'\n    '1 5'\n    '2 3'\n    '0 5'\n    '0 5'\n    '1 3'\n    '3 3'\n    '5 1'\n    '4 4'\n    '1 1'\n    '1 2'\n    '1 2'\n    '2 3'\n    '2 3'\n    '3 5'\n    '2 5'\n    '2 5'\n    '2 5'\n    '3 1'\n    '1 1'\n    '1 1'\n    '2 2'\n    '2 2'\n    '3 5'\n    '2 5'\n    '2 5'\n    '2 5'\n    '3 1'\n    '1 1'\n    '2 2'\n    '2 2'\n    '3 1'\n    '1 3'\n    '1 3'\n    '1 3'\n    '2 4'\n    '2 4'\n    '3 4'\n    '2 4'\n    '3 4'\n    '2 4'\n    '4 2'\n    '4 2'\n    '3 4'\n    '4 2'\n    '4 2'\n    '3 4'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    '4 2'\n    ",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == '8'\n\nassert solution('''5 3\n4 2\n3 5\n4 2\n2 5\n\nOutput\n20\n''') == '20'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '5 6'\n) == '8'\nassert solution(\n    '10 2'\n) == '13'\nassert solution(\n    '4 2'\n) == '4'\nassert solution(\n    '5 1'\n) == '1'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '8'\nassert solution('5 3') == '20'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '1'\nassert solution('6 5') == '8'\nassert solution('7 1') == '7'\nassert solution('7 2') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"8\"\nassert solution(\"1 2 3 4 5\") == \"20\"\nassert solution(\"4 1 1 1 1\") == \"5\"\nassert solution(\"5 6\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n\"\"\"\n) == \"8\"\n\nassert solution(\n\"\"\"\n5 6\n4 2 1 3 2\n3 5\n4 2\n2 5\n\n\"\"\"\n) == \"20\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 6\n1 2 0 2 0\n2 4\n3 3\n1 5\n1 2\n1 5\n2 3\n''') == \"8\"\nassert solution('''\n5 3\n4 2\n3 5\n4 2\n2 5\n\n''') == \"20\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4448,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\n4 1\n2 3\n2\n4\n1\n'''\n) == '20'\n\nassert solution(\n'''\n3 4\n1 1\n1 2\n1 3\n\n'''\n) == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(s) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n100 100 100 100\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'YES'\nassert solution('''\n5\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n\") == \"YES\\n\", \"Simple tests\"\nassert solution(\"2\\n\") == \"YES\\n\", \"Simple tests\"\nassert solution(\"1\\n\") == \"NO\\n\", \"Simple tests\"\nassert solution(\"5\\n\") == \"YES\\n\", \"More tests\"\nassert solution(\"3\\n\") == \"NO\\n\", \"More tests\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n''') == \"YES\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n1\n1 1 10 10\n2\n10 5 2 10 1 1 2 5\n2\n10 5 1 10 5 1 1 1\n2\n1 1 1 1 1 1 1 1\n1\n10000 10000 10000 10000\n    \"\"\"\n) == \"YES\"\n\nassert solution(\n    \"\"\"\n3\n1 2\n5 8\n5 6\n4 5\n2\n    \"\"\"\n) == \"NO\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1\\n1 1 10 10\\n2\\n10 5 2 10 1 1 2 5\\n2\\n10 5 1 10 5 1 1 1\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 1 1 1 1 1\\n2\\n10 5 5 5 5 5 1\\n2\\n1 1 1 1 1 1 1\") == \"YES\"\nassert solution(\"5\\n1\\n1 1 1 1 1 1 1\\n2\\n10 5 5 5 5 5 1\\n2\\n1 1 1 1 1 1 1\") == \"NO\"\nassert solution(\"5\\n1\\n1 1 1 1 1 1 1\\n2\\n10 5 5 5 5 5 1\\n2\\n1 1 1 1 1 1 1\") == \"YES\"\n",
        "num_ids_2": 91,
        "num_ids_4": 183
    },
    {
        "number": 4449,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\\n6 2 2\\n1 3 1\\n5 1 8\\n6 5 10\\n1 6 5\\n6 4 6\\n3 6 2\\n3 4 5\\n\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\\n\") == \"9\"",
        "num_ids_2": 153,
        "num_ids_4": 153
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 10 5\") == \"3\"\nassert solution(\"7 15 18\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"3\"\nsys.exit(0 if __name__ == \"__main__\" else 1)\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 10 5\\n2 5 1\\n5 3 9\") == \"3\"\nassert solution(\"7 15 18\\n2 6 3\\n5 7 4\\n6 5 4\\n3 6 9\\n6 7 7\\n1 6 4\\n7 1 6\\n7 2 1\\n4 3 2\\n3 2 8\\n5 3 6\\n2 5 5\\n3 7 9\\n4 1 8\\n2 1 1\") == \"9\"\n",
        "num_ids_2": 109,
        "num_ids_4": 109
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 10 5') == '3'\nassert solution('7 15 18') == '9'\nassert solution('2 6 3') == '5'\nassert solution('5 7 4') == '7'\nassert solution('6 5 4') == '5'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4450,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 10 5\n2 5 1\n5 3 9\n6 2 2\n1 3 1\n5 1 8\n6 5 10\n1 6 5\n6 4 6\n3 6 2\n3 4 5\n''') == '3'\nassert solution('''\n7 15 18\n2 6 3\n5 7 4\n6 5 4\n3 6 9\n6 7 7\n1 6 4\n7 1 6\n7 2 1\n4 3 2\n3 2 8\n5 3 6\n2 5 5\n3 7 9\n4 1 8\n2 1 1\n''') == '9'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n1 1 3 4 2\") == \"3 1\"\nassert solution(\"6\\n1 5 12 13 2 15\") == \"7 2\"\nassert solution(\"10\\n1 2 5 129 185 581 1041 1909 1580 8150\") == \"7486 3\"\n",
        "num_ids_2": 37,
        "num_ids_4": 65
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''\n6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 3 4 2\\n') == '3 1\\n1 1 1 1 1 1\\n'\nassert solution('6\\n1 5 12 13 2 15\\n') == '7 2\\n2 2 1 1 2 1\\n'\nassert solution('10\\n1 2 5 129 185 581 1041 1909 1580 8150\\n') == '7486 3\\n3 3 3 2 2 2 2 1 1 1\\n'\n",
        "num_ids_2": 61,
        "num_ids_4": 105
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '2 1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_data) == '3 1\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 1267,
        "num_ids_4": 1267
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 1 3 4 2\n''') == '3 1'\nassert solution('''\n10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'\nassert solution('''\n100\n
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"3 1\"\nassert solution(\"6\") == \"7486 3\"\nassert solution(\"10\") == \"7486 3\"",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '7486 3'\nprint(solution())\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3 1\"\nassert solution(\"6\") == \"7 2\"\nassert solution(\"10\") == \"7486 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4451,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n1 1 3 4 2\n''') == '3 1'\nassert solution('''6\n1 5 12 13 2 15\n''') == '7 2'\nassert solution('''10\n1 2 5 129 185 581 1041 1909 1580 8150\n''') == '7486 3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n5009\n7\n9876\n10000\n10\"\"\") == \"2\"\nassert solution(\"\"\"6\n7\n1\n10\n9\n8\n10\"\"\") == \"3\"\nassert solution(\"\"\"9\n9\n7\n10\n8\n10\"\"\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n3') == '1 2\\n3'\nassert solution('1\\n2\\n4') == '1 2\\n3'\nassert solution('5') == '2 1 2 3\\n4'\nassert solution('6') == '1 1 1 1 1\\n2'\n",
        "num_ids_2": 27,
        "num_ids_4": 63
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"100\") == \"100\"\nassert solution(\"5\") == \"1\"\nassert solution(\"1000000000\") == \"100\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n4000\\n7\\n9876\\n10000\\n10\\n') == '2\\n5000 9\\n1\\n7 \\n4\\n800 70 6 9000\\n1\\n10000\\n1\\n10'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\", \"Least number of summands\"\nassert solution(\"10\") == \"4\", \"Least number of summands\"\nassert solution(\"10\") == \"3\", \"Least number of summands\"\nassert solution(\"10000\") == \"4\", \"Least number of summands\"\nassert solution(\"100000\") == \"5\", \"Least number of summands\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"1\"\nassert solution(\"9876\") == \"7\"\nassert solution(\"10000\") == \"4\"\nassert solution(\"10\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4452,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n800\\n\") == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1 2 3 4 5\\n3\\n2 3 1') == '1 1 1 1 1'\nassert solution('5\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2') == '2 2 2 2 2'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1 1 1 1 1\"\nassert solution(\"3\") == \"3 3 3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n5 1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n1\\n1\\n4\\n3 4 1 2\\n5\\n5 1 2 4 3\") == \"1 1 1 1 1 1\\n3 3 3 3 3\\n2 3 3 2 3 1 3\\n1\\n2 2 2 2 2 1 2\\n4 4 4 1 4 4\\n4 4 4 1 4\\n4 4 4 1 4\\n3 4 3 2 4 3 3\"\n",
        "num_ids_2": 126,
        "num_ids_4": 126
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"3 3 3\"\nassert solution(\"4\") == \"3 3 3 2 1 3\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '3 3 3 2 1 3'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1 1 1 1 1'\nassert solution('2') == '3 3 3'\nassert solution('6') == '3 3 3 2 3 3'\nassert solution('3') == '2 2 2 2'\nassert solution('4') == '2 2 2 2 3 3'\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 1 2 4 3\\n3\\n2 3 1\") == \"1 1 1 1 1\"\nassert solution(\"3\\n6 4 2 1 5 3\\n4\\n2 3 1\") == \"3 3 3\"\nassert solution(\"2\\n3 3 1\\n3\\n3 2 1\") == \"3 3 3\"\nassert solution(\"2\\n6 4 2 1 5 3\\n1\\n2 3 1\") == \"1 1 1 1 1\"\n",
        "num_ids_2": 57,
        "num_ids_4": 112
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1 1\"\nassert solution(\"6\") == \"1 1 1 1 1 1\"\nassert solution(\"6\") == \"1 1 1 1 1 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '1 1 1 1 1 1'\nassert solution('5') == '1 1 1 1 1'\nassert solution('4') == '1 2 1 2'\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4453,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1\\n3 3 3\\n2 3 3 2 1 3\\n1\\n2 2 2 2\\n4 4 4 1 4\\n4 4 4 1 4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution([1, 2, 3, 4, 5]) == '3'\nassert solution([1, 2, 2]) == '2'\nassert solution([1, 1, 1]) == '1'\nassert solution([1, 1, 1, 1]) == '1'\n\nstdin = input()\nprint(solution(stdin.split()))\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2') == '2'\nassert solution('2\\n1 2') == '1'\nassert solution('2\\n1 2 3') == '3'\nassert solution('2\\n1 2 3 4') == '3'",
        "num_ids_2": 27,
        "num_ids_4": 58
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 1\"\nprint(solution())",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1''') == '3'\nassert solution('''1\n1 2\n2\n1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n5\n1 2 3 4 5\n3\n1 2 2\n4\n1 1 1 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n5\n1 2 3 4 5\n2\n3\n1\n2\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '3\\n5\\n1 2 3 4 5\\n3\\n1 2 2\\n4\\n1 1 1 1'\n) == '3\\n2\\n1'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n1 2 2''') == '2'\nassert solution('''3\n1 2 3\n4\n1 1 1 1''') == '1'\nassert solution('''4\n1 1 1 1\n4\n1 2 3 4''') == '3'\nassert solution('''5\n2 2 1 1 1\n5\n1 2 3 4 5''') == '4'\nassert solution('''7\n1 1 1 1 1 1 1\n7\n1 1 1 1 1 1 1 1''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\nassert solution([5,1,2,3,4,5]) == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4454,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1\\n2\\n1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \n\nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 '\n\nassert solution('''\n100 20\n5 3 5 6 6 5 2 3 3 4 5 4 5\n10 8\n1 3 4 5 6 7 8 9 10 2 2 4\n3 1\n6 9 4\n''') == '12 13 6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 2') == '0 0 1 2'\nassert solution('10 4') == '5 4 0 5 3 3 9 0 2 5'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 2\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \nassert solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 '\n''')\nprint(solution('''\n10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 2\") == \"0 0 1 2\"\nassert solution(\"10 4\") == \"5 4 0 5 3 3 9 0 2 5\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 2\\n10 4 10 15\\n1 2\\n4 3\\n') == '0 0 1 2\\n'\nassert solution('10 4\\n5 4 1 5 4 3 7 1 2 5\\n4 6\\n2 1\\n10 8\\n3 5\\n') == '5 4 0 5 3 3 9 0 2 5\\n'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3\\n10 4 10 15\\n4 6\\n2 1\\n10 8\\n3 5\") == \"5 4 0 5 3 3 9 0 2 5\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0 0 1 2'\nassert solution('10 4') == '5 4 0 5 3 3 9 0 2 5'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n10 4 10 15\\n1 2\\n4 3\\n\") == \"0 0 1 2?\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"0 0 1 2\"\n\nprint(solution(input()))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4455,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''10 4\n10 4 10 15\n1 2\n4 3\n''') == '0 0 1 2 \nassert solution('''10 4\n5 4 1 5 4 3 7 1 2 5\n4 6\n2 1\n10 8\n3 5\n''') == '5 4 0 5 3 3 9 0 2 5 \n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3 2\n    1 2 3\n    1 3 2\n    ''') == 'YES'\n\nassert solution('''\n    3 2\n    1 3 2\n    1 2 3\n    ''') == 'NO'\n\nassert solution('''\n    1 2\n    1 3 2\n    1 2 3\n    ''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(solution.__doc__) == \"NO\"\nassert solution('\\n'.join(['YES', 'abb'])) == 'abb'\nassert solution('\\n'.join(['YES', 'abb'])) == 'abb'\nassert solution('\\n'.join(['NO', ])) == 'NO'\n",
        "num_ids_2": 35,
        "num_ids_4": 73
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1 2 3\") == \"YES\"\nassert solution(\"1 3 2\") == \"YES\"\nassert solution(\"1 3 2 3 4 5\") == \"YES\"\nassert solution(\"1 3 2 3 4 5 3 5 4\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5 3\n    2 3 1 2 1\n    1 2 3 4 5\n''') == \"YES\"\n\nassert solution('''\n    5 2\n    1 3 2 3 2\n    1 2 3 4 5\n''') == \"NO\"\n\nassert solution('''\n    6 3\n    1 3 2 3 1\n    1 2 3 4 5 6\n    3 5 2 4 1 6\n    4 5 1 2 3 6\n    2 3 5 1 4 6\n''') == \"YES\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == \"NO\"\nassert solution('2 4') == \"NO\"\nassert solution('5 3') == \"YES\"\nassert solution('8 4') == \"NO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 3\\n1 3 2\") == \"YES\"\nassert solution(\"1 2 3\\n1 3 2\") == \"YES\"\nassert solution(\"1 2 3\\n1 3 2\") == \"NO\"\nassert solution(\"3 5 3\\n3 3 3\\n3 5 5\") == \"NO\"\n",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4456,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3') == 'a bb'\nassert solution('1 3 2') == 'aa bb'\nassert solution('1 4 5') == 'a aa aab aaba aabaa'\nassert solution('2 4 6') == 'abab ababab'\nassert solution('5 7 8 9') == 'abcabcabcabcabcabcabc'\n",
        "num_ids_2": 28,
        "num_ids_4": 65
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n10 10\n''') == '1 3 2'\nassert solution('''\n4\n10 10 10 10\n''') == '64 2 1 4 3'\nassert solution('''\n6\n5 4 5 4 4 5\n''') == '69 6 1 3 5 2 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '1 3 5 2 4'\nassert solution('6') == '6 1 3 5 2 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n20 10 20\\n\") == \"43\\n1 3 2\"\nassert solution(\"4\\n10 10 10 10 10\\n\") == \"64\\n2 1 4 3 5 2\"\nassert solution(\"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4\"",
        "num_ids_2": 49,
        "num_ids_4": 77
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3\\n10 10 20\\n\") == \"43\\n1 3 2\"\nassert solution(\n    \"4\\n10 10 10 10\\n\") == \"69\\n6 1 3 5 2 4\"\nassert solution(\n    \"6\\n5 4 5 4 4 5\\n\") == \"69\\n6 1 3 5 2 4\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"43\"\nassert solution(\"3\") == \"2 1 3\"\nassert solution(\"4\") == \"69\"\nassert solution(\"6\") == \"6 1 3 5 2 4\"\nassert solution(\"2\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"43\"\nassert solution(\"\"\"\n4\n5 4 5 4 4 5\n\"\"\") == \"69\"\nassert solution(\"\"\"\n3\n20 10 20\n\"\"\") == \"64\"\nassert solution(\"\"\"\n6\n5 4 5 4 4 5\n\"\"\") == \"69\"\nassert solution(\"\"\"\n2\n1 4\n\"\"\") == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 23
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n20 10 20\n\n''') == '43'\n\nassert solution('''4\n10 10 10 10\n\n''') == '69'\n\nassert solution('''6\n5 4 5 4 4 5\n\n''') == '69'\n\nassert solution('''2\n1 4\n\n''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"3\") == \"1 3 2\"\nassert solution(\"4\") == \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\"\nassert solution(\"6\") == \"1 2 3 4 5 6\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4457,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n20 10 20\n''') == '43'\nassert solution('''4\n10 10 10 10\n''') == '64'\nassert solution('''6\n5 4 5 4 4 5\n''') == '69'\nassert solution('''2\n1 4\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"5 1 2 4 3\") == \"4\"\nassert solution(\"5 4 2 3 1\") == \"3\"\nassert solution(\"5 1 2 4 3\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"3\"\n\n\n\nfrom itertools import permutations\n\nn = int(input())\nperm = list(permutations(range(1,n+1),n))\nfor i in perm:\n    if i[0]<=i[-1]:\n        continue\n    else:\n        print(i[0], end=\" \")\n        break",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n4 2 5 1 3') == '3'\nassert solution('3\\n1 3 5 2') == '0'\nassert solution('7\\n1 2 3 4 5 6 7') == '7'\nassert solution('3\\n1 2 3') == '3'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n4 2 5 1 3\n''') == '3'\nassert solution('''\n3\n5 2 4 1 3\n''') == '3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '3'\nassert solution('5') == '3'\nassert solution('10') == '3'\n'''\n\nfrom typing import List",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '3'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '3'\nassert solution('5\\n4 2 5 1 3') == '3'\nassert solution('5\\n1 3 4 2 5') == '2'\nassert solution('5\\n3 1 4 2 5') == '1'\n\n'''",
        "num_ids_2": 27,
        "num_ids_4": 61
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"3\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4458,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"3\"\nassert solution(\"1\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == '1'\nassert solution('5 2 1 4 5') == '2'\nassert solution('10 2 5 2 1 1') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '5'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"4\"\n    \"3 3 3 3\"\n    ) == \"1\"\nassert solution(\n    \"10\"\n    \"1 1 2 1 1 1 2 1 1 1\"\n    ) == \"3\"\nassert solution(\n    \"9\"\n    \"1 1 1 1 1 1 1 1 1\"\n    ) == \"3\"\nassert solution(\n    \"3\"\n    \"2 2 2\"\n    ) == \"1\"\nassert solution(\n    \"5\"\n    \"2 2 2 2 2\"\n    ) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n3 3 3 3\\n') == '1'\nassert solution('5\\n2 2 1 1 2\\n') == '4'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3 3 3 3') == '1'\nassert solution('10\\n1 2 5 4 3 2 5 4 5') == '1'\nprint('You are good') if solution('8\\n1 2 5 4 3 2 5 4 5') == '0' else print('You are bad')\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"8\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 3 2\\n') == '1'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3 3 3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 33
    },
    {
        "number": 4459,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n2 3 2') == '2'\nassert solution('3\\n4 2 3') == '2'\nassert solution('4\\n4 2 4 3') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4 5') == '1'\nassert solution('0 2 3 4 5') == '2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 2 3 4 5') == '1'\nassert solution('0 5 3 4 2') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '2'\nassert solution(input()) == '3'\nassert solution(input()) == '4'\nassert solution(input()) == '5'\n\"\"\"\nx_1, x_2, x_3, x_4, x_5 = list(map(int, input().split()))",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"0 1 1 1 2\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n0 2 3 4 5\n''') == '1'\n\"\"\"\n\nx_1, x_2, x_3, x_4, x_5 = list(map(int, input().split()))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2 2 2 2') == '1'\n\n'''\n\n\nimport math\n\nx_1, x_2, x_3, x_4, x_5 = map(int, input().split())",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4460,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"0 2 3 4 5\") == \"1\"\nassert solution(\"3 5 2 4 0\") == \"1\"\nassert solution(\"3 4 0 5 2\") == \"2\"\nassert solution(\"3 2 5 4 0\") == \"2\"\nassert solution(\"4 1 3 2 0\") == \"3\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5') == '0'\nassert solution('100 11') == '0'\nassert solution('1 2') == '1'\n\n\"\"\"\n\nfrom math import floor, sqrt\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '1'\nassert solution('5 5') == '1'\nassert solution('4 4') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"\"\"5 5\"\"\") == \"0\"\nassert solution(r\"\"\"4 4\"\"\") == \"0\"\nassert solution(r\"\"\"8 5\"\"\") == \"0\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '0'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 5') == '0'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5') == '0'\nassert solution('5 7') == '1'\nassert solution('10 3') == '2'\nassert solution('5 5') == '0'\n\nYour code is :",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '0'\nassert solution('2 1') == '0'\nassert solution('1 2 3') == '1'\nassert solution('2 2 2') == '2'\nassert solution('3 3 3') == '0'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 5\") == \"0\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"7 3\") == \"6\"\nassert solution(\"9 9\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5') == '0'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4461,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([3, 5]) == 0\nassert solution([3, 4]) == 2\nassert solution([3, 3]) == 0\nassert solution([2, 5]) == 4\nassert solution([1, 5]) == 3\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\n2\n''') == 'Yes'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'No'\nassert solution('3') == 'Yes'\nassert solution('100') == 'Yes'\nassert solution('10') == 'No'\n\n---",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n3 4 5 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5\n3 5 2 6 1\n\"\"\") == \"No\"\nassert solution(\"\"\"\n8\n3 4 2 1 5 6 7 10\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([3, 1, 10, 100]) == 'Yes'\nassert solution([2, 5, 2]) == 'No'\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n1 10 100\\n\"\n) == \"Yes\"\n\nassert solution(\n    \"2\\n1 100 1\\n\"\n) == \"No\"\n\nassert solution(\n    \"3\\n1 10 100\\n\"\n) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == 'Yes'\nassert solution('4') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"Yes\"\nassert solution(\"2\") == \"No\"\nassert solution(\"10\") == \"Yes\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4462,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(None) == 'No'\nprint(solution(''))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n\n---",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"yx\") == \"Yes\"\nassert solution(\"axy\") == \"Yes\"\n\nassert solution(\"yx\")!= \"No\"\nassert solution(\"axy\")!= \"No\"\n\nassert solution(\"\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'Yes'\nassert solution('zyx') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''yx\naxy''') == 'Yes'\nassert solution('''xx\nxy''') == 'No'\nassert solution('''xxy\nxxyx''') == 'Yes'\n",
        "num_ids_2": 14,
        "num_ids_4": 22
    },
    {
        "number": 4463,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('yx') == 'Yes'\nassert solution('axy') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"100 10 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\nassert solution(\"1 3\") == \"NO\"\nassert solution(\"2 3\") == \"YES\"\nassert solution(\"4 4\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == \"YES\"\nassert solution(\"4 1 1\") == \"NO\"\nassert solution(\"7 5 1\") == \"YES\"\nassert solution(\"5 2 1\") == \"NO\"\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 5 1\\n\") == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('7 4 5 1') == 'NO'\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 5 1''') == 'YES'\nassert solution('''11 2 1''') == 'YES'\nassert solution('''8 2 5''') == 'NO'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 1') == 'YES'\nassert solution('5 2 1') == 'NO'\nassert solution('4 3 2') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"10 7 1\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 5 1') == 'YES'\nassert solution('3 1 5') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4464,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 5 1\") == \"YES\"\nassert solution(\"2 3 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '1'\nassert solution('2 2') == '1'\nassert solution('5 5') == '9'\nassert solution('4 5') == '3'\nassert solution('5 7') == '10'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2') == '1'\nassert solution('4 4') == '4'\nassert solution('4 4') == '4'\nassert solution('9 9') == '32'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '1'\nassert solution('2 2') == '1'\nassert solution('3 3') == '8'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"10 20\") == \"30\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2\n''') == '1'\nassert solution('''1 1\n''') == '1'\nassert solution('''5 1\n''') == '10'\nassert solution('''4 2\n''') == '9'\nassert solution('''8 5\n''') == '50'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '1'\nprint('Test passed')",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4465,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5\n2 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('25 10 8') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('23 4 0') == '2'\nassert solution('123 4 0') == '2'\nassert solution('123 5 0') == '2'\nassert solution('13 3 0') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"13 3 1\") == \"3\"\nassert solution(\"11 3 1\") == \"2\"\nassert solution(\"5 3 1\") == \"3\"\nassert solution(\"1 3 1\") == \"3\"\nassert solution(\"7 3 1\") == \"4\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 4') == '2'\nassert solution('20 30 30') == '2'\nassert solution('100 100 100') == '2'\nassert solution('5 5 5') == '1'\nassert solution('3 2 2') == '0'\n\n\"\"\"\n\nX, Y, Z = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([13, 3, 1]) == \"3\"\n\nTest your implementation using the following test cases.\nTest case 1\nTest case 2\nTest case 3\nTest case 4\nTest case 5\nTest case 6\nTest case 7\nTest case 8\n\nIf your code passed all test cases, you will receive the following message.\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13 3 1') == '3'\nassert solution('10 7 5') == '3'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 2 1') == '3'\nassert solution('9 7 10') == '2'\nassert solution('5 6 5') == '2'\n'''",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n13 3 1\n''') == '3'\nassert solution('''\n5 6 0\n''') == '0'\nassert solution('''\n10 9 2\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1 1') == '3'\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4466,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '12 3 2') == '1', \"Just enough\"\nassert solution(\n    '10 6 1') == '3', \"Just enough\"\nassert solution(\n    '10 3 1') == '1', \"Not enough\"\nassert solution(\n    '100 100 1') == '2', \"Just enough\"\nassert solution(\n    '20 20 1') == '3', \"Just enough\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 2, 0, 3, 1, 4, 1, 3, 5, 5]) == 2\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"0\"\nassert solution(\"4\") == \"2\"\nassert solution(\"0\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '2'\nassert solution('3 2') == '2'\nassert solution('10') == '10'\nassert solution('3 1 2') == '1'\nassert solution('10 1 2') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n2 0\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\") == \"2\"\nassert solution(\"7\\n4 2\\n4 3\\n2 3\\n5 1\\n5 2\\n3 4\\n1 4\") == \"5\"\nassert solution(\"15\\n5 2\\n10 3\\n2 4\\n4 2\\n4 3\\n6 3\\n2 4\\n8 2\\n3 3\\n10 4\\n1 5\\n3 6\\n5 2\\n7 2\\n7 3\\n2 4\\n10 4\\n6 2\\n8 5\\n1 7\\n7 3\\n7 4\\n7 5\") == \"14\"\n",
        "num_ids_2": 72,
        "num_ids_4": 174
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2\\n3 1\\n1 3\\n4 2\\n0 4\\n5 5\\n') == '2'\nassert solution('1 3\\n3 2\\n1 2\\n4 5\\n0 1\\n1 5\\n') == '1'\nassert solution('10 10\\n0 5\\n4 5\\n1 2\\n2 4\\n6 4\\n3 5\\n3 2\\n8 8\\n2 6\\n') == '0'\n",
        "num_ids_2": 66,
        "num_ids_4": 115
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"3\n2 0\n3 1\n1 3\n4 2\n0 4\n5 5\"\"\") == \"2\"\nassert solution(\"\"\"1\n3 0\n3 1\n1 3\n4 2\n0 4\n5 5\"\"\") == \"1\"\nassert solution(\"\"\"4\n2 2\n3 1\n1 2\n5 1\n0 5\"\"\") == \"1\"\nassert solution(\"\"\"1\n1 0\n1 1\n0 1\"\"\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 0\") == \"2\"\nassert solution(\"3 1\") == \"1\"\nassert solution(\"1 3\") == \"3\"\nassert solution(\"4 2\") == \"2\"\nassert solution(\"0 4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4467,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('6') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n0 3\\n') == '7'\nassert solution('5 2\\n0 3\\n') == '5'\nassert solution('5 2\\n0 3\\n') == '4'\nassert solution('5 2\\n0 3\\n') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '7'\nassert solution('2 3') == '7'\nassert solution('3 2') == '7'\nassert solution('4 5') == '7'\nassert solution('5 6') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4\\n0 3\\n') == '7'\nassert solution('10 10\\n0 5\\n') == '15'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '7'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3\n1 2\n''') == '7'\nassert solution('''2 10\n10 2\n''') == '14'\nassert solution('''1 10\n0 10\n''') == '10'\nassert solution('''1 100\n0 100\n''') == '100'\nassert solution('''1 100\n0 100\n''') == '100'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 5\n1 4''') == \"7\"\nassert solution('''2 10\n1 4''') == \"11\"\nassert solution('''2 1\n1''') == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 4\n0 3\n''') == '7'\nassert solution('''4 2\n1 1 1 1\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4') == '7'\nassert solution('5 1') == '6'\nassert solution('10 10') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 4\n0 3\n''') == '7'\nassert solution('''\n1 2\n1''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4468,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4') == '7'\nassert solution('4 1') == '4'\nassert solution('6 5') == '6'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '0'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '2'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"8\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\"\nassert solution(\n    \"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8\") == \"1\"\nassert solution(\"10\") == \"2\"\nprint(solution(\"\"))\n\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8') == '1'\nassert solution('10') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\nL 1\\nR 2\\nR 3\\n? 2\\nL 4\\n? 1\\nL 5\\n? 1\\n\") == \"1\"\nassert solution(\"10\\nL 100\\nR 100000\\nR 123\\nL 101\\n? 123\\nL 10\\nR 115\\n? 100\\nR 110\\n? 115\\n\") == \"0\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == \"1\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"0\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"2\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"1\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n8\nL 100\nR 100000\nR 123\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == \"1\"\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n8\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\nassert solution('''\n10\nL 100\nR 100000\nR 123\nL 101\n? 123\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4469,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nL 1\nR 2\nR 3\n? 2\nL 4\n? 1\nL 5\n? 1\n''') == '1'\n\nassert solution('''\nL 100\nR 100000\nR 123\n? 123\nL 101\n? 1\nL 10\nR 115\n? 100\nR 110\n? 115\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution() == \"6\"\nassert solution() == \"6\"\nassert solution() == \"-1\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000\") == \"6\"\nassert solution(\"5\\n1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\") == \"4\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n') == '0\\n'\nassert solution('2\\n') == '1\\n'\nassert solution('3\\n') == '1\\n'\nassert solution('4\\n') == '1\\n'\nassert solution('5\\n') == '1\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3') == '2\\n6'\nassert solution('3\\n8') == '2\\n6'\nassert solution('4\\n12') == '4\\n6'\nassert solution('6\\n24') == '4\\n6'\nassert solution('5\\n50') == '4\\n6'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == \"4\"\n\nassert solution('''\n1\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n2\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '6'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n10\n25\n30\n14\n27\n1000000000000000000\n''') == '4'\nassert solution('''\n2\n1\n5\n100\n1000000000000000000\n''') == '-1'\nassert solution('''\n1\n2\n1000000000000000000\n''') == '-1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('10000000000000') == '-1'\n\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000') == '0\\n4\\n6\\n6\\n-1\\n6\\n72\\n'\n\nprint(solution('7\\n1\\n10\\n25\\n30\\n14\\n27\\n1000000000000000000'))\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4470,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n1\\n2\\n3') == '-1'\nassert solution('1\\n2\\n3\\n4') == '4'\nassert solution('1\\n4\\n5\\n6') == '6'\n",
        "num_ids_2": 39,
        "num_ids_4": 58
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2\\n3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES'\nassert solution('3\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'NO'\nassert solution('4\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('4\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('5\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1') == 'NO'\n",
        "num_ids_2": 74,
        "num_ids_4": 142
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES'\nassert solution('''\n3\n2 2 3\n3\n0 0 1 1\n1\n0\n''') == 'YES'\nassert solution('''\n3\n2 2 3\n3\n0 1 1 1\n1\n0\n''') == 'NO'\nassert solution('''\n3\n2 2 3\n3\n0 0 1 1\n1\n0\n''') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3\n2 2 1\n2 2 1''') == 'NO'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\nassert solution('''3\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'NO'\nassert solution('''5\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"2\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES\\nYES\\nYES\\nYES'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n3\\n1 1 3\\n4\\n1 1 2 1') == 'YES'\nassert solution('4\\n3\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('4\\n3\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('4\\n3\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\nassert solution('4\\n3\\n1 1 2 1\\n2\\n11 11\\n1') == 'YES'\n",
        "num_ids_2": 56,
        "num_ids_4": 114
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n1\\n2\\n2\\n1') == 'YES\\n'\nassert solution('2\\n4\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'YES\\n'\nassert solution('3\\n5\\n1 1 3\\n4\\n1 1 2 1\\n2\\n11 11\\n1\\n100') == 'NO\\n'\n",
        "num_ids_2": 69,
        "num_ids_4": 111
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '''3\n    1 1 3\n    4\n    1 1 2 1''') == \"YES\"\nassert solution(\n    '''3\n    1 1 3\n    4\n    1 1 2 1''') == \"NO\"\nassert solution(\n    '''2\n    1 1\n    100\n    ''') == \"YES\"\nassert solution(\n    '''3\n    1 1 3\n    4\n    1 1 2 1''') == \"NO\"\nassert solution(\n    '''5\n    1 1 1 1\n    4\n    1 1 1 1\n    2\n    1 1\n    3\n    1 1 1''') == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution() == 'NO'\nassert solution() == 'YES'\nassert solution() == 'NO'\n\n\n\"\"\"\nimport math\n\nt = int(input())\n\nfor _ in range(t):\n    n = int(input())\n    arr = list(map(int, input().split()))\n    h_max = max(arr)\n\n    h_min = 0\n    for i in range(n):\n        if arr[i]!= 0:\n            h_min = arr[i]\n            break\n\n    while True:\n        h_min = h_min - 1\n        if h_max >= h_min:\n            for i in range(n):\n                if arr[i]!= 0:\n                    arr[i] = arr[i] - 1\n                    break\n        else:\n            break\n\n    ans = 'YES' if h_max == 0 else 'NO'\n\n    print(ans)\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4471,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO', 'First'\n\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES', 'Second'\n\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'NO', 'Third'\n\nassert solution('''\n3\n1 1 3\n4\n1 1 2 1\n2\n11 11\n1\n100\n''') == 'YES', 'Fourth'\n\nprint('All the tests passed!')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\nabacaba\\nbacabaa\\n\") == \"4\"\nassert solution(\"5\\nzcabd\\dbacz\\n\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''7\nabacaba\nbacabaa\n''') == '4'\n\nassert solution('''5\nzcabd\ndbacz\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7\\nabacaba\\nbacabaa') == '4'\nassert solution('5\\nzcabd\\dbacz') == '0'",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nzcabd\\ndbacz\\n') == '0'\nassert solution('7\\nabacaba\\nbacabaa\\n') == '4'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nabacaba\\nbacabaa\\n\") == \"4\"\n\nassert solution(\"10\\nzcabd\\dbacz\\n\") == \"0\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '0'\nassert solution('7') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\nassert solution('5') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\nabacaba\nbacabaa\n''') == '4'\nassert solution('''\n5\nzcabd\ndbacz\n''') == '0'\nassert solution('''\n2\nabacaba\nacabaa\n''') == '2'\nassert solution('''\n3\nacabaa\nacabaa\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4472,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n\"\"\"\n10\nzcabd\ndbacz\n\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n5\nzcabd\ndbacz\n\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n10\nzcabd\ndbacz\n\n\"\"\"\n) == \"0\"\n\nassert solution(\n\"\"\"\n5\nzcabd\ndbacz\n\n\"\"\"\n) == \"4\"\n\nassert solution(\n\"\"\"\n6\nzcabd\ndbacz\n\n\"\"\"\n) == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 2 3\n100 1 4\n1 10 5\n1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 30
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"1 10 5\") == \"198\"\nassert solution(\"1 1 1000000000\") == \"2999999997\"\nassert solution(\"1 1 999999999\") == \"0\"\nassert solution(\"1 1 999999999\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 54
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 10 5\") == \"2999999997\"\nassert solution(\"1000000000 1 6\") == \"0\"\nassert solution(\"1 1 1000000000\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 3\\n100 1 4\") == \"8\"\nassert solution(\"1 10 5\\n1000000000 1 6\") == \"2999999997\"\nassert solution(\"1 1 1000000000\\n1 1 999999999\") == \"0\"\nassert solution(\"1 1 999999999\\n1 1 999999999\") == \"1\"",
        "num_ids_2": 39,
        "num_ids_4": 80
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 3\") == \"8\"\nassert solution(\"100 1 4\") == \"198\"\nassert solution(\"1 10 5\") == \"2999999997\"\nassert solution(\"1000000000 1 6\") == \"0\"\nassert solution(\"1 1 1000000000\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8198'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2 3\\n100 1 4\\n1 10 5\\n1000000000 1 6\\n1 1 1000000000\\n1 1 999999999\\n') == '8\\n198\\n-17\\n2999999997\\n0\\n1\\n'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4473,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '8'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '198'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '-17'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '2999999997'\nassert solution('''\n6\n5 2 3\n100 1 4\n1 10 5\n1000000000 1 6\n1 1 1000000000\n1 1 999999999\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"6\") == \"9\"\nassert solution(\"13\") == \"27\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1\n2\n''') == '3'\nassert solution('''\n3\n6\n''') == '3'\nassert solution('''\n6\n13\n''') == '13'\nassert solution('''\n13\n27\n''') == '27'\nassert solution('''\n13\n3620\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '29'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n6') == '9'\nassert solution('3\\n2') == '3'\nassert solution('2\\n1') == '2'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n20\n30\n40\n''') == '3'\n\nassert solution('''1\n3\n5\n''') == '1'\n\nassert solution('''10\n2\n3\n4\n5\n6\n7\n8\n9\n''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\n\nassert solution('''\n4\n1\n2\n3\n4\n''') == '3'\n\nassert solution('''\n10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n''') == '5'\n\nassert solution('''\n1\n1000000000\n10000000000\n100000000000\n1000000000000\n''') == '5000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n5\n10\n21\n35\n36\n''') == '19'\nassert solution('''\n3\n1\n4\n''') == '1'\nassert solution('''\n2\n4\n5\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n3\n4\n5\n6\n7\n8''') == '7'\nassert solution('''3\n1\n2\n4\n5\n6\n7\n8\n9''') == '1'\nassert solution('''2\n1\n2\n3\n4\n5\n6\n7\n8''') == '3'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8''') == '6'\nassert solution('''1\n1\n2\n3\n4\n5\n6\n7\n8''') == '8'\n\nprint('All tests passed!')",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2\n3\n4\n''') == '4'\n\nassert solution('''\n3\n1\n10\n''') == '10'\n\nassert solution('''\n4\n3\n2\n5\n''') == '5'\n\nassert solution('''\n5\n20\n59\n12\n''') == '59'\n\nassert solution('''\n8\n10\n100\n200\n2000\n30\n40\n50\n''') == '2000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4474,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '3'\n\nassert solution('''\n8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '9'\n\nassert solution('''\n8\n1\n2\n6\n13\n14\n3620\n10000\n1000000000000000000\n''') == '13'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"10 10 8 5 3\") == \"70\"\nassert solution(\"12 8 8 7 2\") == \"77\"\nassert solution(\"12343 43 4543 39 123212\") == \"999999999000000000\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999000000000\"\n",
        "num_ids_2": 21,
        "num_ids_4": 57
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '70', 'First'\nassert solution('''10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == '77', 'Second'\nassert solution('''10 11 2 1 5\n10 11 9 1 10\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '55', 'Third'\nassert solution('''10 11 2 1 5\n10 11 9 1 10\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '10', 'Fourth'\nassert solution('''10 11 2 1 5\n10 11 9 1 10\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5''') == '10', 'Fifth'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n10 20 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == \"77777\"\nassert solution('''4\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == \"999999999000000000\"\nassert solution('''1\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == \"999999999000000000\"\nassert solution('''1\n5\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10''') == \"10\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n') == '70'\nassert solution('8\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n') == '77'\nassert solution('9\\n10 10 8 5 3\\n12 8 8 7 2\\n12343 43 4543 39 123212\\n1000000000 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n10 11 2 1 5\\n10 11 9 1 10\\n') == '177177'\nassert solution('10\\n100 1000000000 1 1 1\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1 1 1000000000\\n1000000000 1000000000 1",
        "num_ids_2": 144,
        "num_ids_4": 1470
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\nassert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"70\"\nassert solution(\"1\") == \"77\"\nassert solution(\"2\") == \"177177\"\nassert solution(\"3\") == \"999999999000000000\"\nassert solution(\"4\") == \"999999999\"\n",
        "num_ids_2": 18,
        "num_ids_4": 43
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n10 8 7 5\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '77'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '70'\nassert solution('''\n7\n10 10 8 5 3\n12 8 8 7 2\n12343 43 4543 39 123212\n1000000000 1000000000 1 1 1\n1000000000 1000000000 1 1 1000000000\n10 11 2 1 5\n10 11 9 1 10\n''') == '999999999000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4475,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 10 8 5 3\") == \"70\"\nassert solution(\"12 8 8 7 2\") == \"77\"\nassert solution(\"12343 43 4543 39 123212\") == \"999999999000000000\"\nassert solution(\"1000000000 1000000000 1 1 1\") == \"999999999\"\nassert solution(\"1000000000 1000000000 1 1 1000000000\") == \"999999999000000000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 69
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 1\n''') == '1'\nassert solution('''\n4 4\n''') == '1'\nassert solution('''\n2 2\n''') == '0'\nassert solution('''\n6 4\n''') == '2'\nassert solution('''\n7 4\n''') == '1'\n'''\n) == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1\\n2 3') == '1'\nassert solution('5 2\\n10 10') == '0'\nassert solution('5 2\\n2 4') == '2'\nassert solution('5 2\\n7 4') == '2'\nassert solution('5 2\\n9 3') == '1'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == '0'\nassert solution('''\n5\n6 5\n10 10\n2 4\n7 4\n9 3\n''') == '2'\nassert solution('''\n5\n8 5\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''\n5\n7 5\n10 10\n2 4\n7 4\n9 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 3\\n10 10\\n2 4\\n7 4\\n9 3') == '1'\nassert solution('5\\n1 1\\n1 1\\n1 1\\n1 1\\n1 1\\n') == '0'\nassert solution('5\\n10 10\\n2 4\\n7 4\\n9 3\\n') == '0'\nassert solution('5\\n2 4\\n7 4\\n9 3\\n') == '1'\nassert solution('5\\n10 10\\n1 2\\n1 3\\n1 4\\n1 5\\n') == '0'\n",
        "num_ids_2": 62,
        "num_ids_4": 114
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 3\n10 10\n2 4\n7 4\n9 3\n''') == '1'\nassert solution('''1 2\n1 2\n''') == '0'\nassert solution('''5 6\n100 100\n1 2\n2 3\n4 5\n6 7\n''') == '2'\nassert solution('''7 8\n11 15\n2 4\n5 6\n4 7\n3 8\n''') == '3'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'\nassert solution(input()) == '0'\nassert solution(input()) == '2'\nassert solution(input()) == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"1\"\nassert solution(\"10 10\") == \"0\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"7 4\") == \"2\"\nassert solution(\"9 3\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '1'\nassert solution('2 3') == '0'\nassert solution('10 10') == '1'\nassert solution('2 4') == '2'\nassert solution('7 4') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4476,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == \"1\"\nassert solution('''\n3\n2 3\n10 10\n2 4\n7 4\n9 3\n''') == \"0\"\nassert solution('''\n3\n1 2\n10 10\n2 4\n7 4\n9 3\n''') == \"2\"\nassert solution('''\n3\n1 2\n10 10\n2 4\n7 4\n9 3\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"13\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '13'\nassert solution() == '90'\nassert solution() == '1'\nassert solution() == '66'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n2\n77\n9\n99\n''') == '1'\n\nassert solution('''\n10\n1\n22\n222\n2222\n''') == '13'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n22\\n9999\\n1\\n777\\n') == '13'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('22') == '1'\nassert solution('9999') == '1'\nassert solution('1') == '2'\nassert solution('2') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n22\n9999\n1\n777''') == '13'\nassert solution('''3\n1\n2\n3''') == '4'\nassert solution('''2\n1\n1''') == '3'\nassert solution('''1\n1''') == '1'\nprint(\"You're awesome!\") if __name__ == \"__main__\" else None\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n5\n22\n9999\n1\n777\n\"\"\") == \"13\"\nassert solution(\"\"\"\n5\n1\n9999\n1\n777\n\"\"\") == \"90\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"13\"\n\n\"\"\"\nimport sys\nfrom collections import defaultdict\nfrom typing import Dict\nfrom collections import deque",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n11\n111\n1111\n2\n22\n222\n2222\n''') == '13'\n\nassert solution('''\n2\n1\n1\n2\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4477,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('22') == '3'\nassert solution('99999') == '10'\nassert solution('777') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('1') == 'YES'\nassert solution('4') == 'YES'\nassert solution('6') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2 3 1 3 2\n6\n1 1 2 2 2 1''') == 'YES'\nassert solution('''4\n1\n5\n5\n1 1 1 1 1''') == 'NO'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('6') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n5\n2 3 1 3 2''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1''') == 'YES'\nassert solution('''4\n6\n2 2 2 2 2 2''') == 'NO'\nassert solution('''5\n2\n2 2 2 2''') == 'NO'\nassert solution('''6\n2\n2 2 2 2 2 2''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\nassert solution('6') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\nassert solution('''4\n6\n2 2 2 2 2\n5\n2 2 2\n3\n2 2\n5\n2 2 2 2 2\n''') == 'YES'\nassert solution('''5\n6\n2 2 2 2 2\n5\n2 2 2\n3\n2 2\n5\n2 2 2 2 2\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2 3\\n1 3 2\") == \"YES\"\nassert solution(\"2\\n2 3\\n1 3 2\") == \"NO\"\nassert solution(\"3\\n5\\n5 5 5\") == \"YES\"\nassert solution(\"4\\n2 2 2 2 2\\n2 2 2 2 2\") == \"YES\"\nassert solution(\"4\\n3 3\\n1 3\\n2 2 2\") == \"NO\"\n",
        "num_ids_2": 38,
        "num_ids_4": 80
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n5\n2 3 1 3 2\n6\n1 1 2 2 2 1\n''') == 'YES'\nassert solution('''3\n1\n5\n5\n1 1 1 1 1\n2\n2 3\n''') == 'NO'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4478,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"9\"\n\n\"\"\"\n\n\nclass Solution:\n    def largestSumAfterKNegations(self, A: List[int], K: int) -> int:\n        if A == []:\n            return 0\n\n        n = len(A)\n        d = {}\n        for i in range(n):\n            if A[i] < 0:\n                if d.get(i) is None:\n                    d[i] = 1\n                else:\n                    d[i] += 1\n        d = sorted(d.items(), key=lambda item: item[1], reverse=True)\n\n        for i in range(K):\n            if d[i][1] > 1:\n                A[d[i][0]] *= -1\n                d[i][1] -= 1\n\n        return sum(A)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([4,2,3]) == 5\nassert solution([3,-1,0,2]) == 6\nassert solution([2,-3,-1,5,-4]) == 13\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4,2,3], 1) == 5\nassert solution([3,-1,0,2], 3) == 6\nassert solution([2,-3,-1,5,-4], 2) == 13",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4,2,3\") == 5\nassert solution(\"3,-1,0,2\") == 6\nassert solution(\"2,-3,-1,5,-4\") == 13\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n2 3 4\n1\n3 4\n5\n0 1\n5\n3 1\n2 1\n1\n''') == '8'\n\nassert solution('''\n3\n1 2 3\n1\n2 3\n1\n''') == '6'\n\nassert solution('''\n5\n-2 5 -1 -4 -3\n1\n-3 -1\n2\n-4\n1\n''') == '9'\n\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2,-3,-1,5,-4\") == \"13\"\nassert solution(\"4,2,3\") == \"5\"\nassert solution(\"3,-1,0,2\") == \"6\"\nassert solution(\"2,-3,-1,5,-4\") == \"13\"",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n4,2,3\") == \"5\"\nassert solution(\"0\\n3,2,3\") == \"6\"\nassert solution(\"-1\\n-1,1,-1\") == \"2\"\nassert solution(\"2\\n-1,1,-1\") == \"3\"",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2,3,4\") == \"5\"\nassert solution(\"3,-1,0,2\") == \"6\"\nassert solution(\"2,-3,-1,5,-4\") == \"13\"\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4,2,3\") == \"5\"\nassert solution(\"3,-1,0,2\") == \"6\"\nassert solution(\"2,-3,-1,5,-4\") == \"13\"\n",
        "num_ids_2": 30,
        "num_ids_4": 48
    },
    {
        "number": 4479,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input_str) == '15'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"true\"\nassert solution(\"2\") == \"true\"\nassert solution(\"3 1 2\") == \"false\"\nassert solution(\"3 -1 2\") == \"true\"\nassert solution(\"3 1 2 1\") == \"false\"\n",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'true'\nassert solution('''\n0 2 1 -6 6 -7 9 1 2 0 1\n''') == 'false'\nassert solution('''\n3 3 6 5 -2 2 5 1 -9 4\n''') == 'true'\n'''\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        s = sum(A)\n        if s%3!= 0:\n            return False\n        subSum = s/3\n        i, j = 0, len(A) - 1\n        \n        while i < j:\n            if A[i] + A[j]!= subSum:\n                i += 1\n            else:\n                j -= 1\n        \n        return i == j\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1]) == 'true'\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1]) == 'false'\nassert solution([3,3,6,5,-2,2,5,1,-9,4]) == 'true'\n\n\n\nFind two elements that sum to zero from a set of n real numbers.\n\nInput: [-1, 0, 1, 2, -1, -4]\nOutput: [0, 2]\n\nNOTE: There are two solutions to the problem.\n\nWe can use two pointer or one pointer.\n\nUse one pointer to find the first pair and another to find the second pair.\n\nSolution:",
        "num_ids_2": 60,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'true'\n'''\nfrom typing import List\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        s = sum(A)\n        if s % 3!= 0:\n            return False\n        s1 = s // 3\n        l = 0\n        r = len(A) - 1\n        while l <= r:\n            if A[l]!= s1 and A[l] == A[l + 1]:\n                l += 1\n                continue\n            if A[r]!= s1 and A[r] == A[r - 1]:\n                r -= 1\n                continue\n            if A[l] == s1 and A[l + 1] == s1:\n                return True\n            if A[l] == s1:\n                l += 1\n                continue\n            if A[r] == s1:\n                r -= 1\n                continue\n        return False\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([0,2,1,-6,6,-7,9,1,2,0,1])\nassert solution([0,2,1,-6,6,7,9,-1,2,0,1])\nassert solution([3,3,6,5,-2,2,5,1,-9,4])\n",
        "num_ids_2": 52,
        "num_ids_4": 76
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n0 2 1\n-6 -7 9 1 2 0 1\n''')\nassert solution('''\n0 2 1\n-6 -7 9 1 2 0 1\n''')\nassert solution('''\n0 2 1\n-6 -7 9 1 2 0 1\n''')\n'''\nSolution:",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'true'\nassert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'true'\nassert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'true'\nassert solution('0 2 1 -6 6 -7 9 1 2 0 1') == 'true'\nassert solution('3 3 6 5 -2 2 5 1 -9 4') == 'false'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'true'\n'''\nfrom typing import List\n\nclass Solution:\n    def canPartition(self, A: List[int]) -> bool:\n        if sum(A)%2==1:\n            return False\n        sum_=sum(A)\n        target=sum_//2\n        dp=[[False for _ in range(target+1)]for _ in range(len(A))]\n        for i in range(len(A)):\n            dp[i][0]=True\n        for i in range(1,target+1):\n            dp[0][i]=False\n        for i in range(1,len(A)):\n            for j in range(1,target+1):\n                if j-A[i]>=0:\n                    dp[i][j]=dp[i-1][j] or dp[i-1][j-A[i]]\n                else:\n                    dp[i][j]=dp[i-1][j]\n        for i in range(1,target+1):\n            if dp[len(A)-1][i]:\n                return True\n        return False",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'true'\n'''\n\nclass Solution:\n    def canThreePartsEqualSum(self, A: List[int]) -> bool:\n        s = sum(A)\n        if s % 3!= 0:\n            return False\n        target = s / 3\n        cnt = 0\n        for i in range(len(A)):\n            if A[i] == target:\n                cnt += 1\n            if cnt == 3:\n                break\n        if cnt!= 3:\n            return False\n        \n        cnt = 0\n        for i in range(len(A)):\n            if A[i]!= target:\n                continue\n            if cnt == 1:\n                return True\n            cnt += 1\n            cnt += 1\n        return False",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4480,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"[0,2,1,-6,6,-7,9,1,2,0,1]\") == \"true\"\nassert solution(\"[0,2,1,-6,6,7,9,-1,2,0,1]\") == \"false\"\nassert solution(\"[3,3,6,5,-2,2,5,1,-9,4]\") == \"true\"\n",
        "num_ids_2": 64,
        "num_ids_4": 94
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beet and vet'\n\"\"\"\n\nn = int(input())\ns = {}\n\nfor i in range(n):\n    s[input()] = 1\n\ns = sorted(s.keys(), key=lambda x: len(x))\n\nfor i in range(len(s)):\n    if len(s[i]) == 1:\n        print(s[i])\n    else:\n        print(s[i][0])\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beat and vet'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n\") == \"beat, bet, beet, bet, beet, vet, vet\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet\\n') == 'beet and vet'\nassert solution('1\\n') == ''\nassert solution('2\\nbeat\\nvet\\n') == 'beat and vet'\nassert solution('2\\nbeat\\n') == 'beat'\nassert solution('2\\nbeat\\n') == 'beat'\n",
        "num_ids_2": 48,
        "num_ids_4": 83
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\\n\"\n                \"beat\\n\"\n                \":\\n\"\n                \"vet\\n\"\n                \"beet\\n\"\n                \":\\n\"\n                \"bed\\n\"\n                \"vet\\n\"\n                \"bet\\n\"\n                \":\\n\"\n                \"beet\") == \"beet and vet\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nqwe\\nasdf\\n12345\\n\") == \"asdf\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet') == 'beat and vet'\nassert solution('7\\nbeat\\nvet\\nbed') == 'beat and bed'\nassert solution('7\\nbeat\\nbet\\nbeet') == 'beat'\n",
        "num_ids_2": 43,
        "num_ids_4": 63
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\nabcd\\njkl\\nasdf\\nefgh\\nijkl\") == \"abcd\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\nassert solution('7\\nbeat\\nvet\\nbeet\\nbed\\nvet\\nbet\\nbeet') == 'beet and vet'\nprint(solution(input()))\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4481,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\nbeat\\nvet\\nbeet\") == \"beat and vet\"\nassert solution(\"8\\nabcd\\nefgh\\nijkl\") == \"abcd and efgh\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '18'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('10') == '16'\n\nstdin = \\\n'''\n10\n3 4 5 1 2\n\n'''\nprint(solution(stdin))\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '8'\nassert solution('4') == '6'\nassert solution('8') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"8\"\nassert solution(\"4 8\") == \"16\"\nassert solution(\"2\") == \"8\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 8\n''') == '8'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '8'\nassert solution('3') == '10'\nassert solution('4') == '18'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '8'\nassert solution('4') == '6'\nassert solution('8') == '8'\nassert solution('10') == '16'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 8') == '8'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4482,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"4\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"15\") == \"84\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"84\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1234\n150\n100''') == '84'\n\nassert solution('''10\n1\n2''') == '9'\n\nassert solution('''1\n1\n1''') == '0'\n\nassert solution('''1\n100\n1''') == '0'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1234\") == \"84\"\nassert solution(\"150\") == \"1084\"\nassert solution(\"100\") == \"84\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1234') == '84', \"Wrong!\"\nassert solution('150') == '1084', \"Wrong!\"\nassert solution('100') == '84', \"Wrong!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4483,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1234') == '84'\nassert solution('150') == '1084'\nassert solution('100') == '84'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '8'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 2\") == \"8\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"8\"\nassert solution(\"2 2\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 2') == '8'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2''') == '8'\nassert solution('''3 5''') == '28'\nassert solution('''10 10''') == '243288'\n",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '8'\nassert solution('3 3') == '7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 2') == '8'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 2') == '8'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4484,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 10\n''') == '8', 'Wrong'\nassert solution('''\n15 18\n''') == '7', 'Wrong'\nassert solution('''\n3 4\n''') == '0', 'Wrong'\nassert solution('''\n5 6\n''') == '4', 'Wrong'\nassert solution('''\n7 8\n''') == '6', 'Wrong'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('10 10') == 'POSSIBLE'\n\n----------------------------------------------------------------------",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\nassert solution(\"7 2\") == \"IMPOSSIBLE\"\nassert solution(\"5 3\") == \"POSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n1 2\n2 3\n''') == 'POSSIBLE'\nassert solution('''\n3 2\n1 2\n2 3\n''') == 'POSSIBLE'\nassert solution('''\n3 2\n1 2\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2\n1 2\n2 3\n''') == 'IMPOSSIBLE'\nassert solution('''\n3 2\n1 2\n2 3\n''') == 'IMPOSSIBLE'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 'POSSIBLE'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('1 2') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2\") == \"POSSIBLE\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2\\n1 2\\n2 3\") == \"IMPOSSIBLE\"\nassert solution(\"3 3\\n1 2\\n2 3\\n1 3\") == \"POSSIBLE\"\nassert solution(\"2 4\\n1 2\\n3 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"5 5\\n1 2\\n3 4\\n5 4\\n1 3\") == \"POSSIBLE\"\nassert solution(\"1 2\\n1 2\\n1 2\") == \"IMPOSSIBLE\"\n",
        "num_ids_2": 47,
        "num_ids_4": 101
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 2') == 'POSSIBLE'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 2') == 'POSSIBLE'\nassert solution('3 4') == 'IMPOSSIBLE'\nassert solution('3 3') == 'IMPOSSIBLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4485,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input) == sample_output",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == ''\nassert solution('a') == 'a'\nassert solution('abc') == 'abc'\nassert solution('abac') == 'abac'\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoder') == 'acdr', \"Wrong result\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\n\n----------------------------------------------------------------------\n\nclass Solution(object):\n    def solution(self, s):\n        return ''.join(s[i] for i in range(len(s), 0, -2) if i!= 1)\n\na = Solution()\nprint(a.solution(\"atcoder\"))\n\n----------------------------------------------------------------------",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoder') == 'acdr'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder') == 'acdr'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nassert solution(\"ball\") == \"bl\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"acdr\"\nassert solution(input()) == \"atcoder\"\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoder\") == \"acdr\"\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4486,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoder') == 'atcoder'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng banana mango\") == \"NO\"\nassert solution(\"rng banana banana\") == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('tree apple') == 'YES'\nassert solution('zebra aardvark') == 'NO'\nassert solution('nope') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng go banana apple\") == \"YES\"\nassert solution(\"rng go banana banana apple\") == \"NO\"\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('rng gorb la') == 'YES'\nassert solution('rng gorilla apple') == 'YES'\n\"\"\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"abcd\") == \"NO\"\nassert solution(\"abcdEF\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"rng\") == \"YES\"\nassert solution(\"\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 33
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"rng gorilla apple\") == \"YES\"\nassert solution(\"mango banana apple\") == \"NO\"\nassert solution(\"goat banana apple\") == \"NO\"",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('lst grape grape') == 'NO'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4487,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('rng gorilla apple') == 'YES'\nassert solution('apple') == 'NO'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"LESS\"\nassert solution(\"5 1\") == \"GREATER\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == 'GREATER'\nassert solution('0') == 'EQUAL'\nassert solution('1') == 'LESS'\nassert solution('3') == 'GREATER'\nassert solution('13') == 'LESS'\n",
        "num_ids_2": 23,
        "num_ids_4": 44
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'GREATER'\nassert solution('36') == 'GREATER'\nassert solution('24') == 'LESS'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"GREATER\"\nassert solution(\"36\") == \"GREATER\"\nassert solution(\"24\") == \"LESS\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n4') == 'GREATER'\nassert solution('4\\n1') == 'GREATER'\nassert solution('5\\n7') == 'LESS'",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'LESS'\nassert solution('3') == 'EQUAL'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == 'GREATER'\nassert solution('B') == 'LESS'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2') == 'GREATER'\nassert solution('2\\n1') == 'LESS'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'LESS', '3 > 4'\nassert solution('24') == 'LESS', '24 > 24'\nassert solution('36') == 'GREATER', '36 < 36'\nassert solution('24') == 'EQUAL', '24 = 24'\nassert solution('36') == 'GREATER', '36 > 36'\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4488,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"GREATER\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\napple\norange\napple\n1\ngrape\n\n''') == '2'\nassert solution('''\n4\napple\norange\napple\n1\ngrape\n\n''') == '0'\nassert solution('''\n5\napple\norange\napple\napple\ngrape\n\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\nassert solution([__import__('sys').stdin.read()]) == '2'\n\"\"\"\n\nN = int(stdin.readline())\ns_list = stdin.readline().split()\nt_list = stdin.readline().split()",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\napple\\norange\\napple\\n1\\ngrape') == '2'\nassert solution('4\\napple\\norange\\napple\\n2\\ngrape\\n') == '1'\nassert solution('4\\napple\\norange\\napple\\n2\\ngrape\\n') == '0'\nassert solution('1\\ngrape\\n') == '1'\nassert solution('4\\napple\\norange\\napple\\n2\\ngrape\\n') == '0'\n",
        "num_ids_2": 52,
        "num_ids_4": 94
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\napple\\norange\\napple\") == \"2\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) == '2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4489,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"0\"\nassert solution(\"4\\napple\\norange\\ngrape\") == \"2\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n\nstdin = input()\nprint(solution(stdin))\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"C\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'C'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'A'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == 'T'\nassert solution('C') == 'G'\nassert solution('G') == 'C'\nassert solution('T') == 'A'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4490,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"T\"\nassert solution(\"C\") == \"G\"\nassert solution(\"G\") == \"T\"\nassert solution(\"T\") == \"A\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 2 4 1') == '14'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == '14'\n\"\"\"\nimport itertools\nimport math\nimport sys\nfrom datetime import datetime",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 14\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"14\"\nassert solution(\"10\") == \"17\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '14'\nassert solution('10') == '20'\nassert solution('1') == '1'\nassert solution('12') == '22'\nassert solution('1 1 1 1') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '14'\nassert solution('3 2 2 4 1') == '14'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n    3\n    2 2 2 4 1\n    1 2 2 2 1\n    '''\n) == \"14\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3 2 2 4 1') == '14'\nassert solution('10\\n1 1 1 1 1 1 1 1 1') == '12'\nassert solution('100\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '24'\nassert solution('20\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '10'\nassert solution('50\\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1') == '8'\n",
        "num_ids_2": 38,
        "num_ids_4": 95
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n1\\n3\\n') == '14'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4491,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n3 2 2 4 1\n1 2 2 2 1\n''') == '14'\nassert solution('''10\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '31'\nassert solution('''10\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '40'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n2 2 2\n\"\"\") == '1'\n\nassert solution(\"\"\"\n3\n1 3 3\n\"\"\") == '2'\n\nassert solution(\"\"\"\n3\n1 2 2\n\"\"\") == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2 2\n''') == '1'\nassert solution('''\n3\n3 3\n''') == '1'\nassert solution('''\n3\n3 2\n''') == '2'\nassert solution('''\n3\n1 2\n''') == '2'\nassert solution('''\n4\n1 2 2 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n1 2 1 2 1\") == \"3\"\nassert solution(\"7\\n1 1 1 1 1 1 1\") == \"2\"\nassert solution(\"4\\n1 1 1 1\") == \"3\"\nassert solution(\"3\\n1 1 1\") == \"2\"\nassert solution(\"5\\n2 2 2 2\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 67
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 3\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3\\n2 2 2') == '1'\nassert solution('3 1\\n3 3 3') == '0'\nassert solution('3 4\\n1 3 2 3') == '1'\nassert solution('3 4\\n1 4 1 3') == '2'\nassert solution('3 6\\n3 1 2 1 2 3') == '1'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n2 2 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3') == '1'\nassert solution('10 3') == '1'\nassert solution('12 10') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('7 2') == '3'\nassert solution('12') == '12'\n\"\"\"\n\nn, x = map(int, input().split())\nlst = list(map(int, input().split()))\ndp = [0]*n\n\nfor i in range(n):\n    dp[i] = x\n    for j in range(i):\n        if lst[j] <= lst[i]:\n            dp[i] = min(dp[i], dp[j] + 1)\n\nprint(n - dp.count(x))",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 3\") == \"1\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4492,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 3\n2 2 2\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\") == \"Yes\"\n\"\"\"\n\n\"\"\"\nGiven a 3 x 3 matrix, print the numbers of the corresponding matrices with the following rules:\n\nIf a_i + b_j = c_i + c_j, then print \"Yes\".\nIf a_i - b_j = c_i - c_j, then print \"No\".\nNote that c_i and c_j are the integers corresponding to the indices of the numbers in the matrix.\n\nInput\nThe first line of input contains three integer numbers n, m and k, each of which is in the range 1 \\leq k \\leq 100.\n\nThe next line contains 3 rows, each of which contains 3 integers.\n\nOutput\nPrint Yes or No for each case.\n\nExample\nInput\n1 2 3\n2 2 3\n3 3 2\nOutput\nYes\nNo\nYes\nYes\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0 1') == \"Yes\"\nassert solution('2 1 2') == \"No\"\nassert solution('1 0 1') == \"Yes\"\nassert solution('1 1 2') == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"1 0 1\n2 1 2\n1 0 1\"\"\") == \"Yes\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n1 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n0 1 2\\n1 0 1\\n') == 'No'\nassert solution('1 0 1\\n1 1 2\\n1 1 2\\n') == 'No'\nassert solution('1 0 1\\n1 1 2\\n1 1 2\\n') == 'No'\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 0 1\n2 1 2\n1 0 1\n''') == 'Yes'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n1 0 1\n2 1 2\n1 0 1\n\"\"\") == \"Yes\"\nassert solution(\"\"\"\n5 0 0\n4 0 2\n5 0 2\n\"\"\") == \"No\"\nassert solution(\"\"\"\n2 1 0\n1 2 0\n1 1 0\n\"\"\") == \"Yes\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'Yes'\nassert solution('1 0 1\\n2 1 2\\n1 0 1\\n') == 'No'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 0 1\\n2 1 2\\n1 0 1') == 'Yes'\nassert solution('1 1 1\\n1 1 2\\n1 0 1') == 'No'\nassert solution('1 1 1\\n1 1 2\\n1 1 1') == 'Yes'\n\n\"\"\"",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4493,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\nassert solution(\"5 0 0 0\\n0 0 0 1\\n0 1 0 0\\n0 1 0 0\\n0 0 0 0\\n\") == \"No\"\nassert solution(\"1 0 1\\n2 1 2\\n1 0 1\\n\") == \"Yes\"\n",
        "num_ids_2": 63,
        "num_ids_4": 87
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ABC\") == \"ARC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('ABC') == 'ARC'\nassert solution('ABCD') == 'ARC'\n",
        "num_ids_2": 18,
        "num_ids_4": 29
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'ARC'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"ARC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ABC\") == \"ARC\"\nassert solution(\"ARC\") == \"ABC\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4494,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'ARC'\nassert solution('ABC') == 'ARC'\nassert solution('ARC') == 'ARC'\nassert solution('ABCB') == 'ARC'\nassert solution('ABCB') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 8 2\") == \"3\"\nassert solution(\"20 2 7\") == \"14\"\nassert solution(\"7 9 9\") == \"1\"\nassert solution(\"100 100 100\") == \"100\"\nassert solution(\"0 0 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([4, 8, 2]) == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 8 2\n''') == '3'\nassert solution('''\n10 10 2\n''') == '8'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 8 2') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2 5\") == \"3\"\nassert solution(\"4 5 3\") == \"3\"\nassert solution(\"4 8 2\") == \"3\"\nassert solution(\"4 5 4\") == \"3\"\nassert solution(\"5 8 2\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('10 10 10') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 8 2') == '3'\nassert solution('5 5 5') == '2'\nassert solution('10 10 10') == '2'\nassert solution('100 100 100') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4495,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 5\") == \"3\"\nassert solution(\"10 10 2\") == \"2\"\nassert solution(\"10 10 3\") == \"0\"\nassert solution(\"10 10 5\") == \"1\"\nassert solution(\"10 10 3\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n24\n\n25\n\n''') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('23') == 'Christmas Eve Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve Eve'",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('24') == 'Christmas Eve'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"25\") == \"Christmas\"\nassert solution(\"23\") == \"Christmas Eve Eve Eve\"\nassert solution(\"22\") == \"Christmas Eve Eve Eve Eve\"\n",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('25') == 'Christmas'\nassert solution('23') == 'Christmas Eve Eve'\nassert solution('22') == 'Christmas Eve Eve Eve'",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"01\"\nassert solution(\"3\") == \"012\"\nassert solution(\"9\") == \"0909\"\nassert solution(\"27\") == \"070909\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('22') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('23') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('24') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('25') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\nassert solution('26') == 'Christmas Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve Eve'\n",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == 'October'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(INPUT) == EXPECTED_OUTPUT\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4496,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25') == 'Christmas'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7') == '4'\nassert solution('80') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n''') == '1'\nassert solution('''\n100\n''') == '4'\nassert solution('''\n4\n''') == '2'\n\ninput()\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n''') == '4'\nassert solution('''\n9\n''') == '8'\nassert solution('''\n12\n''') == '4'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7') == '4'\nassert solution('12') == '6'\nassert solution('18') == '5'\nassert solution('20') == '5'\nassert solution('30') == '6'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7') == '4'\nassert solution('6') == '3'\nassert solution('13') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7') == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '4'\nassert solution('14') == '7'\nassert solution('20') == '7'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4497,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2') == 'Yes'\nassert solution('5 2 2') == 'No'\nassert solution('4 5 2') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"1 2 3 4\") == \"No\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"5 5 5 5\") == \"Yes\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([4, 7, 9, 3]) == 'Yes'\nassert solution([10, 12, 9, 3]) == 'No'\nassert solution([10, 12, 9, 4]) == 'Yes'\n\"\"\"",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 2 2') == 'No'\nassert solution('5 5 5 5') == 'Yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2 3 4''') == 'Yes'\nassert solution('''2 4 1 3''') == 'Yes'\nassert solution('''2 4 1 3''') == 'No'\nassert solution('''1 2 3 4''') == 'No'\nassert solution('''4 2 3 1''') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 7 9 3\") == \"Yes\"\nassert solution(\"3 2 6\") == \"No\"\nassert solution(\"3 4 3\") == \"Yes\"\nassert solution(\"4 5 7 2\") == \"Yes\"\nassert solution(\"6 5 4 1\") == \"No\"\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([4, 7, 9, 3]) == \"Yes\"\nassert solution([1, 2, 3, 4]) == \"No\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4498,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 7 9 3') == 'Yes'\nassert solution('1 1 1 1') == 'No'\nassert solution('1 1 1 1 1') == 'Yes'\nassert solution('1 1 1 1 1 1') == 'Yes'\nassert solution('2 2 2 2') == 'No'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nprint(solution(''))\n\n\"\"\"\n\ns_1, s_2, s_3 = input().split()",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"ABC\"\n\"\"\"\n\ns_1, s_2, s_3 = input().split()\nprint(\"\".join([\n    x[0].upper() + x[1:] for x in (s_1, s_2, s_3)\n]))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"ATCODER BEGINNER CONTREST\") == \"ABC\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\nprint(solution('atcoder beginner contest'))\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoder beginner contest') == 'ABC'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('atcoder beginner contest') == 'ABC', 'Wrong answer!'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\", solution(\"atcoder beginner contest\")",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"atcoder beginner contest\") == \"ABC\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4499,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"atcoder\") == \"ABC\", \"Test #1 Failed\"\nassert solution(\"beginner contest\") == \"ABC\", \"Test #2 Failed\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('-1 -1 -1') == 'No'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('100 10 120') == 'No'\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('100 120') == 'No'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('0 0 0') == 'No'\nassert solution('4 0 0') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"50 100 120\") == \"Yes\"\nassert solution(\"20 50 50\") == \"No\"\nassert solution(\"20 50 20\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('50 100 120') == 'Yes'\nassert solution('100 100 120') == 'No'\nassert solution('100 200 120') == 'Yes'\nassert solution('100 100 120') == 'Yes'\nassert solution('100 200 120') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4500,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([10, 20, 30]) == \"Yes\"\nassert solution([25, 25, 50]) == \"No\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 8') == '5', \"error\"\nassert solution('4 9') == '0', \"error\"\nassert solution('4 10') == '2', \"error\"\nassert solution('3 4') == '4', \"error\"\nassert solution('3 8') == '7', \"error\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 8') == '5'\nassert solution('4 2') == '2'\nassert solution('6 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 8') == '5'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 5') == '6'\nassert solution('4 2') == '6'\nassert solution('4 8') == '8'\nassert solution('4 20') == '0'\nassert solution('12 2') == '0'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 8') == '5'\n\n----------------------------------------\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3 4\") == \"5\", \"Wrong answer\"\nassert solution(\"10 20 30 40\") == \"20\", \"Wrong answer\"\nassert solution(\"4 5 6 7 8\") == \"4\", \"Wrong answer\"\nassert solution(\"4 5 6 7 8\") == \"4\", \"Wrong answer\"\nassert solution(\"1 2 3 4\") == \"5\", \"Wrong answer\"\n",
        "num_ids_2": 36,
        "num_ids_4": 74
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 6\") == \"5\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"4 8\") == \"5\"\nassert solution(\"5 10\") == \"6\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''8 9 8 9''') == '5'\nassert solution('''4 8''') == '5'\nassert solution('''3 6 9''') == '3'\nassert solution('''2 5 10''') == '2'\nassert solution('''1 1 1''') == '1'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 5\n4 3 5\n''') == \"4\"\nassert solution('''1 1\n1\n''') == \"1\"\nassert solution('''4 5\n1 1 1 1\n''') == \"5\"\nassert solution('''1 1\n2 2\n''') == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4501,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 8\") == \"5\"\nassert solution(\"2 5\") == \"2\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"5\\n1 2 3 4 5\") == \"5 1 2 3 4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == \"4 2 1 3\"\nassert solution('''\n5\n1 2 3 4 5\n''') == \"5 2 1 3 4\"\nassert solution('''\n1\n0\n''') == \"0 0\"\nassert solution('''\n2\n0 1\n''') == \"0 1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2 1 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\n1 2 3 4\") == \"4 2 1 3\"\nassert solution(\"2\\n1 2\") == \"2 1\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"4 2 1 3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n1 2 3 4\n''') == '4 2 1 3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3 4') == '4 2 1 3'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n4 5 6') == '5 4 1 2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1 2'\nassert solution('4') == '1 2 3 4'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4502,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n1 2 3 4\n''') == \"4 2 1 3\"\nassert solution('''\n3\n1 2 3\n''') == \"2 1 3 1\"\nassert solution('''\n5\n1 2 3 4 5\n''') == \"5 1 2 3 4\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"3 3\") == \"Yes\"\nassert solution(\"10 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 3\") == \"Yes\"\nassert solution(\"10 2\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2\\n4 5 6') == 'No'\nassert solution('1 2\\n4 5 6') == 'Yes'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3\\n4 5 6\") == \"Yes\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 3\\n4 5 6\") == \"Yes\"\nassert solution(\"10 10\\n1 2 3 4 5 6\") == \"No\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n1 2\n''') == 'No'\nassert solution('''4 4\n1 2\n1 3\n2 3\n2 2\n''') == 'Yes'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5 6\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 3') == 'Yes'\nassert solution('3 4') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4503,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 2\") == \"No\"\nassert solution(\"3 1\") == \"Yes\"\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"abababaa\"\nassert solution(\"abaababa\") == \"abababa\"\nassert solution(\"abaabab\") == \"ababab\"\nassert solution(\"abaaba\") == \"ababa\"\n",
        "num_ids_2": 29,
        "num_ids_4": 57
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"1\"\nassert solution(\"abaabab\") == \"1\"\nassert solution(\"abaab\") == \"1\"\nassert solution(\"aba\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == 0\nassert solution('abaababaab') == 6\nassert solution('abaababaa') == 3\nassert solution('abaababa') == 3\nassert solution('abaaba') == 2\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '3'\nassert solution('abaabab') == '2'\nassert solution('abaab') == '1'\nassert solution('abcde') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('aa') == 1\nassert solution('abcde') == 3\nassert solution('abcdea') == 5\nassert solution('aaabc') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 35
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '7'\nassert solution('abaabab') == '6'\nassert solution('abaab') == '4'\nassert solution('ab') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 49
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '', 'Wrong answer for an empty string'\nassert solution('a') == '', 'Wrong answer for a string of one character'\nassert solution('ba') == '', 'Wrong answer for a string of two characters'\nassert solution('abc') == '', 'Wrong answer for a string of three characters'\nassert solution('abab') == '', 'Wrong answer for a string of four characters'\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abaababaab') == '6'\nassert solution('abaababaa') == '8'\nassert solution('abaababa') == '3'\nassert solution('abaabab') == '2'\nassert solution('abaaba') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4504,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abaababaab\") == \"6\"\nassert solution(\"abaababaa\") == \"8\"\nassert solution(\"abaababa\") == \"9\"\nassert solution(\"abaabab\") == \"9\"\nassert solution(\"abaaba\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('ac') == 'No'\nassert solution('ab') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abc') == 'Yes'\nassert solution('badc') == 'No'\n\n------Explanation------\n-S = abc\n-S = bac\n-S = bca\n\n------Possible:------\nYes\nYes\nNo\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('abcd') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"cba\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == 'No'\nassert solution('bc') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"bac\") == \"Yes\"\nassert solution(\"bca\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''bac''') == 'Yes'\nassert solution('''ab''') == 'No'\nassert solution('''aac''') == 'Yes'\nassert solution('''b''') == 'No'\nassert solution('''c''') == 'Yes'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bac') == 'Yes'\nassert solution('bac') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4505,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bac\") == \"Yes\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"646\"\nassert solution(\"2\") == \"20\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1000000\n1000000\n''') == '757402647'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n1 3\\n4 2\") == \"20\"\nassert solution(\"1\\n1000000\\n1000000\") == \"757402647\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '646'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '1'\nassert solution('1000000') == '757402647'\nassert solution('4 2') == '20'\nassert solution('5') == '646'\n",
        "num_ids_2": 25,
        "num_ids_4": 46
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '4\\n3 1 2\\n5 6 7'\n    ) == '2 3 1 6 7 4 5'\n\nassert solution(\n    '5\\n1 2 3 4 5'\n    ) == '3 1 4 2 5 1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('1\\n1') == '1'\nassert solution('1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1') == '1'\nassert solution('1\\n1\\n1\\n1\\n1') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 58
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 8 7 2 4\n9 7 2 9 3\n''') == '646'\nassert solution('''2\n1000000\n1000000\n''') == '757402647'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n2''') == '2'\nassert solution('''3\n1 3\n2 4''') == '5'\nassert solution('''2\n1 3\n4 2''') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4506,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"646\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '17'\nassert solution('7 4 8') == '17'\nassert solution('5 1 4') == '17'",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '17'\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\nassert solution('1 2 3') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2 4\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"\nassert solution(\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 4 5') == '7'\nassert solution('9 4 8') == '17'\nassert solution('5 1 4') == '17'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '17'\nassert solution('7 4 8') == '17'\nassert solution('5 1 4') == '17'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\") == \"17\"\n\nassert solution(\"\"\"\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\"\"\") == \"17\"\n\nassert solution(\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4507,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n7 4 5\n2 5 4 2 6 3 1\n2 1\n6 5\n2 1\n3 1\n\"\"\") == \"17\"\nassert solution(\"\"\"\n9 4 8\n6 8 5 1 8 1 1 2 1\n9 2\n8 4\n5 3\n9 7\n\"\"\") == \"17\"\nassert solution(\"\"\"\n5 1 4\n2 5 7 4 6\n5 4\n\"\"\") == \"17\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n''') == '2'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '0'\nassert solution('''\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7\\n') == '0'\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"2\"\nassert solution(\"\") == \"0\"\nassert solution(\"7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 51
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'\nassert solution('7\\n1 2\\n2 3\\n3 4\\n3 5\\n3 6\\n1 7') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"7\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"7\\n\"\n    \"1 2\\n\"\n    \"2 3\\n\"\n    \"2 4\\n\"\n    \"4 5\\n\"\n    \"4 6\\n\"\n    \"5 7\\n\"\n    ) == \"2\"\nassert solution(\n    \"7\\n\"\n    \"1 2\\n\"\n    \"1 3\\n\"\n    \"2 4\\n\"\n    \"2 5\\n\"\n    \"3 6\\n\"\n    \"3 7\\n\"\n    ) == \"1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n1 7') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n5 7') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n5 7') == '1'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n5 7') == '0'\n",
        "num_ids_2": 68,
        "num_ids_4": 136
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '2'\nassert solution() == '1'\nassert solution() == '0'\n\"\"\"\nimport unittest\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"0\"\n\nassert solution(\"\"\"\n7\n1 2\n1 3\n2 4\n2 5\n3 6\n1 7\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n7\n1 2\n2 3\n2 4\n4 5\n4 6\n5 7\n\"\"\") == \"0\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4508,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n1 2\\n2 3\\n2 4\\n4 5\\n4 6\\n5 7\\n') == '2'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7\\n') == '0'\nassert solution('7\\n1 2\\n1 3\\n2 4\\n2 5\\n3 6\\n3 7\\n') == '1'\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"10\"\nassert solution(\"3 7\\n4 12\\n2 1000000000\\n7 97\\n1000000000 1000000000\\n2 1\\n\") == \"1999999999\"\nassert solution(\"3\\n4\\n2\\n\") == \"1000000001\"\n",
        "num_ids_2": 47,
        "num_ids_4": 67
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == \"10\"\n\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '10'\nassert solution('''6\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1''') == '1999999999'\nassert solution('''4\n1\n2\n3''') == '1'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '15'\nassert solution('3') == '1999999999'\nassert solution('4') == '113'\nassert solution('5') == '1000000001'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 7\n4 12\n2 1000000000\n7 97\n1000000000 1000000000\n2 1\n''') == '10'\nassert solution('''\n5 9\n5 10\n1 1000000000\n4 98\n2 1\n''') == '1000000001'\nassert solution('''\n3 10\n3 1\n1 9\n''') == '10'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    3 7\n    4 12\n    2 1000000000\n    7 97\n    1000000000 1000000000\n    2 1\n    ''') == '1999999999'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"9\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 7') == '15'\nassert solution('4 12') == '113'\nassert solution('2 1000000000') == '1000000001'\nassert solution('7 97') == '1999999999'\nassert solution('1000000000 1000000000') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6\\n3 7\\n4 12') == '15'\nassert solution('2\\n1000000000 1000000000\\n2 1') == '1000000001'\nassert solution('6\\n3 7\\n2 1000000000\\n7 97') == '1999999999'\nassert solution('1\\n1000000000 1000000000\\n2 1') == '1'\nassert solution('2\\n1000000000 1000000000\\n2 1') == '1999999999'",
        "num_ids_2": 41,
        "num_ids_4": 87
    },
    {
        "number": 4509,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 2\n3 4\n1 4\n1 1\n''') == \"10\"\n\nassert solution('''\n1 2\n3 4\n1 2\n2 2\n''') == \"1999999999\"\n\nassert solution('''\n1 2\n3 4\n1 1\n2 2\n''') == \"1000000001\"\n\nassert solution('''\n1 2\n3 4\n1 3\n2 3\n''') == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\nassert solution('''\n5 4\n1 2 3 4 1\n''') == '4'\nassert solution('''\n8 6\n1 1 1 1 1 1 2 1 1\n1 1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 2 1\n1 1 1 1 1 1 1 1 2 1\n1 1 1 1 1 1 1 2 1 1\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2\\n3 1 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3\\n1 3 2'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input_) == '2\\n1 3 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == solution(\"7 2\\n2 3 3 1 2 1 2 1 2\\n\") == \"3\"\nassert solution() == solution(\"10 4\\n2 3 3 1 1 2 1 2 3 3\\n\") == \"3\"\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2 1 2 3 2 1 3 2'\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3 1 3 2 1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 2') == '2'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n7 2\n2 3 3 1 1 2 1 2 3\n\n'''\n) == '2\\n2 1 \\n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '2'\nassert solution('10 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"3\"\nassert solution(\"10 4\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4510,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 2\n1 2 3 2 1 3 2\n''') == '2'\n\nassert solution('''\n10 4\n2 3 3 1 1 2 1 2 3 3\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_) == '263'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\nassert solution('''\n1\n1 10\n1 5\n2\n1 4\n1 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\nassert solution('''\n2\n3\n1 5\n2\n1 4\n1 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\nassert solution('''\n3\n3\n1 5\n2\n1 4\n1 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\nassert solution('''\n4\n3\n1 5\n2\n1 4\n1 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\nassert solution('''\n7\n1 10\n1 4\n1 3\n3\n1 6\n1 5\n2 3\n''') == 218\nassert solution('''\n9\n1 10\n2 1\n1 2\n1 3\n1 4\n1 5\n2 4\n1 6\n3 1\n''') == 15\nassert solution('''\n13\n2 5\n4 6\n1 6\n1 6\n1 7\n2 1\n1 3\n1 4\n1 5\n1 7\n3 2\n1 7\n2 4\n1 2\n1 3\n1 4\n2 1\n1 5\n''') == 1186\n'''\n\nimport itertools",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n3\\n1 6\\n1 7\\n1 5\\n2\\n1 4\\n1 3\\n3\\n1 10\\n3 5\\n2 3\\n3\\n1 15\\n2 4\\n1 10\\n1\\n1 100\") == \"263\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4511,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n1 6\n1 7\n1 5\n2\n1 4\n1 3\n3\n1 10\n3 5\n2 3\n3\n1 15\n2 4\n1 10\n1\n1 100\n''') == 263\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == \"\", \"This test requires an empty input string\"\nassert solution(\"abacaba\") == \"3\", \"One query\"\nassert solution(\"dfcbbcfeeedbaea\") == \"6\", \"Two queries\"\nassert solution(\"codeforces\") == \"\", \"Empty string\"\nassert solution(\"codeforces\", 5) == \"\", \"No such query\"",
        "num_ids_2": 34,
        "num_ids_4": 71
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''abacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n''') == '3'\nassert solution('''dfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n''') == '5'\nassert solution('''abacaba\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n''') == '2'\nassert solution('''abacaba\n3\n1 4 a\n1 5 a\n2 4 b\n2 1 b\n''') == '2'\nassert solution('''abacaba\n3\n1 4 a\n1 5 a\n2 4 b\n2 1 b\n''') == '2'\n",
        "num_ids_2": 23,
        "num_ids_4": 41
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(stdin) == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abacaba') == \"3\"\nassert solution('dfcbbcfeeedbaea') == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == \"5\\n2\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\nabacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n\"\"\"\n) == \"3\"\nassert solution(\n    \"\"\"\ndfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n\"\"\"\n) == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\nabacaba\n5\n2 1 4\n1 4 b\n1 5 b\n2 4 6\n2 1 7\n''') == '3'\nassert solution('''\ndfcbbcfeeedbaea\n15\n1 6 e\n1 4 b\n2 6 14\n1 7 b\n1 12 c\n2 6 8\n2 1 6\n1 7 c\n1 2 f\n1 10 a\n2 7 9\n1 10 a\n1 14 b\n1 1 f\n2 1 11\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4512,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"abacaba\") == \"3\"\nassert solution(\"dfcbbcfeeedbaea\") == \"5\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873296'\nassert solution('''386592714\n154873296\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873296'\nassert solution('''729641835\n386592714\n154873296\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873296'\nassert solution('''863725149\n386592714\n154873296\n729641835\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873296'\nassert solution('''975314628\n386592714\n154873296\n863725149\n412968357\n631457982\n729641835\n247189563\n598236471\n''') == '154873296'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '154873296'\nassert solution('2') == '336592714'\nassert solution('3') == '729645835'\nassert solution('4') == '863725149'\nassert solution('5') == '979314628'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873396\\n386592714\\n729641835\\n863725145\\n975314628\\n412968357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873396\\n386592714\\n729641835\\n863725145\\n975314628\\n412968357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873396\\n386592714\\n729641835\\n863725145\\n975314628\\n412968357\\n631457992\\n998236471\\n247789563\"\n\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873396\\n386592714\\n729641835\\n863725145\\n975314628\\n412968357\\n631457992\\n998236471\\n247789563\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457992\\n598236471\\n247789563'",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\\n') == '154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247789563\\n'\nprint('All tests passed!')\n",
        "num_ids_2": 118,
        "num_ids_4": 118
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('154873296') == '154873296'\nassert solution('386592714') == '386592714'\nassert solution('729641835') == '729641835'\nassert solution('863725149') == '863725149'\nassert solution('975314628') == '975314628'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n154873296\\n386592714\\n729641835\\n863725149\\n975314628\\n412968357\\n631457982\\n598236471\\n247189563\") == \"154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\"\n",
        "num_ids_2": 116,
        "num_ids_4": 116
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n336592714\\n729645835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\n\nassert solution('''\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n''') == '154873396\\n386592714\\n729641835\\n863725145\\n979314628\\n412958357\\n631457992\\n998236471\\n247789563\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4513,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"154873296\"\n\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"386592714\"\n\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"863725149\"\n\nassert solution(\"\"\"\n154873296\n386592714\n729641835\n863725149\n975314628\n412968357\n631457982\n598236471\n247189563\n\"\"\") == \"412968357\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3 3\n1 3 1 2\n2 2\n4 4\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n6 3\n1 2 3 4 5 6\n3 2\n4 5\n5 4\n6 6\n4 1\n5 2\n3 4\n2 3\n6 5\n\"\"\") == \"6\"\n\nassert solution(\"\"\"\n6 1\n3 2\n3 3\n3 3\n3 2\n4 3\n3 2\n4 2\n3 3\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n9 1\n1 4\n2 1\n3 2\n4 3\n5 2\n6 1\n7 1\n8 1\n9 2\n10 2\n11 1\n\"\"\") == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5 5\n1 1 1 3 5\n2 3\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"9\"\nassert solution(\"\"\"\n5 5\n1 1 1 3 5\n2 3\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5 5\n1 1 1 3 5\n2 3\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"-1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n\"\"\") == \"6\"\nassert solution(\"\"\"\n5 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 6\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\n\"\"\") == \"-1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4') == '4'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n1 2 3 4 5\\n3 1\\n3 1\\n4 1\\n4 1') == '4'\nassert solution('10 4\\n1 1 1 2 3 2 4 4 5 5 5\\n3 1\\n4 1\\n5 1\\n3 2\\n4 2\\n5 2\\n5 2\\n3 3\\n3 3\\n5 3\\n5 3\\n5 3\\n4 3\\n3 4\\n5 4\\n5 4\\n3 5\\n3 5\\n3 5\\n3 6\\n4 6\\n5 6\\n4 6\\n3 7\\n4 7\\n5 7\\n4 7\\n3 8\\n3 8\\n5 8\\n5 8\\n5 8\\n4 8\\n5 8\\n4 8\\n5 8\\n5 8\\n5 8\\n5 8\\n4 8\\n5 8\\n5 8\\n4 8\\n3 9\\n4 9\\n5 9\\n5 9\\n5 9\\n4 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n4 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\n5 9\\",
        "num_ids_2": 862,
        "num_ids_4": 862
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2\\n1 1 1 3 5 3 5 7\\n3 1') == '3'\nassert solution('2 4\\n1 1 1 3 5 3 5 7\\n3 1') == '6'\nassert solution('3 2\\n1 1 1 3 5 3 5 7\\n3 1') == '9'\nassert solution('4 2\\n1 1 1 3 5 3 5 7\\n3 1') == '4'\nassert solution('5 2\\n1 1 1 3 5 3 5 7\\n3 1') == '-1'\n",
        "num_ids_2": 50,
        "num_ids_4": 100
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"3\"\nassert solution([[\"1\", \"1\", \"1\", \"3\", \"5\", \"3\", \"5\", \"3\", \"7\"], [\"3\", \"1\"], [\"1\", \"5\"], [\"3\", \"4\"], [\"7\", \"3\"], [\"1\", \"8\"], [\"1\", \"9\"], [\"1\", \"4\"]]) == \"6\"\nassert solution([[\"1\", \"1\", \"1\", \"3\", \"5\", \"3\", \"5\", \"3\", \"7\"], [\"3\", \"1\"], [\"1\", \"5\"], [\"3\", \"4\"], [\"7\", \"3\"], [\"1\", \"8\"], [\"1\", \"9\"], [\"1\", \"4\"]], 5) == \"4\"\nassert solution([[\"1\", \"1\", \"1\", \"3\", \"5\", \"3\", \"5\", \"3\", \"7\"], [\"3\", \"1\"], [\"1\", \"5\"], [\"3\", \"4\"], [\"7\", \"3\"], [\"1\", \"8\"], [\"1\", \"9\"], [\"1\", \"4\"]]) == \"-1\"\nassert solution([[\"1\", \"1\", \"1\", \"3\", \"5\", \"3\", \"5\", \"3\", \"7\"], [\"3\", \"1\"], [\"1\", \"5\"], [\"3\", \"4\"], [\"7\", \"3\"], [\"1\", \"8\"], [\"1\", \"9\"], [\"1\", \"4\"]], 8) == \"5\"\n",
        "num_ids_2": 86,
        "num_ids_4": 244
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 5\n1 1 1 3 5 3 5 7\n3 1\n1 5\n3 4\n7 3\n1 8\n1 9\n\"\"\") == \"8\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4514,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"3\\n6\\n8\\n-1\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\"\nassert solution(\"3 3 2 2\\n3 3 3 3\\n3 2 2 3\\n\") == \"NO\"\nassert solution(\"10 10 10 10\\n1 1 1 1\\n10 10 10 10\\n1 1 1 1\\n\") == \"YES\"\nassert solution(\"5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\"\nassert solution(\"5 3 2 8\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\\n\") == \"YES\"\n",
        "num_ids_2": 67,
        "num_ids_4": 140
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES', \"Should be YES\"\nassert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'NO', \"Should be NO\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 2 8\") == \"YES\"\nassert solution(\"100 101 102 105\") == \"YES\"\nassert solution(\"3 2 1 100000000\") == \"NO\"\nassert solution(\"10 20 15 14\") == \"YES\"\nassert solution(\"101 101 101 3\") == \"NO\"\n\n\n=======\nThe number of coins Alice has equals to the number of coins Barbara has and the number of coins Cerene has. In other words, if Polycarp gives $A$ coins to Alice, $B$ coins to Barbara and $C$ coins to Cerene ($A+B+C=n$), then $a + A = b + B = c + C$.\n\nNote that A, B or C (the number of coins Polycarp gives to Alice, Barbara and Cerene correspondingly) can be 0.\n\nYour task is to find out if it is possible to distribute all $n$ coins between sisters in a way described above.\n\nYou have to answer $t$ independent test cases.\n\n\n-----Input-----\n\nThe first line of the input contains one integer $t$ ($1 \\le t \\le 10^4$) \u2014 the number of test cases.\n\nThe next $t$ lines describe test cases. Each test case is given on a new line and consists of four space-separated integers $a, b, c$ and $n$ ($1 \\le a, b, c, n \\le 10^8$) \u2014 the number of coins Alice has, the number of coins Barbara has, the number of coins Cerene has and the number of coins Polycarp has.\n\n\n-----Output-----\n\nFor each test case, print \"YES\" if Polycarp can distribute all $n$ coins between his sisters and \"NO\" otherwise.\n\n\n-----Example-----\nInput\n5\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\nOutput\nYES\nYES\nNO\nNO\nYES\n\n\n>>>>>>> Stashed changes\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '5 3 2 8'\n    ) == 'YES'\nassert solution(\n    '100 101 102 105'\n    ) == 'YES'\nassert solution(\n    '10 20 15 14'\n    ) == 'NO'\nassert solution(\n    '101 101 101 3'\n    ) == 'YES'\nassert solution(\n    '10 10 10 10'\n    ) == 'YES'",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"YES\"\nassert solution(\n    \"\"\"\n3 2 1 100000000\n10 20 15 14\n\"\"\") == \"NO\"\nassert solution(\n    \"\"\"\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n\"\"\") == \"YES\"\nassert solution(\n    \"\"\"\n1 1 1 1\n1 1 1 1\n\"\"\") == \"YES\"\nassert solution(\n    \"\"\"\n2 3 4 5\n10 20 30\n10 20 30\n\"\"\") == \"YES\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == \"YES\\nYES\\nNO\\nNO\\nYES\"\nassert solution('''\n2 3 1 10\n100 101 102 105\n10 20 15 14\n101 101 101 3\n''') == \"YES\\nNO\\nNO\\nNO\\nNO\"\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"2 3 2 7\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"NO\"\nassert solution(\"5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"NO\"\nassert solution(\"5 3 2 8\\n100 101 102 105\\n3 2 1 100000000\\n10 20 15 14\\n101 101 101 3\") == \"YES\"\n",
        "num_ids_2": 88,
        "num_ids_4": 164
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3 2 8\\n\") == \"YES\"\nassert solution(\"100 101 102 105\\n\") == \"YES\"\nassert solution(\"10 20 15 14\\n\") == \"NO\"\nassert solution(\"101 101 101 3\\n\") == \"YES\"\nassert solution(\"10 20 15 14\\n\") == \"NO\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4515,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 2 8\n100 101 102 105\n3 2 1 100000000\n10 20 15 14\n101 101 101 3\n''') == 'YES'\nassert solution('''\n2 3 2 3\n3 2 1 3\n3 3 3 3\n2 2 1 2\n2 3 1 3\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 5\n2 1 5 3 5\n''') == '3 3 \n\nassert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5 \n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4\\n1 2 3 4\\n') == '3 4 6 5 \nassert solution('5 5\\n2 1 5 3 5\\n') == '9 8 12 6 8 \nassert solution('2 10\\n1 2 1 1 2 2 2 2 2 2 2\\n') == '3 3 \n",
        "num_ids_2": 46,
        "num_ids_4": 73
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\n1 2 3 4\n''') == '3 4 6 5'\n\nassert solution('''5 5\n2 1 5 3 5\n''') == '9 8 12 6 8'\n\nassert solution('''2 10\n1 2 1 1 2 2 2 2 2 2\n''') == '3 3 ",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\\n1 2 1 1 2 2 2 2 2 2\\n\") == \"3 3 ",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 4\") == \"3 4 6 5\"\nassert solution(\"5 5\") == \"9 8 12 6 8\"\nassert solution(\"2 10\") == \"3 3\"\n",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 2') == '3 4 6 5 \n\nassert solution('5 5') == '9 8 12 6 8 \n\nassert solution('4 2') == '3 3 \n\nassert solution('1 1') == '1 2 \n\nassert solution('2 1') == '1 1\n",
        "num_ids_2": 29,
        "num_ids_4": 53
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\") == \"3 4 6 5\"\nassert solution(\"5 5\") == \"9 8 12 6 8\"\nassert solution(\"2 10\") == \"3 3\"",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 5\n2 1 5 3 5\n\n''') == '3 3 \n\nassert solution('''\n4 4\n1 2 3 4\n\n''') == '3 4 6 5 \n\nassert solution('''\n5 5\n2 1 5 3 5\n\n''') == '9 8 12 6 8 ",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''\n4 4\n1 2 3 4\n\n'''\n) == '3 4 6 5 \n\nassert solution(\n'''\n5 5\n2 1 5 3 5\n\n'''\n) == '9 8 12 6 8 \n\nassert solution(\n'''\n2 10\n1 2 1 1 2 2 2 2 2 2\n\n'''\n) == '3 3 \n\nassert solution(\n'''\n10 10\n1 2 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4516,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 4') == '3 4 6 5'\nassert solution('5 5') == '9 8 12 6 8'\nassert solution('2 10') == '3 3'\n",
        "num_ids_2": 29,
        "num_ids_4": 41
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution(\n'''\n10 4\n2 3\n2 1\n2 5\n4 3\n4 1\n4 7\n1 4\n1 5\n2 7\n5 4\n5 7\n''') == 'YES'\nassert solution(\n'''\n10 4\n2 3\n2 1\n2 5\n4 3\n4 1\n4 7\n1 4\n1 5\n2 7\n5 4\n5 7\n''') == 'NO'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 2\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"7 3\") == \"YES\\nYES\\nYES\\nNO\\nNO\\nNO\"\nassert solution(\"9 2\") == \"YES\\nYES\\nYES\\nNO\\nNO\\nNO\"\nassert solution(\"6 2\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 10\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nNO\"\n",
        "num_ids_2": 52,
        "num_ids_4": 104
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n\"\"\"\n) == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nprint(solution(\n\"\"\"\n6 7\n2 3\n1 5\n1 4\n1 6\n1 7\n4 5\n3 6\n2 4\n3 5\n2 4\n3 5\n4 7\n\"\"\"\n))\nassert solution(\n\"\"\"\n6 7\n2 3\n1 5\n1 4\n1 6\n1 7\n4 5\n3 6\n2 4\n3 5\n2 4\n3 5\n4 7\n\"\"\"\n) == \"NO\\nNO\\nNO\\nNO\\nNO\\nNO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\nassert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('7 4\\n2 4\\n5 7\\n1 5\\n2 6\\n6 2\\n3 3\\n6 8\\n4 1\\n1 6\\n3 5\\n2 6\\n5 4') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('7 4\\n2 4\\n5 7\\n1 5\\n2 6\\n6 2\\n3 3\\n6 8\\n4 1\\n1 6\\n3 5\\n2 6\\n5 4') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\nassert solution('7 4\\n2 4\\n5 7\\n1 5\\n2 6\\n6 2\\n3 3\\n6 8\\n4 1\\n1 6\\n3 5\\n2 6\\n5 4') == 'YES\\nYES\\nYES\\nYES\\nNO\\nNO'\n",
        "num_ids_2": 161,
        "num_ids_4": 322
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10\n6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n6\n2\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'NO'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\nassert solution(\"10 6\\n1 2\\n1 3\\n1 4\\n2 5\\n2 6\\n3 7\\n7 8\\n7 9\\n9 10\\n4 3 8 9 10\\n3 2 4 6\\n3 2 1 5\\n3 4 8 2\\n2 6 10\\n3 5 4 7\\n\") == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 200,
        "num_ids_4": 200
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n10 6\n1 2\n1 3\n1 4\n2 5\n2 6\n3 7\n7 8\n7 9\n9 10\n4 3 8 9 10\n3 2 4 6\n3 2 1 5\n3 4 8 2\n2 6 10\n3 5 4 7\n''') == 'YES'\nassert solution('''\n4 4\n1 3\n1 2\n2 3\n2 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4517,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\\nYES\\nYES\\nYES\\nNO\\nNO\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\n\"\"\".strip()\n\n\nassert solution(\"\"\"\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\"\"\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nYES\\n1 2\\n1 3\\n1 4\\nYES\n\"\"\".strip()\n\n\nassert solution(\"\"\"\n3\n1 2 3\n2 3 4\n3 4 5\n\"\"\") == \"NO\\nYES\\nYES\\nYES\n\"\"\".strip()\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES\\n1 2\\n1 3\\n1 4\\nNO\\nYES",
        "num_ids_2": 1409,
        "num_ids_4": 1409
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\n\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\nassert solution('''6\n10\n10 10 4 6 7 3 6 8 7 6 6\n6\n3 4 5 6 7 8 9 6 6 5 6\n7\n5 4 5 5 5 5 5 4 5 4\n6\n7 7 7 7 7 7 6 7 7\n5\n3 5 5 5 5 5 5 5 5\n6\n7 7 7 7 7 7 6 7 7\n6\n3 5 5 5 5 5 5 5 5\n4\n4 4 4 4 4 4 4 4 4\n5\n6 7 7 7 7 7 6 7 7\n7\n6 6 6 6 6 6 6 6 6\n5\n2 5 5 5 5 5 5 5 5\n3\n7 7 7 7 7 7 7 7 7\n8\n6 6 6 6 6 6 6 6 6\n5\n2 5 5 5 5 5 5 5 5\n9\n7 7 7 7 7 7 7 7 7\n6\n2 5 5 5 5 5 5 5 5\n3\n5 5 5 5 5 5 5 5 5\n6\n1 1 1 1 1 1 1 1 1\n3\n1 1 1 1 1 1 1 1 1\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\n'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\\n4\\n1 2 2 1 3\\n3\\n1 1 1\\n4\\n1 1000 101 1000\\n4\\n1 2 3 4\\n\") == \"YES\\n1 3\\n3 5\\n5 4\\n1 2\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n\"\n",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == 'YES'\nassert solution('''\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n''') == 'YES'\nassert solution('''\n3\n1 1 1\n1 1 1\n1 1 1\n''') == 'YES'\nassert solution('''\n4\n1 2 3 4\n1 1 1\n1 1 1\n1 1 1\n''') == 'NO'\nassert solution('''\n3\n1 2 3\n1 1 1\n1 1 1\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 26
    },
    {
        "number": 4518,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n5\n1 2 2 1 3\n3\n1 1 1\n4\n1 1000 101 1000\n4\n1 2 3 4\n\n''') == 'YES\\n1 3\\n3 5\\n5 4\\n1 2\\nNO\\nYES\\n1 2\\n2 3\\n3 4\\nYES\\n1 2\\n1 3\\n1 4\\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n5 5\\n11011010\") == \"01011110\"\nassert solution(\"3\\n5 9\\n11011010\") == \"01011110\"\nassert solution(\"3\\n5 9\\n11011010\") == \"01011110\"\n",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 2\n11011010''') == '01011110'\nassert solution('''3 1\n0110''') == '01011110'\nassert solution('''3 2\n0111''') == '01011110'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"01011110\"\nassert solution() == \"0101111\"\nassert solution() == \"0011111\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''3\n8 5\n11011010\n7 9\n1111100\n''') == '0101111'\nassert solution('''10\n1\n0\n''') == '01011110'\nassert solution('''10\n2\n0\n''') == '0011111'",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 12\n1111100\n7 13''') == '01011110'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n3 5\n1111100\n7 11\n1111100\n7 11\n1111100\n7 11\n1111100''') == '0111011'\n\nassert solution('''3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n7 11\n1111100\n7 11\n1111100''') == '0101111'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n'''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n'''\n) == '01011110', 'First test case'\nassert solution(\n'''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n'''\n) == '0101111', 'Second test case'\nassert solution(\n'''\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n'''\n) == '0011111', 'Third test case'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n6 2\n10100100\n11100\n1000111\n1 2\n''') == '00110110'\n\nassert solution('''\n3\n3 2\n101\n11\n1 2\n''') == '0101'\n\nassert solution('''\n1\n10\n11\n''') == '1101'\n\nassert solution('''\n5\n8 9\n11010100\n110110001\n0101111011\n111111110\n1110001011\n11011110001\n11011010011\n11100010011\n11100010111\n01011111111\n''') == '00010001111'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '01011110'\nassert solution('''3\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0101111'\nassert solution('''1\n8 5\n11011010\n7 9\n1111100\n7 11\n1111100\n''') == '0011111'\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4519,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"01011110\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\nassert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 2\n11 11\n9 11\n7 8\n8 9\n7 8\n9 11\n7 9\n''') == '3'\nassert solution('''\n5 1\n29 30\n30 30\n29 29\n28 30\n30 30\n''') == '4'\nassert solution('''\n6 1\n2 3\n3 3\n2 3\n2 2\n2 3\n2 3\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()[:-1]\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 2') == '3'\nassert solution('5 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3\n3 5\n3 5\n3 5\n3 5\n''') == '4'\nassert solution('''\n2 1\n10 10\n10 10\n''') == '2'\nassert solution('''\n1 1\n1 1\n''') == '2'\n\nstdin = '''\n3 1\n10 10\n10 10\n'''\nprint(solution(stdin))",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4520,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 1\") == \"3\"\nassert solution(\"4 3\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n1\n1 2\n-1 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n3 5 2 4 1\n-2 4 -4 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n2 1 2 3 3\n-5 -5 2 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n2\n-1 2\n-3 0\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''\n3\n1 3 2\n-100 2 3\n''') == '4'\nassert solution('''\n2\n2 1\n-3 0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"19\"\nassert solution(\"10\") == \"18\"\nassert solution(\"50\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '19'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 3 2\n-100 2 3\n''') == '3'\nassert solution('''5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n1 3 2\n-100 2 3\n''') == \"3\"\nassert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == \"19\"\nassert solution('''\n3\n1 3 2\n-100 2 3\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '19'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n2 1 4 3 5\n2 2 2 3 4\n''') == '19'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4521,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3', 'First example'\n\nassert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '1 3 3', 'Second example'\n\nassert solution('''\n1 2\n1 2\n''') == '0 0', 'Third example'\n\nassert solution('''\n1\n1\n''') == '0 0', 'Fourth example'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 5\\n1 2 1\\n3 2 3\\n2 4 1\\n4 5 2\\n5 7 4\\n3 6 2\\n5 2 3 4 1\\n') == '21 7 15 21 3'\nassert solution('3 3\\n1 2 1\\n2 3 2\\n1 3 2\\n') == '1 3 3'\n",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\"\"\") == \"21 7 15 21 3 \n\nassert solution(\"\"\"\n3 2\n1 2 1\n2 3 2\n1 3 2\n\"\"\") == \"1 3 3 \n\nassert solution(\"\"\"\n1 2\n1 2\n\"\"\") == \"0 0 \n\nassert solution(\"\"\"\n5 2\n1 2 1\n2 3 2\n1 3 2\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\"\"\") == \"1 3 3 \n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3'\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '21 7 15 21 3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3'\n\n'''\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0434\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ (1 \\le n \\le 2 \\cdot 10^5) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0433\u0440\u0430\u0444\u0435.\n\n\u0414\u0430\u043b\u0435\u0435 \u0438\u0434\u0435\u0442 \u043f\u043e $n - 1$ \u0441\u0442\u0440\u043e\u043a\u0430\u043c\u0438. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u0430\u0440\u0430 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0434\u0432\u0443\u0445 \u0432\u0435\u0440\u0448\u0438\u043d (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0442 1 \u0434\u043e $n$). \u0414\u0430\u043b\u0435\u0435 \u0438\u0434\u0435\u0442 \u043f\u043e $n - 1$ \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0442\u0440\u0435\u0442\u044c\u0435\u0433\u043e \u0432\u0435\u0440\u0448\u0438\u043d\u0430 \u0438 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0434\u043b\u0438\u043d\u044b \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u043f\u0430\u0440.\n\n\u0417\u0430\u043c\u0435\u0442\u044c\u0442\u0435, \u0447\u0442\u043e \u0432\u0435\u0440\u0448\u0438\u043d\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u044b \u0434\u0432\u0430\u0436\u0434\u044b.\n\n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0441\u043b\u0435\u0434\u0443\u044e\u0442 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u043f\u043e\u0438\u0441\u043a\u0430 \u043f\u0430\u0440\u044b \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432. \u041f\u043e\u0438\u0441\u043a \u0438\u0434\u0435\u0442 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u0440\u044b \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432, \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043a\u0430\u043a \u0432\u0435\u0440\u0448\u0438\u043d\u0430\u043c\u0438 \u0433\u0440\u0430\u0444\u0430, \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043b\u0438\u043d\u0430 \u043f\u0430\u0440\u044b \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432. \u0418\u043d\u0434\u0435\u043a\u0441\u044b \u043d\u0435 \u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f.\n\n\u041f\u0430\u0440\u0430\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u044b \u0434\u0432\u0430\u0436\u0434\u044b.\n\n\u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043c\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u043f\u0430\u0440.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ (1 \\le n \\le 2 \\cdot 10^5) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0433\u0440\u0430\u0444\u0435.\n\n\u0414\u0430\u043b\u0435\u0435 \u0438\u0434\u0435\u0442 \u043f\u043e n - 1 \u0441\u0442\u0440\u043e\u043a\u0430\u043c, \u043e\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432.\n\n\u041f\u0430\u0440\u0430\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u044b \u0434\u0432\u0430\u0436\u0434\u044b.\n\n\u041f\u0430\u0440\u0430\u043c\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0438\u0434\u0443\u0442 \u043f\u043e \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u043d\u043e\u043c\u0443 \u043f\u043e\u0440\u044f\u0434\u043a\u0443. \u0412\u0435\u0440\u0448\u0438\u043d\u044b \u0438\u0434\u0443\u0442 \u0441 \u043d\u0443\u043b\u044f. \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u2014 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435.\n\n\u0412 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u0441\u044f \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043c\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0434\u043b\u044f \u044d\u0442\u0438\u0445 \u043f\u0430\u0440.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ (1 \\le n \\le 2 \\cdot 10^5) \u2014 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0433\u0440\u0430\u0444\u0435.\n\n\u0414\u0430\u043b\u0435\u0435 \u0438\u0434\u0435\u0442 \u043f\u043e $n - 1$ \u0441\u0442\u0440\u043e\u043a\u0430\u043c. \u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n\"\"\") == \"21 7 15 21 3\"\nassert solution(\"\"\"\n1 2\n1 2\n\"\"\") == \"0 0 \n\"\"\") == \"0 0 \n\"\"\") == \"0 0 \n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 5') == '21 7 15 21 3'\n\n\nfrom itertools import combinations\n\nn, m = map(int, input().split())\ng = [[] for _ in range(n)]\nfor i in range(n - 1):\n    u, v, w = map(int, input().split())\n    u -= 1\n    v -= 1\n    g[u].append((v, w))\n    g[v].append((u, w))\n\nfor query in range(m):\n    a, b, c = map(int, input().split())\n    ans = 0\n    for i in range(n):\n        u, v, w = g[i]\n        for j in combinations(v, a):\n            ans += w\n    print(ans)\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    7 5\n    1 2 1\n    3 2 3\n    2 4 1\n    4 5 2\n    5 7 4\n    3 6 2\n    5 2 3 4 1\n''') == '21 7 15 21 3'\n\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4522,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3 \n\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3 \n\nassert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '21 7 15 21 3 \n\nassert solution('''\n3 3\n1 2 1\n2 3 2\n1 3 2\n''') == '1 3 3 \n\nassert solution('''\n7 5\n1 2 1\n3 2 3\n2 4 1\n4 5 2\n5 7 4\n3 6 2\n5 2 3 4 1\n''') == '1 3 3 ",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5\\n1 2 2\\n4\\n5 5 5 5') == 'YES\\nYES\\nYES'\nassert solution('2\\n3\\n1 2 4\\n4\\n1 3 4 4\\n1') == 'NO\\nNO\\nYES'",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\nYES\"\n\nassert solution(\"4\\n5 5 5 5\") == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('3') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('1 2 2') == 'YES'\nassert solution('4') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n\nassert solution('''\n2\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\n\nassert solution('''\n1\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\n\nassert solution('''\n1\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n3\n3\n1 2\n2\n3\n1\n3\n1\n100\n''') == 'YES'\nassert solution('''\n3\n2\n1 2\n2\n3\n1\n2\n1\n100\n''') == 'NO'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'YES'\nassert solution('''\n5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\n\nassert solution('''\n3\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\n\nassert solution('''\n3\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"YES\"\n\nassert solution('''\n3\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"NO\"\n\nassert solution('''\n3\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100\n''') == \"NO\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n1 2 2\n4\n5 5 5 5\n3\n1 2 4\n4\n1 3 4 4\n1\n100''') == 'YES'\nassert solution('''5\n4\n2 3 4 5\n1\n1 2 3 4\n1\n1 3\n1 4''') == 'YES'\nassert solution('''5\n4\n1 2 4\n3\n1 3\n1\n1 3''') == 'NO'\nassert solution('''5\n2\n1 2\n1\n1 2''') == 'NO'\nassert solution('''3\n1\n1 2\n1\n1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4523,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\\n3\\n1 2 2\") == \"YES\\nYES\\nNO\"\nassert solution(\"5\\n4\\n5 5 5 5\") == \"YES\\nYES\\nYES\\nYES\\nYES\"\nassert solution(\"5\\n4\\n5 5 5 5\") == \"NO\"\nassert solution(\"5\\n3\\n1 2 4\") == \"YES\"\nassert solution(\"5\\n100\\n\") == \"YES\"",
        "num_ids_2": 55,
        "num_ids_4": 92
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 4\n1010\n1101\n''') == '12'\nassert solution('''4 5\n1001\n10101\n''') == '11'\nprint(solution('''3\n11\n3\n'''))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\nassert solution(\"5 5\") == \"11\"\nassert solution(\"10 10\") == \"1010\"",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4 4\n1010\n1101\n''') == '12'\n\nassert solution('''\n4 5\n1001\n10101\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 4\") == \"12\"\nassert solution(\"4 5\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4\\n1000000001\\n1000000001') == '11'\nprint(solution('2 4\\n1000000001\\n1000000001'))\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 4\\n1010\\n1101\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\") == \"11\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 4\\n1010\\n1101\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\") == \"11\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(INPUT_S) == '12'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 4\\n1010\\n1101\") == \"12\"\nassert solution(\"4 5\\n1001\\n10101\") == \"11\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4524,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"4 4\\n1010\\n1101\\n\"\n) == \"12\"\n\nassert solution(\n    \"4 5\\n1001\\n10101\\n\"\n) == \"11\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n2\n4\n6\n8\n10\n''') == \"NO\\n2 4 1 5\\nNO\\nYES\\n2 4 6 8 1 3 5 11\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"0\") == \"NO\"\nassert solution(\"1\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n4\n6\n8\n10\n''') == 'YES'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n4\n''') == \"YES\"\nassert solution('''\n2\n5\n''') == \"NO\"\nassert solution('''\n3\n7\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n\"\"\"\n3\n2\n3\n1\n\"\"\") == \"NO\"\nassert solution(\n\"\"\"\n3\n4\n3\n1\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n4\n2\n6\n8\n10\n\"\"\") == \"YES\"\nassert solution(\n\"\"\"\n5\n8\n10\n12\n15\n\"\"\") == \"YES\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n4\n6''') == 'NO'\nassert solution('''5\n4\n6\n8\n10''') == 'YES'\nassert solution('''5\n10\n18\n24\n33''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'NO'\nassert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''\n4\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''\n10\n2\n4\n6\n8\n10\n''') == 'YES'\nassert solution('''\n5\n2\n4\n6\n8\n10\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n4\n6\n8\n10''') == 'NO'\nassert solution('''5\n2\n4\n6\n8\n10''') == 'YES'\nassert solution('''5\n6\n4\n8\n10\n7''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"NO\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"2\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"7\") == \"NO\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4525,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n2\n4\n6\n8\n10\n\n''') == \"NO\"\nassert solution('''\n5\n2\n4\n6\n8\n10\n\n''') == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\"\"\") == \"1\"\nassert solution(\"\"\"\n3\n7\n1 2 3 4 5 6 7\n1\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n7\n1 1 1 1 1 1 1\n1\n2\n\"\"\") == \"0\"\nassert solution(\"\"\"\n4\n7\n1 1 2 3 4 5 6\n1\n2\n3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n9\\n3 1 4 1 5 9 2 6 5\\n3\\n1 1 2\") == \"1\\n0\\n4\\n0\\n\"\nassert solution(\"4\\n2 2 2 2\\n1\\n1\") == \"1\\n0\\n1\\n0\\n\"",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2''') == '1'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2''') == '0'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2''') == '4'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2''') == '0'\nassert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n2 4 6 9\n3\n1 4 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n''') == '5'\nassert solution('''\n5\n8\n8 7 6 5 4 3 2 1\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n''') == '0'\nassert solution('''\n3\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n''') == '4'\nassert solution('''\n5\n8\n8 7 6 5 4 3 2 1\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n\n''') == '1'\n",
        "num_ids_2": 13,
        "num_ids_4": 25
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4526,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n9\n3 1 4 1 5 9 2 6 5\n3\n1 1 2\n5\n1 1 1 1 1\n8\n8 7 6 5 4 3 2 1\n1\n1\n''') == '5'\nassert solution('''\n6\n10\n0 1 2 4 5 7 8 9\n2\n4 1\n4 2\n4 4\n4 1\n1\n''') == '0'\nassert solution('''\n7\n10\n0 1 2 3 4 5 6 7 8 9\n2\n2 2\n2 4\n2 1\n1\n2\n1\n2\n1\n2\n1\n''') == '1'\nassert solution('''\n5\n1\n2\n3\n4\n5\n6\n7\n''') == '0'\nassert solution('''\n5\n6\n4\n2\n4\n2\n8\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\nassert solution('''\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n6\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\nassert solution('''\n5\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '3'\nassert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\nassert solution('''\n2\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == '3'\nassert solution(solution.__doc__) == '4'\nassert solution(solution.__doc__) == '2'\nassert solution(solution.__doc__) == '7'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4') == '3'\nassert solution('4') == '4'\nassert solution('4') == '2'\nassert solution('4') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"3\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '3', 'First'\nassert solution('''\n2\n5 6\n5 6\n4 3\n3 6\n1 4\n2 5\n4 6\n''') == '2', 'Second'\nassert solution('''\n2\n5 6\n5 6\n4 3\n3 6\n1 4\n2 5\n4 6\n''') == '2', 'Third'\nassert solution('''\n7\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9\n9 10\n10 11\n11 12\n12 13\n13 14\n13 15\n14 16\n15 17\n17 18\n18 19\n19 20\n19 21\n20 22\n21 23\n21 24\n21 25\n''') == '12', 'Fourth'\nassert solution('''\n3\n1 5\n2 4\n2 3\n3 4\n5\n1 5\n2 3\n2 5\n3 5\n2 2\n3\n1 3\n2 4\n2 3\n7\n1 10\n2 8\n2 5\n3 4\n4 4\n6 8\n7 7\n''') == '4', 'Fifth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4527,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('4') == '2'\nassert solution('5') == '4'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '10'\nassert solution('1') == '0'\nassert solution('2') == '5760'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"60\"\nassert solution(\"5\") == \"1439\"\nassert solution(\"12\") == \"1180\"",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n23 55\\n23 0\\n0 1\\n4 20\\n23 59\\n') == '60\\n1439\\n1180\\n1\\n'\n\n\n'''",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '60'\nassert solution('''1\n0 1\n0 1\n''') == '1439'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == '60'\nassert solution('''\n2\n1 1\n''') == '1439'\nassert solution('''\n3\n1 1\n''') == '1180'\nassert solution('''\n4\n1 1\n''') == '1'\nassert solution('''\n5\n1 1\n''') == '1439'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1\n1 1\n1 1\n''') == '''1\n1\n1\n'''\nassert solution('''3\n0 0\n0 0\n0 0\n''') == '''1439\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1180\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"60\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"60\"\nassert solution(__import__('sys').stdin.read()) == \"1439\"\nassert solution(__import__('sys').stdin.read()) == \"1180\"\nassert solution(__import__('sys').stdin.read()) == \"1\"",
        "num_ids_2": 39,
        "num_ids_4": 78
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n23 55\n23 0\n0 1\n4 20\n23 59\n''') == \"60\"\nassert solution('''\n5\n10 00\n10 59\n''') == \"1439\"\nassert solution('''\n4\n13 16\n12 0\n4 19\n11 48\n''') == \"1180\"\nassert solution('''\n6\n00 30\n13 0\n00 14\n0 19\n00 3\n''') == \"1\"\nassert solution('''\n8\n00 0\n0 0\n0 0\n0 0\n0 0\n''') == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4528,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1 4'\nassert solution('4\\nRRU') == '1 4'\nassert solution('4\\nLRUD') == '1 2'\nassert solution('5\\nRRUDU') == '3 4'\nassert solution('5\\nLLDDR') == '1 4'\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == '1 2'\nassert solution('5') == '3 4'\nassert solution('4') == '1 2'\nassert solution('5') == '3 4'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '2 3'\nassert solution('4') == '2 4'\nassert solution('5') == '1 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"1 2\"\nassert solution(\"3\\n4\") == \"1 4\"\nassert solution(\"5\\n6\") == \"3 4\"\nassert solution(\"7\\n8\") == \"0 1\"\nassert solution(\"9\\n10\") == \"3 4\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1 2'\nassert solution() == '3 4'\nassert solution() == '-1'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n' + 'LRUD\\n' + '4\\n' + 'LURD\\n') == '1 2'\nassert solution('5\\n' + 'RRUDU\\n' + '5\\n' + 'LLDDR\\n') == '3 4'\nassert solution('6\\n' + 'LLDDR\\n' + '6\\n' + 'LLDDD\\n') == '-1'\nassert solution('3\\n' + 'RRDDU\\n' + '3\\n' + 'LLDDR\\n') == '2 4'\nassert solution('0\\n' + 'LLDDR\\n' + '0\\n' + 'LLDDD\\n') == '-1'\n",
        "num_ids_2": 69,
        "num_ids_4": 139
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1 2'\nassert solution(input()) == '1 4'\nassert solution(input()) == '3 4'\nassert solution(input()) == '-1'\n\n\n----Hints----\n---\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\nRUR\n2\nURD''') == '1 3'\nassert solution('''3\n3\nRU\n3\nURD''') == '1 2'\nassert solution('''4\n3\nRUD\n3\nUDR''') == '2 1'\nassert solution('''5\n4\nRLUD\n4\nUDRD''') == '3 3'\nassert solution('''5\n4\nRLUD\n4\nRUDR''') == '2 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '1 2'\nassert solution('5') == '3 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4529,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '4'\nassert solution('4') == '1 2'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('2') == '1 4'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3') == '3'\nassert solution('4\\n5\\n2 1 5 4 3\\n1\\n1\\n4\\n1 1 1 3') == '0'\nassert solution('3\\n1\\n1\\n4') == '2'\n",
        "num_ids_2": 67,
        "num_ids_4": 86
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n5\n2 1 5 4 3\n5\n2 1 5 4 3\n''') == '1'\nassert solution('''\n1\n5\n2 1 5 4 3\n''') == '0'\nassert solution('''\n5\n4\n2 1 5 4 3\n''') == '2'\nassert solution('''\n2\n3\n2 3\n''') == '1'\nassert solution('''\n3\n3\n2 2\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n5\n2 2 3 3\n''') == '1'\nassert solution('''\n3\n5\n3 3 3 3\n''') == '0'\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == '2'\nassert solution('4') == '1'\nassert solution('10') == '2'\nassert solution('11') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\\n7\\n4 2 4 1 4 3 4\") == \"3\"\nassert solution(\"4\\n5\\n1 5 1 5 4 3\") == \"1\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '1'\nassert solution('''\n5\n5\n1 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''\n5\n6\n1 2 3 1 3\n4\n1 1 1 1\n4\n1 1 1 1\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '3'\nassert solution('''\n4\n7\n4 2 4 1 4 3 4\n5\n2 1 5 4 3\n1\n1\n4\n1 1 1 3\n''') == '2'\nassert solution('''\n3\n4\n3\n4\n3\n4\n''') == '1'\nassert solution('''\n2\n2\n2\n1\n1\n2\n''') == '0'\nassert solution('''\n2\n3\n2\n1\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4530,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n4 2 4 1 4 3 4\\n5\\n2 1 5 4 3') == '3\\n1\\n0\\n2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_1) == '121'\nassert solution(input_2) == '0'\nprint(solution(input_1))\nprint(solution(input_2))\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"8\") == \"121\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"121\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([1]) == '0'\nassert solution([2]) == '0'\nassert solution([3]) == '0'\nassert solution([4]) == '0'\nassert solution([5]) == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"121\"\nassert solution('''\n1\n1337\n''') == \"0\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '0'\nassert solution() == '121'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0'\nassert solution('1\\n9 4 1 7 10 1 6 5') == '121'\nassert solution('1\\n1337') == '0'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4531,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('8') == '121'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '14'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '22'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '29'\n\ninput()\nprint()\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '6'\nassert solution('''5 10\n1 2 1 3\n6 5\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''6 8\n1 2 1 3\n5 4\n1 2 1 3\n5 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '227'\nassert solution('''4 8\n1 2 1 3\n5 4\n1 2 1 3\n5 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"5\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '18'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '0'\nassert solution('''4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '227'\nassert solution('''5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8''') == '8'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"6\"\nassert solution() == \"18\"\nassert solution() == \"0\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '6'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\nassert solution('''\n5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"6\"\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 3\") == \"6\"\nassert solution(\"4 3\") == \"18\"\nassert solution(\"10 6\") == \"227\"\nassert solution(\"5 10\") == \"8\"\nassert solution(\"20 100 50 20 100500\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '18'\nassert solution('''3\n2 3 1\n1 2 3\n2 4 4''') == '0'\nassert solution('''3\n1 2 3\n1 3 5\n5''') == '8'\nassert solution('''5\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24''') == '227'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4532,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 3\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '18'\nassert solution('''\n5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '227'\nassert solution('''\n5 10\n1 2 1 3\n10 6\n8 7 1 8 3 7 5 10 8 9\n5 10\n20 100 50 20 100500\n10 25\n24 24 24 24 24 24 24 24 24 24\n8 8\n1 2 3 4 5 6 7 8\n''') == '8'\n\n'''\nThe array 'a' has the following properties:\n\nAll integers are divisible by 1\nAll integers in the array are less than or equal to 10^9\nThe array has no duplicate integers\n\nIn a single move, you can choose either one of the following two actions:\n\nIncrease the value of any integer by 1.\nIncrease the value of any integer by 1 and increase the value of any integer by 1.\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 1\nassert solution('2') == 2\nassert solution('3') == 3\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2') == '2'\nassert solution('1\\n1') == '1'\nassert solution('1') == '1'\nassert solution('') == ''\n\nINPUT_TEST_CASES = [\n    (['1\\n2\\n3', '1\\n1'], '2'),\n    (['1\\n2', '1\\n2\\n3'], '1'),\n]",
        "num_ids_2": 29,
        "num_ids_4": 52
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 5\n1 2 3\n1 3\n1 5\n2 4\n3 4\n2 5''') == '3'\nassert solution('''4 5\n1 3\n1 4\n1 5\n2 2\n2 5''') == '4'\nassert solution('''5 5\n2 4\n2 5\n3 1\n3 3\n2 5''') == '2'\nassert solution('''2 2\n2 2\n2 2''') == '1'\nassert solution('''3 4\n2 3\n2 2\n1 2''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n1\") == \"1\"\nassert solution(\"1\\n2\") == \"1\"\nassert solution(\"1\\n3\") == \"1\"\nassert solution(\"2\\n3\") == \"2\"\nassert solution(\"3\\n1\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 3\\n') == '2'\nassert solution('1 2\\n') == '1'\nassert solution('1 1\\n') == '2'\nassert solution('3\\n') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2 3\") == \"1\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1,2,3', '1,1') == '1'\nassert solution('1,2', '1,2,3') == '2'\nassert solution('1,2,3', '1,1,1,1,1') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 63
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n1\\n') == '1'\nassert solution('1\\n2\\n') == '2'\nassert solution('1\\n3\\n') == '3'\nassert solution('2\\n3\\n') == '2'\nassert solution('2\\n2\\n') == '2'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4533,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\\n2\\n3\"\nassert solution(\"3\") == \"3\\n3\\n1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([1]) == [1]\nassert solution([1,3,3,1]) == [1,3,3,1]\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1,3,3,1]) == [1,3,3,1]\n\"\"\"\n\nclass Solution:\n    def getRow(self, rowIndex: int) -> List[int]:\n        rows = [1] * (rowIndex + 1)\n        for i in range(2, rowIndex + 1):\n            for j in range(i, 0, -1):\n                rows[j] = rows[j] + rows[j - 1]\n        return rows",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == [1,3,3,1]\n\"\"\"\n\nclass Solution:\n    def generate(self, numRows: int) -> list:\n        \"\"\"\n        :type numRows: int\n        :rtype: List[int]\n        \"\"\"\n        if numRows == 0:\n            return []\n        res = [1]\n        if numRows == 1:\n            return res\n        res.append(1)\n        for i in range(1,numRows):\n            res.append(1)\n            for j in range(i-1,0,-1):\n                res[j] += res[j-1]\n        return res\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n1\n1''') == ['1','1','1']\nassert solution('''1\n1''') == ['1']\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '[1,3,3,1]')\nassert solution('4') == '[1,4,6,4,1]')\nassert solution('5') == '[1,5,10,10,5,1]')\n",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2\n1\n''') == ['1', '2', '1']\nassert solution('''3\n3\n3\n1\n''') == ['1', '3', '3', '1']\nassert solution('''33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33\n33",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1]) == '1\\n'\nassert solution([1,2]) == '1\\n2\\n'\nassert solution([1,2,3,4]) == '1\\n2\\n3\\n4\\n'\nassert solution([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]) == '1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\\n26\\n27\\n28\\n29\\n30\\n31\\n32\\n33\\n'\n",
        "num_ids_2": 29,
        "num_ids_4": 228
    },
    {
        "number": 4534,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n\"\"\"\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        return bin(n).count(\"1\")\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111101\") == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 38
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n'''\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        count = 0\n        while n:\n            count += 1\n            n = n & (n - 1)\n        return count",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('00000000000000000000000000001011') == 3\nassert solution('00000000000000000000000010000000') == 1\nassert solution('111111111111111111111111111111101') == 31\n\"\"\"\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        count = 0\n        while(n):\n            n &= (n-1)\n            count += 1\n        return count\n        \n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11111111111111111111111111111101') == \"31\"\nassert solution
        "num_ids_2": 1715,
        "num_ids_4": 1715
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('11111') == '31'\nassert solution('1011010101101') == '29'\nassert solution('0101101010110011010101010101011001101100') == '42'\n\"\"\"\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        binary = '{:032b}'.format(n)\n        return len(binary.replace('0', ''))",
        "num_ids_2": 27,
        "num_ids_4": 52
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('00000000000000000000000000001011') == '3'\nassert solution('00000000000000000000000010000000') == '1'\nassert solution('111111111111111111111111111111101') == '31'\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00000000000000000000000000001011\") == 3\nassert solution(\"00000000000000000000000010000000\") == 1\nassert solution(\"111111111111111111111111111111101\") == 31\n",
        "num_ids_2": 23,
        "num_ids_4": 39
    },
    {
        "number": 4535,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '3'\n\n\"\"\"\n\nclass Solution:\n    def hammingWeight(self, n: int) -> int:\n        return bin(n).count('1')\n        \n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"101\"\nassert solution(\"12345\") == \"123450\"\nassert solution(\"4177252841\") == \"4297472041\"\nassert solution(\"0\") == \"0\"\nassert solution(\"9999999999999999\") == \"9999999999999999\"\n\"\"\"\n\nclass Solution:\n    def plusOne(self, digits: List[int]) -> List[int]:\n        if len(digits) == 0: return []\n        \n        i = len(digits)-1\n        while i >= 0:\n            if digits[i] < 9:\n                digits[i] += 1\n                return digits\n            else:\n                digits[i] = 0\n            i -= 1\n        \n        if digits[0] == 9:\n            digits.insert(0, 1)\n            return digits\n        else:\n            digits.insert(0, 1)\n            return digits\n            \n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(Input_example) == Output_example\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"[1,2,3]\") == \"[1,2,4]\"\nassert solution(\"[4,3,2,1]\") == \"[4,3,2,2]\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('123') == '124'\nassert solution('4321') == '4322'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['1', '2', '3']) == ['1', '2', '4']\nassert solution(['4', '3', '2', '1']) == ['4', '3', '2', '2']",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input) == output",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"999\") == \"1\"\nassert solution(\"9\") == \"1\"\nassert solution(\"923\") == \"1\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('99') == '100'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example) == result\nassert solution(input) == result",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4536,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1) == '1'\nassert solution(4) == '5'\nassert solution(10000) == '10100'\nassert solution(10) == '11'\nassert solution(1000000) == '1010000'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1') == '4', \"Wrong answer\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3') == '4'\nassert solution('5 2') == '3'\nassert solution('6 9') == '10'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"5 4\") == \"9\"\nassert solution(\"6 5\") == \"13\"\nassert solution(\"0 0\") == \"0\"\nassert solution(\"-1000 -1000\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"2 -2\") == \"2\"\nassert solution(\"1 2 3\") == \"6\"\nassert solution(\"2 4 7\") == \"10\"\nassert solution(\"5 6 5\") == \"10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('1 1') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 1\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1') == '4'\nassert solution('1 1') == '2'\nassert solution('1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4537,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1\") == \"4\"\nassert solution(\"3 -1\") == \"2\"\nassert solution(\"3 \\times 1\") == \"3\"\nassert solution(\"2 4\") == \"5\"\nassert solution(\"1 2\") == \"3\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 5\") == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 1') == '2'\nassert solution('3 1') == '3'\nassert solution('1 2') == '3'\nassert solution('2 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 5') == '3'\nassert solution('7 2') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '3'\nassert solution('5 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 5') == '3'\nassert solution('6 4') == '1'\n\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 5\") == \"3\"\nassert solution(\"15 10\") == \"5\"\nassert solution(\"4 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 5\") == \"3\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 5\n0 5\n-2 4\n3 4\n4 -4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n1 0\n0 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n3 10\n0 5\n-2 4\n3 4\n4 -4\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n10 10\n1 1\n-2 4\n3 4\n4 -4\n\"\"\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4538,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n0 5\\n-2 4\\n3 4\\n4 -4') == '3'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"12\") == \"Yes\", \"Should be Yes\"\nassert solution(\"20\") == \"No\", \"Should be No\"\nassert solution(\"9\") == \"Yes\", \"Should be Yes\"\nassert solution(\"3\") == \"No\", \"Should be No\"\nassert solution(\"55\") == \"Yes\", \"Should be Yes\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == 'Yes'\nassert solution('1') == 'No'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n''') == 'Yes'\nassert solution('''\n6\n''') == 'No'\nassert solution('''\n6\n''') == 'Yes'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12') == 'Yes'\nassert solution('123') == 'No'\nassert solution('12345') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1) == \"Yes\"\nassert solution(12) == \"Yes\"\nassert solution(18) == \"No\"\nassert solution(121212) == \"Yes\"\nassert solution(1111111111) == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == 'Yes', \"Please read the specification/documentation and submit your own implementation\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Yes'\nassert solution('0') == 'No'\nassert solution('12') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12') == \"Yes\"\nassert solution('101') == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == 'Yes'\nassert solution('15') == 'No'\nassert solution('10') == 'Yes'\nassert solution('3') == 'No'\nassert solution('2') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4539,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"Yes\"\nassert solution(\"2\\n\") == \"No\"\nassert solution(\"3\\n\") == \"Yes\"\nassert solution(\"4\\n\") == \"No\"\nassert solution(\"5\\n\") == \"Yes\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n5 -1\\n') == '12\\n8\\n10'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n3 5 -1\n\"\"\") == \"12\"\nassert solution(\"\"\"\n4\n3 5 -1\n\"\"\") == \"8\"\nassert solution(\"\"\"\n4\n3 5 -1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2\n2 5 -1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n2\n2 5 -1\n\"\"\") == \"12\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3 5 -1''') == '12'\nassert solution('''5\n3 5 -1''') == '8'\nassert solution('''10\n5 3 1''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n3 5 -1\\n') == '12\\n8\\n10'\nassert solution('3\\n3 5 -1\\n') == '12\\n8\\n10'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"12\\n8\\n10\"\n\"\"\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"3\\n\"\n    \"3 5 -1\"\n) == \"12\\n\"\nassert solution(\n    \"4\\n\"\n    \"2 4 5 -3\"\n) == \"9\\n\"\nassert solution(\n    \"6\\n\"\n    \"1 2 3 -5 6 -7\"\n) == \"11\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 5 -1') == '12\\n8\\n10\\n'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '12'\nassert solution('6') == '18'\nassert solution('13') == '22'\nassert solution('16') == '13'\nassert solution('17') == '19'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '12\\n8\\n10\\n'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4540,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '12 8 10'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a') == 'vowel'\nassert solution('b') == 'consonant'\nassert solution('d') == 'consonant'\nassert solution('g') == 'consonant'\nassert solution('n') == 'consonant'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('a') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"a\") == \"vowel\"\nassert solution(\"e\") == \"vowel\"\nassert solution(\"i\") == \"vowel\"\nassert solution(\"o\") == \"vowel\"\nassert solution(\"u\") == \"vowel\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4541,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('a') == 'vowel'\nassert solution('e') == 'vowel'\nassert solution('i') == 'vowel'\nassert solution('o') == 'vowel'\nassert solution('u') == 'vowel'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"BBBWW\") == \"1\"\nassert solution(\"BBBBBWW\") == \"2\"\nassert solution(\"BBBBBBWW\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BWBWBW') == '2'\nassert solution('BWBWBWB') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('BBBWW') == '1'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('BBBWW') == '1'\nassert solution('BBBWBBW') == '3'\nassert solution('WWWWWWWWWWWWBWWB') == '5'\nassert solution('WWWWWWWWWWWWBWB') == '5'\nassert solution('WWWWWWWWWWWWBWB') == '5'\n",
        "num_ids_2": 25,
        "num_ids_4": 60
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('BBBWW') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BWWB\") == \"1\"\nassert solution(\"BBBWB\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"BWBWB\") == \"1\"\nassert solution(\"BWBWB\") == \"1\"\nassert solution(\"WWBWB\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4542,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"BBBWW\") == \"1\"\nassert solution(\"WBWBWBWBW\") == \"1\"\nassert solution(\"BBBWWWW\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 10\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 21\\n') == 'Yes'\nassert solution('1 1\\n') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"No\", \"You failed this.\"\nassert solution(\"1 21\") == \"Yes\", \"You failed this.\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 21') == \"Yes\"\nassert solution('1 1') == \"No\"\nassert solution('1 1') == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1\") == \"No\"\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 21') == 'Yes', 'Wrong result'\nassert solution('4 3') == 'No', 'Wrong result'\nprint('You are awesome! All tests are done!')\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 21\") == \"Yes\"\nassert solution(\"1 1\") == \"No\"\nassert solution(\"1 20\") == \"Yes\"\n\"\"\"\n\na, b = [int(x) for x in stdin.split()]\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4543,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 21') == 'Yes'\nassert solution('1 2') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n3 1 4 1 5 9 2\\n') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\") == \"4\"\nassert solution(\"5\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"6\\n3 1 4 1 5 9 2\") == \"4\"\nassert solution(\"6\\n3 1 4 1 5 9 2\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '4'\nassert solution('10') == '6'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"\nprint(solution(input()))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n3 1 4 1 5 9 2\\n') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == \"4\"\nassert solution('1') == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"7\") == \"6\"\nassert solution(\"1\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4544,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7\\n3 1 4 1 5 9 2\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '5'\nassert solution('3') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n4\") == \"5\"\nassert solution(\"5\\n4\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '6'\nassert solution('10') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"5\"\nassert solution(\"5\") == \"10\"\nassert solution(\"100\") == \"4950\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"5\"\nassert solution(\"4\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '5'\nassert solution('3') == '5'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4545,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '5'\nassert solution('4') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 2') == 'YES'\nassert solution('1 1 1') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 5\") == \"YES\"\nassert solution(\"1 3 4\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 5') == 'YES'\nassert solution('2 4 6') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 6') == 'YES', 'Sample Test Failed'\nassert solution('1 3 2') == 'NO', 'Sample Test Failed'\nassert solution('1 1 1') == 'YES', 'Sample Test Failed'",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 5 5') == 'NO'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 6\") == \"YES\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 4\") == \"YES\"\nassert solution(\"1 1 1\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 4 6') == 'YES'\nassert solution('5 5 4') == 'NO'\nassert solution('1 2 3') == 'NO'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\\n\") == \"NO\"\nassert solution(\"6 6 6\\n\") == \"NO\"\nassert solution(\"2 2 2\\n\") == \"YES\"\nassert solution(\"4 5 3\\n\") == \"NO\"\nassert solution(\"5 6 2\\n\") == \"NO\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4546,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 6') == 'YES'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"No\"\nassert solution(\"1\") == \"No\"\nassert solution(\"99\") == \"Yes\"\nassert solution(\"100\") == \"Yes\"\nassert solution(\"9\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n') == 'No'\nassert solution('2\\n') == 'Yes'\nassert solution('4\\n') == 'Yes'\nassert solution('23\\n') == 'Yes'\nassert solution('01\\n') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('29') == 'Yes'\nassert solution('10') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9') == 'Yes'\nassert solution('29') == 'Yes'\nassert solution('123') == 'No'\nassert solution('9') == 'Yes'\nassert solution('111') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''29\n''') == 'Yes'\nassert solution('''4\n''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"Yes\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''29''') == 'Yes'\nassert solution('''26''') == 'No'\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == \"No\"\nassert solution('21') == \"Yes\"\nassert solution('99') == \"Yes\"\nassert solution('5') == \"No\"\nassert solution('101') == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('29') == 'Yes'\nassert solution('31') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4547,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('29') == 'Yes'\nassert solution('20') == 'No'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"1 2 4\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 3, 3]) == \"1\"\nassert solution([5, 3, 3]) == \"1\"\nassert solution([5, 3, 4]) == \"2\"\nassert solution([1, 2, 4]) == \"1\"\nassert solution([2, 2, 5]) == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sys.stdin.read()) == '1'\n\"\"\"\n\nimport sys\nfrom math import inf\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 3 3\n1 2 4\n''') == '1'\nassert solution('''5 2 3\n1 2 4\n''') == '1'\n\n'''\n\nfrom itertools import product",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 3\") == \"1\"\nassert solution(\"4 3 2\") == \"2\"\nassert solution(\"5 1 3\") == \"0\"\nassert solution(\"5 4 3\") == \"0\"\nassert solution(\"5 3 5\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([5, 3, 3]) == '1'\nassert solution([4, 2, 4]) == '2'\nassert solution([5, 5, 5]) == '0'\nassert solution([1, 1, 1]) == '0'\nassert solution([2, 2, 2]) == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('1 2 4') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3') == '1'\nassert solution('6 5 3') == '1'\nassert solution('6 5 4') == '1'\nassert solution('5 4 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 3, 3]) == \"1\"\nassert solution([5, 4, 3]) == \"1\"\nassert solution([4, 4, 4]) == \"0\"\nassert solution([5, 4, 3, 0]) == \"1\"\nassert solution([2, 5, 0]) == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4548,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 3\") == \"1\"\nassert solution(\"10 10 10\") == \"5\"\nassert solution(\"1 1 1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"4 4\") == \"No\"\nassert solution(\"5 5\") == \"Yes\"\nassert solution(\"10 10\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 3\") == \"Yes\"\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 3') == 'Yes'\n\nFor example, the above input can be\ninterpreted as the following diagram:\n\n|1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n\nThe image above shows the figure in which we have black squares.\n\nTo achieve the objective, we can paint either of the following squares in white:\n\n1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n\nOr,\n\n1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n\nThe image below shows the figure in which we have painted two squares in white:\n\n|1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n\nThe image below shows the figure in which we have painted four squares in white:\n\n|1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n\nThe image below shows the figure in which we have painted five squares in white:\n\n|1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n\nThe image below shows the figure in which we have painted six squares in white:\n\n|1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n\nThe image below shows the figure in which we have painted seven squares in white:\n\n|1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n\nThe image below shows the figure in which we have painted eight squares in white:\n\n|1|2|3|\n|4|5|6|\n|7|8|9|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |*|\n      |",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('5 5') == 'Yes'\nassert solution('5 5') == 'Yes'\nassert solution('1 1') == 'Yes'\nassert solution('4 4') == 'No'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('4 2') == 'No'\nassert solution('6 4') == 'Yes'\nassert solution('7 5') == 'No'\nassert solution('8 2') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3') == 'Yes'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\") == \"Yes\", \"First\"\nassert solution(\"1 2\") == \"No\", \"Second\"\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'Yes'\n\n\"\"\"\n\nimport math\nimport copy",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3') == 'Yes'\nassert solution('1 3') == 'Yes'\nassert solution('3 2') == 'No'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4549,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 5\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"4 3\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('100 200 250') == 'No'\n\"\"\"\n\nn = int(input())\na, b, c = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('10 10 10') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"1 1 1\") == \"Yes\"\nassert solution(\"3 3 3\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('100 200 300 400') == 'No'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\nassert solution(\"0 5 10\") == \"No\"\nassert solution(\"0 0 0\") == \"No\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 30 20\\n\") == \"Yes\"\nassert solution(\"100 30 20\\n\") == \"No\"\nassert solution(\"20 30 30 20\\n\") == \"Yes\"\nassert solution(\"10 20 30 20\\n\") == \"Yes\"\nassert solution(\"20 30 20 20 30\\n\") == \"Yes\"\n",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('1 20 20') == 'No'\nassert solution('1 1 1') == 'Yes'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 30 20') == 'Yes'\nassert solution('0 0 0') == 'No'\nassert solution('0 1 2') == 'No'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 30 20\") == \"Yes\"\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4550,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'Yes'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 4 5 2\") == \"Right\"\nassert solution(\"3 4 2 5\") == \"Left\"\nassert solution(\"3 4 2 5 6 7 8\") == \"Right\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Left'\nassert solution('2') == 'Left'\nassert solution('3') == 'Left'\nassert solution('4') == 'Left'\nassert solution('5') == 'Left'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3,8,7,1]) == \"Left\"\nassert solution([3,8,7,1]) == \"Right\"\nassert solution([3,8,7,1]) == \"Right\"\nassert solution([3,8,7,1]) == \"Right\"\nassert solution([3,8,7,1]) == \"Left\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"4 3 3 1\") == \"Left\"\nassert solution(\"10 7 2 4\") == \"Balanced\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"10 6 5 1\") == \"Balanced\"\nassert solution(\"9 1 2 3\") == \"Left\"\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 8 7 1') == 'Left'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 8 7 1\") == \"Left\"\nassert solution(\"3 9 7 1\") == \"Left\"\nassert solution(\"5 1 2 2\") == \"Left\"\nassert solution(\"3 1 2 2\") == \"Left\"\nassert solution(\"3 4 2 2\") == \"Right\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 8 7 1\n''') == 'Left'\nassert solution('''5 5 5 1\n''') == 'Balanced'\nassert solution('''5 8 7 1\n''') == 'Right'\nassert solution('''10 11 9 4\n''') == 'Left'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4551,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 6 8 3\") == \"Left\"\nassert solution(\"8 8 8 3\") == \"Balanced\"\nassert solution(\"8 6 7 3\") == \"Left\"\nassert solution(\"5 8 3 3\") == \"Right\"\nassert solution(\"3 3 5 5\") == \"Right\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n5\n1 1 0 1 0 0\n1 1 1 0 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n1 1 1 1 1 1\n:\n1 1 1 1 1 1\n:\n-2 -2 -2 -2 -2\n:\n1 1 1 1 1 1\n:\n3 4 5 6 7 8 9\n:\n1 1 1 1 1 1\n:\n1 1 1 1 1 1\n:\n1 1 1 1 1 1\n:\n1 1 1 1 1 1\n:\n1 1 1 1 1 1\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:\n:",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"8\"\n\"\"\"\nfrom itertools import product\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '8'\nassert solution('10\\n1 1 0 1 0 0 0 1 0 1\\n3 4 5 6 7 8 9 -2 -3 4 -2') == '4'",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == \"8\"\nassert solution(\"\"\"\n5\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n\"\"\") == \"8\"\nassert solution(\"\"\"\n2\n0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\n1 1 0 1 0 0 0 1 0 1\") == \"8\"\nassert solution(\"3\\n4 5 6 7 8 9 -2 -3 4 -2\") == \"11\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '8'\nassert solution('2') == '0'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '0'\nassert solution('3 2 3 2 2 3') == '2'\nassert solution('1 2 3 4 5 -2 -1 -1 5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 56
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1 1 0 1 0 0 0 1 0 1\n3 4 5 6 7 8 9 -2 -3 4 -2\n''') == '8'\nassert solution('''\n4\n1 1 1 1 1 1 0 0 1\n1 1 1 1 1 1 1 1 0\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1 1\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4552,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"8\"\nassert solution(\"2\") == \"6\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"Yes\"\nassert solution(input()) == \"No\"\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4\") == \"Yes\", solution(\"3 4\")\nassert solution(\"4 9\") == \"No\", solution(\"4 9\")",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == 'No'\nassert solution(\"1\") == 'Yes'\nassert solution(\"-1\") == 'Yes'\nassert solution(\"-1-\") == 'No'\nassert solution(\"-1-1\") == 'No'\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4\\n269-6650\\n') == 'Yes'\nassert solution('1 1\\nA\\n') == 'No'\n\n\"\"\"\n\nfrom itertools import permutations",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4') == 'Yes', 'Test 1 failed'\nassert solution('5 6') == 'No', 'Test 2 failed'\nassert solution('5 5') == 'Yes', 'Test 3 failed'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"Yes\"\nassert solution(\"3 4\") == \"No\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"No\"\nassert solution(\"1\") == \"Yes\"\nassert solution(\"123\") == \"Yes\"\nassert solution(\"2712\") == \"Yes\"\nassert solution(\"27-12\") == \"Yes\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\n\") == 'Yes'\nassert solution(\"0\\n\") == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 3') == 'No'\nassert solution('1 4') == 'Yes'\nassert solution('1 5') == 'No'\nassert solution('1 6') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4553,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5\\n4345') == 'Yes'\nassert solution('1 2\\n-45') == 'No'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('3 2 7') == '1'\nassert solution('3 2 1') == '2'\nassert solution('3 2 9') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 6\") == \"1\"\nassert solution(\"5 5 10\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('5 8 3') == '1'\nassert solution('1 1 2') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2 6') == '1'\nassert solution('1 2 5') == '1'\nassert solution('5 3 1') == '1'\nassert solution('5 2 7') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n\nfrom math import inf\nfrom collections import defaultdict",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 2 6\") == \"1\"\nassert solution(\"1 2 3\") == \"0\"\nassert solution(\"3 3 3\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 2 6\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3 4\") == \"1\"\nassert solution(\"3 2 6\") == \"1\"\nassert solution(\"5 3 2\") == \"1\"\nassert solution(\"8 5 3\") == \"1\"\nassert solution(\"5 3 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4554,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 5\") == \"1\"\nassert solution(\"2 1 10\") == \"1\"\nassert solution(\"2 5 10\") == \"1\"\nassert solution(\"2 8 10\") == \"2\"\nassert solution(\"2 5 8\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '1 3 4 2'\nassert solution('1 2 3 4 5') == '1 2 3 4 5'\nassert solution('1 2 3 4 5 6') == '1 2 3 4 5 6'\n",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"10 12 3\") == \"10\"\nassert solution(\"100 100 100\") == \"100\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4 2\") == \"3\"\nassert solution(\"3 9 2\") == \"3, 4, 5, 7, 8, 9\"\nassert solution(\"-1 -2 -3 -4 -5\") == \"0, 1, 2, 3, 4\"\nassert solution(\"2 -3 -5 4\") == \"1, 2, 3, 4, 5\"\n",
        "num_ids_2": 34,
        "num_ids_4": 84
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 2\") == \"3\"\nassert solution(\"7 5 6\") == \"7\"\nassert solution(\"8 3 2\") == \"3\"\nassert solution(\"10 7 8\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\nassert solution(\"4 7 1\") == \"1 2 3 4\"\nassert solution(\"4 10 2\") == \"2 3 4 5 6 7 8\"\nassert solution(\"10 0 4\") == \"4 5 6 7 8 9 10\"\n",
        "num_ids_2": 30,
        "num_ids_4": 66
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 8 2\") == \"3\"\nassert solution(\"3 3 1\") == \"3\"\nassert solution(\"5 5 3\") == \"5\"\nassert solution(\"10 10 2\") == \"10\"\nassert solution(\"2 5 3\") == \"5\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 8 2') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 8 2') == '3 4 7 8'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 8 2\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4555,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 8 2\") == \"3 4 7 8\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('AtCoder s Contest') == 'AC'\nassert solution('AtCoder Beginner Contest') == 'AB'\n\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AtCoder s Contest') == 'ACB'\nassert solution('AtCoder Beginner Contest') == 'ABE'\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder Super Beginner Contest\") == \"ABC\"\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('AtCoder s Contest') == 'ABC', solution('AtCoder s Contest')\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('AtCoder s Contest') == 'ACB'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\", \"Should return ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\", \"Should return ABC\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"AtCoder s Contest\") == \"AxC\"\n\n\"\"\"\n\ns = input()\n\nprint(s[0]+'C'+''.join([i.upper() for i in s[1:]]))",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"AtCoder Beginner Contest\") == \"ABC\"\nassert solution(\"AtCoder s Contest\") == \"ABC\"\n\"\"\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"AtCoder s Contest\") == \"AC\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4556,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AtCoder s Contest\") == \"ABC\"\nassert solution(\"AtCoder Beginner Contest\") == \"ABC\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 5 2\n''') == 'YES'\nassert solution('''4 5 2\n''') == 'NO'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 5 4\n2 3 2\n1''') == 'NO'\nassert solution('''5 1 4\n1 2 3\n3 4''') == 'YES'\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 5 4') == 'YES'\nassert solution('3 4 5') == 'NO'\nassert solution('1 1 1') == 'NO'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 5 4\"\n) == \"YES\"\nassert solution(\n    \"6 4 2\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1 1\") == \"YES\"\nassert solution(\"2 1 1\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 4\") == \"YES\"\nassert solution(\"5 5 2\") == \"NO\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 5 4') == 'YES', 'For example, if there are one cat and four dogs among the B = 5 animals, there are X = 4 cats in total.'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 4') == 'YES', \"Should be YES\"\nassert solution('4 5 10') == 'NO', \"Should be NO\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"100 6 200\") == \"NO\"\nassert solution(\"100 100 200\") == \"YES\"\nassert solution(\"200 100 200\") == \"NO\"\nassert solution(\"100 200 200\") == \"NO\"\n\"\"\"\n\nn, k, x = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4557,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 5 4\") == \"YES\"\nassert solution(\"1 1\") == \"NO\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 7\") == \"83\"\nassert solution(\"10 5\") == \"83\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"100 10\") == \"83\"\nassert solution(\"100 100\") == \"200\"\nassert solution(\"1 100\") == \"101\"\nassert solution(\"1 1\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100 17') == '83'\nassert solution('1000 100') == '1000'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(['1','2','3']) == '6'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\\n3 2\\n\") == \"1 2\\n2 3\\n\"\nassert solution(\"10 10\\n4 10\\n\") == \"9 9\\n10 9\\n\"\nassert solution(\"10 10\\n6 10\\n\") == \"9 9\\n10 9\\n\"\nassert solution(\"5 5\\n3 3\\n\") == \"3 2\\n3 3\\n\"\nassert solution(\"5 5\\n8 8\\n\") == \"2 2\\n2 2\\n\"\n",
        "num_ids_2": 48,
        "num_ids_4": 96
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"100 17\") == \"83\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4558,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"100 17\") == \"83\"\nassert solution(\"5 3\") == \"4\"\nassert solution(\"12 10\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '-1'\nassert solution('1000000000 1000000000') == '1000000000000000000'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n1000000000 1000000000\\n') == '1000000000000000000'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1000000000000000000\"\nassert solution(\"2\") == \"1000000000000000000\"\n\"\"\"\nimport math",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n1''') == '1'\nassert solution('''2\n1\n2''') == '2'\nassert solution('''3\n1\n2\n3''') == '-1'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100000000000000000') == '1000000000000000000'\nassert solution('2') == '-1'\nassert solution('3') == '-1'\nassert solution('4') == '-1'\nassert solution('5') == '-1'\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1000000000 1000000000\") == \"1000000000000000000\"\nassert solution(\"3\\n89893423 2424567\") == \"8934232424567\"\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1000000000000000000'\nassert solution('4') == '1000000000000000000'\nassert solution('5') == '-1'\n",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4559,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '-1'\nassert solution('1000000000 1000000000') == '1000000000000000000'\nassert solution('2') == '-1'",
        "num_ids_2": 27,
        "num_ids_4": 38
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Yes'\nassert solution('101') == 'Yes'\nassert solution('50') == 'Yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2018') == 'Yes'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"Yes\", \"First\"\nassert solution(\"18\") == \"Yes\", \"Second\"\nassert solution(\"2\") == \"No\", \"Third\"\nassert solution(\"3\") == \"No\", \"Fourth\"\nassert solution(\"1000\") == \"Yes\", \"Fifth\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"Yes\"\nassert solution(\"2\") == \"Yes\"\nassert solution(\"5\") == \"No\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\") == \"Yes\"\nassert solution(\"100\") == \"No\"\nassert solution(\"1000\") == \"Yes\"\nassert solution(\"10\") == \"Yes\"\nassert solution(\"10000\") == \"Yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"18\") == \"Yes\"\nassert solution(\"2017\") == \"No\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6') == 'Yes'\nassert solution('2020') == 'Yes'\nassert solution('200') == 'No'\nassert solution('10000') == 'No'\nassert solution('1111') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2018') == 'Yes'\nassert solution('1234') == 'No'\nassert solution('18') == 'Yes'\n'''\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n0\\n\") == \"Yes\\n\"\nassert solution(\"1\\n1\\n\") == \"No\\n\"\nassert solution(\"1\\n2000\\n\") == \"Yes\\n\"\nassert solution(\"1\\n1000\\n\") == \"No\\n\"\nassert solution(\"1\\n2000\\n\") == \"Yes\\n\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4560,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == 'Yes'\nassert solution('20') == 'Yes'\nassert solution('10') == 'Yes'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3, 2, 2, 1]) == \"safe\"\nassert solution([3, 2, 1, 2]) == \"dangerous\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\") == \"safe\"\nassert solution(\"1 1 1\") == \"dangerous\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') =='safe'\nassert solution('5 1 6') == 'dangerous'\nassert solution('4 5 6') == 'dangerous'\nassert solution('1 5 6') == 'dangerous'\nassert solution('0 2 3') == 'dangerous'",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '4 3 6'\n) =='safe'\n\nassert solution(\n    '1 3 6'\n) == 'dangerous'\n\nassert solution(\n    '1 2 5'\n) == 'dangerous'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('1 2 4') == 'dangerous'\n\n'''\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 1\") == \"dangerous\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 5\") == \"safe\"\nassert solution(\"5 4 3\") == \"dangerous\"\nassert solution(\"3 3 3\") == \"dangerous\"",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4 3 6\") == \"safe\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 6') =='safe'\nassert solution('4 3 7') == 'dangerous'\nassert solution('1 1 0') == 'dangerous'\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4561,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1 5') == \"safe\"\nassert solution('4 2 6') == \"dangerous\"\nassert solution('3 3 6') == \"dangerous\"\nassert solution('1 4 5') == \"dangerous\"",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '9', 'Solution is wrong!'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\\n\") == \"9\"\nassert solution(\"100\\n\") == \"99\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('100') == '99'\n\"\"\"\n\nfrom math import sqrt\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10\\n\") == \"9\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(10) == 9\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == '8'\nassert solution('123456789') == '123456789'\nassert solution('3') == '9'\nassert solution('4') == '4'\nassert solution('10') == '10'\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"8\") == \"16\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4562,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\n') == '9'\nassert solution('50\\n') == '25'\nassert solution('100\\n') == '10'\nassert solution('6\\n') == '6'\nassert solution('3\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n1 1\\n3 2') == '10'\nassert solution('3 3\\n2 1\\n1 2') == '10'\nassert solution('5 3\\n6 5\\n6 3\\n6 2\\n5 3') == '20'\n",
        "num_ids_2": 38,
        "num_ids_4": 65
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 2\\n1 3\") == \"1\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '10'\nassert solution('5') == '20'\nassert solution('30000') == '1000000000000'\n\"\"\"\n\n\n\nfrom functools import reduce\nimport operator\nfrom itertools import product",
        "num_ids_2": 20,
        "num_ids_4": 33
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n2 3\\n1 1\\n3 2') == \"10\"\nprint(solution(input()))\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '10'\nassert solution('4') == '12'\nassert solution('6') == '18'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 3\n1 1\n3 2\n''') == '10'\nassert solution('''\n5\n2 1\n3 1\n4 1\n1 4\n1 5\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"2\") == \"8\"\nassert solution(\"3\") == \"10\"\nassert solution(\"4\") == \"18\"\nassert solution(\"5\") == \"18\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2 3\") == \"10\"\nassert solution(\"3\\n2 3\") == \"10\"\nassert solution(\"3\\n2 3\") == \"10\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4563,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"3\\n2 3\\n1 1\\n3 2\"\n) == \"10\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"copyrightable\") == \"yes\"\nassert solution(\"unlicenseable\") == \"no\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == 'yes'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"uncopyrightable\") == 'yes'\nprint(solution(input()))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"no\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"yes\"\nassert solution(\"codingtest\") == \"no\"",
        "num_ids_2": 32,
        "num_ids_4": 44
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"yes\"\nassert solution(\"abcde\") == \"yes\"\nassert solution(\"abcdef\") == \"yes\"\nassert solution(\"abcd\") == \"yes\"\nassert solution(\"abcdEF\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nassert solution(\"c.com\") == \"no\"\nassert solution(\"c\") == \"yes\"\nassert solution(\"\") == \"yes\"\nassert solution(\"abcd\") == \"no\"\n",
        "num_ids_2": 25,
        "num_ids_4": 44
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hello') == 'yes'\nassert solution('world') == 'no'\nassert solution('for') == 'no'\nassert solution('a') == 'yes'\nassert solution('empty') == 'no'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"abc\") == \"yes\"\nassert solution(\"abc\") == \"no\"\nassert solution(\"abcabcabc\") == \"yes\"\nassert solution(\"abcabcabcabcabc\") == \"no\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('uncopyrightable') == 'yes', 'WRONG OUTPUT'\nprint('Everything passed')",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4564,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"uncopyrightable\") == \"yes\"\nprint(solution(\"\"))\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nWEEWW') == '1'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\nWEEWW\n''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\nWEEWW\n''') == '1'\nassert solution('''\n2\nWE\n''') == '1'\nassert solution('''\n3\nWE\n''') == '1'\nassert solution('''\n4\nWE\n''') == '2'\nassert solution('''\n5\nEW\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\nWEEWW\\n') == '1'\nassert solution('5\\nWEEWWW\\n') == '2'\nassert solution('4\\nEWEEEW\\n') == '1'\nassert solution('5\\nWEEEWW\\n') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 69
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '1'\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '1'\nassert solution('3') == '0'\nassert solution('5') == '1'\nassert solution('4') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nWEEWW') == \"1\"\nassert solution('3\\nEESE') == \"0\"\nassert solution('6\\nEESEEWEWW') == \"1\"\n",
        "num_ids_2": 29,
        "num_ids_4": 46
    },
    {
        "number": 4565,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2\\n2 3\\n1 4\\n\") == \"2\\n2\\n1\\n1\"\nassert solution(\"4 3\\n1 2\\n2 3\\n3 4\\n\") == \"1\\n2\\n2\\n1\"\nassert solution(\"5 5\\n1 2\\n1 3\\n1 4\\n2 4\\n3 4\\n\") == \"3\\n2\\n1\\n1\"\nassert solution(\"5 5\\n1 2\\n1 3\\n1 4\\n2 4\\n3 4\\n\") == \"3\\n2\\n1\\n1\"\nassert solution(\"6 6\\n1 2\\n1 3\\n1 4\\n1 5\\n2 5\\n3 4\\n3 5\\n3 6\\n4 5\\n5 6\\n\") == \"4\\n4\\n2\\n1\\n1\\n1\"",
        "num_ids_2": 68,
        "num_ids_4": 152
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '2'\nassert solution('20 19') == '7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') == '2\\n2\\n1'\nassert solution('2 2') == '1\\n1\\n0'\nassert solution('4 4') == '3\\n3\\n2\\n1'\n",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4 3\\n1 2\\n2 3\\n1 4\\n') == '2\\n2\\n1\\n1'\nassert solution('5 2\\n1 2\\n3 4\\n5 1\\n3 4\\n') == '2\\n2\\n1\\n1'\nassert solution('6 3\\n2 4\\n3 4\\n5 5\\n6 6\\n6 5\\n') == '4\\n4\\n3\\n3'\nassert solution('10 5\\n1 2\\n2 3\\n1 4\\n5 1\\n4 2\\n3 5\\n6 6\\n3 7\\n4 8\\n5 9\\n6 7\\n9 8\\n') == '5\\n5\\n4\\n3\\n3\\n3'\n",
        "num_ids_2": 72,
        "num_ids_4": 190
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\nassert solution(\"10 2\") == \"10\\n9\\n8\\n7\\n6\\n5\\n4\\n3\\n2\\n1\"\nassert solution(\"5 5\") == \"1\\n2\\n1\\n1\\n2\\n1\"\nassert solution(\"2 10\") == \"1\\n1\\n1\"\nassert solution(\"5 4\") == \"1\\n1\\n1\\n1\\n1\"\n",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"\nassert solution(\"9 9\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"20 20\") == \"1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\"\nassert solution(\"5 5\") == \"1\\n1\\n1\\n1\\n1\"\n",
        "num_ids_2": 55,
        "num_ids_4": 113
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2 2 1'\nassert solution('5 5') == '3 3 3 3 3'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3\") == \"2\\n2\\n1\\n1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4566,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4 3\n1 2\n2 3\n1 4\n\n''') == '2\\n2\\n1\\n1'\nassert solution('''4 3\n1 2\n2 3\n1 4\n\n''') == '2\\n2\\n1\\n1'\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n5\n10\n15\n''') == '25'\nassert solution('''\n3\n5\n10\n15\n''') == '30'\n\nprint(solution('''\n2\n1\n3\n'''))\nprint(solution('''\n1\n1\n1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"5\\n5\\n5\\n5\\n5\") == \"30\"\n\n---\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"6\") == \"30\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"10\\n10\\n10\\n10\") == \"30\"\nassert solution(\"5\\n10\\n5\\n15\") == \"25\"\nassert solution(\"5\\n5\\n10\\n15\") == \"0\"\nassert solution(\"10\\n10\\n5\\n15\") == \"25\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n5\n10\n15\n''') == '25'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1010\") == \"10\"\nassert solution(\"1050\") == \"10\"\n",
        "num_ids_2": 17,
        "num_ids_4": 38
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n5\n10\n15\n''') == '25'\nassert solution('''\n3\n5\n20\n15\n''') == '30'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5\\n10\\n15\") == \"25\"\nassert solution(\"4\\n10\\n20\\n30\") == \"30\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"25\"\nassert solution(\"4\") == \"30\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4567,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n5\\n10\\n15\\n') == '25'\nassert solution('1\\n1\\n1\\n1\\n') == '0'\nassert solution('3\\n5\\n1\\n15\\n') == '30'\n",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '1'\nassert solution('5') == '2'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6\\naabbca') == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\naabbca') == '2'\nassert solution('20\\n''x'*20) == '20'\nassert solution('10\\n''x'*10) == '10'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2', \"First\"\nassert solution('3') == '1', \"Second\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\\nabcb\") == \"2\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nabcd') == '2'\nassert solution('6\\nabcabc') == '3'\nassert solution('10\\nabcab') == '2'\nassert solution('50\\nabcabcabcabcabc') == '3'\nassert solution('80\\nabcabcabcabcabcabc') == '4'\n",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == '0'\nassert solution('aabbca') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == '2'\nassert solution('aabbca') == '2'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4568,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('6') == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Sunny') == 'Cloudy'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Cloudy\"\nprint(solution(input()))\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Sunny\\n\") == \"Cloudy\"\nassert solution(\"Sunny\\n\") == \"Cloudy\"\n\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Sunny') == 'Cloudy'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Sunny\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"\nprint(\"Congratulations! All test cases passed!\")\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Sunny') == 'Cloudy'\nassert solution('Cloudy') == 'Sunny'\nassert solution('Rainy') == 'Sunny'\nassert solution('Sunny') == 'Sunny'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4569,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Sunny\") == \"Cloudy\"\nassert solution(\"Cloudy\") == \"Sunny\"\nassert solution(\"Rainy\") == \"Rainy\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 7 120\n''') == '119'\nassert solution('''10 5 120\n''') == '120'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input) == \"119\"\nassert solution(input) == \"119\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 17 120\") == \"119\"\nassert solution(\"3 1 4\") == \"4\"\nassert solution(\"8 8 3\") == \"9\"\nassert solution(\"3 3 4\") == \"6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 17 120\\n') == '119', 'Wrong answer'\nassert solution('7 17 120\\n') == '119', 'Wrong answer'\nassert solution('7 17 120\\n') == '119', 'Wrong answer'\nassert solution('7 17 120\\n') == '119', 'Wrong answer'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 17 120\n''') == '119', 'TEST CASE ERROR 1'\nassert solution('''\n5 20 120\n''') == '120', 'TEST CASE ERROR 2'\nassert solution('''\n5 15 120\n''') == '120', 'TEST CASE ERROR 3'\nassert solution('''\n5 7 120\n''') == '119', 'TEST CASE ERROR 4'\nassert solution('''\n5 5 120\n''') == '120', 'TEST CASE ERROR 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '119'\nassert solution('2\\n1\\n1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 17 120\n''') == '119', \"First\"\nassert solution('''\n1 1 1\n''') == '1', \"Second\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1000\") == \"1000\", \"Should be 1000.\"\nassert solution(\"2 5 4\") == \"4\", \"Should be 4.\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 7 1\") == \"1\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4570,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('7 17 120') == '119'\nassert solution('15 18 10') == '12'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 1\n''') == '3800'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 1''') == '3800'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"3800\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"3800\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 1\") == \"1900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1''') == '3800'\nassert solution('''2 2''') == '5400'\nassert solution('''3 3''') == '9000'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n''') == '3800'\nassert solution('''\n1 1\n''') == '3800'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '3800'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"3800\"\nassert solution(\"1 0\") == \"3800\"\nassert solution(\"2 1\") == \"3760\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4571,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '3800'\nassert solution('2 5') == '7420'\nassert solution('3 3') == '3480'\n\n\"\"\"\n\nn, m = [int(x) for x in input().split()]",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"b\"\n\"\"\"\n\n\nimport re\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('asd') == None\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"b\"\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n\n'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(None) == None\nassert solution(\"abcd\") == \"b\"\nassert solution(\"atcoderregularcontest\") == \"b\"\n",
        "num_ids_2": 19,
        "num_ids_4": 34
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('atcoderregularcontest') == 'b'\nassert solution('chunkypancakes') == None\nassert solution('NotATicket') == 'a'\n",
        "num_ids_2": 27,
        "num_ids_4": 39
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('atcoderregularcontest') == 'b', 'WRONG'\nassert solution('atcoderregularcontest') == 'None'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4572,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('atcoderregularcontest') == 'b'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\n\n\"\"\"\nimport math",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n2 4 4 3') == '4\\n3\\n3\\n4'\n\"\"\"\n\nN = int(stdin.readline().rstrip())\nXs = sorted([int(stdin.readline().rstrip()) for _ in range(N)])\nB = [None] * N\nfor i in range(N):\n    # To find the median of the lower half of the array,\n    # we just need to know the middle value for each element.\n    # We can use the property that the middle value is the median,\n    # but because the array is sorted, we can get the median by just\n    # checking the mid value itself\n    if i % 2 == 0:\n        median = (Xs[i-1] + Xs[i]) // 2\n    else:\n        median = Xs[i-1]\n    B[i] = median\nprint('\\n'.join(map(str, B)))\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('2') == '3'\nassert solution('10') == '9'\n\"\"\"\n\nstdin = input().split()\n\nn = int(stdin[0])\nstdin = sorted(map(int, stdin[1:]))\n\nmedian = stdin[n // 2]",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"2 4 4 3\") == \"4 3\"\nassert solution(\"1 2 3 4 5\") == \"3 4\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 53
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('4 2 4 3') == '3'\nassert solution('5 4 4 3') == '4'\nassert solution('4 1 2 3') == '3'\nassert solution('3 4 4 3') == '3'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"4\\n3\\n3\\n4\\n\", \"Should print 4\"\nassert solution(\"5\") == \"4\\n3\\n3\\n4\\n\", \"Should print 4\"\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([4, 2, 4, 3]) == [4, 3, 4, 4]",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2 4 4 3\") == \"4\\n3\\n3\\n4\"\nprint(solution(\"4\\n2 4 4 3\"))",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == '\\n'.join([\n'3',\n'3',\n'3',\n'4'])\n\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]) == '\\n'.join([\n'4',\n'4',\n'4',\n'5'])\n\nassert solution([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655",
        "num_ids_2": 82,
        "num_ids_4": 1578
    },
    {
        "number": 4573,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\n2 4 4 3\n''') == '4 3 4'",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3 1 2 4 2 1') == '2'\nassert solution('6\\n3 1 2 4 2 1') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == '2'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6\\n') == '2'\nassert solution('4\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n10\n3 1 2 4 2 1\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5\n3 1 2 5 4 2\n\"\"\") == \"3\"\nassert solution(\"\"\"\n3\n2 2 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"0\"\nassert solution(\"2 4 2 1\") == \"1\"\nassert solution(\"4 3 3 1\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6\") == \"2\"\nassert solution(\"8\") == \"0\"\nassert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\\n\") == \"2\"\nassert solution(\"7\\n\") == \"0\"\n\"\"\"\n\n\"\"\"\n\nN = int(input())\nsticks = list(map(int, input().split()))\nsticks.sort()\n\ndp = [[0]*(N+1) for _ in range(N+1)]\n\nfor i in range(1, N+1):\n    for j in range(i):\n        if sticks[j] + sticks[i] <= N:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][i-j]+sticks[j]*sticks[i])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[N][0])\n\n\"\"\"\n\n\"\"\"\n1. N = 5, A_1, A_2, A_3, A_4 = 3, 4, 2, 1, 1\n\n2. N = 6, A_1, A_2, A_3, A_4, A_5 = 3, 4, 2, 2, 2\n\n3. N = 6, A_1, A_2, A_3, A_4, A_5 = 2, 2, 1, 1, 1, 1\n\n4. N = 6, A_1, A_2, A_3, A_4, A_5 = 2, 2, 1, 1, 1, 1\n\n5. N = 6, A_1, A_2, A_3, A_4, A_5 = 2, 2, 1, 1, 1, 1\n\n6. N = 6, A_1, A_2, A_3, A_4, A_5 = 1, 1, 1, 1, 1, 1\n\nN = int(input())\nsticks = list(map(int, input().split()))\n\ndp = [[0]*(N+1) for _ in range(N+1)]\n\nfor i in range(1, N+1):\n    for j in range(i):\n        if sticks[j] + sticks[i] <= N:\n            dp[i][j] = max(dp[i-1][j], dp[i-1][i-j]+sticks[j]*sticks[i])\n        else:\n            dp[i][j] = dp[i-1][j]\n\nprint(dp[N][0])\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '2'\nassert solution('6 3 1 2 4 2 1') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n6\n3 1 2 4 2 1\n''') == '2', \"Should be 2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4574,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '8'\nassert solution('7 1') == '8'\nassert solution('2') == '2'\nassert solution('5 10') == '12'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n7 1\n2\n5\n10\n''') == '8'\nassert solution('''\n10\n6 5\n1\n2 3 4 5\n2\n''') == '6'\nassert solution('''\n10\n4 5\n3\n1 2 3\n''') == '6'\nassert solution('''\n10\n2 5\n1\n2 2 3\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([3, 7, 1, 2, 5, 10]) == \"8\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '8'\nassert solution('5') == '1'\nassert solution('7') == '8'\nassert solution('10') == '1'\nassert solution('15') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '8'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"8\"\nassert solution(\"3\") == \"8\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '8'\nassert solution('7 1') == '8'\nassert solution('2') == '1'\nassert solution('10') == '10'\nassert solution('3') == '8'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4575,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n7 1\\n2\\n5\\n10') == '8'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1') == '1'\nassert solution('3\\n5 7\\n10\\n8') == '8'\nassert solution('1\\n1\\n2\\n3\\n4\\n5\\n6') == '2'\nassert solution('2\\n4\\n6\\n8\\n10\\n12\\n14\\n16\\n18\\n20\\n22\\n24') == '22'\n",
        "num_ids_2": 51,
        "num_ids_4": 99
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"1\\n3\\n4\\n10\") == \"3\"\nassert solution(\"4\\n5\\n6\\n20\") == \"4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"2\\n2\\n2\\n100\") == \"2\"\nassert solution(\"5\\n3\\n1\\n50\") == \"1\"\nassert solution(\"100\\n5\\n3\\n50\") == \"2\"",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100') == '2'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100') == '2'\nassert solution('2\\n2\\n2\\n100') == '2'",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n2\\n2\\n100\\n') == '2'\nassert solution('2\\n2\\n2\\n100\\n') == '1'\nassert solution('2\\n2\\n2\\n100\\n') == '0'\nassert solution('2\\n2\\n2\\n100\\n') == '2'\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1\n1\n2\n2''') == '1'\nassert solution('''0\n0\n0''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4576,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(s) == '2'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('-1 -3 2') == 'No'\nassert solution('-1 -3 1') == 'Yes'\nassert solution('-1 -3 -1') == 'No'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('2 3 2') == 'No'\nassert solution('3 3 2') == 'Yes'\nassert solution('5 1 2') == 'Yes'\nassert solution('5 5 2') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('-10 2 -5') == 'Yes'\nassert solution('-10 -5 1') == 'No'\n'''",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(1, 2, 3) == 'Yes'\nassert solution(1, 3, 2) == 'No'\nassert solution(2, 1, 3) == 'No'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"0 0 1\") == \"No\"\n\"\"\"\n\nA, B, C = map(int, input().split())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('5 3 3') == 'No'\nassert solution('-2 5 5') == 'No'\nassert solution('-2 2 -1') == 'Yes'\nassert solution('1 1 1') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 2') == 'Yes'\nassert solution('2 2 2') == 'No'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\") == \"Yes\"\nassert solution(\"0 0 0\") == \"Yes\"\nassert solution(\"1 2 1\") == \"No\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4577,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 2\") == \"Yes\"\nassert solution(\"5 5 3\") == \"No\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 1000\n120\n100\n140''') == '9'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1000\\n120\\n100\\n140\") == \"9\"\nassert solution(\"3 3\\n120\\n100\\n140\") == \"2\"\nassert solution(\"3 2\\n120\\n100\\n140\") == \"1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 1000\\n120\\n100\\n140') == '9'\nassert solution('6 5\\n10 20\\n15 50\\n20 20\\n20 20\\n20 20\\n5 5\\n10 20') == '7'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"9\"\nprint(solution(sys.stdin.read()))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 1000\n120\n100\n140\n''') == '9'\nassert solution('''\n1 1000\n1\n1\n1\n''') == '2'\nassert solution('''\n3 1000\n120\n100\n140\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n    3 1000\n    120\n    100\n    140\n    \"\"\"\n) == \"9\"\n\nassert solution(\n    \"\"\"\n    1 1000\n    120\n    100\n    140\n    \"\"\"\n) == \"2\"\n\nassert solution(\n    \"\"\"\n    1 1000\n    120\n    100\n    140\n    \"\"\"\n) == \"3\"\n\nassert solution(\n    \"\"\"\n    10 1000\n    350\n    230\n    170\n    120\n    100\n    140\n    360\n    310\n    320\n    \"\"\"\n) == \"5\"\n\nassert solution(\n    \"\"\"\n    10 1000\n    350\n    230\n    170\n    120\n    100\n    140\n    360\n    310\n    320\n    \"\"\"\n) == \"4\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4578,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1000\\n120\\n100\\n140\\n') == '9'\nassert solution('4 100\\n120\\n100\\n140\\n') == '3'\nassert solution('6 100\\n120\\n100\\n140\\n') == '5'\nassert solution('7 100\\n120\\n100\\n140\\n') == '6'\nassert solution('10 100\\n120\\n100\\n140\\n') == '7'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\napple\norange\napple\n''') == '2'\n\nassert solution('''\n3\napple\napple\n''') == '1'\n\nassert solution('''\n4\napple\napple\napple\n''') == '1'\n\nassert solution('''\n7\napple\napple\napple\norange\napple\norange\norange\n''') == '3'\n\nassert solution('''\n4\nmotorola\nmotorola\nmotorola\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '1'\nassert solution('1') == '1'\nassert solution('2') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\napple\norange\napple''') == '2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\napple\norange\napple\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\napple\napple\norange\n\"\"\") == \"1\"\nassert solution(\"\"\"\n4\napple\norange\napple\napple\n\"\"\") == \"1\"\nassert solution(\"\"\"\n5\napple\norange\napple\norange\norange\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '2'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4579,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\napple\\norange\\napple\") == \"2\"\nassert solution(\"1\\n\") == \"0\"\nassert solution(\"1\\n1\") == \"0\"\nassert solution(\"2\\napple\\norange\") == \"1\"\nassert solution(\"1\\n1\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 60
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n2100 2500 2700 2700''') == '2 2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\n2100 2500 2700 2700\n''') == '2 2'\n\"\"\"\n\nfrom itertools import combinations\n\nN = int(input())\nusers = []\n\nfor i in range(N):\n    users.append(int(input()))\n\nrating = []\nrating = users\n\nmax_rating = max(rating)\nmin_rating = min(rating)\n\nprint(max_rating-min_rating, max_rating+1-min_rating)\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n2100 2500 2700 2700\\n') == '2 2'\nassert solution('8\\n0 0 1 0 0 1 0 1 0\\n') == '1 1'\nassert solution('5\\n200 200 200 200 200 200\\n') == '1 1'\nassert solution('5\\n2000 2000 2000 2000 2000 2000\\n') == '1 1'\n",
        "num_ids_2": 46,
        "num_ids_4": 88
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2 2'\nassert solution(input()) == '2 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n2100 2500 2700 2700\n''') == '2 2'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n2100 2500 2700 2700\n''') == '2 2'\nassert solution('''4\n2100 2500 2700 2700\n''') == '2 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n2100 2500 2700 2700\") == \"2 2\"\nassert solution(\"5\\n1 2 3 4 5\") == \"3 3\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '2 2'\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4580,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\nassert solution(\"1000\") == \"3\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"ooxxo\") == \"900\"\nassert solution(\"xooxx\") == \"700\"\nassert solution(\"ooxxoox\") == \"2300\"\nassert solution(\"xooxxoox\") == \"2300\"\nassert solution(\"ooxxooxx\") == \"2300\"\n",
        "num_ids_2": 26,
        "num_ids_4": 57
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"oxo\") == \"900\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"ooxo\") == \"800\"\nassert solution(\"ooxx\") == \"700\"\nassert solution(\"xooox\") == \"0\"\nassert solution(\"xxooox\") == \"0\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('o') == '900'\nassert solution('x') == '700'\nassert solution('ooxx') == '7400'\nassert solution('xxoo') == '20000'\nassert solution('xxxx') == '40000'\n",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"o\") == \"900\"\nassert solution(\"x\") == \"800\"\nassert solution(\"xo\") == \"700\"\nassert solution(\"xx\") == \"700\"\nassert solution(\"xxx\") == \"700\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('oxo') == '900'\nassert solution('xo') == '400'\nassert solution('x') == '400'\nassert solution('o') == '700'\nassert solution('') == '700'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"oxo\") == \"900\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"500\"\nassert solution(\"xoxo\") == \"700\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4581,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"oxo\") == \"900\"\nassert solution(\"xox\") == \"600\"\nassert solution(\"xo\") == \"300\"\nassert solution(\"x\") == \"0\"\nassert solution(\"\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"D D\") == \"D\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"H D\") == \"H\"\nassert solution(\"D D\") == \"H\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('H H') == 'H'\nassert solution('D H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D D') == 'D'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D H') == 'H'\nassert solution('D D') == 'D'",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('H H') == 'H'\nassert solution('H D') == 'D'\nassert solution('D D') == 'D'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == 'D'\nassert solution('H H') == 'H'\nassert solution('D D') == 'D'\n\n\"\"\"\n\nfrom collections import Counter",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('H H') == 'H', 'First'\nassert solution('D H') == 'D', 'Second'\nassert solution('H D') == 'D', 'Third'\n\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"H H\") == \"H\"\nassert solution(\"D H\") == \"H\"\nassert solution(\"H D\") == \"D\"\nassert solution(\"D D\") == \"D\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4582,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''H H''') == 'H'\nassert solution('''H H''') == 'H'\nassert solution('''H D''') == 'D'\nassert solution('''D D''') == 'D'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('111221') == '1+2+3=7'\nassert solution('2221') == '2+2=7'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"123\") == \"1+2+3=7\"\nassert solution(\"1234\") == \"1+2+3+4=7\"\nassert solution(\"123489\") == \"1+2+3+4=7\"",
        "num_ids_2": 35,
        "num_ids_4": 74
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'\nassert solution('1222') == '1+2+2+2=7'",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''ABCD''') == '1+2+2+2=7'\nassert solution('''1222''') == '1+2+2+2=7'\nassert solution('''1234''') == '1+2+3=7'\n",
        "num_ids_2": 44,
        "num_ids_4": 64
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 + 2 + 3 = 7') == '1 + 2 + 3 = 7'\nassert solution('1 - 2 + 3 = 7') == '1 - 2 + 3 = 7'\nassert solution('1 - 2 - 3 = 7') == '1 - 2 - 3 = 7'\nassert solution('1 + 2 - 3 = 7') == '1 + 2 - 3 = 7'\nassert solution('1 + 2 * 3 = 7') == '1 + 2 * 3 = 7'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1222') == '1+2+2+2=7'\nassert solution('0001') == '1+1+1+1=7'\nassert solution('0000') == '1+0+0+0=7'\nassert solution('0122') == '1+1+2=7'\nassert solution('0022') == '1+0+2=7'\n",
        "num_ids_2": 37,
        "num_ids_4": 72
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"ABCD\") == \"1+2+2+2=7\"\nprint(solution(\"1222\"))\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 + 7\") == \"1 + 2 + 3 = 7\"\nassert solution(\"22\") == \"1 + 2 + 2 = 7\"\nassert solution(\"222\") == \"1 + 2 + 2 = 7\"\nassert solution(\"\") == \"\"\nassert solution(\" \") == \"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 57
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1222') == \"1+2+2+2=7\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4583,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1222\") == \"1+2+2+2=7\"\nassert solution(\"99000\") == \"1+9=10\"\nassert solution(\"4 2 0\") == \"4+2-0=4\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n1 1 2 2\\n') == '2\\n2 0\\n0\\n0\\n'\n\n\"\"\"\n\nimport sys\nsys.stdin = open('input.txt')",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"2\\n2\\n0\\n0\\n0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n1 1 2 2\\n\") == \"2\\n2\\n0\\n0\\n0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"2\\n2\\n0\\n0\\n0\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2\\n2\\n0\\n0\\n0'\nassert solution('15') == '2\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\n0\\",
        "num_ids_2": 1742,
        "num_ids_4": 1742
    },
    {
        "number": 4584,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n1 1 2 2') == '2\\n2\\n0\\n0\\n0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '3'\nassert solution('15') == '8'\nassert solution('18') == '8'\nassert solution('21') == '14'\nassert solution('25') == '25'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"6\") == \"4\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"101\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"100\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('6') == '3'\nassert solution('8') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"5\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n1\n3\n''') == '3'\nassert solution('''4\n2\n3\n''') == '3'\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4585,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4\") == \"2\"\nassert solution(\"6\") == \"5\"\nassert solution(\"8\") == \"7\"\nassert solution(\"12\") == \"11\"\nassert solution(\"24\") == \"23\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'Yes'\nassert solution(input()) == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1111\") == \"No\"\nassert solution(\"1111\") == \"Yes\"\nassert solution(\"1114\") == \"Yes\"\nassert solution(\"1112\") == \"Yes\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1101') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1118') == 'Yes'\nassert solution('1181') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"123\") == \"No\"\n\"\"\"\nn = int(stdin)\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1118\") == \"Yes\"\nassert solution(\"1233\") == \"No\"\nassert solution(\"1233\") == \"Yes\"\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1118') == 'Yes'\n\n\"\"\"\n\nn = int(input())\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == 'Yes'\nprint(solution(input()))\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == 'Yes'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4586,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1118') == 'Yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == sample_output_1\nprint(solution(input_data))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 5\") == \"3\"\nassert solution(\"2 4\") == \"2\"\nassert solution(\"3 6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '3'\nassert solution('1 5') == '3'\nassert solution('2 4') == '3'\nassert solution('3 6') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '3'\nassert solution('1') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n1 5\n2 4\n3 6\n''') == '3'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n1\n1\n''') == '3'\nprint(solution('''\n2\n1 5\n2 4\n3 6\n'''))\nprint(solution('''\n3\n1 5\n2 4\n3 6\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4587,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '3'\nassert solution('3') == '6'\n\"\"\"\nimport sys\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A D') == '<'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A B') == '<'\nassert solution('A C') == '>'\nassert solution('B D') == '='\n\"\"\"\n\nx = input()\ny = input()\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"A B\") == \"<\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''A B''') == '<'\nassert solution('''B A''') == '>'\nassert solution('''C D''') == '='\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 41
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(stdin) == '<'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A B') == '<', 'Expected < to be printed.'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"X Y\") == \"<\"\n\nInput\n\nOutput\n\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A B') == '<'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"A A\") == \">\nassert solution(\"A B\") == \"<\nassert solution(\"A C\") == \"=\"\n\n---",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4588,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A B') == '<'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\") == \"11211\"\n\ninput = stdin.read()\n\nfor _ in range(int(input)):\n    _ = int(input())\n    _ = input()\n    _ = input()\n\nfor i in range(len(input)):\n    _ = input()\n    for j in range(len(input[0])):\n        _ = input()\n    print()\n\n\nSample Output\n11211\n1#2#1\n11211\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5\") == \"11211\"\nassert solution(\"3 1\") == \"1112\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"12\"\nassert solution(\"5 5\") == \"111211\"\nassert solution(\"5 6\") == \"111111\"\nassert solution(\"3 3\") == \"111\"\nassert solution(\"2 3\") == \"12\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"3 5\\n\"\n    \".....\\n\"\n    \"#...#\\n\"\n    \".....\\n\"\n    \"\") == \"11211\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 5\\n.....\\n.#.#.\\n.....\\n\") == \"11211\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 5\") == \"11211\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5\n.....\n.#.#.\n.....\n\n''') == '11211'\nassert solution('''4 7\n##.##\n###..\n##..#\n######\n\n''') == '106211'\nassert solution('''4 4\n....\n....\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3\") == \"2211\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5\") == \"11211\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4589,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2\n........\n.1.2.3.4\n........''') == '1#2#1'\nassert solution('''1 3\n........\n.1.2.3.4\n........''') == '1#2#1'\nassert solution('''1 4\n........\n.1.2.3.4\n........''') == '1#2#1'\nassert solution('''3 3\n........\n.1.2.3.4\n........''') == '1#2#1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('3 1 0') == '0'\nassert solution('2 2 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 4 240\\n60 90 120\\n80 150 80 150\") == \"3\"\nassert solution(\"2 1 2\\n3 1 2\\n2 1 2\\n2 2\\n2 1 2\\n2 1 2\\n3 1 2\\n2 1 2\") == \"2\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 4 240\n60 90 120\n80 150 80 150''') == '3'\nassert solution('''2 4\n30 40\n30 40''') == '1'\nassert solution('''4 2\n30 40\n30 40\n20 50\n20 50''') == '2'\nprint(solution('''4 2\n30 40\n30 40\n20 50\n20 50'''))\nassert solution('''10 5\n50 50 50 50 50 50 50 50 50 50 50 50 50''') == '4'\nprint(solution('''10 5\n50 50 50 50 50 50 50 50 50 50 50 50 50'''))\nassert solution('''5 5\n50 50 50 50 50 50 50 50 50 50 50 50''') == '3'\nprint(solution('''5 5\n50 50 50 50 50 50 50 50 50 50 50 50'''))\n",
        "num_ids_2": 17,
        "num_ids_4": 33
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 4 240') == '3'\nassert solution('6 10 40') == '2'\nassert solution('5 100 100') == '5'\nassert solution('3 4 240') == '3'\nassert solution('6 10 40') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n3 4 240\n60 90 120\n80 150 80 150\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n1 5 9\n1 2 3 4 5\n\"\"\"\n) == \"1\"\nassert solution(\n\"\"\"\n3 5 7\n1 2 3 4 5\n6 7 8 9 10\n\"\"\"\n) == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"1 2 3 4 5\") == \"4\"\nassert solution(\"3 3 3\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 240\") == \"3\"\nassert solution(\"2 6 240\") == \"3\"\nassert solution(\"4 3 240\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 240\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4590,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 4 240\n60 90 120\n80 150 80 150\n''') == '3'\nassert solution('''\n3 4 100\n1 1 1\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1 1000000000 9 0 1') == '1000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '7900'\nprint(solution(''))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 1 1 1\") == \"1\"\nassert solution(\"1 1 1 1 1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1500 2000 1600 3 3') == '10796'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"1 2 3 1 5 7\"\n) == \"16\"\nassert solution(\n    \"2 4 2 1\"\n) == \"10\"\nassert solution(\n    \"3 4 2 2\"\n) == \"50\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 25,
        "num_ids_4": 45
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1500 2000 1600 3 2') == '7900'\nassert solution('1 2 3 4 5 6') == '100000'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1500 2000 1600 3 2\") == \"7900\"\nassert solution(\"100 100\") == \"100\"\nassert solution(\"4 2\") == \"4\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"100 10\") == \"101\"\n",
        "num_ids_2": 26,
        "num_ids_4": 48
    },
    {
        "number": 4591,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([1500, 2000, 1600, 3, 2]) == '7900'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '5'\nassert solution('12') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '4'\nassert solution('12') == '12'\nassert solution('18') == '12'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"10\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"4\"\nassert solution(\"0\") == \"1\"\nassert solution(\"-1\") == \"0\"\n\"\"\"\nfrom math import sqrt",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4'\nassert solution('5') == '5'\nassert solution('8') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3''') == '4'\nassert solution('''4''') == '3'\nassert solution('''5''') == '3'\nassert solution('''6''') == '2'\nassert solution('''7''') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n''') == '4'\nassert solution('''6\n''') == '4'\n'''\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    ;",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4592,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('5') == '6'\nassert solution('6') == '4'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\") == \"9\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10') == '9'\nassert solution('5') == '5'\nassert solution('7') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"10\") == \"9\"\nassert solution(\"20\") == \"19\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == '9'\nassert solution('12') == '2'\nassert solution('11') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\n''') == '4'\nassert solution('''16\n''') == '16'\nassert solution('''120\n''') == '120'\nassert solution('''13\n''') == '13'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10') == '9'\nassert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('2') == '2'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"7\") == \"9\"\nassert solution(\"8\") == \"8\"\nassert solution(\"10\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '9'\nassert solution('100') == '99'\nassert solution('1000') == '999'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '4'\nassert solution('9') == '9'\nassert solution('10') == '10'\nassert solution('15') == '9'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4593,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"4\"\nassert solution(\"8\") == \"8\"\nassert solution(\"9\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"3\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\n8\\n8\\n8\\n\") == \"1\"\nassert solution(\"1\\n2\\n3\\n4\\n\") == \"2\"\nassert solution(\"5\\n8\\n8\\n8\\n8\\n8\\n8\\n8\\n\") == \"3\"\nassert solution(\"10\\n10\\n10\\n10\\n10\\n10\\n10\\n10\\n\") == \"10\"\n",
        "num_ids_2": 42,
        "num_ids_4": 108
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('4\\n10\\n8\\n6') == '2'",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n10\\n8\\n8\\n6') == '3'\nassert solution('3\\n1\\n2\\n3') == '1'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n10\\n8\\n8\\n6\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4594,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4') == '3'\nassert solution('5') == '4'\nassert solution('6') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n\n## 2. Maximum Value\n\nWrite a function that takes as input a list of non-negative integers and returns the maximum value of the array.\n\n-----Constraints-----\n - |lst| \u2264 1000{,}\n - |lst| is sorted.\n\n-----Input-----\nA list of integers,\n\n-----Output-----\nThe maximum value of the list.\n\nBy taking out the seventh through eleventh characters, it is possible to construct ASDFZ, which starts with A and ends with Z.\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('QWERTYASDFZXCV') == 5\nassert solution('QWERTYASDFZXCV') == 5",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"\n\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"QWERTYASDFZXCV\") == \"5\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('QWERTYASDFZXCV') == 'QWERTY'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('QWERTYASDFZXCV') == \"5\"\n\ninput: s = 'ZYXWVUTSRQPONMLKJIHGFEDCBA'\noutput: 8\nSnuke has decided to construct a string that starts with A and ends with Z, by taking out a substring of a string s (that is, a consecutive part of s).\nFind the greatest length of the string Snuke can construct. Here, the test set guarantees that there always exists a substring of s that starts with A and ends with Z.\n\n-----Constraints-----\n - 1 \u2266 |s| \u2266 200{,}000\n - s consists of uppercase English letters.\n - There exists a substring of s that starts with A and ends with Z.\n\n-----Input-----\nThe input is given from Standard Input in the following format:\ns\n\n-----Output-----\nPrint the answer.\n\n-----Sample Input-----\nQWERTYASDFZXCV\n\n-----Sample Output-----\n8\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4595,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('QWERTYASDFZXCV') == '5'\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n8 12 40\n\"\"\") == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n8 12 40\n''') == '2'\nassert solution('''3\n10 12 40\n''') == '1'\nassert solution('''3\n7 12 40\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n8 12 40\") == \"2\"\nassert solution(\"3\\n4 6 20\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"10\") == \"1\"\nassert solution(\"100\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n8 12 40''') == '2'\nassert solution('''3\n1000000000 1000000000 1000000000''') == '1000000000'\nprint(solution('''5\n3 7 7 7 1'''))",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n8 12 40') == '2'\nassert solution('3\\n8 12 40') == '2'\nassert solution('3\\n7 12 40') == '1'\n\n\"\"\"\nimport sys\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n8 12 40\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n5\n10 20 20 10 30\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '2'\nassert solution('6') == '2'\nassert solution('12') == '2'\nassert solution('20') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4596,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == \"4\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"24\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '6'\nassert solution('1') == '1'\nassert solution('10') == '22'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '6'\nassert solution('10') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '6'\nassert solution('2') == '1'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '6'\nassert solution('6') == '6'\nassert solution('7') == '7'\nassert solution('8') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"6\"\nassert solution(\"5\") == \"45\"\nassert solution(\"2\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4597,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1) == 1\nassert solution(2) == 2\nassert solution(3) == 6\nassert solution(4) == 24\nassert solution(5) == 120\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"8\"\nassert solution(\"6\") == \"13\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1', \"First\"\nassert solution('2') == '2', \"Second\"\nassert solution('3') == '3', \"Third\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '6'\nassert solution('4') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\nassert solution('3') == '2'\nassert solution('7') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"6\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4598,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '3'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('4') == '4'\nassert solution('5') == '4'\nassert solution('6') == '5'\nassert solution('10') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '2'\nassert solution('3 1') == '2'\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('2') == '2'\nassert solution('2') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"0\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1 2 3 4 5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4599,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2 2\"\nassert solution(\"2 5\") == \"2 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 5') == '2 2'\nassert solution('3 5') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"2 3\") == \"1 2\"\nassert solution(\"2 2\") == \"2 2\"\nassert solution(\"1 3\") == \"0 1\"\nassert solution(\"4 5\") == \"4 1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 5\n1 WA\n1 AC\n2 WA\n2 AC\n2 WA\n\n''') == '2 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 5\") == \"2 2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"\nassert solution(\"1\\n1\\n\") == \"1 1\"\nassert solution(\"3\\n2\\n\") == \"1 2\"\nassert solution(\"4\\n3\\n\") == \"2 2\"\nassert solution(\"5\\n4\\n\") == \"3 2\"\n",
        "num_ids_2": 50,
        "num_ids_4": 82
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\\n\") == \"2 2\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5\\n1 WA\\n1 AC\\n2 WA\\n2 AC\\n2 WA\") == \"2 2\"\nassert solution(\"2 2\\n1 WA\\n2 AC\") == \"2 2\"\nassert solution(\"3 4\\n2 WA\\n2 AC\\n2 WA\\n1 WA\") == \"2 2\"\n",
        "num_ids_2": 52,
        "num_ids_4": 80
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"2 1\") == \"2 1\"\nassert solution(\"2 10\") == \"10 2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4600,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\") == \"2 2\"\nassert solution(\"3 4\") == \"1 2\"\nassert solution(\"5 5\") == \"1 3\"\nassert solution(\"1 5\") == \"1 1\"\nassert solution(\"4 5\") == \"2 3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1\\n4 1 5\\n\") == \"5\"\nassert solution(\"3 1\\n4 1 5\\n\") == \"5\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '5'\nassert solution(input) == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"5\"\nassert solution(\"3 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1\") == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1\") == \"5\"\nassert solution(\"2 1\") == \"1\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"5 2\") == \"1\"\nassert solution(\"3 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '5'\nassert solution('2 1') == '4'\nassert solution('1 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 1') == '5'\nassert solution('2 1') == '4'\nassert solution('3 1') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 1\n4 1 5''') == '5'\nassert solution('''5 1\n4 1 5\n5 1''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4601,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 2\n2 1 1\n''') == '1'\nassert solution('''3 2\n4 1 5\n''') == '5'\nassert solution('''4 1\n6 1 6\n''') == '3'\nassert solution('''5 1\n6 1 6\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4\"\nassert solution(input) == \"4\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"1\") == \"4\"\nassert solution(\"5\") == \"9\"\n\n-----Other Solutions-----\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n10\\n1\\n1\\n1\\n1\\n1\\n1\\n1\") == \"4\"\nassert solution(\"1\\n10\\n2\\n2\\n3\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4\\n4",
        "num_ids_2": 1455,
        "num_ids_4": 1455
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '4'\nassert solution('2') == '4'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\nassert solution('3') == '16'\nassert solution('4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"10\") == \"16\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n2\n2\n1 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"34\"\nassert solution(\"\"\"\n1\n10\n1\n\"\"\") == \"10\"\nassert solution(\"\"\"\n10\n10\n1 1 2 2\n\"\"\") == \"14\"\nassert solution(\"\"\"\n10\n10\n1 1 2 2 3 3 4 4 5 5\n\"\"\") == \"48\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '4'\nassert solution('2') == '16'\nassert solution('3') == '10'\nassert solution('10') == '8'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4602,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '4'\nassert solution('10') == '4'\nassert solution('2') == '10'\nassert solution('3') == '6'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('600\\n300\\n220\\n420') == '520'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n20\n2\n1\n1\n''') == '41'\nassert solution('''\n15\n5\n2\n2\n''') == '47'\nassert solution('''\n100\n3\n2\n1\n''') == '102'\nassert solution('''\n20\n2\n1\n1\n''') == '41'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"520\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('600') == '520'\nassert solution('300') == '300'\nassert solution('220') == '220'\nassert solution('420') == '420'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''600\n300\n220\n420''') == '520'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"300\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"420\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"600\\n300\\n220\\n420\") == \"520\"\nassert solution(\"800\\n0\\n0\\n0\") == \"800\"\nassert solution(\"8100\\n300\\n220\\n420\") == \"5600\"\nassert solution(\"80\\n0\\n0\\n0\") == \"80\"\n",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"600\") == \"520\"\nassert solution(\"300\") == \"220\"\nassert solution(\"220\") == \"220\"\nassert solution(\"420\") == \"320\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(5) == '520'\nassert solution(6) == '520'\nassert solution(5) == '520'\nassert solution(5) == '520'\nassert solution(5) == '520'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4603,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n3\n4\n''') == '5'\nassert solution('''\n1\n1\n1\n1\n''') == '4'\nassert solution('''\n2\n3\n4\n5\n''') == '7'\nassert solution('''\n1\n1\n2\n3\n''') == '5'\nassert solution('''\n1\n1\n2\n1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 4 4 0 2') == '4'\nassert solution('1\\n10 11 12') == '12'\nassert solution('10\\n1 1 1 1 1 1 1 1 1 1') == '10'",
        "num_ids_2": 32,
        "num_ids_4": 54
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n2 4 4 0 2\n\"\"\") == \"4\"\nassert solution(\"\"\"5\n2 4 4 0 2\n5 2 4 1 3\n\"\"\") == \"4\"\nassert solution(\"\"\"5\n2 4 4 0 2\n5 2 4 1 3\n4 1 2 3 5\n\"\"\") == \"0\"\nassert solution(\"\"\"5\n2 4 4 0 2\n5 2 4 1 3\n4 1 2 3 5\n5 2 4 1 3\n\"\"\") == \"0\"\nassert solution(\"\"\"5\n2 4 4 0 2\n5 2 4 1 3\n5 2 4 1 3\n4 1 2 3 5\n\"\"\") == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4 4 0 2') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"10\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n2 4 4 0 2\\n') == '4'\nassert solution('4\\n3 2 4 1\\n') == '3'\nassert solution('3\\n5 1 3 2\\n') == '0'\nassert solution('2\\n5 4 3 2 1\\n') == '4'\nassert solution('1\\n0\\n') == '0'\n",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"5\"\nassert solution(\"6\\n2 4 4 0 2\") == \"0\"\nassert solution(\"7\\n2 4 4 0 2\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('4') == '4'\nassert solution('4') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"4\"\nassert solution(\"5\\n2 4 4 0 2\") == \"0\"\n\n'''\n\nimport math\n",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2 3') == '2'\nassert solution('1\\n2 3 4') == '1'\nassert solution('1\\n2 3 4 5') == '4'\nassert solution('1\\n2 3 4 5 6') == '0'\nassert solution('1\\n2 3 4 5 6 7') == '0'\n",
        "num_ids_2": 29,
        "num_ids_4": 62
    },
    {
        "number": 4604,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\\n\"\n    \"2 4 4 0 2\"\n) == \"4\"\nassert solution(\n    \"5\\n\"\n    \"2 4 4 0 2\"\n) == \"0\"\nassert solution(\n    \"5\\n\"\n    \"2 3 0 4 5\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 5''') == '84'\nassert solution('''20 2 5''') == '84'\n\ninput = lambda: stdin.readline().split()",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2 5\") == \"84\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 10 2 4') == '42'\nassert solution('3 7 1 10') == '16'\nassert solution('4 8 9 5') == '45'\nassert solution('16 18 18 10') == '32'\nassert solution('2 1 2 3') == '2'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 2 5\") == 84\nassert solution(\"20 10 5\") == 146\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([20, 2, 5]) == 84\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 2 5') == 84\nassert solution('20 2 6') == 126\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 2 5\") == \"84\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20 2 5') == 84\n\nimport math\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '0', \"Test #1 Failed\"\nassert solution('1') == '1', \"Test #2 Failed\"\nassert solution('12') == '72', \"Test #3 Failed\"\nassert solution('2') == '0', \"Test #4 Failed\"\nassert solution('3') == '1', \"Test #5 Failed\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4605,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('20 2 5') == 84\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"ABC100\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == 'ABC'\nassert solution('7') == 'ABC7'\nassert solution('8') == 'ABC8'\nassert solution('9') == 'ABC9'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"100\") == \"ABC100\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4''') == 'ABC4'\nassert solution('100') == 'ABC100'\nassert solution('200') == 'ABC200'\nassert solution('3') == 'ABC3'\nassert solution('4') == 'ABC4'\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100') == 'ABC100'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\") == \"ABC50\"\nassert solution(\"10\") == \"ABC900\"\nassert solution(\"1000\") == \"ABC10000000000\"\nassert solution(\"10000\") == \"ABC1000000000\"\nassert solution(\"999\") == \"ABC100000000\"\n\nprint(\"Congratulations! All tests passed.\")",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == \"ABC500\"\nassert solution('1000') == \"ABC1000\"\nassert solution('100') == \"ABC100\"\nassert solution('11') == \"ABC111\"\nassert solution('12') == \"ABC121\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100') == 'ABC100'\nassert solution('11') == 'ABC111'\n\n=====\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"ABC\"\nassert solution(\"16\") == \"ABC16\"\nassert solution(\"100\") == \"ABC100\"\nassert solution(\"999\") == \"ABC999\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4606,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"100\") == \"ABC100\"\n\n----How to use code---\n1. Pass your input\n2. Run your program and check if your program works\n3. If so, you are done! If not, fix your program so that it works\n4. Write code to test if it works\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(None) == '5'\nassert solution('1 1') == '5'\nassert solution('2 1') == '5'\nassert solution('3 1') == '5'\nassert solution('4 1') == '5'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 5\") == \"5\"\nassert solution(\"2 6\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == '5'\nassert solution('5 5') == '5'\nassert solution('3 5') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '5'\nassert solution('5 5') == '5'\nassert solution('3 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"3 4\") == \"0\"\nassert solution(\"7 1\") == \"6\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5\") == \"5\"\nassert solution(\"4 2\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == '6'\nassert solution('5 5') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 5') == \"5\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"4 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4607,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"5\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == -1\nassert solution('3') == 2\nassert solution('3 1') == -1\nassert solution('3 1 2') == 2\nassert solution('3 2') == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n3\\n1\\n2\\n\") == \"2\"\nassert solution(\"1\\n2\\n1\\n1\\n\") == \"1\"\nassert solution(\"2\\n3\\n1\\n2\\n\") == \"-1\"\n\"\"\"\n\nN = int(input())\n\na = list(map(int, input().split()))",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '-1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '2'\n\"\"\"\n\nn = int(input())\n_lighten = input().split(' ')\nbuttons = []\nfor i in range(1, n+1):\n    buttons.append(i)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == -1\nassert solution(\"5\") == 2\nassert solution(\"9\") == 3\nassert solution(\"20\") == -1\nassert solution(\"4\") == -1\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == \"2\"\nassert solution('3') == \"2\"\nassert solution('3') == \"2\"\nassert solution('3') == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '-1'\nassert solution('3') == '2'\nassert solution('5') == '0'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\n\"\"\"\nimport math\nfrom itertools import permutations\nfrom collections import Counter\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4608,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"3\") == \"1\"\nassert solution(\"-1\") == \"-1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"3\n6\n2\n6\"\"\") == \"1\"\nassert solution(\"\"\"2\n1\n6\n2\n3\n4\n5\"\"\") == \"2\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"7\") == \"1\"\nassert solution(\"10\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"10\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n6\\n2\\n6\\n') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n6\n2\n6''') == '1'\nassert solution('''10\n6\n4\n6''') == '1'\nassert solution('''12\n3\n4\n3''') == '2'\nassert solution('''10\n4\n5\n8''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n4\\n7') == '1'\nassert solution('5\\n1\\n2\\n3\\n4') == '5'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('5') == '1'\nassert solution('6') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"2\"\nassert solution(\"2\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4609,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"10\") == \"1\"\nassert solution(\"101\") == \"10\"\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\n1 1 2 2 5''') == '1'\nprint('solution is: %s' % solution('''5 2\n1 1 2 2 5'''))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('5\\n2') == '1'\nassert solution('2\\n1') == '1'\nassert solution('2\\n2') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"3 1\\n1 1 2\") == \"2\"\nassert solution(\"10 2\\n1 2 3 4 5 6 7 8 9 10\") == \"9\"\n",
        "num_ids_2": 34,
        "num_ids_4": 57
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2') == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2\") == \"1\"\nassert solution(\"1 1 2 2 5\") == \"1\"\nassert solution(\"6 1\") == \"1\"\n",
        "num_ids_2": 25,
        "num_ids_4": 36
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"10 3\\n
        "num_ids_2": 1521,
        "num_ids_4": 1521
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 2') == '1'\nassert solution('5 1') == '2'\nassert solution('4 1') == '1'\nassert solution('4 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"2\"\nassert solution(\"5 2\\n1 1 2 2 5\") == \"1\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\n1 1 2 2 5\n''') == '1'\nassert solution('''\n5 2\n1 1 2 2 5\n''') == '1'\nassert solution('''\n7 8\n7 1 3 2 4 5 6 8\n''') == '6'\nassert solution('''\n5 4\n5 4 4 4 4\n''') == '0'\nassert solution('''\n5 4\n5 4 4 4 4\n''') == '0'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4610,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n1 1 2 2 5\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n'''\n2\n3 1 2\n6 1 1\n''') == \"Yes\"\nassert solution(\n'''\n2\n3 1 2\n6 1 1\n''') == \"No\"\nassert solution(\n'''\n5\n7 2 3 1 2\n6 2 4 4 5\n7 2 5 2\n8 4 1 1\n7 4 7\n''') == \"Yes\"\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == \"Yes\"\nassert solution('3 1 2') == \"Yes\"\nassert solution('6 1 1') == \"No\"\nassert solution('100') == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2\\n3 1 2\\n6 1 1\\n\"\n    ) == \"Yes\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n3 1 2\\n6 1 1') == 'Yes'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'Yes'\nassert solution('2') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n3 1 2\\n6 1 1') == 'Yes'\nassert solution('2\\n2 0 1\\n6 1 1') == 'No'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3 1 2') == 'Yes'\nassert solution('6 1 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n3 1 2\\n6 1 1\\n\") == \"Yes\"\nassert solution(\"2\\n3 1 2\\n6 1 1\\n\") == \"No\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4611,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == 'Yes'\nassert solution('3') == 'Yes'\nassert solution('4') == 'No'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == '2'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3') == '2'\n\"\"\"\nimport math\n\na, b = map(int, input().split())\n\nx = (a + b) / 2\n\nprint(math.ceil(x))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 3') == '2'\nassert solution('5 10') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 2\") == \"2\"\nassert solution(\"2 1\") == \"2\"\nassert solution(\"3 1\") == \"2\"\nassert solution(\"1.1 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 3') == '2'\nassert solution('1 1') == '1'\nassert solution('3 1') == '2'\nassert solution('4 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '2'\nassert solution('1 2') == '1'\nassert solution('1 1') == '2'\nassert solution('1 1.5') == '2'\nassert solution('1 0.5') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 3\") == \"2\"\nassert solution(\"1 2\") == \"1\"\nassert solution(\"10 10\") == \"10\"\nassert solution(\"3 3\") == \"4\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3') == '2'\nassert solution('10 4') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4612,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 3') == '2'\nassert solution('2 4') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'\nassert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '5'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 7\") == \"4\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 7\n1 3\n2 7\n3 4\n4 5\n4 6\n5 6\n6 7\n''') == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"4\"\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7\") == '4'\nassert solution(\"5 4\\n1 2\\n2 3\\n3 4\\n4 5\\n5 6\") == '0'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 7\\n1 3\\n2 7\\n3 4\\n4 5\\n4 6\\n5 6\\n6 7') == '4'\n\"\"\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 7\") == \"4\"\nprint(solution(\"7 7\"))\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"6 5\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4613,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 7') == '4'\n'''\n\nimport sys\nsys.setrecursionlimit(2000)\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(5, 7, 5) == 7\n\nprint(solution(5, 7, 5))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 7 5\\n\") == \"7\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([5,7,5]) == \"7\"\nassert solution([5,7,5]) == \"5\"\nassert solution([5,7,5]) == \"7\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"5 7 5\") == \"7\"\nassert solution(\"5 7 5\") == \"7\"\nassert solution(\"5 7 5\") == \"7\"\nassert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 7 5\") == \"7\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"5 7 5\"]) == \"7\"\nassert solution([\"5 7 5\", \"3 7 5\", \"1 2 3\"]) == \"1\"\nassert solution([\"5 7 5\", \"3 7 5\", \"1 2 3\", \"3 3 3\"]) == \"1\"\nassert solution([\"5 7 5\", \"3 7 5\", \"1 2 3\", \"3 3 3\", \"1 2 3\"]) == \"3\"\nassert solution([\"5 7 5\", \"3 7 5\", \"1 2 3\", \"3 3 3\", \"1 2 3\", \"5 5 5\"]) == \"3\"\n",
        "num_ids_2": 38,
        "num_ids_4": 101
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 7 5\") == \"7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([5,7,5]) == 7",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7 5') == '7'\nassert solution('1 5 3') == '5'\nassert solution('2 1 2') == '1'\nassert solution('3 2 5') == '2'\nassert solution('3 2 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4614,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 7 5\") == \"7\"\nassert solution(\"-5 7 5\") == \"-5\"\n\n-------Submission-------\nhttps://algoexpert.io/questions/Different%20Values\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n'''\n\na, b, c, d, e, f = list(map(int, stdin.split()))\n\nmax_sugar = 200\n\nA = max(a, (f - e + 100) / b)\nB = max(b, (f - e + 100) / a)",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 2, 10, 20, 15, 200]) == '110 10'\nassert solution([1, 2, 10, 20, 15, 200, 1, 2, 10, 20, 15, 200, 1, 2, 10, 20, 15, 200]) == '110 10'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == \"110 10\"\n\n\"\"\"\n\n\nA, B, C, D, E, F = map(int, input().split())\nprint(A // (C + D) + E // (C + D), A // (C + D) + E // (C + D) + A // (C + D))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2 10 20 15 200\") == \"110 10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 2 10 20 15 200') == '110 10'\n'''\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"110 10\"\nassert solution(input()) == \"110 10\"\nassert solution(input()) == \"110 10\"\nassert solution(input()) == \"110 10\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\nassert solution('1 1 5 15 15 200') == '250 10'\nassert solution('1 10 1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 32,
        "num_ids_4": 50
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 2 10 20 15 200''') == '110 10'\nassert solution('''1 1 2 2 3''') == '0 0'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4615,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 10 20 15 200') == '110 10'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('i18n') == 'i18n'\nassert solution('i18nistanlization') == 'i18n'\nassert solution('internationalizationi18n') == 'i18n'\n",
        "num_ids_2": 21,
        "num_ids_4": 52
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'i18n'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == ''\nassert solution('ab') == 'ab'\nassert solution('abcd') == 'abcd'\nassert solution('abcdgh') == 'abcdgh'\nassert solution('abcdghk') == 'abcdgh'\n",
        "num_ids_2": 18,
        "num_ids_4": 44
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == stdin.strip()\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"internationalization\") == \"i18n\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    'internationalization'\n    ) == 'i18n'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == ''\nassert solution('i18n') == 'i18n'\nassert solution('internationalization') == 'i18n'\n'''\n\nimport re\n",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''internationalization''') == 'i18n'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == ''\nassert solution('internationalization') == 'i18n'\nassert solution('april') == 'apr'\nassert solution('the') == 'the'\nassert solution('alaska') == 'ak'\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4616,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"internationalization\") == \"i18n\"\nassert solution(\"is\") == \"is\"\nassert solution(\"bcdef\") == \"bcdef\"\nassert solution(\"\") == \"\"\nassert solution(\"ABCDEF\") == \"ABCDEF\"\n",
        "num_ids_2": 23,
        "num_ids_4": 42
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('pot') == 'YES'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nC_{11}\nC_{12}\nC_{13}\n''') == 'YES'\nassert solution('''\nC_{21}\nC_{22}\nC_{23}\n''') == 'YES'\nassert solution('''\nC_{31}\nC_{32}\nC_{33}\n''') == 'NO'\nassert solution('''\nC_{11}\nC_{12}\nC_{13}\n''') == 'NO'\nassert solution('''\nC_{21}\nC_{22}\nC_{23}\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"NO\"\n\n'''\n\ncol = list(map(str, stdin.strip().split(\"\\n\")))\ncol = list(zip(*col))\ncol = list(map(list, zip(*col)))\nfor i in range(len(col)):\n    if col[i]!= col[::-1]:\n        print(\"NO\")\n        exit()\nprint(\"YES\")\n\n'''\n\ncol = list(map(str, stdin.strip().split(\"\\n\")))\ncol = list(zip(*col))\ncol = list(map(list, zip(*col)))\nfor i in range(len(col)):\n    if col[i]!= col[::-1]:\n        print(\"NO\")\n        exit()\nprint(\"YES\")\n\n'''",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"YES\"\nassert solution(input(\"NOT\")) == \"NO\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''pot\ntop\n''') == 'YES'\nassert solution('''pot\ntak\n''') == 'NO'\nassert solution('''pot\ntop\n''') == 'YES'\n'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"YES\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"pot\") == \"YES\"\nassert solution(\"top\") == \"YES\"\nassert solution(\"\") == \"NO\"",
        "num_ids_2": 20,
        "num_ids_4": 29
    },
    {
        "number": 4617,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('pot') == 'YES'\nassert solution('top') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aba') == 'b'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aba') == 'b'\n\n\"\"\"\n\n\nimport sys\nimport math",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aba') == 'b'\nassert solution('abc') == 'a'\nassert solution('aaaa') == 'a'\nassert solution('acab') == 'c'\nassert solution('aac') == 'a'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"b\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == 'b'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''aba\n4''') == 'b'\nprint(solution(input()))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"aba\") == \"b\"\nassert solution(\"aba\") == \"b\"\nassert solution(\"aba\") == \"b\"\nassert solution(\"aba\") == \"b\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aba') == 'b'\nassert solution('abab') == 'a'\nassert solution('abac') == 'b'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"aba\") == \"b\"\n\n----\ns = input()\nk = int(input())\n\nres = sorted(sorted(s), reverse=True, key=lambda x: x)\nprint(res[k-1])",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4618,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aba\") == \"b\"\nassert solution(\"abcabc\") == \"b\"\nassert solution(\"abacbabc\") == \"b\"\nassert solution(\"abacbabcba\") == \"b\"\nassert solution(\"abacbababc\") == \"b\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4 2') == '9'\nassert solution('1 2 3') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 4 2') == \"9\"\nassert solution('5 5 1') == \"14\"\nassert solution('5 5 2') == \"20\"\nassert solution('5 6 2') == \"24\"\nassert solution('5 6 3') == \"30\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 2\\n2 1 1\\n3 3 4\\n') == '9\\n', \"First\"\nassert solution('5 4 2\\n3 3 4\\n') == '9\\n', \"Second\"\nassert solution('5 5 2\\n1 1 2\\n2 2 4\\n') == '8\\n', \"Third\"\nassert solution('5 5 2\\n1 2 4\\n2 4 8\\n') == '9\\n', \"Fourth\"\nassert solution('5 5 2\\n2 2 4\\n1 4 8\\n') == '8\\n', \"Fifth\"\n",
        "num_ids_2": 53,
        "num_ids_4": 111
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"20 20 1\") == \"20\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4 2') == '9'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 4 2\") == \"9\"\nassert solution(\"5 5 1\") == \"16\"\nassert solution(\"5 5 2\") == \"9\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"5 4 2\n2 1 1\n3 3 4\"\"\") == \"9\"\nassert solution(\"\"\"5 3 2\n1 1 1\n2 3 4\"\"\") == \"18\"\nassert solution(\"\"\"10 10 10 10 10 10\n10 10 10 10 10 10\n10 10 10 10 10 10\n10 10 10 10 10 10\n10 10 10 10 10 10\n
        "num_ids_2": 16,
        "num_ids_4": 27
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"9\"\n\"\"\"\n\nW, H, N = [int(i) for i in stdin.split()]\nx_1, y_1, a_1 = [int(i) for i in stdin.split()]\nx_2, y_2, a_2 = [int(i) for i in stdin.split()]\n\narea = 0",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 4 2\n2 1 1\n3 3 4''') == '9'\nprint(solution('''5 4 2\n2 1 1\n3 3 4'''))\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4619,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 4 2\\n2 1 1\\n3 3 4\") == \"9\"\nassert solution(\"5 5 2\\n2 2 3\\n3 1 4\") == \"16\"\nassert solution(\"5 10 2\\n2 1 1\\n3 3 4\") == \"18\"\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"4\") == \"11\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"1\") == \"11\"\nassert solution(\"2\") == \"0\"\nassert solution(\"4\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n6 5 1\n1 10 1\n''') == '12'\nassert solution('''4\n6 5 1\n1 10 1\n''') == '11'\nassert solution('''5\n6 5 1\n1 10 1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '12\\n11\\n0\\n'\nassert solution('6') == '12\\n11\\n0\\n'\nassert solution('6 5 1') == '12\\n11\\n0\\n'\n",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '11'\nassert solution('4') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n6 5 1\n1 10 1\n''') == '12'\nassert solution('''\n3\n6 5 1\n1 10 1\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '12'\nassert solution('2') == '11'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"12\"\nassert solution(\"3\") == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4620,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5\n6 5 1\n1 10 1\n3\n3 10 1\n\"\"\") == \"12\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 2\") == \".*\\n.*\"\nassert solution(\"6 5\") == \"*.\\n*.\\n.*\\n.*\\n.*\\n.*\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '*.\\n*.\\n*.\\n*.\\n', 'Sample Test 1'\nassert solution('1 1') == '*.\\n*.\\n*.\\n*.\\n', 'Sample Test 2'\nassert solution('3 4') == '*.\\n*.\\n*.\\n*.\\n*.', 'Sample Test 3'\n",
        "num_ids_2": 54,
        "num_ids_4": 83
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '**'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\\n*.\\n\") == \"*.\\n*.\\n*.\\n*.\\n\"\nassert solution(\"10 20\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n\") == \"**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n**.**\\n\"",
        "num_ids_2": 129,
        "num_ids_4": 129
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2') == '**'\nassert solution('1 1') == '*'\n\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\") == \"**\\n**\\n**\\n**\\n\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"*\\n*\\n.*\\n.*\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('.*') == '*'\nassert solution('.*.') == '*'\nassert solution('.*..') == '*'\nassert solution('.*...') == '*'\nassert solution('.*....') == '*'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 2\n.\n.''') == '**'\nassert solution('''3 3\n.\n*\n*''') == '*.'\nassert solution('''6 3\n.\n.\n*\n*\n*\n*''') == '***'\nassert solution('''11 5\n*\n*.\n*\n.\n*\n.\n*''') == '*.'\nassert solution('''20 15\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*''') == '***'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4621,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 2\") == \"..\\n.\\n..\\n.\\n..\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin := input()) == \"YES\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n5\n2 6 1 4 5\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n2\n2 5\n\"\"\") == \"NO\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n2 6 1 4 5') == 'YES'\nassert solution('5\\n1 2 4 5') == 'NO'\nassert solution('5\\n1 2 3 4 5') == 'NO'\n",
        "num_ids_2": 33,
        "num_ids_4": 50
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 6 1 4 5\\n') == 'YES'\nassert solution('5\\n4 6 1 5 2\\n') == 'NO'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n2 1\n\n3\n1 3 5\n\n4\n1 3 5 6 7\n\n5\n1 2 3 4 5\n\n6\n1 2 3 4 5 6\n\n7\n1 2 3 4 5 6 7 8\n\n8\n1 2 3 4 5 6 7 8 9\n\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"YES\", \"Sample Test 1\"\nassert solution(\"10\") == \"NO\", \"Sample Test 2\"\nassert solution(\"20\") == \"YES\", \"Sample Test 3\"\nassert solution(\"30\") == \"NO\", \"Sample Test 4\"\nassert solution(\"40\") == \"NO\", \"Sample Test 5\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"NO\"\nassert solution(\"2\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4622,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 6 1 4 5\") == \"YES\"\nassert solution(\"5 2 1 4 5\") == \"NO\"\nassert solution(\"5 1 5 1 1\") == \"YES\"\nassert solution(\"1\") == \"NO\"",
        "num_ids_2": 28,
        "num_ids_4": 52
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input(\": \")) == \"2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''3\n4\n5\n7\n4\n2\n4\n6\n''') == '4'\nassert solution('''4\n5\n6\n7\n1\n2\n2\n2\n1\n3\n''') == '2'\nassert solution('''10\n5\n10 10 10 10 10\n2\n7\n1\n3\n4\n8\n1\n5\n4\n9\n9\n3\n6\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input(stdin.read())) == \"3\"\nassert solution(input(stdin.read())) == \"4\"\n",
        "num_ids_2": 26,
        "num_ids_4": 42
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3') == '2\\n3\\n4\\n1\\n2'\nassert solution('5\\n1 2 3 4 5\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 2 2 1 2 1 1 2\\n3') == '2\\n3\\n4\\n1\\n2'\n",
        "num_ids_2": 116,
        "num_ids_4": 232
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '4'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '2'\nassert solution('''\n5\n1 2 3 4 5\n8\n6 6 6 6 6 6 8 8\n8\n1 2 2 1 2 1 1 2\n3\n1 3 3\n6\n1 1 3 4 2 2\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '2'\nassert solution('1\\n3\\n1\\n4\\n5\\n2\\n3\\n4\\n5\\n3\\n2\\n2\\n2\\n3\\n2\\n') == '3'\nassert solution('5\\n2 3 4 5\\n1 2 2 1 2\\n8\\n6 6 6 6 6 6 8 8\\n8\\n1 1 3 4 2 2\\n3\\n1 3 4 2 2') == '4'\n",
        "num_ids_2": 62,
        "num_ids_4": 119
    },
    {
        "number": 4623,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n1 2 3\\n5\\n1 2 2 1 2 1 1 2\") == \"2\"\nassert solution(\"6\\n6 6 6 6 6 6 8 8\\n8\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"4\"\nassert solution(\"6\\n6 6 6 6 6 6 8 8\\n8\\n1 3 3\\n6\\n1 1 3 4 2 2\") == \"3\"\n",
        "num_ids_2": 67,
        "num_ids_4": 106
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2\n10\n10\n10''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n1 5\n22 5\n987 13\n\n''') == '3'\n\nassert solution('''4 3\n7 3\n1 5\n22 5\n987 13\n\n''') == '1'\n\nassert solution('''5 4\n3 4\n4 4\n2 4\n8 4\n\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3\n1 5\n22 5\n987 13\n''') == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('4\\n5 3\\n1 5\\n22 5\\n987 13') == '1'\nassert solution('4\\n1 5\\n22 5\\n987 13') == '77'\n",
        "num_ids_2": 52,
        "num_ids_4": 74
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\nassert solution('''\n2\n2\n''') == '2'\nassert solution('''\n4\n10 20\n10 20\n15 30\n10 20\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n3 5\n3\n5''') == '1'\nassert solution('''1\n5\n5''') == '1'\nassert solution('''5\n1\n5''') == '1'\nassert solution('''3\n3 5\n3\n5''') == '3'\nassert solution('''4\n7 3\n1 5\n22 5\n987 13\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"4\\n7 3\\n1 5\\n22 5\\n987 13\\n\") == \"3\\n1\\n5\\n77\"\nassert solution(\n    \"5\\n3 5\\n1 5\\n22 5\\n987 13\\n\") == \"3\\n1\\n5\\n77\"\nassert solution(\n    \"8\\n1 2\\n4 5\\n2 3\\n5 6\\n2 7\\n6 8\\n\") == \"2\\n1\\n5\\n77\"\nassert solution(\n    \"1\\n5 2\\n2 3\\n1 4\\n1 5\\n\") == \"1\\n1\\n5\\n77\"\nassert solution(\n    \"2\\n6 2\\n5 6\\n1 5\\n2 4\\n5 3\\n\") == \"1\\n1\\n5\\n77\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n5 3\") == \"2\"\nassert solution(\"2\\n5 5\") == \"1\"\nassert solution(\"1\\n5 5\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n7 3\\n1 5\\n22 5\\n987 13') == '3'\nassert solution('2\\n5 1\\n1 5\\n22 5\\n987 13') == '1'\nassert solution('2\\n7 3\\n1 5\\n22 5\\n987 13') == '1'\n",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4624,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n7 3\n1 5\n22 5\n987 13\n''') == '3'\n\nassert solution('''\n5\n1 2\n2 3\n1 4\n1 5\n1 6\n''') == '2'\n\nassert solution('''\n10\n2 1\n2 4\n1 7\n2 3\n1 5\n2 5\n1 6\n1 8\n2 9\n1 10\n''') == '6'\n\nassert solution('''\n20\n1 2\n1 3\n1 4\n1 5\n1 6\n1 7\n1 8\n1 9\n1 10\n1 11\n1 12\n1 13\n1 14\n1 15\n1 16\n1 17\n1 18\n1 19\n1 20\n''') == '19'\n\nassert solution('''\n2\n4 1\n4 2\n4 5\n1 2\n1 4\n1 5\n''') == '1'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution('''3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 2\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"4 2\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"4 5\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n",
        "num_ids_2": 72,
        "num_ids_4": 108
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(input()) == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(input()) == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\nabca\\n1 3\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"2\\n8\\nqwertyuioplkjhgfdsazxcvbnm\\n20 10 1 2 3 5 10 5 9 4\") == \"26 10 9 4 5 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 1035,
        "num_ids_4": 1035
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 5\nabcde\n3 8\nfc\n2 9\n''') == '''4 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\nassert solution('''\n2 1\nabca\n1 3\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '''4 2 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"\nassert solution(\"2\") == \"0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0\"\nassert solution(\"3\") == \"2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2\"\n\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\nassert solution('3 2') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\nassert solution('4 2 2') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'",
        "num_ids_2": 71,
        "num_ids_4": 108
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0'\\\n       '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0'\\\n       '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 '\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \nassert solution('2') == '0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 \nassert solution('3') == '2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n",
        "num_ids_2": 70,
        "num_ids_4": 105
    },
    {
        "number": 4625,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n4 2\nabca\n1 3\n10 5\ncodeforces\n2 8 3 2 9\n26 10\nqwertyuioplkjhgfdsazxcvbnm\n20 10 1 2 3 5 10 5 9 4\n''') == \"4 2 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 \\\n0 0 9 4 5 3 0 0 0 0 0 0 0 0 9 0 0 3 1 0 0 0 0 0 0 0 0 \\\n2 1 1 2 9 2 2 2 5 2 2 2 1 1 5 4 11 8 2 7 5 1 10 1 5 2 \n\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"1999999994\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"4\"\n\nstdin = \"\"\"\n1\n1 1\n1 2\n1 3\n1 4\n1 5\n2 1\n2 2\n2 3\n2 4\n3 1\n3 2\n3 4\n4 1\n4 2\n4 3\n\"\"\"\n\nprint(solution(stdin))\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '1999999994'\nassert solution('''\n1 10 2\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"3 3 4\") == \"36\"\nassert solution(\"10 20 30\") == \"0\"\nassert solution(\"5 5 5\") == \"0\"\nassert solution(\"2 4 3\") == \"2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3''') == '0'\nassert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3''') == '36'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\n2 4 5 3\n1\n2 3\n1 4\n1 5\n3 4\n1 6\n''') == '0'\nassert solution('''\n8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n\n''') == '1999999994'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1 1\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n8\n3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5\n3 2 6\n''') == '0'\nassert solution('''\n2\n3 3 5\n5 5 5\n3 3 4\n1 1000000000 1000000000\n1 1000000000 999999999\n''') == '1999999994'\nassert solution('''\n3\n3 2 5\n3 2 6\n''') == '4'\nassert solution('''\n9\n9 9 9\n9 9 9\n''') == '1999999994'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 4') == '0'\nassert solution('10 20 30') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3 4\n10 20 30\n5 5 5\n2 4 3\n1 1000000000 1000000000\n1 1000000000 999999999\n3 2 5''') == '1999999994'\n\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4626,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 4\\n10 20 30\\n5 5 5\\n2 4 3\\n1 1000000000 1000000000\\n1 1000000000 999999999\\n3 2 5\") == \"0\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"YES\"\nassert solution() == \"NO\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\nassert solution() == \"YES\"\n\n\n'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"YES\", \"YES test\"\nassert solution(\"1\") == \"NO\", \"NO test\"\nassert solution(\"5\") == \"YES\", \"YES test\"\nassert solution(\"4\") == \"YES\", \"YES test\"\nassert solution(\"1\") == \"NO\", \"NO test\"",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n3\n1 3 2\n1 3 2\n2 1 4''') == 'YES'\nassert solution('''4\n4\n1 2 3 4\n1 2 3 4\n2 1 3 4\n2 1 3 4''') == 'YES'\nassert solution('''5\n5\n1 2 3 4 5\n1 2 3 4 5\n2 1 4 5 3\n2 1 4 5 3''') == 'NO'\nassert solution('''5\n5\n1 2 3 4 5\n1 2 3 4 5\n2 1 4 5 3\n2 1 4 5 3''') == 'YES'\nassert solution('''5\n5\n1 2 3 4 5\n1 2 3 4 5\n2 1 4 5 3\n2 1 4 5 3''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == 'NO'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n11 14 16 12') == 'YES'\nassert solution('6\\n1 8') == 'NO'\nassert solution('4\\n1 1 1 1') == 'YES'\nassert solution('4\\n1 2 5 6') == 'NO'\nassert solution('2\\n12 13') == 'YES'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n11\n14\n16\n12\n''') == 'YES'\nassert solution('''7\n4\n11\n14\n16\n12\n''') == 'YES'\nassert solution('''6\n1\n2\n5\n6\n1\n2\n''') == 'NO'\nassert solution('''6\n1\n2\n5\n6\n1\n2\n''') == 'YES'\nassert solution('''4\n1\n2\n5\n6\n''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n11 14 16 12\") == \"YES\"\nassert solution(\"2\\n1 8\") == \"NO\"\nassert solution(\"6\\n1 6 3 10 5 8\") == \"YES\"\nassert solution(\"4\\n1 1 1 1\") == \"YES\"\nassert solution(\"6\\n1 12 3 10 5 8\") == \"YES\"\n",
        "num_ids_2": 30,
        "num_ids_4": 64
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"YES\"\nassert solution(\"1\") == \"NO\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1 1 1 1\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n8\n9\n7\n1\n4\n2\n6\n''') == 'YES'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4627,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2\\n5 6\") == \"NO\"\n\nassert solution(\"4\\n5 6\") == \"YES\"\n\nassert solution(\"8\\n12\") == \"YES\"\n\nassert solution(\"6\\n10\") == \"NO\"\n\nassert solution(\"2\\n1 3\") == \"YES\"",
        "num_ids_2": 31,
        "num_ids_4": 57
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 5 2') == '22'\nassert solution('5 5 4') == '13'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == '22'\n\nfor inputs_, solution_ in (\n    ((input_,), 22)\n    # ((input_,), 13)\n):\n    print(f\"{inputs_}\")\n    stdout_ = solution(*inputs_)\n    assert stdout_ == solution_\n    print(f\"{stdout_} == {solution_}\")",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 5 2\") == \"22\"\nassert solution(\"5 5 4\") == \"13\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5 2\n1 2 5\n2 3 7\n2 4 4\n4 5 2\n4 6 8\n1 6\n5 3\n''') == '22'\nassert solution('''\n5 5 4\n1 2 5\n2 3 4\n1 4 3\n4 3 7\n3 5 2\n1 5\n1 3\n3 3\n1 5\n\n''') == '13'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '13'\nassert solution('2 3') == '13'\nassert solution('3 2') == '13'\nassert solution('4 3') == '22'\nassert solution('5 3') == '22'\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('6 5 2') == '22'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4628,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5 4') == '13'\nassert solution('5 5 4') == '22'\nassert solution('5 5 4') == '13'\nassert solution('5 5 4') == '22'\nassert solution('5 5 4') == '13'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\\n2\") == \"3\\n\"\nassert solution(\"1\\n3\") == \"3\\n\"\nassert solution(\"1\\n3620\") == \"27\\n\"\nassert solution(\"1\\n10000\") == \"19683\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n6\\n13\\n14\\n3620\\n10000') == '3\\n9\\n13\\n27\\n6561\\n19683'\nassert solution('1\\n2\\n10\\n100\\n1000\\n10000') == '3\\n9\\n13\\n27\\n6561\\n19683'\n",
        "num_ids_2": 88,
        "num_ids_4": 88
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2\n3\n5\n7\n8\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n7",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n5\\n8\\n\") == \"7\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '3'\n\nassert solution('''1\n2\n6\n13\n14\n3620\n10000''') == '9'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '3620'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n2\n6\n13\n14\n3620\n10000\n''') == '1,3,9,13,27,6561,19683'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1 3 9 13 27 6561 19683'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1\\n1\\n1') == '1'\nassert solution('2\\n10\\n1\\n1') == '1'\nassert solution('2\\n10\\n100\\n1') == '1'\nassert solution('2\\n10\\n100\\n1') == '1'\nassert solution('2\\n100\\n100\\n1') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4629,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('6') == '9'\nassert solution('13') == '27'\nassert solution('14') == '39'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 2 3 4 5 3 3 2 1 3 2 2 3'\nassert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 2 3 4 5 2 2 2 1 3 2 1 3'\nassert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 2 3 4 5 3 3 2 1 3 2 1 3'\nassert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 2 3 4 5 2 2 2 1 3 2 1 3'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\\n\"\n    \"3\\n\"\n    \"2 1 2\\n\"\n    \"3 4 1 2\\n\"\n    \"3\\n\"\n    \"5 1 2 4 3\\n\"\n    \"2\\n\"\n    \"1 1 1 1 1\\n\"\n    \"2 2 2 2 2\"\n) == \"4 1 1 4 4\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\\n2\\n3\\n1\") == \"3 3 3\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2''') == '''1 1 1 1 1\n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4'''",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '4 3 3 2 1 3\\n1 2 3 4 5\\n1 1 1 1 1\\n1\\n4 4 4 1 4\\n5\\n2 2 2 2\\n4\\n4 4 1 4\\n5\\n5 5 1 2 4 3\\n3 4 3 2 1 3\\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\nassert solution('''6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '''1 1 1 1 1 \n3 3 3 \n2 3 3 2 1 3 \n1 \n2 2 2 2 \n4 4 4 1 4\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\") == \"3 3 3 2 1 3\\n2 3 3 2 2 1 4 4\\n1 2 2 2 2 1 4 4\\n1 1 1 1 1 1\"\nassert solution(\"4\\n5\\n1 2 3 4 5\\n3\\n2 3 1\\n6\\n4 6 2 1 5 3\\n2 3 3 2\\n1 1 1 1 1 1\") == \"1 1 1 1 1 1\\n2 3 3 2 2 1 4 4\\n3 3 3 2 2 1 4 4\\n3 3 3 2 2 1 4 4\"\n",
        "num_ids_2": 160,
        "num_ids_4": 160
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"\"\"\n3\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n\"\"\") == \"2 1 2 2 1\"\nassert solution(\n    \"\"\"\n3\n4\n1 2 3\n3\n2 1\n5\n1 4 3 2\n3\n4 1 2\n\"\"\") == \"2 1 2\"\nassert solution(\n    \"\"\"\n5\n4\n1 2 3\n2\n3\n1\n5\n3\n2\n\"\"\") == \"3 3 2 2 1\"\nassert solution(\n    \"\"\"\n3\n4\n1 2 3\n2\n1\n3\n4\n\"\"\") == \"2 2 2\"\nassert solution(\n    \"\"\"\n5\n1\n1\n1\n1\n1\n\"\"\") == \"1 1\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4630,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6\n5\n1 2 3 4 5\n3\n2 3 1\n6\n4 6 2 1 5 3\n1\n1\n4\n3 4 1 2\n5\n5 1 2 4 3\n''') == '1 1 1 1 1 3 3'\nassert solution('''10\n3\n1 2 1\n3 4 2\n4 1 3\n5 6 3\n1 2 2\n2 1 1\n6 1 1\n7 1 2\n8 1 3\n9 1 4\n10 1 5\n''') == '3 3 2 2 3 3 1 1 4 4 5 1 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\n\nassert solution('''\n3 5\n0 3 1\n''') == '7'\n\nprint(solution('''\n2 10\n1 2 3 4 5 6 7 8 9 10\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '7 5 -2 4 -1 2'\nassert solution('1 5') == '8 -1 2 6 4 0 3'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '5 -2 4 -1 2'\n\n\n>>> import io\n>>> from collections import Counter\n>>> from operator import itemgetter\n>>> import random\n>>> import re\n>>> from typing import List\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3 6\n0 3 1\n''') == '8\n\nassert solution('''\n2 5\n1 5\n''') == '-1 2 6 4 0 3 \n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '2 6\\n'\n    '1 5\\n'\n) == '8\\n'\nassert solution(\n    '3 5\\n'\n    '0 3 1\\n'\n) == '7\\n'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 6\n1 5\n\"\"\") == \"8\"\nassert solution(\"\"\"\n3 5\n0 3 1\n\"\"\") == \"7\"\nassert solution(\"\"\"\n5 5\n0 3 1 2 3\n\"\"\") == \"0 -1 3 2 1\"\n\nassert solution(\"\"\"\n10 2\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"1 -1 2 3 4 5 6 7 8 9 10\"\n\nassert solution(\"\"\"\n3 5\n-2 -1 1\n\"\"\") == \"1 -1 1 -2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 6\") == \"8\"\nassert solution(\"3 5\") == \"5 -2 4 -1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 6') == '8'\nassert solution('3 5') == '7'\nassert solution('4 7') == '5 -2 4 -1 2'\nassert solution('5 8') == '5 -2 4 -1 2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 57
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8\n\nassert solution('''\n3 5\n0 3 1\n''') == '7\n\nassert solution('''\n5 6\n3 4 1\n''') == '4\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4631,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 6\n1 5\n''') == '8'\nassert solution('''\n3 5\n0 3 1\n''') == '7'\nassert solution('''\n5\n0 3 4 5\n''') == '5 -2 4 -1 2'\nassert solution('''\n3\n0 3 1\n''') == '-1 2 6 4 0 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"YES\"\nassert solution('''\n10\n8 9\n2 1\n0 0\n1 9\n0 3\n1 2\n4 6\n3 4\n5 7\n8 8\n8 6\n7 7\n0 2\n2 4\n5 5\n5 4\n4 5\n''') == \"YES\"\nassert solution('''\n100\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"NO\"\nassert solution('''\n10\n8 9\n2 1\n0 0\n1 9\n0 3\n1 2\n4 6\n3 4\n5 7\n8 8\n8 6\n7 7\n0 2\n2 4\n5 5\n5 4\n4 5\n''') == \"YES\"\nassert solution('''\n100\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == \"NO\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'YES'\n\nassert solution('''\n3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'NO'\n\nassert solution('''\n4\n2\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'YES'\n\nassert solution('''\n4\n2\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'NO'\n\nassert solution('''\n3\n1 2\n2 2\n3 3\n\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\nassert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\nassert solution('''4\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'NO'\nassert solution('''2\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\nassert solution('''5\n1 2\n1 3\n2 3\n2 4\n5 5\n4 3\n2\n1 0\n0 1\n1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\n''') == 'YES'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'YES'\nassert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\nassert solution('''\n0\n2\n''') == 'NO'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    5\n    1 3\n    1 2\n    3 3\n    5 5\n    4 3\n    2\n    1 0\n    0 1\n    1\n    4 3\n''') == \"YES\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'YES'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n5\n4 4\n4 3\n3 3\n3 2\n2 2\n1 0\n0 1\n1\n4 3\n\"\"\") == \"NO\"\nassert solution(\"\"\"\n5\n3\n2 2\n1 1\n1 1\n1\n0 0\n0 0\n\"\"\") == \"YES\"\nassert solution(\"\"\"\n5\n4\n3 3\n2 2\n1 1\n1\n0 0\n0 0\n\"\"\") == \"NO\"\n\n\"\"\"\n[Image]\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2''') == \"YES\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4632,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n1 3\n1 2\n3 3\n5 5\n4 3\n2\n1 0\n0 1\n1\n4 3\n''') == 'YES'\n\"\"\"\n\n\"\"\"\nn = int(input())\narr = []\nfor i in range(n):\n    a, b = list(map(int, input().split()))\n    arr.append([a,b])",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n5\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '2'\nassert solution('''\n2\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '2'\nassert solution('''\n2\n217871987498122 10\n100000000000000001 1\n''') == '3'\nassert solution('''\n3\n217871987498122 10\n100000000000000001 1\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n2 1\n1 1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''\n4\n1 1\n2 2\n9 9\n3 3\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"2 1\\n1 1\\n500 4\\n217871987498122 10\\n100000000000000001 1\\n\"\n) == \"8\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2\n2 3\n3 1\n''') == '8'\n\nassert solution('''\n5 6\n1 1\n2 2\n4 4\n6 6\n7 7\n''') == '7'\n\nassert solution('''\n1 2\n2 3\n3 4\n''') == '0'\n\nassert solution('''\n5 1\n1 1\n''') == '8'\n\nassert solution('''\n5 8\n4 1\n3 2\n2 3\n1 4\n1 5\n''') == '4'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n1\n3\n1\n6\n''') == '0'\nassert solution('''2\n1\n6\n''') == '8'\nassert solution('''5\n1\n1\n0\n8\n''') == '1'\nassert solution('''4\n7\n100\n''') == '2'\nassert solution('''5\n4\n4\n9\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"2128012501878\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '8'\nassert solution('1 1') == '0'\nassert solution('500 4') == '0'\nassert solution('217871987498122 10') == '2128012501878'\nassert solution('100000000000000001 1') == '899999999999999999'\n",
        "num_ids_2": 22,
        "num_ids_4": 53
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n1\n500 4\n217871987498122 10\n100000000000000001 1\n''') == '8'\nassert solution('''3\n2\n5\n2\n1\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '8'\nassert solution() == '0'\nassert solution() == '500'\nassert solution() == '2128012501878'\nassert solution() == '899999999999999999'\n\n\"\"\"\n\n\nfrom math import floor",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4633,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    2 1\n    1 1\n    500 4\n    217871987498122 10\n    100000000000000001 1\n    ''') == '8'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n3\n1 0 0 1\n2\n0 1 0\n5\n0 0 1\n''') == '1'\nassert solution('''4\n5\n0 0 1\n1 1 0\n4\n1 1 0\n''') == '2'\nassert solution('''5\n5\n1 1 0 0 1\n2\n0 1 0\n4\n1 1 0\n''') == '0'\nassert solution('''5\n5\n0 1 0 0 1\n1 1 0\n4\n1 1 0\n''') == '0'\nassert solution('''7\n3\n1 0 0 1\n2\n0 1 0\n5\n1 0 0\n6\n0 1 0\n''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n\"\n) == \"2\"\n\nassert solution(\n    \"4\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\\n3\\n1 0 0\\n\"\n) == \"2\"\n\nassert solution(\n    \"3\\n5\\n1 1 0 1 1\\n5\\n1 1 0 1 1\\n3\\n\"\n) == \"4\"\n\nassert solution(\n    \"2\\n4\\n1 0 0\\n5\\n1 1 0 1 1\\n3\\n\"\n) == \"1\"\n\nassert solution(\n    \"1\\n2\\n1 0 0\\n5\\n1 1 0 1 1\\n3\\n\"\n) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4\n0 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0\n6\n1 0 0 0 0 1''') == '2'\nassert solution('''4\n0 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0\n6\n1 0 0 0 0 1''') == '4'\nassert solution('''4\n0 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0\n6\n1 0 0 0 0 1''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"2\"\nassert solution(\"2\\n1 1 0 1 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"4\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"1\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\\n6\\n1 0 0 0 0 1\\n5\\n1 1 0 1 1\") == \"0\"",
        "num_ids_2": 117,
        "num_ids_4": 239
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2'\nassert solution('7') == '0'\nassert solution('3') == '0'\nassert solution('5') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\") == \"2\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\") == \"4\"\nassert solution(\"5\\n7\\n0 0 1 0 1 0 1\\n3\\n1 0 0\\n5\\n1 1 0 0 1\") == \"1\"\n",
        "num_ids_2": 70,
        "num_ids_4": 110
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''\n5\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '4'\nassert solution('''\n5\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '1'\nassert solution('''\n5\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\nassert solution('''\n5\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n7\n0 0 1 0 1 0 1\n3\n1 0 0\n5\n1 1 0 0 1\n6\n1 0 0 0 0 1\n5\n1 1 0 1 1\n''') == '2'\nassert solution('''4\n3\n1 0 1\n2 0 0\n3 0 1\n''') == '0'\nassert solution('''6\n0\n0 1\n0 0 1\n0 1 1\n0 0 0 1\n0 1 1\n''') == '4'\nassert solution('''5\n0\n0 1\n0 0 1\n0 1 1\n0 0 0 1\n0 1 1\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\nprint(solution(sys.stdin.read()), end=\"\")\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4634,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"7\") == \"0\"\nassert solution(\"3\") == \"0\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n6 3\") == \"abcd\"\nassert solution(\"3\\n5 2\") == \"bcac\"\nassert solution(\"3\\n7 3\") == \"cbcacab\"\n",
        "num_ids_2": 30,
        "num_ids_4": 47
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'cbcacab'\nassert solution('5') == 'abcd'\nassert solution('6') == 'baabab'\n\"\"\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5 3\\n7 3\\n') == 'cbcacab'\nassert solution('2\\n7 4\\n6 2\\n') == 'abcd'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n7 3\n4 4\n6 2\n''') == 'cbcacab'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n7 3\n4 4\n6 2\n\"\"\") == \"cbcacab\"\nassert solution(\"\"\"\n4\n4 4\n2 2\n\"\"\") == \"abcd\"\nassert solution(\"\"\"\n3\n7 3\n2 2\n\"\"\") == \"baabab\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == 'abcd'\nassert solution('2') == 'baabab'\nassert solution('1') == 'cbcaca'\n\n\"\"\"\n\nimport re\nfrom itertools import permutations\nfrom collections import Counter",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'abc'\nassert solution('2') == 'bbbaa'\nassert solution('3') == 'bbcbb'",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'abcd'\nassert solution('2') == 'cbcacab'\nassert solution('3') == 'baabab'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"abcd\"\nassert solution(input()) == \"cbcacab\"\nassert solution(input()) == \"baabab\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4635,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n7 3\n4 4\n6 2''') == \"cbcacab\"\nassert solution('''3\n7 3\n4 4\n6 2''') == \"abcd\"\nassert solution('''3\n7 3\n4 4\n6 2''') == \"baabab\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5') == '6 23 21'\nassert solution('1\\n1000\\n3\\n1 1 1') == '1 1000 0'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5') == '6 23 21'\nassert solution('6\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13') == '2 2 1'\nassert solution('7\\n1 1 1') == '1 1000 0'\n",
        "num_ids_2": 51,
        "num_ids_4": 109
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n3\n2 3\n2\n1 2\n1\n3\n2 1\n3 2\n2 1\n2\n3\n2 2\n2\n''') == '1 3\\n5 3\\n6 3\\n8 3\\n8\\n9 4\\n7 4\\n8 4\\n8\\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n3\n1 3 5 2\n3\n5\n8 2 1\n6\n''') == '''2 3 4\n2 3 4'''\nassert solution('''\n2\n10\n3\n5\n6\n8\n7\n1\n4\n1\n''') == '''0 0'''\nassert solution('''\n4\n11\n3 1 4 1 5 9 2 6 5 3 5\n2\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '''6 23 21\n1 1000 0\n2 1 2\n6 45 46\n2 2 1\n3 4 2\n4 4 3\n4 4 3\n3 4 3'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7\n11\n3 1 4 1 5 9 2 6 5 3 5\n1\n1000\n3\n1 1 1\n13\n1 2 3 4 5 6 7 8 9 10 11 12 13\n2\n2 1\n6\n1 1 1\n7\n1 1 1\n''') == '6 23 21'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n20\n1 2 2 3 3\n3\n2 2 1 1 1\n2\n10\n1 1 1 1 1 1 1 1 1 1\n3\n1 1 1 1 1 1 1 1 1\n2\n3\n2\n1\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n1\\n1000\\n3\\n1 1 1') == '6 23 21'\nassert solution('1\\n1000\\n3\\n1 1 1') == '1 1000 0'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n2\\n2 1') == '6 45 46'\nassert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5\\n3\\n1 1 1') == '2 1 2'\n",
        "num_ids_2": 65,
        "num_ids_4": 136
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6 23 21'\nassert solution('''2\n5 1\n5 1\n6\n6\n3\n8\n''') == '2 1 2'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    4\n    11\n    3 1 4 1 5 9 2 6 5 3 5\n    1\n    1000\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    2\n    2 1\n    6\n    1 1 1\n    7\n    1 1 1\n    8\n    1 1 1\n    9\n    1 1 1\n    10\n    1 1 1\n    11\n    1 1 1\n    12\n    1 1 1\n    13\n    1 1 1\n    14\n    1 1 1\n    15\n    1 1 1\n    16\n    1 1 1\n    17\n    1 1 1\n    18\n    1 1 1\n    19\n    1 1 1\n    20\n    1 1 1\n    21\n    1 1 1\n    22\n    1 1 1\n    23\n    1 1 1\n    24\n    1 1 1\n    ''') == '24 23 21'\n\nassert solution('''\n    4\n    11\n    3 1 4 1 5 9 2 6 5 3 5\n    1\n    1000\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    2\n    2 1\n    6\n    1 1 1\n    7\n    1 1 1\n    8\n    1 1 1\n    9\n    1 1 1\n    10\n    1 1 1\n    11\n    1 1 1\n    12\n    1 1 1\n    13\n    1 1 1\n    14\n    1 1 1\n    15\n    1 1 1\n    16\n    1 1 1\n    17\n    1 1 1\n    18\n    1 1 1\n    19\n    1 1 1\n    20\n    1 1 1\n    21\n    1 1 1\n    22\n    1 1 1\n    23\n    1 1 1\n    24\n    1 1 1\n    ''') == '24 23 21'\n\nassert solution('''\n    4\n    11\n    3 1 4 1 5 9 2 6 5 3 5\n    1\n    1000\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    2\n    2 1\n    6\n    1 1 1\n    7\n    1 1 1\n    8\n    1 1 1\n    9\n    1 1 1\n    10\n    1 1 1\n    11\n    1 1 1\n    12\n    1 1 1\n    13\n    1 1 1\n    14\n    1 1 1\n    15\n    1 1 1\n    16\n    1 1 1\n    17\n    1 1 1\n    18\n    1 1 1\n    19\n    1 1 1\n    20\n    1 1 1\n    21\n    1 1 1\n    22\n    1 1 1\n    23\n    1 1 1\n    24\n    1 1 1\n    ''') == '24 23 21'\n\nassert solution('''\n    4\n    11\n    3 1 4 1 5 9 2 6 5 3 5\n    1\n    1000\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12 13\n    2\n    2 1\n    6\n    1 1 1\n    7\n    1 1 1\n    8\n    1 1 1\n    9\n    1 1 1\n    10\n    1 1 1\n    11\n    1 1 1\n    12\n    1 1 1\n    13\n    1 1 1\n    14\n    1 1 1\n    15\n    1 1 1\n    16\n    1 1 1\n    17\n    1 1 1\n    18\n    1 1 1\n    19\n    1 1 1\n    20\n    1 1 1\n    21\n    1 1 1\n    22\n    1 1 1\n    23\n    1 1 1\n    24\n    1 1 1\n    ''') == '24 23 21'\n\nassert solution('''\n    4\n    11\n    3 1 4 1 5 9 2 6 5 3 5\n    1\n    1000\n    3\n    1 1 1\n    13\n    1 2 3 4 5 6 7 8 9 10 11 12",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4636,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7\\n11\\n3 1 4 1 5 9 2 6 5 3 5') == '6 23 21'\nassert solution('7\\n1\\n1000\\n3\\n1 1 1\\n13\\n1 2 3 4 5 6 7 8 9 10 11 12 13\\n2\\n2 1\\n6\\n1 1 1\\n7\\n1 1 1\\n') == '1 1000 0\\n2 1 2\\n6 45 46\\n2 2 1\\n3 4 2\\n4 4 3\\n4 4 3'\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n2 1\\n1 2\\n3 4\\n5 5\\n5 5 6 6 5\\n1 2 5 4 3') == '6'\nassert solution('10\\n9 9 10 10 9\\n4 0\\n2 2 4 3') == '27'\nassert solution('10\\n4 4 5 4\\n4 4 5 4\\n4 4 5 4\\n4 4 5 4') == '11'\nassert solution('10\\n4 4 5 4\\n4 4 5 4\\n4 4 5 4\\n4 4 5 4') == '17'\nassert solution('10\\n4 4 5 4\\n4 4 5 4\\n4 4 5 4\\n4 4 5 4') == '17'\n",
        "num_ids_2": 67,
        "num_ids_4": 135
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n3 1\n2 2\n4 5\n4 1\n''') == '27'\n\nassert solution('''\n4\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\n\nassert solution('''\n5\n5 5\n5 5 6 6 5\n1 2 5 4 3\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 2 1\n4 4 5 4\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"27\"\nassert solution(\"2 2\") == \"39\"\nassert solution(\"3 4\") == \"11\"\nassert solution(\"4 4\") == \"17\"\nassert solution(\"5 5\") == \"11\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '27'\nassert solution() == '39'\nassert solution() == '11'\nassert solution() == '17'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"27\"\nassert solution('''\n5 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"39\"\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"11\"\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"17\"\nassert solution('''\n5 2\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == \"27\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '27'\nassert solution('''2\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '39'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '11'\nassert solution('''2\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '17'\nassert solution('''5\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1\") == \"6\"\nassert solution(\"5 1\") == \"27\"\nassert solution(\"10 9 10 10 9\") == \"11\"\nassert solution(\"4 0\") == \"17\"\nassert solution(\"2 2 4 3\") == \"39\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4637,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 1\n1 2\n3 4\n5 5\n5 5 6 6 5\n1 2 5 4 3\n5 3\n1 2 3 4 5\n10 9 10 10 9\n4 0\n2 2 4 3\n2 4 2 3\n4 4\n1 2 2 1\n4 4 5 4\n''') == '6'\nprint('all tests passed')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"10 2\\n\"\n    \"7 6 18 6 16 18 1 17 17\\n\"\n    \"6 9 3 10 9 1 10 1 5\\n\"\n) == \"0 7 13 18 24 35 36 37 40 45\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45 '\n\nassert solution('''\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n''') == '0 2 4 7 8 11 13 14 16 17 '",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n\"\"\") == \"0 7 13 18 24 35 36 37 40 45\"\nassert solution(\"\"\"\n10 1\n3 2 3 1 3 3 1 4 1\n1 2 3 4 4 1 2 1 3\n\"\"\") == \"0 2 4 7 8 11 13 14 16 17\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n10 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45 \n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '5 7 10 11 13 14 16 17'\nassert solution('''\n5 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\nassert solution('''\n6 5\n6 7 9 10 7 9 10 10 5\n10 5 6 9 7 8 4 4 3 3\n''') == '0 3 7 9 10 9 10 10 5'\nassert solution('''\n5 6\n3 4 5 6 9 5 6\n1 1 2 3 2 1 2 3\n1 1 3 1 1 3 1 3\n1 1 1 3 1 1 3 1 3\n''') == '0 2 1 1 1 1 1 2'\nassert solution('''\n5 2\n7 6 18 6 16 18 1 17 17\n6 9 3 10 9 1 10 1 5\n''') == '0 7 13 18 24 35 36 37 40 45'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '0 7 13 18 24 35 36 37 40 45'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '0 2 4 7 8 11 13 14 16 17'\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input_string) == output_string",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4638,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 2') == '0 2 4 7 8 11 13 14 16 17'\nassert solution('1 1') == '1'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7\\n5 1\") == \"aaabb\"\nassert solution(\"5 1\") == \"aabab\"\nassert solution(\"5 2\") == \"aabab\"\nassert solution(\"5 8\") == \"baaba\"\nassert solution(\"5 10\") == \"bbaaa\"\n",
        "num_ids_2": 28,
        "num_ids_4": 53
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100''') == 'aaabb'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == 'aaabb'\nprint(solution('''\n20\n3\n1\n1\n1\n'''))\nprint(solution('''\n10\n2\n1\n1\n1\n1\n1\n1\n1\n1\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"abab\"\nassert solution() == \"baab\"\nassert solution() == \"baaba\"\nassert solution() == \"aaaaabaaaaabaaaaaaaa\"",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == 'aaabb'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 1\n5 2\n5 8\n5 10\n3 1\n3 2''') == 'aaaaabaaaaabaaaaaaaa'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n3 1\n3 2\n''') == 'aabb'\nassert solution('''\n3\n1 2\n1 1\n''') == 'aabb'\nassert solution('''\n2\n5 2\n5 8\n''') == 'aabab'\nassert solution('''\n3\n2 4\n1 1\n''') == 'bbaaa'\nassert solution('''\n1\n1\n''') == 'bab'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 1') == 'aaabb'\nassert solution('5 2') == 'aabab'\nassert solution('5 8') == 'baaba'\nassert solution('5 10') == 'bbaaa'\nassert solution('3 1') == 'abb'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"3 2\") == \"aabba\"\nassert solution(\"5 2\") == \"aaabb\"\nassert solution(\"5 1\") == \"aaabb\"\nassert solution(\"20 100\") == \"aaaaabaaaaabaaaaaaaaaabaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaabaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4639,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 1\n5 2\n5 8\n5 10\n3 1\n3 2\n20 100\n''') == \"aaaaabaaaaabaaaaaaaa\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\\n1000000000\\n1000000000\\n5 10\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19\\n12 13 6 17 1 14 7 9 19 3\") == \"6\"\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2\n3\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n''') == '5'\nassert solution('''2\n7\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n''') == '1'\nassert solution('''4\n7\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n3 1\n1 2 3\n1 1\n''') == '1'\nprint(solution('''\n4\n6\n5\n4\n5\n3\n5\n5\n5\n4\n3\n''')) == '4'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\n'''\n3\n4 6\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n10 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''\n10 2\n1 2 3 4\n5\n1 3 4\n2 4\n1 5\n3 6\n4 7\n5 8\n''') == '10'\nassert solution('''\n7 4\n1 2\n3 4\n5 6\n7 8\n1 5\n''') == '8'\nassert solution('''\n1 2\n2 3\n3 4\n4 5\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '5'\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '10'\nassert solution('''\n7\n1 1\n1000000000\n1000000000\n''') == '0'\nassert solution('''\n7\n1 1\n1000000000\n1000000000\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4') == '6'\nassert solution('4\\n6 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4') == '1'\nassert solution('5\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10\\n15 19 8 17 20 10 9 2 10 19') == '10'\nassert solution('5\\n10 7 5 15 8\\n20 199 192 219 1904\\n10 10') == '5'",
        "num_ids_2": 64,
        "num_ids_4": 132
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '6'\n\nassert solution('''\n4\n7 1\n1 5 2 3 1 5 4\n1 3 6 7 2 5 4\n1 1\n1000000000\n1000000000\n5 10\n10 7 5 15 8\n20 199 192 219 1904\n10 10\n15 19 8 17 20 10 9 2 10 19\n12 13 6 17 1 14 7 9 19 3\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4640,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n6 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\") == \"6\"\nassert solution(\"3\\n7 1\\n1 5 2 3 1 5 4\\n1 3 6 7 2 5 4\\n1 1\") == \"1\"\nassert solution(\"3\\n5 1000000000\\n1000000000 1000000000\\n1000000000\\n1000000000\\n10000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n1000000000\\n100",
        "num_ids_2": 72,
        "num_ids_4": 1416
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"3 3\") == \"3\"\nassert solution(\"5 5\") == \"6\"\nassert solution(\"2 2\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\nassert solution('4 3\\n1\\n2\\n1\\n2\\n') == '0\\n0\\n0\\n0'",
        "num_ids_2": 84,
        "num_ids_4": 84
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''7 3\n0\n1\n2\n2\n0\n0\n10''') == '1'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\nassert solution('''4 3\n1\n2\n1\n2''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3\\n0\\n1\\n2\\n2\\n0\\n0\") == \"1\\n2\\n3\\n4\\n4\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 3\\n0\\n1\\n2\\n2\") == \"1\\n2\\n3\\n3\"\nassert solution(\"5 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"10 3\\n1\\n2\\n1\\n2\\n0\\n0\\n10\\n\") == \"0\\n0\\n0\\n0\"\nassert solution(\"11 3\\n1\\n2\\n1\\n2\\n0\\n0\\n10\\n\") == \"1\\n2\\n3\\n3\"\n",
        "num_ids_2": 75,
        "num_ids_4": 161
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('7 3') == '1'\nassert solution('4 3') == '0'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"1\"\nassert solution(\"4 3\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('7 3\\n0\\n1\\n2\\n2\\n0\\n0\\n10') == '1\\n2\\n3\\n3\\n4\\n4\\n7'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4641,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"7 3\\n\"\n    \"0\\n\"\n    \"1\\n\"\n    \"2\\n\"\n    \"2\\n\"\n    \"0\\n\"\n    \"0\\n\"\n    \"10\"\n    ) == \"1\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 40 30 50 10'\nassert solution('''\n5 2 1 49\n5 20 50\n6 20 50\n''') == '1 49 20 40 30 50 10'\nassert solution('''\n6 20 50\n5 20 50\n6 20 50\n''') == '1 49 20 40 30 50 10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 1 49\n5 20 50\n6 20 50\n''') == \"1 49 20 40 30 50 10\"\n\nassert solution('''\n5 20 50\n6 20 50\n''') == \"26 32 20 38 44 50 10 1 10 13 4 19 22 25 16 7\"\n\nassert solution('''\n2 3 9\n5 20 50\n6 20 50\n''') == \"1 9 20 50 3 6\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 1 49\") == \"1 49\"\nassert solution(\"5 20 50\") == \"20 40 30 50 10\"\nassert solution(\"6 20 50\") == \"26 32 20 38 44 50 1 10 13 4 19 22 25 16 7\"\nassert solution(\"5 3 8\") == \"8 23 18 13 3\"\nassert solution(\"9 13 22\") == \"1 10 13 4 19 22 25 16 7\"\n",
        "num_ids_2": 29,
        "num_ids_4": 71
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '20 40 30 50 10'\nassert solution('5 3 8') == '8 23 18 13 3'\nassert solution('9 13 22') == '1 10 13 4 19 22 25 16 7'\n",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4 5') == '1 2 3 4 5'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1 49') == '1 49'\nassert solution('5 20 50') == '20 40 30 50 10'\nassert solution('6 20 50') == '20 40 30 50 10'\nassert solution('5 3 8') == '8 23 18 13 3'\nassert solution('9 13 22') == '1 10 13 4 19 22 25 16 7'",
        "num_ids_2": 29,
        "num_ids_4": 61
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n5 20 50\\n6 20 50\") == \"26 32 20 38 44 50 1 10 13 4 19 22 25 16 7\"\nassert solution(\"2\\n2 1 49\\n5 20 50\\n6 20 50\") == \"1 49 20 40 30 50 10\"\nassert solution(\"6\\n5 20 50\\n6 20 50\\n5 3 8\\n9 13 22\") == \"8 23 18 13 3\\n20 40 30 50 10 1 10 13 4 19 22 25 16 7\"",
        "num_ids_2": 65,
        "num_ids_4": 115
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 2 1 49\n5 20 50\n6 20 50\n5 3 8\n9 13 22\n''') == '1 49 20 40 30 50 10 26 32 20 38 44 50 8 23 18 13 3 1 10 13 4 19 22 25 16 7'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n\"\"\"\n3\n2 1 49\n5 20 50\n6 20 50\n\"\"\") == \"\"\"\n1 49 \n20 40 30 50 10\n\"\"\".strip()",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4642,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n3 1 2') == '1 2'\nassert solution('5\\n2 1 49') == '2 1'\nassert solution('6\\n3 1 49 50') == '3 1'\nassert solution('7\\n3 1 49 50 20') == '3 1 20'\nassert solution('8\\n3 1 49 50 20 8') == '3 1 20'\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == output\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 1 2') == '3 2 1 5'\nassert solution('10 10 10 10 10 10 10 10 10') == '10 10 10 10 10 10 10 10'\nassert solution('100 100 100 100 100') == '100 100 100 100 100'",
        "num_ids_2": 41,
        "num_ids_4": 59
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3 1 2') == '1 2 3'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 1 2') == '1 2 3'\n\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3 1 2\n''') == '1 2 3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3 1 2\") == \"1 2 3\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 5 1 3 2') == '3 2 1 5 2'\n\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4643,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '1 2 3'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n\nassert solution('''\n2\n3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'YES'\nassert solution('3') == 'NO'\nassert solution('4') == 'YES'\nassert solution('5') == 'NO'\nassert solution('6') == 'NO'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'NO'\nassert solution('2') == 'YES'\nassert solution('3') == 'YES'\nassert solution('4') == 'YES'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\nassert solution('''\n5\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n2\\n2 3\\n4\\n2 2 8 8\\n3\\n3 3 3\\n4\\n5 5 5 5\\n4\\n1 1 1 1\\n') == \"YES\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\nassert solution('''\n5\n2\n3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n2 3\n4\n2 2 8 8''') == 'NO'\nassert solution('''3\n3 3 3\n4\n5 5 5 5''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'NO'\n\n\nassert solution('''\n1\n1 1\n1\n''') == 'YES'\n\nassert solution('''\n2\n2 3\n4\n2 2 8 8\n3\n3 3 3\n4\n5 5 5 5\n4\n1 1 1 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4644,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 3\\n4') == 'YES'\nassert solution('3\\n3 3 3') == 'NO'\nassert solution('4\\n5 5 5 5') == 'NO'\nassert solution('4\\n1 1 1 1') == 'YES'\n\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6\\n') == '-1'\nassert solution('10\\n') == '9 6 10 8 4 7 3 1 5 2'\nassert solution('12\\n') == '5 1 3 6 2 4 7'\nassert solution('13\\n') == '13 9 7 11 8 4 1 3 5 2 6 10 12'\n",
        "num_ids_2": 34,
        "num_ids_4": 76
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n4\n6\n7\n8\n9\n\"\"\"\n) == \"\"\"9 6 10 8 4 7 3 1 5 2\"\"\"\n\nassert solution(\n\"\"\"\n5\n11\n2\n3\n4\n5\n\"\"\"\n) == \"\"\"11 3 2 5 4 10 7 8 9 6 1\"\"\"\n\nassert solution(\n\"\"\"\n2\n1\n1\n\"\"\"\n) == \"\"\"1 2\"\"\"\n\nassert solution(\n\"\"\"\n10\n13\n6\n7\n1\n1\n1\n5\n3\n3\n\"\"\"\n) == \"\"\"13 7 6 5 1 3 3 1 1\"\"\"\n\nassert solution(\n\"\"\"\n10\n6\n2\n5\n9\n3\n2\n2\n3\n3\n\"\"\"\n) == \"\"\"2 5 6 9 9 2 2 3 3 2 2\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"5 6 9 8 7\"\nassert solution(\"10\") == \"9 6 10 8 7\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6\") == \"9 6 10 8 4 7 3 1 5 2\"\nassert solution(\"10\") == \"3 1 4 2 5 7 8 9 10 6 4 1\"\nassert solution(\"2\") == -1\nassert solution(\"4\") == \"5 1 3 6 2 4 7 3 1 5 2\"\n",
        "num_ids_2": 40,
        "num_ids_4": 69
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '9 6 10 8 4 7 3 1 5 2'\nassert solution() == '-1'\nassert solution() == '3 1 4 2'\nassert solution() == '5 1 3 6 2 4 7'\nassert solution() == '5 1 3 6 2 4 7 13 9 7 11 8 4 1 3 5 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == '9 6 10 8 4 7 3 1 5 2\\n-1'\nprint(solution('6'))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1\n4\n6\n7\n10\n''') == '9 6 10 8 4 7 3 1 5 2 ",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1\n''') == '3 1 4 2'\n\nassert solution('''\n2\n4\n''') == '3 1 4 2'\n\nassert solution('''\n4\n4\n''') == '5 4 1 3 2'\n\nassert solution('''\n10\n1\n''') == '1'\n\nassert solution('''\n2\n2\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(example_input) in [\n    \"9 6 10 8 4 7 3 1 5 2\",\n    \"3 1 4 2\",\n    \"5 1 3 6 2 4 7\",\n    \"5 3 6 2 4 1 7\",\n    \"13 9 7 11 8 4 1 3 5 2 6 10 12\"\n]\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4645,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == \"1\"\nassert solution('2') == \"2 1\"\nassert solution('3') == \"3 1 2\"\nassert solution('4') == \"4 1 3 2\"\nassert solution('5') == \"5 1 3 2 4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '1'\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == '2'\nassert solution(\"4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0\") == '-1'\n",
        "num_ids_2": 50,
        "num_ids_4": 93
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n4\\n3 2 7 6\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '1'\nassert solution('4\\n3\\n3 2 6\\n1\\n7\\n7\\n4 9 2 1 18 3 0') == '0'",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\\n3 2 7 6\") == \"1\"\nassert solution(\"3\\n3 2 6\") == \"0\"\nassert solution(\"3\\n1 2 3 4\") == \"-1\"\nassert solution(\"3\\n9 2 6\") == \"0\"",
        "num_ids_2": 31,
        "num_ids_4": 62
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '2'\nassert solution('4') == '1'\nassert solution('4 1 3 2 7 6') == '1'\nassert solution('4 3 2 7 6') == '0'\n",
        "num_ids_2": 18,
        "num_ids_4": 47
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2 7 6\\n3\") == \"1\"\nassert solution(\"3 2 6\\n3\") == \"0\"\nassert solution(\"3 2 7 6\\n1\") == \"0\"\nassert solution(\"4 9 2 1 18 3 0\") == \"2\"\nassert solution(\"2 5 3 6\\n5 3 2 6\") == \"0\"\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\n\nassert solution('''\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\n\nassert solution('''\n3\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '-1'\n\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'\n\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n3\n2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''4\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"\nassert solution('''5\n5\n1 3 5 2 1\n1\n1 3 2 1\n1\n1 2 3 1\n1\n1 2 1 1\n1\n1 2 1 1\n1\n1 1 2 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1\n1\n1 1 1 1",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"1\"\nassert solution('''\n4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == \"0\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"1\"\nassert solution(\"4\\n3 2 7 6\") == \"2\"\nassert solution(\"3\\n3 2 6\") == \"1\"\nassert solution(\"4\\n7\\n3 2 6\") == \"-1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4646,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '1'\nassert solution('''3\n3 2 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '2'\nassert solution('''4\n3 2 7 6\n3\n3 2 6\n1\n7\n7\n4 9 2 1 18 3 0\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1 1 1 1 0 0 0 0 1'\nassert solution('4') == '0 -1 1 -1'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2 2'\nassert solution('4') == '-1 1 0 2'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '2 2 2 2 1 1 0 2'\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n0 1 1 1 0 0 0 0 1\\n1 2') == '2 2 2 2 2 1 1 0 2'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n') == '0 -1 1 -1'",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4') == '0 -1 1 -1'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4') == '0 -1 1 -1'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n3 5') == '0 -1 1 -1'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n5 6') == '0 -1 1 -1'\nassert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n1 4\\n3 5\\n6 7') == '0 -1 1 -1'\n",
        "num_ids_2": 66,
        "num_ids_4": 140
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '2 2 2 2 1 1 0 2 \nassert solution('''\n4\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n\n''') == '2 2 2 2 1 1 0 2 \n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input_str_1) == input_str_2\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n0 1 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2 \nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n\n''') == '0 -1 1 -1 \n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n') == '2 2 2 2\\n1 1 0 0\\n1 2\\n1 3\\n3 4\\n'\nassert solution('8\\n0 0 1 0\\n1 2\\n1 3\\n3 4\\n5 5\\n6 6\\n7 7\\n') == '0 -1 1 -1\\n1 1 0 0\\n1 2\\n1 3\\n3 4\\n5 5\\n6 6\\n7 7\\n'\nprint('all test cases passed')",
        "num_ids_2": 132,
        "num_ids_4": 132
    },
    {
        "number": 4647,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\n0 0 1 1 0 0 0 0 1\n1 2\n1 3\n3 4\n3 5\n2 6\n4 7\n6 8\n5 9\n''') == '2 2 2 2 2 1 1 0 2 '\nassert solution('''\n4\n0 0 1 0\n1 2\n1 3\n1 4\n''') == '0 -1 1 -1 '\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '0'\nassert solution('6') == '-1'\nassert solution('7') == '2'\nassert solution('8') == '36'\nassert solution('12') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1\n2\n3\n''') == '0'\nassert solution('''\n4\n1\n2\n3\n''') == '-1'\nassert solution('''\n5\n1\n2\n3\n4\n5\n''') == '12'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '-1'\nassert solution('3') == '2'\nassert solution('12') == '1'\nassert solution('12345') == '36'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7\\n1\\n2\\n3\\n12\\n12345\\n15116544\\n387420489') == '2'\nassert solution('0\\n-1\\n2\\n-1\\n-1\\n12\\n36') == '-1'",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '2'\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''6\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''8\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\n\nprint('All test cases passed!')",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '0'\nassert solution('''6\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '12'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"2\"\nassert solution(input()) == \"3\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"-1\"\nassert solution(input()) == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"-1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"12\") == \"36\"\nassert solution(\"12345\") == \"1236\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4648,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n2\n3\n12\n12345\n15116544\n387420489''') == '0'\nassert solution('''7\n1\n2\n3\n12\n12345\n15116544\n387420489''') == '-1'\nassert solution('''6\n1\n2\n3\n4\n5''') == '12'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '0'\nassert solution('''5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '3'\nassert solution('''5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1'\nassert solution('3\\n5 5\\nBBBRR') == '3'\nassert solution('3\\n5 5\\nBBBB') == '2'\nassert solution('3\\n5 5\\nBBBB') == '0'\n",
        "num_ids_2": 55,
        "num_ids_4": 91
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '1'\n\n-----\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"0\"\nassert solution(input()) == \"1\"\nassert solution(input()) == \"2\"\n\n\n>>>\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"3\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n5 2\\nBGGGG\\n\") == \"1\"\nassert solution(\"3\\n5 3\\nRBRGR\\n\") == \"0\"\nassert solution(\"3\\n5 5\\nBBBRR\\n\") == \"3\"\n",
        "num_ids_2": 41,
        "num_ids_4": 62
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\", \"easy\"\nassert solution(\"2\") == \"1\", \"easy\"\nassert solution(\"3\") == \"0\", \"easy\"\nassert solution(\"4\") == \"1\", \"easy\"\nassert solution(\"5\") == \"0\", \"easy\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n5 2\\nBGGGG\\n5 3\\nRBRGR\\n5 5\\nBBBRR') == '1'\nassert solution('3\\n4 5\\nBBBBBB\\n5 5\\nBBBBBB') == '4'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5 2\nBGGGG\n5 3\nRBRGR\n5 5\nBBBRR\n''') == \"0\"\nassert solution('''\n5 2\nBGGGG\n5 3\nRBRG\n5 5\nBBBRR\n''') == \"3\"\nassert solution('''\n5 2\nBGGGG\n5 3\nRBRG\n5 5\nBBBRR\n''') == \"3\"\nassert solution('''\n5 2\nBGGGG\n5 3\nRBRG\n5 5\nBBBRR\n''') == \"3\"\nassert solution('''\n5 2\nBGGGG\n5 3\nRBRG\n5 5\nBBBRR\n''') == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4649,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\nassert solution(input()) == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n\n\"\"\"\n\n\n\nt = int(input())\n\nfor i in range(t):\n    n = int(input())\n    a = list(map(int, input().split()))\n    i, j = 0, 0\n    while(i < n and j < n):\n        if (a[j]+a[i])%3 == 0:\n            print(a[j]+a[i])\n            i += 1\n            j += 1\n        else:\n            j += 1\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '3'\nassert solution('6') == '4'\nassert solution('7') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n3 1 2 3 1\n7\n1 1 1 1 1 2 2\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\") == \"3\"\nassert solution(\"10\\n0 0 0 0 0 0 0 0 0\\n1\\n0\\n\") == \"2\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n\") == \"3\"\nassert solution(\"3\\n1\\n6\\n3\\n5\\n3\\n4\\n5\\n\") == \"3\"\nassert solution(\"4\\n5\\n5\\n4\\n4\\n4\\n4\\n4\\n\") == \"3\"\nassert solution(\"2\\n2\\n5\\n2\\n3\\n3\\n\") == \"2\"\nassert solution(\"1\\n10\\n3\\n3\\n5\\n5\\n\") == \"5\"\n",
        "num_ids_2": 67,
        "num_ids_4": 127
    },
    {
        "number": 4650,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n5\\n3 1 2 3 1\\n7\\n1 1 1 1 1 2 2\\n') == '3'\nprint('all tests passed')",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 5 2 4 3 \n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 2 4 3\") == \"1 5 2 4 3\", \"1 5 2 4 3\"\nassert solution(\"4\") == \"1 2 3 4\", \"1 2 3 4\"\nassert solution(\"4\") == \"1 2 3 4\", \"1 2 3 4\"\nassert solution(\"5\") == \"1 2 3 4 5\", \"1 2 3 4 5\"\nassert solution(\"5\") == \"1 2 3 4 5\", \"1 2 3 4 5\"\n",
        "num_ids_2": 44,
        "num_ids_4": 84
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1\\n1\\n4\\n4 3 2 1\\n') == '1 5 2 4 3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1 5 2 4 3'\nassert solution('4') == '1 2 3 4'\nassert solution('5') == '1 2 3 4 5'\nassert solution('6') == '1 2 3 4 5 6'\nassert solution('7') == '1 2 3 4 5 6 7'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"1 2 3 4\"\nassert solution(input()) == \"1 2 3 4\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1 2'\nassert solution('5 4 1 3 2') == '1 2 3 4'\nassert solution('4') == '1 2 3 4'\n",
        "num_ids_2": 29,
        "num_ids_4": 42
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n5 4 1 3 2\\n4\\n1 2 4 3\\n1') == '1 5 2 4 3'\nassert solution('4\\n5 1 2 4 3\\n1') == '1 5 2 4 3'\nassert solution('5\\n10 4 1 2 3 8\\n3\\n1') == '1 2 3 4 5 10'\nassert solution('3\\n4 1 2 5 3\\n4\\n5') == '1 2 3 4 5'\nassert solution('4\\n1 2 3 4\\n1') == '1 2 3 4'\n",
        "num_ids_2": 57,
        "num_ids_4": 113
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == \"1 2 3 4\"\nassert solution('''4\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1''') == \"1 4 2 3 5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 4 2 3 5'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 4 2 3 5'\n\nassert solution('''\n5\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5'\nassert solution('''\n4\n5 4 1 3 2\n4\n1 2 4 3\n1\n1\n4\n4 3 2 1\n''') == '1 2 4 3 5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4651,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4 1 3 2') == '1 5 2 4 3'\nassert solution('4') == '1 2 3 4'\nassert solution('4') == '1 4 2 3'\n",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"YES\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"3\") == \"NO\"\nassert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\nassert solution('''\n5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'NO'\nassert solution('''\n5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'NO'\nassert solution('''\n5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n\"\"\"\n) == \"YES\"\nassert solution(\n\"\"\"\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n\"\"\"\n) == \"NO\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\nassert solution('''\n5\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'\nassert solution('''\n5\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'NO'\nassert solution('''\n3\n2\n1 2\n1\n3\n2\n3\n1 2 3 4\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"YES\"\nassert solution(\"4\") == \"YES\"\nassert solution(\"1\") == \"YES\"\nassert solution(\"3\") == \"YES\"\nassert solution(\"1 2 3 4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n4\\n1 2 3 4\") == \"YES\"\nassert solution(\"5\\n3\\n1 2 3 5 4\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"5\\n5\\n1 2 3 4 5\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4 5\") == \"YES\"\n",
        "num_ids_2": 39,
        "num_ids_4": 79
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n5\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"NO\"\nassert solution(\"5\\n4\\n1 2 3 4\\n3\\n1 3 2\") == \"YES\"",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES\\nYES\\nNO\\nYES\\nYES\\n'\n\nassert solution('''\n3\n5\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES\\nYES\\nNO\\nYES\\nYES\\n'\n\nassert solution('''\n1\n1\n4\n3\n1\n1\n2\n2\n''') == 'NO\\nNO\\nYES\\nYES\\n'''\n\nassert solution('''\n5\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES\\nYES\\nNO\\nYES\\nYES\\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n4\\n1 2 3 4') == 'YES'\nassert solution('5\\n3\\n1 2 3 5 4') == 'NO'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4652,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4\n4\n1 2 3 4\n3\n1 3 2\n5\n1 2 3 5 4\n1\n1\n5\n3 2 1 5 4\n''') == 'YES'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''\n5 2\n3 3\n3 4\n2 1\n1 1\n''') == '5'\nassert solution('''\n4 5\n5 2\n3 2\n4 1\n5 3\n''') == '2'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '75015'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 2\") == \"5\"\nassert solution(\"19 4\") == \"18\"\nassert solution(\"12 7\") == \"10\"\nassert solution(\"6 2\") == \"75015\"\nassert solution(\"100000 50010\") == \"75015\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 2') == '5'\nassert solution('5 2') == '18'\nassert solution('5 2') == '10'\nassert solution('5 2') == '6'\nassert solution('100000 50010') == '75015'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 3\\n2 1\\n1 2\\n2 2\") == \"2\"\nassert solution(\"5 4\\n19 4\\n12 7\\n6 2\\n100000 50010\\n\") == \"5\"",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 2\\n19 4\\n12 7\\n6 2\\n100000 50010') == '5'\nassert solution('5 1\\n18 1\\n10 1\\n6 2\\n75015') == '18'\nassert solution('5 2\\n18 1\\n10 1\\n6 2\\n75015') == '10'\nassert solution('5 1\\n18 1\\n10 1\\n6 2\\n75015') == '6'\nassert solution('5 1\\n19 1\\n10 1\\n6 2\\n75015') == '19'\n\n\"\"\"\n",
        "num_ids_2": 56,
        "num_ids_4": 110
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '18'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '10'\nassert solution('''\n5 2\n19 4\n12 7\n6 2\n100000 50010\n''') == '6'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2\\n19 4\\n12 7\\n6 2\\n100000 50010\") == \"5\\n18\\n10\\n6\\n75015\"\nassert solution(\"5 1\\n10 2\\n5 3\\n3 4\\n6 5\") == \"5\\n5\\n5\\n4\\n0\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 2\n3 4\n12 7\n6 2\n100000 50010''') == '5'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '18'\nassert solution('''5 2\n18 4\n12 7\n6 2\n100000 50010''') == '10'\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '75015'\nassert solution('''5 2\n18 4\n12 7\n6 2\n100000 50010''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '5'\nassert solution('19 4') == '18'\nassert solution('12 7') == '10'\nassert solution('6 2') == '75015'",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4653,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '5'\n\nassert solution('''5 1\n19 4\n12 7\n6 2\n100000 50010''') == '18'\n\nassert solution('''5 2\n19 4\n12 7\n6 2\n100000 50010''') == '10'\n\nassert solution('''5 2\n1 2\n1 2\n1 2\n1 2\n1 2''') == '4'\n\nassert solution('''1 1\n1 1\n1 1\n1 1\n1 1''') == '1'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n3 2') == 'YES'\nassert solution('6\\n8 7') == 'YES'\nassert solution('6\\n4 7') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3\n2 3\n1 2\n''') == \"YES\"\nassert solution('''3\n2 3\n1 2\n''') == \"YES\"\nassert solution('''1\n1\n''') == \"YES\"\nassert solution('''1\n1\n''') == \"YES\"\nassert solution('''5\n4 7\n2 4\n8 7\n97 2\n''') == \"YES\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'NO'\nassert solution('4') == 'NO'\nassert solution('5') == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9\\n') == 'YES 4 2 4\\nYES\\n55 5 5 35\\nNO'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\n10 3\\n100 4\\n8 7\\n97 2\\n8 8\\n3 10\\n5 3\\n1000000000 9') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120'\nprint(solution(input()))\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 3\") == \"4 2 4\"\nassert solution(\"100 4\") == \"55 5 5 35\"\nassert solution(\"8 7\") == \"55 5 5 35\"\nassert solution(\"97 2\") == \"55 5 5 35\"\nassert solution(\"8 8\") == \"55 5 5 35\"\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8\n10 3\n100 4\n8 7\n97 2\n8 8\n3 10\n5 3\n1000000000 9\n''') == 'YES\\n4 2 4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8') == \"YES\"\nassert solution('10 3') == \"NO\"\nassert solution('100 4') == \"YES\"\nassert solution('8 7') == \"YES\"\nassert solution('97 2') == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '''\n    2\n    10 3\n    100 4\n    8 7\n    97 2\n    8 8\n    3 10\n    5 3\n    1000000000 9\n    ''') == 'YES\\n4 2 4\\nYES\\n55 5 5 35\\nNO\\nYES\\n1 1 1 1 1 1 1 1\\nNO\\nYES\\n3 1 1\\nYES\\n111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111110 111111120\n    '''\n\nn, k = list(map(int, stdin.split()))",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4654,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"YES 2 2 4\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '55'\nassert solution('''\n2\n1 3\n1 10\n10000000000000000 10000000000000000 10000000000000000\n''') == '15000000000000000'\nassert solution('''\n3\n2 3\n1 10\n10000000000000000 10000000000000000 10000000000000000\n''') == '1100000000000000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 4') == '55'\nassert solution('1 10 100') == '51'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51'\n",
        "num_ids_2": 24,
        "num_ids_4": 41
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n4\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n3\n1 2 3\n2 3 4\n3 4 5\n\"\"\"\n) == \"5\"\nassert solution(\n\"\"\"\n8\n1 2 3\n3 4 5\n7 6 8\n3 2 1\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n17 18 19\n18 19 20\n19 20 21\n20 21 22\n21 22 23\n22 23 24\n23 24 25\n24 25 26\n25 26 27\n26 27 28\n27 28 29\n28 29 30\n29 30 31\n30 31 32\n31 32 33\n32 33 34\n33 34 35\n34 35 36\n35 36 37\n36 37 38\n37 38 39\n38 39 40\n39 40 41\n40 41 42\n41 42 43\n42 43 44\n43 44 45\n44 45 46\n45 46 47\n46 47 48\n47 48 49\n48 49 50\n49 50 51\n50 51 52\n51 52 53\n52 53 54\n53 54 55\n53 55 56\n54 55 57\n54 56 58\n55 56 59\n56 57 58\n57 58 59\n58 59 60\n59 60 61\n60 61 62\n61 62 63\n62 63 64\n63 63 65\n63 64 66\n64 66 67\n65 66 68\n65 67 69\n66 67 70\n66 69 71\n67 69 72\n67 71 73\n67 72 74\n67 72 75\n67 71 76\n67 70 77\n66 70 78\n66 67 79\n66 67 80\n65 67 81\n65 68 82\n64 68 83\n64 68 84\n63 68 85\n63 67 86\n63 66 87\n62 66 88\n62 67 89\n62 67 90\n62 67 91\n62 66 92\n61 66 93\n61 67 94\n60 66 95\n60 67 96\n59 67 97\n59 66 98\n58 66 99\n58 67 100\n57 67 101\n57 66 102\n56 66 103\n56 67 104\n55 66 105\n55 67 106\n54 65 107\n54 67 108\n53 64 109\n53 67 110\n52 64 111\n52 67 112\n51 64 113\n51 67 114\n50 64 115\n50 67 116\n49 65 117\n49 67 118\n48 64 119\n48 67 120\n47 65 121\n47 67 122\n46 64 123\n46 67 124\n45 65 125\n45 67 126\n44 64 127\n44 67 128\n43 64 129\n43 67 130\n42 65 131\n42 67 132\n41 64 133\n41 67 134\n40 65 135\n40 67 136\n39 64 137\n39 67 138\n38 64 139\n38 67 140\n37 64 141\n37 67 142\n36 64 143\n36 67 144\n35 65 145\n35 67 146\n34 64 147\n34 67 148\n33 64 149\n33 67 150\n32 64 151\n32 67 152\n31 64 153\n31 67 154\n30 64 155\n30 67 156\n29 64 157\n29 67 158\n28 64 159\n28 67 160\n27 64 161\n27 67 162\n26 64 163\n26 67 164\n25 64 165\n25 67 166\n24 64 167\n24 67 168\n23 64 169\n23 67 170\n22 64 171\n22 67 172\n21 64 173\n21 67 174\n20 64 175\n20 67 176\n19 64 177\n19 67 178\n18 64 179\n18 67 180\n17 64 181\n17 67 182\n16 64 183\n16 67 184\n15 64 185\n15 67 186\n14 64 187\n14 67 188\n13 64 189\n13 67 190\n12 64 191\n12 67 192\n11 64 193\n11 67 194\n10 64 195\n10 67 196\n9 64 197\n9 67 198\n8 64 199\n8 67 200\n7 64 201\n7 67 202\n6 64 203\n6 67 204\n5 64 205\n5 67 206\n4 64 207\n4 67 208\n3 64 209\n3 67 210\n2 64 211\n2 67 212\n1 64 213\n1 67 214\n\"\"\"\n) == \"15000000000000000\"\n\nassert solution(\n\"\"\"\n4\n1 2 3\n2 3 4\n3 4 5\n4 5 6\n\"\"\"\n) == \"15000000000000000\"\n\nassert solution(\n\"\"\"\n5\n1 2 3\n2 3 4\n3 4 5\n5 6 7\n6 7 8\n7 8 9\n8 9 10\n9 10 11\n10 11 12\n11 12 13\n12 13 14\n13 14 15\n14 15 16\n15 16 17\n16 17 18\n17 18 19\n18 19 20\n19 20 21\n20 21 22\n21 22 23\n22 23 24\n23 24 25\n24 25 26\n25 26 27\n26 27 28\n27 28 29\n28 29 30\n29 30 31\n30 31 32\n31 32 33\n32 33 34\n33 34 35\n34 35 36\n35 36 37\n36 37 38\n37 38 39\n38 39 40\n39 40 41\n40 41 42\n41 42 43\n42 43 44\n43 44 45\n44 45 46\n45 46 47\n46 47 48\n47 48 49\n48 49 50\n49 50 51\n50 51 52\n51 52 53\n52 53 54\n53 54 55\n54 55 56\n55 56 57\n56 57 58\n57 58 59\n58 59 60\n59 60 61\n60 61 62\n61 62 63\n62 63 64\n63 64 65\n64 65 66\n65 66 67\n66 67 68\n67 68 69\n68 69 70\n69 70 71\n70 71 72\n71 72 73\n72 73 74\n73 74 75\n74 75 76\n75 76 77\n76 77 78\n77 78 79\n78 79 80\n79 80 81\n80 81 82\n81 82 83\n82 83 84\n83 84 85\n84 85 86\n85 86 87\n86 87 88\n87 88 89\n88 89 90\n89 90 91\n90 91 92\n91 92 93\n92 93 94\n93 94 95\n94 95 96\n95 96 97\n96 97 98\n97 98 99\n98 99 100\n99 100 101\n100 101 102\n100 102 103\n99 102 104\n99 102 105\n98 102 106\n98 102 107\n97 102 108\n97 102 109\n96 102 110\n96 102 111\n95 102 112\n95 102 113\n94 102 114\n94 102 115\n93",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n1 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n1\n10000000000000000 10000000000000000 10000000000000000\n''') == '11'\nassert solution('''\n5\n1 3\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n''') == '4'\nassert solution('''\n7\n1\n2 3\n4 5 6\n7 8 9 10\n10000000000000000 10000000000000000 10000000000000000\n3 4 5 6\n7 8 9 10\n10000000000000000 10000000000000000 10000000000000000\n5 6 7 8 9\n10000000000000000 10000000000000000 10000000000000000\n5 6 7 8 9\n''') == '34'\nassert solution('''\n1\n10000000000000000 10000000000000000 10000000000000000\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '''\n1 3 4\n1 10 100\n10000000000000000 10000000000000000 10000000000000000\n23 34 45\n    ''') == '55'\nassert solution(\n    '''\n2 2 6\n1 100 2\n1 10 1\n    ''') == '50'\nassert solution(\n    '''\n5 5 1\n1 10 1\n1 10 2\n1 100 3\n1 100 4\n    ''') == '101'\nassert solution(\n    '''\n5 5 1\n1 10 1\n1 10 2\n1 100 3\n1 100 4\n    ''') == '101'\nassert solution(\n    '''\n5 5 1\n1 10 1\n1 10 2\n1 100 3\n1 100 4\n    ''') == '100'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '2'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3 4') == '55'\nassert solution('1 10 100') == '51'\nassert solution('10000000000000000 10000000000000000 10000000000000000') == '51'\nassert solution('23 34 45') == '15000000000000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '1'\nassert solution('6') == '2'\nassert solution('7') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3 4\") == \"55\"\nassert solution(\"1 10 100\") == \"51\"\nassert solution(\"10000000000000000 10000000000000000 10000000000000000\") == \"15000000000000000\"\nassert solution(\"23 34 45\") == \"51\"\nassert solution(\"10000000000000000 10000000000000000 10000000000000000\") == \"15000000000000000\"\n",
        "num_ids_2": 24,
        "num_ids_4": 55
    },
    {
        "number": 4655,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"55\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"6\"\nassert solution(\"5 4\") == \"4\"\nassert solution(\"7 1000\") == \"10\"\nassert solution(\"20 5\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('6 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 3\\nabcbac') == '3'\nassert solution('6 3\\naaa') == '5'\nassert solution('6 3\\nababa') == '10'\nassert solution('6 3\\necbedececacbcbccbdec') == '15'",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\") == \"6\"\n\nprint(solution(\"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necbedececacbcbccbdec\"))",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 3') == '3'\nassert solution('7 1000') == '10'\nassert solution('6 5') == '6'\nassert solution('ababa') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\nassert solution(\"6 3\") == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"4\"\nassert solution() == \"3\"\nassert solution() == \"5\"\nassert solution() == \"10\"\nassert solution() == \"15\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"6 3\\nabcbac\\n3 6\\naaa\\n7 1000\\nabczgyo\\n5 4\\nababa\\n20 10\\naaebdbabdbbddaadaadc\\n20 5\\necedececacbcbccbdec\\n\") == \"6\\n3\\n5\\n4\\n15\\n10\\n\"\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3') == '3'\nassert solution('6 2') == '4'\nassert solution('7 1000') == '10'\nassert solution('5 4') == '6'\nassert solution('abcbac') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4656,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '6'\n\nassert solution('''\n6 3\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '3'\n\nassert solution('''\n10 20\nabcbac\n3 6\naaa\n7 1000\nabczgyo\n5 4\nababa\n20 10\naaebdbabdbbddaadaadc\n20 5\necbedececacbcbccbdec\n''') == '10'\n\n\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n''') == 'YES'\nassert solution('''\n10 3\n4 0 8 1 9 2 5 3 6 7 10\n''') == 'NO'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"YES\\n1 3 5\\nNO\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\n5 3\\n7 18 3 14 1\") == \"YES\\n1 3 5\"\nassert solution(\"3\\n5 4\\n1 2 3 4 5\") == \"NO\"\nassert solution(\"4\\n3 1\\n5 2\\n3 1\") == \"YES\"\n\n\n\"\"\"\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2') == 'YES\\n1 3 5'\nassert solution('1\\n5 4\\n1 2 3 4 5\\n6 2') == 'NO'",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 5 5\") == \"YES\"\nassert solution(\"2 1 2 4 5\") == \"NO\"\nassert solution(\"3 1 3 3\") == \"NO\"\nassert solution(\"1 1 3 3\") == \"YES\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n5 3\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2') == 'YES\\n1 3 5\\nNO\\nNO\\n'\nassert solution('3\\n5 1\\n7 18 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2') == 'YES\\n1 3 5\\nNO\\nNO\\n'\nassert solution('3\\n5 1\\n7 2 3 14 1\\n5 4\\n1 2 3 4 5\\n6 2') == 'YES\\n1 3 5\\nNO\\nNO\\n'\nassert solution('3\\n5 1\\n7 2 3 4 5\\n6 2') == 'YES\\n1 3 5\\nNO\\nNO\\n'\nassert solution('3\\n5 1\\n7 2 3 4 5\\n6 2') == 'YES\\n1 3 5\\nNO\\nNO\\n'\n",
        "num_ids_2": 98,
        "num_ids_4": 185
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\\\n3\n5 3\n7 18 3 14 1\n5 4\n1 2 3 4 5\n6 2\n1 2 8 4 10 2\n\"\"\") == \"YES\\n1 3 5\\nNO\\nNO\\n\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3\n6 2\n2 4 5\n7 8''') == 'YES\\n1 3 5\\nNO\\nNO'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 3\") == \"YES\"\nassert solution(\"5 4\") == \"NO\"\nassert solution(\"6 2\") == \"NO\"\nassert solution(\"1 2 3 4 5\") == \"1 3 5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4657,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == 'NO'\n\nassert solution() == 'YES'\n\nassert solution() == 'YES'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''Reverse bits of a given 32 bits unsigned integer.\n\nNote that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.\n\nIn Java, the compiler represents the signed integers using 2's complement notation. Therefore, in Example 2 above, the input represents the signed integer -3 and the output represents the signed integer -1073741825.\nFollow up:\n\nIf this function is called many times, how would you optimize it?\n\nExample 1:\n\nInput: n = 00000010100101000001111010011100\nOutput:    964176192 (00111001011110000010100101000000)\nExplanation: The input binary string 00000010100101000001111010011100 represents the unsigned integer 43261596, so return 964176192 which its binary representation is 00111001011110000010100101000000.\n\nExample 2:\n\nInput: n = 11111111111111111111111111111101\nOutput:   3221225471 (10111111111111111111111111111111)\nExplanation: The input binary string 11111111111111111111111111111101 represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is 10111111111111111111111111111111. \n\nConstraints:\n\nThe input must be a binary string of length 32\n''')\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('00000010100101000001111010011100') == '964176192'\nassert solution('111111111111111111111111111111101') == '3221225471'\n\"\"\"\n\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        str_bit = '{:032b}'.format(n)\n        return int(str_bit[::-1], 2)\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11\") == \"101\"\nassert solution(\"1000\") == \"1110\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '0'\nassert solution('11111111111111111111111111111101') == '3221225471'\nassert solution('1010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101",
        "num_ids_2": 31,
        "num_ids_4": 1676
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111111\") == \"3221225471\"\n'''",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"000000000000000000000000\") == \"1110011101111111111111111111111\"\n\"\"\"\n\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        t = 0\n        for i in range(32):\n            t <<= 1\n            t |= n & 1\n            n >>= 1\n        return t\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10101000001111010011100') == '964176192'\nassert solution('10111111111111111111111111111111') == '3221225471'\n'''",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"00000010100101000001111010011100\") == \"964176192\"\nassert solution(\"111111111111111111111111111111101\") == \"3221225471\"\n\nclass Solution:\n    def reverseBits(self, n: int) -> int:\n        \"\"\"\n        Reverse bits of a given 32 bits unsigned integer.\n        \"\"\"\n        reversed_n = 0\n        for i in range(32):\n            reversed_n = reversed_n << 1 | n & 1\n            n >>= 1\n        return reversed_n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4658,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('00000000000000000000000000001010') == '964176192'\nassert solution('10111111111111111111111111111111') == '3221225471'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == '\\n'.join(['1\\n', '1,1\\n', '1,2,1\\n', '1,3,3,1\\n', '1,4,6,4,1\\n'])",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '\\n'.join([\n    '1',\n    '1,1',\n    '1,2,1',\n    '1,3,3,1',\n    '1,4,6,4,1',\n])\n\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == '\\n\\n'.join([\n    \"1\",\n    \"1 1\",\n    \"1 2 1\",\n    \"1 3 3 1\"\n])",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline()\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"[1,1,1,1,1]\"\n\nThe first line of input contains an integer T, denoting the number of test cases. Each test case contains an integer N.\n\nThe second line contains a single integer N.\n\nConstraints\n1 <= T <= 5\n1 <= N <= 100\n\nSubtasks\nSubtask #1 (20 points): Original Constraints\nSubtask #2 (70 points): Original Constraints\n\nExample Input\n2\n3\n5\n5\n\nExample Output\n[1, 1, 1, 1, 1]\n[1, 2, 1, 3, 1]\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '\\n'.join([\n    \"1\",\n    \"1 1\",\n    \"1 2 1\",\n    \"1 3 3 1\",\n    \"1 4 6 4 1\",\n])\nassert solution('4') == '\\n'.join([\n    \"1\",\n    \"1 1\",\n    \"1 2 1\",\n    \"1 3 3 1\",\n])\nassert solution('3') == '\\n'.join([\n    \"1\",\n    \"1 1\",\n    \"1 2 1\",\n])\nassert solution('2') == '\\n'.join([\n    \"1\",\n    \"1 1\",\n])\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n''') == '''[\n     [1],\n     [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '\\n'.join([str(i) for i in [[1]]] + [[i, i + 1] for i in range(1, 5)]) + '\\n', 'incorrect'\n\nprint('Test passed')",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == '\\n'.join(['1'] + ['1,1']*(4-1) + ['1,2,1']*(3-1) + ['1,3,3,1']*(2-1) + ['1,4,6,4,1']*(1-1)) == '\\n'.join(['1', '1,1', '1,2,1', '1,3,3,1', '1,4,6,4,1'])\n\ninput()\nprint(solution(stdin))\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())\n\nsolution(input())",
        "num_ids_2": 119,
        "num_ids_4": 119
    },
    {
        "number": 4659,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(5) == \"[\\n1,\\n1,\\n1,\\n1,\\n1]\\n\"\nassert solution(3) == \"[1,\\n1,\\n1]\\n\"\nassert solution(2) == \"[1,\\n1]\\n\"\n",
        "num_ids_2": 52,
        "num_ids_4": 69
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"acdf\"\nassert solution(\"2\") == \"acdf\"\nassert solution(\"3\") == \"bcdf\"\nassert solution(\"4\") == \"cdef\"\n\n===Sample test===\nSample Input 0\n\n2\njohn@google.com\nlarry@yahoo.com\nSample Output 0\n\n['john@google.com', 'larry@yahoo.com']\n\nSample Input 1\n\n3\njohn@google.com\nlarry@yahoo.com\ndavid@hotmail.com\nSample Output 1\n\n['david@hotmail.com', 'larry@yahoo.com', 'john@google.com']\n\nSample Input 2\n\n4\njohn@google.com\nlarry@yahoo.com\ndavid@hotmail.com\npeter@gmail.com\nSample Output 2\n\n['peter@gmail.com', 'john@google.com', 'larry@yahoo.com', 'david@hotmail.com']\n\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == ['test1@email.com', 'test2@email.com', 'test3@email.com', 'test4@email.com', 'test5@email.com'], \"First Test Case\"\nassert solution('1') == ['a@email.com'], \"Second Test Case\"\n\n\"\"\"\n",
        "num_ids_2": 73,
        "num_ids_4": 73
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\njd@b.co\\nwww.example.com\") == [\"jd@b.co\", \"www.example.com\"]\nassert solution(\"3\\njd@b.co\\nwww.example.com\\njh@bh.co\") == [\"jd@b.co\", \"www.example.com\", \"jh@bh.co\"]\nassert solution(\"5\\njd@b.co\\nwww.example.com\\njh@bh.co\\nwww.website.com\") == [\"jd@b.co\", \"www.example.com\", \"jh@bh.co\", \"www.website.com\"]\n=====Test Cases=====\nInput\nOutput\nInput\n\nOutput\n\nInput\n\nOutput\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\n=====Sample Test Cases=====\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\n=====Explanation=====\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\nInput:\n\nOutput:\n\n=====Sample Test Cases=====\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\nInput\n\nOutput\n\n=====Explanation=====\n\nThe code first tests if the input is an integer. If so, it passes the test. Then, it passes the string to the list function and checks whether the string contains the username@websitename.extension format.\n\nIf the function returns True, then we test the length of the extension. If the extension is 3, then the function returns True. If the extension is less than 3, then the function returns False.\n\nHere, we use the list function to find the valid emails.\n\n'''",
        "num_ids_2": 90,
        "num_ids_4": 159
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == []\nassert solution('a') == []\nassert solution('a@b.c') == ['a@b.c']\nassert solution('a@b.c@example.com') == ['a@b.c@example.com']\nassert solution('a@b.c@example.com@example.com') == ['a@b.c@example.com@example.com']\n",
        "num_ids_2": 16,
        "num_ids_4": 60
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com\nraj@gmail.com''') == ['raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com', 'raj@gmail.com']\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\najay@hackerrank.com\\nahsan@hackerrank.com\\nharshith@hackerrank.com\\najay@hackerrank.com\\n\") == [\"ajay@hackerrank.com\", \"harshith@hackerrank.com\", \"ajay@hackerrank.com\"]\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == ['amy@example.com', 'cory@example.com']\nassert solution('1') == ['amy@example.com']\nassert solution('5') == []\nassert solution('4') == ['amy@example.com', 'cory@example.com']\n'''\n\nimport re",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\njohn.doe@google.com\\njohn.doe@gmail.com\") == [\"john.doe@google.com\"]\nassert solution(\"2\\njohn.doe@google.com\\njohn-doe@google.com\") == [\"john.doe@google.com\", \"john-doe@google.com\"]\nassert solution(\"2\\njohn.doe@google.com\\njohn.doe@gmail.com\") == [\"john.doe@google.com\", \"john.doe@gmail.com\"]\nassert solution(\"2\\njohn.doe@google.com\\njohn.doe@gmail.com\\njohn.doe@gmail.com\\njohn-doe@gmail.com\") == [\"john.doe@google.com\", \"john.doe@gmail.com\", \"john-doe@gmail.com\"]\n\n=====Sample Input & Output=====\nInput\n2\njohn.doe@google.com\njohn.doe@gmail.com\nOutput\n[\"john.doe@google.com\", \"john.doe@gmail.com\"]\n\n=====Explanation=====\n>>> solution(\"2\\njohn.doe@google.com\\njohn.doe@gmail.com\")\n[\"john.doe@google.com\", \"john.doe@gmail.com\"]\n\n>>> solution(\"2\\njohn.doe@google.com\\njohn.doe@gmail.com\\njohn.doe@gmail.com\\njohn-doe@gmail.com\")\n[\"john.doe@google.com\", \"john.doe@gmail.com\", \"john-doe@gmail.com\"]\n\n>>> solution(\"2\\njohn.doe@google.com\\njohn.doe@gmail.com\\njohn.doe@gmail.com\\njohn-doe@gmail.com\\njohn.doe@google.com\\njohn.doe@gmail.com\")\n[\"john.doe@google.com\", \"john.doe@gmail.com\", \"john-doe@gmail.com\", \"john.doe@google.com\", \"john.doe@gmail.com\"]\n\n'''\n",
        "num_ids_2": 84,
        "num_ids_4": 208
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == []\nassert solution('\\n') == []\nassert solution('\\n1') == []\nassert solution('\\n1\\n2\\n') == []\nassert solution('\\n1\\n2\\n3') == ['1@2', '1@3']\n",
        "num_ids_2": 17,
        "num_ids_4": 42
    },
    {
        "number": 4660,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n    test.email@mail.com\n    guru.mail@gmail.com\n    python-list.info@python.org\n''') == ['test.email@mail.com', 'guru.mail@gmail.com', 'python-list.info@python.org']\n\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(3) == [1, 2, 3]\nassert solution(5) == [1, 2, 3, 4, 5]\nassert solution(6) == [1, 2, 3, 4, 5, 6]",
        "num_ids_2": 32,
        "num_ids_4": 52
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4') == ['0', '1', '1', '4']\nassert solution('6') == ['0', '1', '1', '8', '27', '64']\n'''\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '0 1 1 8 27'\nassert solution('20') == '0 1 1 8 27 81 25 36 45 125 40625'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([0]) == [\"0\"], \"Should return a list of fibonacci numbers.\"\nassert solution([1, 2, 3, 4, 5, 6]) == [\"1\", \"8\", \"27\", \"64\", \"125\", \"252\"], \"Should return a list of fibonacci numbers.\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == [1, 4]\nassert solution('3') == [1, 8, 27]\nassert solution('4') == [1, 16, 64, 256]\nassert solution('5') == [1, 32, 1280, 6400, 362880]\n\n\n=====Sample Test Cases=====\nInput\n[\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"solution\",\"",
        "num_ids_2": 26,
        "num_ids_4": 63
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6') == ['0', '1', '8', '27', '64', '125']\n\nOutput:\n[0, 1, 8, 27, 64, 125]\n\nExecution Time Limit\n1\n\nNote:\n\nThere is no need to take input or print anything. The task is to complete the function solution and print the required list.\n\nInput Format\n\nThe first line contains an integer, N.\n\nConstraints\n\n\n\nOutput Format\n\nPrint the list in a single line with each number separated by a space.\n\nSample Input 1\n\n6\n\nSample Output 1\n\n0 1 8 27 64 125\n\n'''",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == [0, 1, 8, 27, 64]\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10') == ['0', '1', '1', '8', '27', '561', 'Weird', 'Weird', 'Weird', 'Weird']\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == [1, 1, 2, 8, 27, 64]\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4661,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n2\n5\n8\n4\n7\n6\n3''') == '''[0, 1, 8, 27, 64, 125, 216, 343]'''\nassert solution('''10\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '''[1, 8, 27, 64, 125, 216, 343, 8128, 18216, 38752]'''\nassert solution('''15\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15''') == '''[2, 9, 27, 64, 125, 216, 343, 8128, 18216, 38752, 102336, 209744, 414640, 858752, 1724128, 362880, 720520, 140736, 281728, 514080]'''\n\n'''",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''<feed xml:lang='en'>\n    <title>XML Developer's Guide</title>\n    <subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n    <link rel='alternate' type='text/html' href='http://www.tutorialspoint.com/xml/index.htm'>Alternate Link</link>\n    <description>\n        Tutorial showing the use of various element tags. This shows the various element tags, and their\n        usage.\n    </description>\n</feed>''') == '3'\nassert solution('''<feed xml:lang='en'>\n    <title>XML Developer's Guide</title>\n    <subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n    <link rel='alternate' type='text/html' href='http://www.tutorialspoint.com/xml/index.htm'>Alternate Link</link>\n    <description>\n        Tutorial showing the use of various element tags. This shows the various element tags, and their\n        usage.\n    </description>\n</feed>''') == '2'\nassert solution('''<feed xml:lang='en'>\n    <title>XML Developer's Guide</title>\n    <subtitle lang='en'>Tutorial showing the use of various element tags</subtitle>\n    <link rel='alternate' type='text/html' href='http://www.tutorialspoint.com/xml/index.htm'>Alternate Link</link>\n    <description>\n        Tutorial showing the use of various element tags. This shows the various element tags, and their\n        usage.\n    </description>\n</feed>''') == '1'\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n</feed>\\n') == \"3\"\nassert solution('5\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n\\t<link href=\"http://example.com/\"/>\\n</feed>\\n') == \"2\"\nassert solution('5\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n\\t<link href=\"http://example.com/\"/>\\n\\t<author>John Smith</author>\\n</feed>\\n') == \"3\"\nassert solution('5\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n\\t<link href=\"http://example.com/\"/>\\n\\t<author>John Smith</author>\\n\\t<description>The latest updates of the XML</description>\\n</feed>\\n') == \"2\"\n=====Explanation=====\n##Input:\n\n##Output:\n\nExample 1:\n\nInput:\n\nOutput:\n\nExample 2:\n\nInput:\n\nOutput:\n\nExample 3:\n\nInput:\n\nOutput:\n\nExample 4:\n\nInput:\n\nOutput:\n\nExample 5:\n\nInput:\n\nOutput:\n\nsolution(\"5\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n\\t<link href=\"http://example.com/\"/>\\n\\t<author>John Smith</author>\\n\\t<description>The latest updates of the XML</description>\\n</feed>\\n\") == \"3\"\nsolution(\"5\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n\\t<link href=\"http://example.com/\"/>\\n\\t<author>John Smith</author>\\n\\t<description>The latest updates of the XML</description>\\n</feed>\\n\") == \"2\"\nsolution(\"5\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n\\t<link href=\"http://example.com/\"/>\\n\\t<author>John Smith</author>\\n\\t<description>The latest updates of the XML</description>\\n</feed>\\n\") == \"3\"\nsolution(\"5\\n<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide to XML</title>\\n\\t<subtitle>A Hands-on Guide to XML</subtitle>\\n\\t<link href=\"http://example.com/\"/>\\n\\t<author>John Smith</author>\\n\\t<description>The latest updates of the XML</description>\\n\\t<author>Jane Doe</author>\\n</feed>\\n\") == \"2\"\n\n'''\n",
        "num_ids_2": 143,
        "num_ids_4": 341
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"self\" href=\"https://github.com/codility/Code-Chef-Practice/tree/master/2_XML\"/>\n  <updated>2013-09-20T20:37:21Z</updated>\n</feed>\n''') == \"3\"\n\n=====Explanation=====\nThis is the XML document.\n\n=====Sample Input=====\n\n4\n\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"self\" href=\"https://github.com/codility/Code-Chef-Practice/tree/master/2_XML\"/>\n  <updated>2013-09-20T20:37:21Z</updated>\n</feed>\n\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"self\" href=\"https://github.com/codility/Code-Chef-Practice/tree/master/2_XML\"/>\n  <updated>2013-09-20T20:37:21Z</updated>\n</feed>\n\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"self\" href=\"https://github.com/codility/Code-Chef-Practice/tree/master/2_XML\"/>\n  <updated>2013-09-20T20:37:21Z</updated>\n</feed>\n\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"self\" href=\"https://github.com/codility/Code-Chef-Practice/tree/master/2_XML\"/>\n  <updated>2013-09-20T20:37:21Z</updated>\n</feed>\n\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"self\" href=\"https://github.com/codility/Code-Chef-Practice/tree/master/2_XML\"/>\n  <updated>2013-09-20T20:37:21Z</updated>\n</feed>\n\n<feed xmlns=\"http://www.w3.org/2005/Atom\">\n  <title>Some XML document</title>\n  <subtitle>Some subtitle</subtitle>\n  <link rel=\"self\" href=\"https://github.com/codility/Code-Chef-Practice/tree/master/2_XML\"/>\n  <updated>2013-09-20T20:37:21Z</updated>\n</feed>\n\n=====Sample Output=====\n4\n\n>>> \n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>XML Developer's Guide</title>\n  <subtitle lang='en'>Tutorial</subtitle>\n  <link rel='alternate' href='http://www.w3.org/TR/REC-xml-20000904/'/>\n  <updated>2006-01-25</updated>\n</feed>''') == \"3\"\n\n'''\n\nimport xml.etree.ElementTree as ET\n\ntree = ET.parse(stdin)",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''<?xml version=\"1.0\"?>\n<root>\n    <level1>\n        <level2>\n            <level3>\n                <level4>\n                    <level5>\n                    </level5>\n                </level4>\n            </level3>\n        </level2>\n    </level1>\n</root>''') == 6\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n\\t<title>XML Developer\\'s Guide</title>\\n\\t<subtitle lang=\"en\">A tutorial showing the use of XML</subtitle>\\n\\t<link rel=\"alternate\" type=\"text/html\" href=\"http://www.w3schools.com/xml/\"/>\\n</feed>') == '2'\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''<feed xml:lang='en'>\n<title>XML Developer's Guide</title>\n<subtitle lang='en'>Tutorial for XML</subtitle>\n<rss version='2.0' xmlns:itunes='http://www.itunes.com/dtds/podcast-1.0.dtd'>\n<channel>\n<title>XML Developer's Guide</title>\n<itunes:owner>\n<itunes:name>John Smith</itunes:name>\n<itunes:email>jsmith@example.com</itunes:email>\n</itunes:owner>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:category text='Programming'>\n<itunes:",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''<feed xml:lang='en'>\n  <title>XML Developer's Guide</title>\n  <subtitle lang='en'>Tutorial</subtitle>\n  <link rel='alternate' type='text/html' href='http://www.python.org/~guido/'/>\n  <updated>2007-05-28T22:17:31Z</updated>\n</feed>''') == 1\n\nassert solution('''<feed xml:lang='en'>\n  <title>XML Developer's Guide</title>\n  <subtitle lang='en'>Tutorial</subtitle>\n  <link rel='alternate' type='text/html' href='http://www.python.org/~guido/'/>\n  <updated>2007-05-28T22:17:31Z</updated>\n</feed>''') == 1\n\nassert solution('''<feed xml:lang='en'>\n  <title>XML Developer's Guide</title>\n  <subtitle lang='en'>Tutorial</subtitle>\n  <link rel='alternate' type='text/html' href='http://www.python.org/~guido/'/>\n  <updated>2007-05-28T22:17:31Z</updated>\n</feed>''') == 0\n\nassert solution('''<feed xml:lang='en'>\n  <title>XML Developer's Guide</title>\n  <subtitle lang='en'>Tutorial</subtitle>\n  <link rel='alternate' type='text/html' href='http://www.python.org/~guido/'/>\n  <updated>2007-05-28T22:17:31Z</updated>\n  <author><name>Guido van Rossum</name></author>\n</feed>''') == 2\n\nassert solution('''<feed xml:lang='en'>\n  <title>XML Developer's Guide</title>\n  <subtitle lang='en'>Tutorial</subtitle>\n  <link rel='alternate' type='text/html' href='http://www.python.org/~guido/'/>\n  <updated>2007-05-28T22:17:31Z</updated>\n  <author><name>Guido van Rossum</name></author>\n</feed>''') == 2\n=======\nWrite 5 lines of code to test the correctness of solution:\n>>>>>>> origin/master\nimport xml.etree.ElementTree as ET\nfrom xml.etree.ElementTree import Element\nfrom xml.etree.ElementTree import SubElement\nfrom xml.etree.ElementTree import tostring\nimport re\n<<<<<<< HEAD\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4662,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('<a><b><c/></b><d></c><e></e></d></a>') == 3\n\nTest.assert_equals(solution('<a><b><c/></b><d></c><e></e></d></a>'), 3)",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\nassert solution(input()) == 'NO'\nassert solution(input()) == 'YES'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"12\") == \"NO\"\nassert solution(\"1234567891\") == \"YES\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"7 8\\n9 8\\n9 8\") == \"YES\\nYES\"\nassert solution(\"1\\n1\\n1\\n1\") == \"YES\\nYES\\nYES\\nYES\"\nassert solution(\"7 8\\n9 8\\n9 8\") == \"NO\\nNO\\nNO\\nNO\"\nassert solution(\"7 8\\n9 8\\n9 8\") == \"YES\\nYES\\nNO\\nNO\"\nassert solution(\"7 8\\n9 8\\n9 8\") == \"YES\\nYES\\nYES\\nYES\"\n",
        "num_ids_2": 50,
        "num_ids_4": 106
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == [\"NO\"] * 3 + [\"YES\"]\nassert solution(\"\"\"\n0000000\n91012341230\n91012345678\n9101234567890\n9101234567890\n\"\"\") == [\"NO\"] * 3 + [\"YES\"] * 3\nassert solution(\"\"\"\n7243685\n99999999\n\"\"\") == [\"YES\"] * 3\nassert solution(\"\"\"\n000\n\"\"\") == [\"NO\"]\n=====Submission Details=====\nRuntime: 36 ms, faster than 97.91% of Python3 online submissions for Validate Mobile Number.\nMemory Usage: 14.3 MB, less than 55.49% of Python3 online submissions for Validate Mobile Number.\n'''\n",
        "num_ids_2": 19,
        "num_ids_4": 29
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 8\\n6 7\\n3 4\") == \"YES\\nNO\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"7 8 9 10\") == \"YES\\nYES\\nYES\\nYES\\nYES\\nYES\\nYES\\n\"\nassert solution(\"7 8 9 10 22 99\") == \"YES\\nNO\\nYES\\nYES\\nNO\\nYES\\nYES\\n\"\nassert solution(\"7 8 9 10 22 99 88\") == \"YES\\nNO\\nYES\\nNO\\nYES\\nYES\\nYES\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 104
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12 789 1234 5678\") == \"NO\"\nassert solution(\"7 89891234 5678\") == \"YES\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"3456 8\"\"\") == \"YES\"\nassert solution(\"\"\"812 123 456\"\"\") == \"YES\"\nassert solution(\"\"\"72345678\"\"\") == \"NO\"\nassert solution(\"\"\"\"\"\") == \"NO\"\nassert solution(\"\"\"1\"\"\") == \"NO\"\n",
        "num_ids_2": 30,
        "num_ids_4": 56
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n0712345678\\n777777777\\n') == \"YES\\nNO\"\nassert solution('1\\n0712345678\\n777777777\\n') == \"YES\\nNO\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4663,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"97654321\"\"\") == \"YES\"\nassert solution(\"\"\"9476345\"\"\") == \"YES\"\nassert solution(\"\"\"97654321\"\"\") == \"NO\"\nassert solution(\"\"\"97654321\"\"\") == \"NO\"\nassert solution(\"\"\"97654321\"\"\") == \"NO\"\n=====Test Case 1 ====\n\nimport io\nimport unittest\n\n\nclass TestSolution(unittest.TestCase):\n    def test_solution(self):\n        input = \"\"\"\n        97654321\n        97654321\n        97654321\n        97654321\n        97654321\n        97654321\n        97654321\n        97654321\n        97654321\n        97654321\n        97654321\n        \"\"\"\n        out = \"\"\"\n        YES\n        YES\n        YES\n        YES\n        YES\n        YES\n        YES\n        YES\n        YES\n        YES\n        YES\n        \"\"\"\n        f = io.StringIO(input.replace(\"\\n\", \"\"))\n        f.seek(0)\n        self.",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 4 5 9') == '2 3 5 8'\nassert solution('2 4 11 12') == '2 3 5 8 11 12'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492,",
        "num_ids_2": 1025,
        "num_ids_4": 1025
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '4\\n1 2 3\\n4 5 6\\n') == '2 3 4 5 6'\nassert solution(\n    '5\\n2 3 4 1 5\\n3 4\\n') == '2 4 1 5 3 4'\nassert solution(\n    '8\\n3 2 5 4 7 8 1 2\\n4\\n') == '1 2 3 4 5 6 7 8'\nassert solution(\n    '6\\n6 2 5 3 7 4 1\\n8\\n') == '1 2 3 4 5 6 7 8'\nassert solution(\n    '6\\n1 2 3 4 5 6 7\\n8\\n') == '6 8 1 2 3 4 5 7'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 4 7\") == \"1 3 5 7\"\nassert solution(\"3 7\") == \"1 3 5\"\nassert solution(\"6\") == \"1 3 5\"\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2 4 5\n4 8''') == '3 5 4 8'\nassert solution('''5\n3 4 2 5 8\n1''') == '2 5 3 1 4 8'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 4 5 9\") == \"2 5 9\"\nassert solution(\"2 2\") == \"1 1\"\nassert solution(\"1 2 3 4\") == \"1 3 4\"\nassert solution(\"5 6\") == \"4 5 6 7 8\"\nassert solution(\"6 7\") == \"5 6 7 8 9 10\"\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 57
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n4 5\n3\n7 8 9 10''') == '8 9 10 7'\nassert solution('''1\n3 4\n2\n5''') == '4 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '1 3'\nassert solution('4 5 7') == '1 2 3 4 6 5 7'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n4 5 3 2\n7''') == '''4 3 2 5'''\n\nYour function should return the symmetric difference of M and N in ascending order.\n\n=====Sample Test Cases=====\nInput\n\nOutput\n\nInput                Output\n5               4 3 2 5\n7               7 4\n'''\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4664,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n2 4\\n5 6\\n7 8') == '5 6 7 8'\nassert solution('1\\n2 3\\n4 5\\n6 7') == '1 4 5 6 7'\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"1.67\"\nassert solution(\"3\") == \"1.33333\"\nassert solution(\"4\") == \"1.25\"\n=====Sample Input & Output=====\nInput\n\n2\nID         MARKS     NAME     CLASS\n1         91         Patil   7         \n2         75         Kushal   9\n3         a         Patil   10\n4         91         Patil   7\n5         b         Patil   9\n6         c         Patil   10\n7         91         Patil   7\n8         75         Patil   9\n9         a         Patil   10\n10        91         Patil   7\n11        b         Patil   9\n12        c         Patil   10\n\nOutput\n\n1.73333333333333\n\nSample Input 2\n\n2\nID         MARKS     NAME     CLASS\n1         91         Patil   7         \n2         75         Kushal   9\n3         a         Patil   10\n4         91         Patil   7\n5         b         Patil   9\n6         c         Patil   10\n7         91         Patil   7\n8         75         Patil   9\n9         a         Patil   10\n10        91         Patil   7\n11        b         Patil   9\n12        c         Patil   10\n\nOutput\n\n1.93333333333333\n\"\"\"\n\n\n\nfrom collections import namedtuple",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(s) == \"28.83\"\ns = stdin.readline()\nn = int(s)\narr = stdin.readline().split()\nstudent = namedtuple('Student','id,name,age,marks,class')\nans = 0\nfor i in range(n):\n    ans = ans + int(student[arr[i]].marks)\navg = round(ans/n,2)\nprint(avg)\n\n=====Example Input=====\n4\nID        MARKS      NAME      CLASS\n1          97         Raymond    7\n2          50         Steven     4\n3          91         Adrian     9\n4          72         Stewart    5\n\n=====Example Output=====\n78.00\n\n>>>>>>\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([\"2\",\"1\",\"2\"]) == \"1.00\"\nassert solution([\"7\",\"4\",\"6\",\"3\",\"5\",\"3\",\"1\",\"7\",\"2\",\"2\"]) == \"5.28\"\n\n=====Sample Input/Output=====\nSample Input\n\n7\nID         MARKS      NAME       CLASS\n1         97         Raymond    7\n2         50         Steven     4\n3         91         Adrian     9\n4         72         Stewart    5\n5         28         Peter      6\n6         74         Yvonne     7\n7         69         Kate       7\n8         47         Kierstyna  8\n9         100000     Ignacio    9\n10        97         Peter      7\n11        93         Yvonne     9\n12        100        Ignacio    7\n13        74         Kierstyna  8\n14        49         Jules      7\n15        28         Adrian     7\n16        47         Jules      8\n\nSample Output\n\n82.00",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n    ID         MARKS     CLASS     NAME\n    1          91         3         John\n    2          92         2         Jony\n    3          93         2         Jony\n    4          94         2         Jony\n    5          95         2         Jony''') == '93.67'\nassert solution('''5\n    ID         MARKS     CLASS     NAME\n    1          91         3         John\n    2          92         2         Jony\n    3          93         2         Jony\n    4          94         2         Jony\n    5          95         2         Jony''') == '93.67'\n''')\nprint('\\n')\n\nSolution 01:",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n1 2 3 4\\n2 5 6 7 8') == '3.14'\nassert solution('4\\n3 5 1 2\\n5 6 2 7 3\\n1 2 3 4\\n6 7 8 9 10') == '6.28'\nassert solution('6\\n5 3 2 1\\n1 2 3 4 5\\n7 8 9 10 11\\n2 3 4 5 6') == '6.29'\nassert solution('12\\n6 7 8 1\\n1 2 3 4 5\\n7 8 9 10 11\\n2 3 4 5 6 7\\n') == '8.39'\n",
        "num_ids_2": 63,
        "num_ids_4": 144
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([1, 2, 1, 3, 1, 1, 5, 5]) == '2.67'\nassert solution([5, 1, 2, 1, 2, 1, 2, 1]) == '2.3'\nassert solution([10, 10, 10, 10]) == '10.00'\n",
        "num_ids_2": 52,
        "num_ids_4": 70
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\nMARKS      CLASS      NAME       ID\n78.23      2           Stefan     1\n85.55      2           Jagan      2\n74.54      2           Aamir      3\n83.45      2           Rohit      4\n74.44      2           Aakash     5\n83.46      2           Sachin     6\n78.76      2           Manju      7\n88.41      3           Manju      8\n86.78      3           Aakash     9\n74.56      3           Aakash    10\n83.45      3           Rohit     11\n''') == '86.78'\n\n=====Sample Test Case=====\nInput\n\nOutput\n\nExplanation\n\nSample Case 0\n\nSample Input\n\n4\nMARKS      CLASS      NAME       ID\n78.23      2           Stefan     1\n85.55      2           Jagan      2\n74.54      2           Aamir      3\n83.45      2           Rohit      4\n74.44      2           Aakash     5\n83.46      2           Sachin     6\n78.76      2           Manju      7\n88.41      3           Manju      8\n86.78      3           Aakash     9\n74.56      3           Aakash    10\n83.45      3           Rohit     11\n\nOutput\n\n86.78\n\nSample Case 1\n\nSample Input\n\n5\nMARKS      CLASS      NAME       ID\n78.23      2           Stefan     1\n85.55      2           Jagan      2\n74.54      2           Aamir      3\n83.45      2           Rohit      4\n74.44      2           Aakash     5\n83.46      2           Sachin     6\n78.76      2           Manju      7\n88.41      3           Manju      8\n86.78      3           Aakash     9\n74.56      3           Aakash    10\n83.45      3           Rohit     11\n\nOutput\n\n88.41\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\n1,2,3,4\n5,6,7,8\n3,4,1,5\n2,3,5,7''') == '3.28'\nassert solution('''2\n1,2\n3,4\n''') == '2.00'\nassert solution('''5\n10,20,30,40,50\n60,70,80,90,100\n40,50,60,70,80\n20,30,40,50,60\n15,17,19,21,23\n''') == '37.5'\n=====Your Solution Here=====\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10\\n1 2 3 4 5 6 7 8 9 10\\nA B C D E F G H I J K\\n0 2 4 6 8 10 12 14 16 18 20\") == \"3.67\"\nassert solution(\"5\\n1 2 3 4 5\\n0 2 4 6 8\\n0 2 4 6 8 10\\n0 2 4 6 8 10 12\\n0 2 4 6 8 10 12 14\") == \"5.00\"\nassert solution(\"1\\n1 2\\n3 4\\n5 6\") == \"3.00\"\n\n=====Test Case 1=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 2=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 3=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 4=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 5=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 6=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 7=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 8=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 9=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 10=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 11=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K 0 2 4 6 8 10 12 14 16 18 20\n1\n1 2\n3 4\n5 6\n\nOutput:\n3.67\n5.00\n3.00\n5.00\n5.00\n\n=====Test Case 12=====\nInput:\n5\n1 2 3 4 5\n0 2 4 6 8 10 12 14 16 18 20\n0 2 4 6 8 10 12 14 16 18 20 A B C D E F G H I J K\n0 2 4 6 8 10 12 14 16 18 20 A B C",
        "num_ids_2": 103,
        "num_ids_4": 127
    },
    {
        "number": 4665,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"2.82\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == 'Not Weird'\nassert solution('21') == 'Weird'\nassert solution('1') == 'Weird'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(9) == \"Weird\"\nassert solution(20) == \"Not Weird\"\nassert solution(21) == \"Weird\"\nassert solution(30) == \"Weird\"\nassert solution(66) == \"Not Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Not Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"Not Weird\"\nassert solution(\"6\") == \"Weird\"\nassert solution(\"10\") == \"Weird\"\nassert solution(\"1\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'Not Weird'\nassert solution('2') == 'Weird'\nassert solution('3') == 'Weird'\nassert solution('4') == 'Not Weird'\nassert solution('5') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"4\") == \"Weird\"\nassert solution(\"8\") == \"Not Weird\"\nassert solution(\"15\") == \"Weird\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3\n5''') == 'Weird'\nassert solution('''20\n3\n14\n''') == 'Not Weird'\nassert solution('''15\n11\n21\n''') == 'Weird'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('15') == 'Weird'\nassert solution('6') == 'Not Weird'\nassert solution('1') == 'Weird'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Weird'\nassert solution('2') == 'Not Weird'\nassert solution('4') == 'Not Weird'\nassert solution('8') == 'Weird'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4666,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"Not Weird\"\nassert solution(\"2\") == \"Weird\"\nassert solution(\"3\") == \"Not Weird\"\n=====Sample Input=====\n3\n4\n5\n6\n7\n\n=====Expected Output=====\nWeird\nWeird\nWeird\n=====Hints=====\nUse nested if-else statements.\nUse the modulus operator to test if n is in the inclusive range of 2 to 5.\nUse the modulus operator to test if n is in the inclusive range of 6 to 20.\nUse the modulus operator to test if n is greater than 20.\n'''\n\nn = int(input())\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n<feed xml:space=\"preserve\"><title>spam</title><date>2015-08-21</date><link href=\"blah.xml\"/><subtitle>Second Update</subtitle><author>bob</author></feed>') == '10'\n",
        "num_ids_2": 66,
        "num_ids_4": 66
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\") == \"2\"\n=====Test Case 1=====\nInput:\n2\n<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\n<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\nOutput:\n2\nExplanation:\nThe score of the first XML document will be 1 + 1 = 2.\nThe score of the second XML document will be 1 + 1 = 2.\n\n=====Test Case 2=====\nInput:\n3\n<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed><feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\n<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\n<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\nOutput:\n4\nExplanation:\nThe score of the first XML document will be 1 + 1 + 1 = 3.\nThe score of the second XML document will be 1 + 1 + 1 = 3.\nThe score of the third XML document will be 1 + 1 + 1 = 3.\n\n=====Test Case 3=====\nInput:\n1\n<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\nOutput:\n0\nExplanation:\nThe score of the first XML document will be 0.\n\n=====Test Case 4=====\nInput:\n2\n<feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed><feed><title>How to get started with XML</title><title>Getting Started with XML</title></feed>\nOutput:\n0\n\"\"\"\n\nimport xml.dom.minidom as xml",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('<feed><title>How to hack</title><subtitle>Programming</subtitle><link>https://feeds.feedburner.com/hacking</link><icon>https://news.ycombinator.com/icon/programmer</icon><guid>https://news.ycombinator.com/newsitem?p=2</guid><pubDate>Sat, 19 Jun 2020 11:05:40 -0400</pubDate><author>hacker</author><text>This hacker hacked my computer</text></feed>') == \"3\"\n'''\n",
        "num_ids_2": 130,
        "num_ids_4": 130
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"<head><title>PageTitle</title><count>2</count></head>\") == \"4\", \"PageTitle\"\nassert solution(\"<head><title>PageTitle</title><count>2</count><count>3</count></head>\") == \"8\", \"PageTitle\"",
        "num_ids_2": 68,
        "num_ids_4": 68
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n<feed xml:lang=\"en\"><title>XML 1</title><subtitle>XML 1 Subtitle</subtitle><link href=\"www.example.com/feed\" /></feed>') == '3'\nassert solution('3\\n<feed xml:lang=\"en\"><title>XML 1</title><subtitle>XML 1 Subtitle</subtitle><link href=\"www.example.com/feed\" /></feed>') == '2'\nassert solution('3\\n<feed xml:lang=\"en\"><title>XML 1</title><subtitle>XML 1 Subtitle</subtitle><link href=\"www.example.com/feed\" /></feed>') == '1'\nassert solution('3\\n<feed xml:lang=\"en\"><title>XML 1</title><subtitle>XML 1 Subtitle</subtitle><link href=\"www.example.com/feed\" /></feed>') == '0'",
        "num_ids_2": 110,
        "num_ids_4": 220
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n<feed xml:lang='en'>\\n  <title>XML Developer's Guide</title>\\n  <subtitle lang='en'>Tutorial showing the use of XML</subtitle>\\n  <rights>Copyright &copy; 2003 Mark Pilgrim</rights>\\n</feed>\") == \"6\"\n",
        "num_ids_2": 76,
        "num_ids_4": 76
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n<feed xmlns:ns1=\"http://www.w3.org/2005/Atom\">\n  <title>Some Title</title>\n  <link rel=\"alternate\" type=\"text/html\" href=\"http://example.com/atom\"/>\n  <ns1:link href=\"http://www.w3.org/2005/Atom\" />\n  <ns1:title>Some Title</ns1:title>\n</feed>''') == \"3\"\n\n'''\n\nimport xml.etree.ElementTree as ET\nimport re\n\ntree = ET.ElementTree(ET.fromstring(stdin))\nroot = tree.getroot()",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n<feed xmlns:mathml=\"http://www.w3.org/1998/Math/MathML\"\n        xmlns=\"http://www.w3.org/1999/xhtml\">\n  <title>Mathematical formulas</title>\n  <mathml:msqrt>4</mathml:msqrt>\n  <mathml:mrow>\n    <mathml:mi>sqrt</mathml:mi>\n    <mathml:mrow>\n      <mathml:msup>\n        <mathml:mi>2</mathml:mi>\n        <mathml:mrow>\n          <mathml:mi>3</mathml:mi>\n          <mathml:mrow>\n            <mathml:msup>\n              <mathml:mi>4</mathml:mi>\n              <mathml:mrow>\n                <mathml:mi>5</mathml:mi>\n              </mathml:mrow>\n            </mathml:msup>\n          </mathml:mrow>\n        </mathml:mrow>\n      </mathml:msup>\n    </mathml:mrow>\n  </mathml:mrow>\n</mathml:mrow>\n\"\"\") == \"17.0\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n<feed>\\n  <title>A Title</title>\\n  <link href=\\\"http://example.com/\\\">\\n  <description>A description</description>\\n</feed>\") == \"6\"\nassert solution(\"1\\n<feed xmlns=\\\"http://www.w3.org/2005/Atom\\\">\\n  <title>A Title</title>\\n  <link href=\\\"http://example.com/\\\">\\n  <description>A description</description>\\n</feed>\") == \"6\"\nassert solution(\"1\\n<feed xmlns=\\\"http://www.w3.org/2005/Atom\\\">\\n  <title>A Title</title>\\n  <link href=\\\"http://example.com/\\\">\\n  <description>A description</description>\\n</feed>\") == \"2\"\n\"\"\"\n\nimport re\n",
        "num_ids_2": 128,
        "num_ids_4": 200
    },
    {
        "number": 4667,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('<feed xml:lang=\"en\">\\n  <title>XML Developer\\'s Guide</title>\\n  <subtitle lang=\"en\">A tutorial showing the use of XML</subtitle>\\n  <link rel=\"alternate\" hreflang=\"en\" href=\"http://www.w3schools.com/xml/\"/>\\n  <updated>2013-12-06T02:00:00</updated><entry>\\n    <title>Introduction to XML</title><category lang=\"en\">Science</category><updated>2013-12-06T02:00:00</updated><content><![CDATA[<em>XML</em> is a markup language, the standard markup language for describing, editing, and publishing web content.</em><br />\n<em>The goal of XML is to describe and edit web content. XML is one of the most popular and widely used content languages in the world.</em><br />\nXML is a lightweight markup language, meaning that it uses only basic XML constructs, such as <tag> and <tag/>. XML documents can be structured in a hierarchical way, and can be used to describe and create complex web content.</em><br />\nXML is well suited for describing complex web content, because it does not require all the markup to describe the content in a structured way. With the help of the XML, a programmer can easily and quickly create web content that meets their needs. The XML language is very simple, and easy to learn. It is open source, meaning that you can freely reuse and adapt it to your needs.</em>]></content><subtitle lang=\"en\">The correct XML markup for this article</subtitle><link rel=\"alternate\" hreflang=\"en\" href=\"http://www.w3schools.com/xml/index.asp\"/>'\n    return len(stdin.split('\\n'))\n\nfor _ in range(int(input())):\n    print(solution(input()))\n",
        "num_ids_2": 178,
        "num_ids_4": 178
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == '90'\nassert solution('2 3 4 1') == '60'\nassert solution('4 2 3 1') == '45'\nassert solution('4 1 -3 2') == '-45'\nprint('Congratulations, solved it!')\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"0.3 -0.2 0.2 0.3\") == \"0.4270\"\nassert solution(\"-0.1 0.1 0.1 0.4\") == \"360.0\"\n\n=====Sample Test Cases=====\nInput\n\nOutput\n\n=====================\nInput\n=====Output=====\n\n>>>>>>> 1edc15d5d8c40e0f19ad7f7c58a3b5f8e8d943b\n>>>>>>> a56635e0153cf7dac054b35e5e6c5ee2d5a1b95\n>>> solution(\"0.3 -0.2 0.2 0.3\")\n'0.4270'\n>>> solution(\"-0.1 0.1 0.1 0.4\")\n'360.0'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('-10.5 -2.9 -10.1 -10.1') == '44.33'\nassert solution('10.1 -2.9 -10.1 -10.1') == '44.33'\nassert solution('10.1 -2.9 -10.1 -2.9') == '45.00'\n=====Solution=====\n",
        "num_ids_2": 53,
        "num_ids_4": 79
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.0 1.0 2.0 4.0') == '1.1944'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2.0 3.0 1.0 4.0') == '60.00'\nassert solution('1.0 2.0 4.0 8.0') == '45.00'\nassert solution('4.0 4.0 5.0 2.0') == '45.00'\nassert solution('2.0 1.0 0.0 0.0') == '90.00'\n=====Test case 2=====\n=====Input=====\n1.0 2.0 3.0\n4.0 8.0 0.0\n=====Output=====\n72.00\n'''\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.2 3.4 5.6') == '35.6'\nassert solution('3.4 1.6 4.2') == '45.0'\n\n\"\"\"\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1. 2.3 4.5\n1. 1.2 4.3\n4.5 1.3 2.3''') == '60.0'\nassert solution('''1 2\n1 2\n2 1''') == '45.0'\nassert solution('''2. 3. 4.5\n3. 4.5 2.3\n4.5 3.2 3.3''') == '45.0'\nassert solution('''1. 2. 3. 4.5\n2. 1. 3. 4.5\n4. 5. 1. 2. 3.4''') == '45.0'\nassert solution('''1. 1. 1. 1.\n2. 1. 2. 1.\n3. 1. 3. 1.\n4. 1. 4. 1.\n5. 1. 5. 1.\n6. 1. 6. 1.\n7. 1. 7. 1.\n8. 1. 8. 1.\n9. 1. 9. 1.\n10. 1. 10. 1.\n11. 1. 11. 1.\n12. 1. 12. 1.''') == '180.0'\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 0 0 0\") == \"0\"\nassert solution(\"1 2 3 4\") == \"60.000000\"\nassert solution(\"-1 0 0 0\") == \"0\"\nassert solution(\"0 -1 0 0\") == \"180\"\nassert solution(\"0 0 -1 0\") == \"90\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 0 0 1\") == \"105.0\", \"test\"\nassert solution(\"1 2 3 4\") == \"30.0\", \"test\"\nassert solution(\"2 4 5 6\") == \"60.0\", \"test\"\nassert solution(\"1 3 6 9\") == \"15.0\", \"test\"",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4668,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3 4 5\") == \"60.000000\"\nassert solution(\"4 4 0 0\") == \"45.000000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\neven\\nodd\\noneven\\nodd\\nodd\\n') == 5, \"fail test case 1\"\n\n=====Sample Input & Output=====\nInput\n5\neven\nodd\neven\nodd\nodd\n\nOutput\n10\n'''",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input(\"3\\naba\\neb\")) == \"2\"\nassert solution(input(\"2\\naba\\neb\")) == \"2\"\n=====Submission Result=====\nYour submission is pending automatic review. Review will be done on our end.\nNote that this is just a sandbox problem, and you may not pass all the tests.\nYour code will be judged according to the style of the template.\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\ncat dog\") == \"2\"\nassert solution(\"5\\ncat dog fish milk tea\") == \"5\"\nassert solution(\"1\\ncat\") == \"2\"\n'''",
        "num_ids_2": 31,
        "num_ids_4": 44
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4\n    a\n    ca\n    c\n    cc''') == '2'\nassert solution('''10\n    a\n    aa\n    aaaa\n    aaaaa\n    aaaaaa\n    aaaaaaa\n    aaaaaaaa\n    aaaaaaaaa\n    aaaaaaaaaa\n    aaaaaaaaaaa\n    aaaaaaaaaaaa\n    aaaaaaaaaaaaa\n    aaaaaaaaaaaaaa\n    aaaaaaaaaaaaaaa\n    aaaaaaaaaaaaaaaa\n    aaaaaaaaaaaaaaaaa''') == '5'\n=====Sample Test Cases=====\nTest 1\n\n>>> solution('''4\n    a\n    ca\n    c\n    cc''')\n'2'\nTest 2\n\n>>> solution('''10\n    a\n    aa\n    aaaa\n    aaaaa\n    aaaaaa\n    aaaaaaa\n    aaaaaaaa\n    aaaaaaaaa\n    aaaaaaaaaa\n    aaaaaaaaaaa\n    aaaaaaaaaaaa\n    aaaaaaaaaaaaa\n    aaaaaaaaaaaaaa\n    aaaaaaaaaaaaaaa\n    aaaaaaaaaaaaaaaa\n    aaaaaaaaaaaaaaaaa''')\n'5'\n\nprint(\"Coding complete? Click 'Check' to review your tests and earn cool rewards!\")",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n        \"2\\n\"\n        \"a\"\n    ) == \"2\"\nassert solution(\n        \"2\\n\"\n        \"a b\"\n    ) == \"2\"\n=====Solution=====\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4\\nabcd') == '2'\nassert solution('4 1\\ne\\nh\\nii') == '2'\n\n=====Sample Test Cases=====\nInput\nOutput\n\n=====Expected Output=====\n2\n0\n\n'''",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\nab a\\ne f') == '2'\nassert solution('5\\nhey\\nab\\nef') == '4'\nassert solution('3\\nab a\\nef') == '1'\nassert solution('1\\nab') == '0'\nassert solution('1\\n') == '0'\nprint('You are all set!')\n",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6\\neven\\neven\\neven\\neven\\neven\\neven') == 6\n=====Sample Test Cases=====\nInput\nOutput\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 4') == 2\nassert solution('Hello world!') == 3\nprint(solution(input()))\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4669,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nabracadabra') == \"10\"\n\n=====Example Input=====\n5\nabra\nadab\nbrac\nbaca\ncat\n\n=====Example Output=====\n10\n'''\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('III') == True\nassert solution('IV') == False\nassert solution('IX') == False\nassert solution('LVIII') == True\nassert solution('MCMXCIV') == True\n\n=====Sample Input & Output=====\nSample Input 1:\nIII\n\nSample Output 1:\nTrue\n\nSample Input 2:\nMCMXCIV\n\nSample Output 2:\nTrue\n\nSample Input 3:\nCCXIII\n\nSample Output 3:\nFalse\n\n'''\n\nimport re",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"MCMXCIV\") == \"True\", \"Should be: True\"\nassert solution(\"III\") == \"True\", \"Should be: True\"\nassert solution(\"IV\") == \"False\", \"Should be: False\"\nassert solution(\"V\") == \"False\", \"Should be: False\"\nassert solution(\"XCVIII\") == \"False\", \"Should be: False\"\n",
        "num_ids_2": 35,
        "num_ids_4": 67
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"X\") == \"True\"\nassert solution(\"L\") == \"True\"\nassert solution(\"CD\") == \"True\"\nassert solution(\"D\") == \"True\"\nassert solution(\"CM\") == \"True\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"I\") == True\nassert solution(\"V\") == True\nassert solution(\"X\") == True\nassert solution(\"L\") == True\nassert solution(\"C\") == True\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('X') == True\nassert solution('V') == True\nassert solution('L') == True\nassert solution('C') == True\nassert solution('D') == True\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"XIV\") == \"True\", \"XIV\"\nassert solution(\"LXXIV\") == \"True\", \"LXXIV\"\nassert solution(\"MMMCMXCIX\") == \"True\", \"MMMCMXCIX\"\nassert solution(\"XI\") == \"True\", \"XI\"\nassert solution(\"XV\") == \"False\", \"XV\"\n",
        "num_ids_2": 32,
        "num_ids_4": 68
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'True'\nassert solution(\"XVIII\") == 'True'\nassert solution(\"LXXXIX\") == 'True'\nassert solution(\"MMMCMXCIX\") == 'True'\nassert solution(\"C\") == 'False'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('MCMXCIV') == True\nassert solution('IX') == True\nassert solution('IV') == False\nassert solution('MMMDCCCLXXXVIII') == True\nassert solution('MMDCCCLXXXVIII') == False\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('VI') == True\nassert solution('X') == False\nassert solution('XI') == True\nassert solution('XX') == True\nassert solution('XC') == False\n",
        "num_ids_2": 16,
        "num_ids_4": 33
    },
    {
        "number": 4670,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"X\") == \"True\"\nassert solution(\"XIV\") == \"True\"\nassert solution(\"IX\") == \"True\"\nassert solution(\"L\") == \"False\"\nassert solution(\"XX\") == \"False\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1230987654321\\n9876543210') == '+91 9876 54321 4321'\nassert solution('1230987654321\\n9876543210\\n9876543210') == '+91 (9876) 54321 4321'\nassert solution('1230987654321\\n9876543210\\n9876543210\\n9876543210') == '+91 (9876) 54321 4321'\nassert solution('1230987654321\\n9876543210\\n9876543210\\n9876543210\\n9876543210') == '+91 (9876) 54321 4321'\n=====Submission Details=====\nTotal Accepted:  19\nTotal Submissions: 35\nDifficulty: Medium\nRuntime: 92 ms, faster than 94.42% of Python3 online submissions for Decode Ways.\nMemory Usage: 15.4 MB, less than 95.92% of Python3 online submissions for Decode Ways.\n",
        "num_ids_2": 66,
        "num_ids_4": 158
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"10\n78978912345678\n+91 987654321\n\"\"\") == \"\"\"+91 987654321\n78978912345678\"\"\", \"First\"\nassert solution(\"\"\"10\n78978912345678\n+91 987654321\n\"\"\") == \"\"\"+91 987654321\n78978912345678\"\"\", \"Second\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '+91 2\\n+91 2'\nassert solution('1') == '+91 1'\n\nSample Test Cases\nInput\n2\n+91 8572345678\n+91 8572345679\nOutput\n+91 8572345678\n+91 8572345679\n\"\"\"\n\n\"\"\"\ncode\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3\\n+91 9809 793794\\n+91 98762 6734587\\n+91 97808 456232') == '+91 9809 793794\\n+91 98762 6734587\\n+91 97808 456232\\n'\nassert solution('6\\n+91 86783 985123') == '+91 86783 985123\\n+91 86783 985123\\n+91 86783 985123\\n+91 86783 985123\\n+91 86783 985123\\n+91 86783 985123\\n'\n\n'''\n",
        "num_ids_2": 144,
        "num_ids_4": 144
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n+91 9828 7890\\n+91 9876 5535\\n+91 9876 5535\\n') == '+91 9876 5355\\n+91 9876 5355\\n+91 9876 5355'\nassert solution('2\\n+91 9876 5535\\n') == '+91 9876 5535\\n'\nassert solution('6\\n') == '+91 0\\n+91 0\\n+91 0\\n+91 0\\n+91 0\\n+91 0\\n'\nassert solution('5\\n+91 9876 5535\\n+91 9876 5535\\n+91 9876 5535\\n+91 9876 5535\\n+91 9876 5535\\n') == '+91 9876 5535\\n+91 9876 5535\\n+91 9876 5535\\n+91 9876 5535\\n+91 9876 5535\\n'\nassert solution('4\\n+91 9876 5535\\n') == '+91 9876 5535\\n+91 9876 5535\\n+91 9876 5535\\n'\n",
        "num_ids_2": 84,
        "num_ids_4": 216
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n913037143\\n612345678\\n9011234567\\n812345678') == '+91 903037143 +612345678 +9011234567 +812345678'\nassert solution('3\\n912814129\\n11194043\\n912315678\\n912316789\\n913154567\\n938767569\\n916685678') == '+91 912814129 +91 912315678 +913154567 +916685678 +912316789 +938767569'\nassert solution('10\\n912814129\\n911834567\\n912315678\\n912316789\\n913154567\\n938767569\\n916685678\\n918837699\\n91222456\\n911834567\\n912334567') == '+91 912814129 +91 912315678 +913154567 +916685678 +912316789 +938767569 +918837699 +91222456 +912315678'",
        "num_ids_2": 139,
        "num_ids_4": 264
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"+91 99999 88888\n+91 99999 88888\n\"\"\") == \"\"\"+91 99999 88888\n+91 99999 88888\"\"\"\n\nassert solution(\"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n\"\"\") == \"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\"\"\"\n\nassert solution(\"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n\"\"\") == \"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\"\"\"\n\nassert solution(\"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n\"\"\") == \"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\"\"\"\n\nassert solution(\"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n\"\"\") == \"\"\"+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\n+91 99999 88888\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n+91 9996 8876\\n+91 8887 67890\\n\") == \"+91 8887 67890\\n+91 9996 8876\\n\"\n\n=====Explanation=====\nSample Case:\n\nSample Input:\n2\n+91 99999 88876\n+91 99999 88877\n\nSample Output:\n+91 99999 88876\n+91 99999 88877\n\"\"\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 34 5678 9012 3456 7890') == '+91 7890 3456 5678 9012'\nassert solution('1 1 1 1 1 1') == '+91 1 1 1 1 1'\nassert solution('0') == '+91 0'",
        "num_ids_2": 49,
        "num_ids_4": 61
    },
    {
        "number": 4671,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\n7917164769\n8829388420\n''') == '''+91 7917164769\n+91 829388420\n''', 'test #1'\n\nassert solution('''\n2\n7917164769\n8829388420\n''') == '''+91 7917164769\n+91 829388420\n''', 'test #2'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nbeta\\nalpha\\n40 20 30') == '50.0'\nassert solution('1\\ntest\\n2\\n50 50') == '55.0'\nassert solution('2\\nbeta\\nalpha\\n40 20 30') == '50.0'\n\n'''\n\nn=int(input())\nprint('%.2f'%(sum([int(i) for i in input().split()])/3))",
        "num_ids_2": 45,
        "num_ids_4": 68
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(stdin) == '50.00'\n'''\nn = int(input())\nmarks = {}\nfor i in range(n):\n    name, *marks = input().split()\n    marks = list(map(float, marks))\n    marks.sort()\n    avg = sum(marks[1:]) / marks[0]\n    print('%0.2f'%avg)\n'''\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\nalpha 100\\nbeta 90\\nalpha\\n\") == \"90.00\"\nassert solution(\"2\\nbeta 100\\nbeta\\nalpha\\n\") == \"50.00\"",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nalpha 20\\nbeta 30\\nalpha') == '50.0'\nassert solution('2\\nalpha 20\\nbeta 30\\nalpha') == '50.0'\nassert solution('3\\nalpha 20\\nbeta 30\\nalpha') == '50.0'\n",
        "num_ids_2": 46,
        "num_ids_4": 69
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\nalpha 100\\nbeta 50\\nalpha 90\\n') == '50.0'\nassert solution('5\\nbeta 100\\nalpha 90\\nalpha 100\\n') == '90.0'\n=====Submission Detail=====\nInput: \n4\nalpha 100\nbeta 50\nalpha 90\nOutput:\n50.0\n90.0\n\n'''",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4\\nalpha 100\\nbeta 50 20\\ngamma 90\\n') == \"50.00\"\nassert solution('5\\nalpha 100\\nbeta 50 20\\ngamma 90\\ndelta 60\\necho \"hello world\"\\n') == \"50.00\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nalpha 100\\nbeta 90\\nalpha 60\\nalpha 80\\n') == '80.00'\nassert solution('5\\nalpha 100\\nbeta 90\\nalpha 60\\nalpha 80\\n') == '90.00'\nassert solution('5\\nalpha 100\\nbeta 90\\nalpha 60\\nalpha 80\\n') == '80.00'\n=====Code Framework=====\n",
        "num_ids_2": 60,
        "num_ids_4": 90
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '30.00'\nassert solution('1') == '0.00'\n=====Test Script =====\nimport sys\nimport io\n\nsys.stdout = io.StringIO()\n\nsolution(\"3\")\n\nprint(sys.stdout.getvalue())\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha\") == \"50\"\nassert solution(\"2\\nbeta 100\\nalpha 50\\n\") == \"50\"\nassert solution(\"1\\nalpha\\n\") == \"50.0\"\nassert solution(\"1\\nalpha\\n\") == \"50.0\"\nassert solution(\"3\\nalpha 100\\nbeta 50\\nalpha\\nbeta\\nalpha\") == \"50.0\"\n",
        "num_ids_2": 47,
        "num_ids_4": 81
    },
    {
        "number": 4672,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\nalpha 100\nbeta 75\nalpha\nbeta\nalpha\n''') == '50.0'\nassert solution('''4\nA 100\nB 75\nC 80\nD''') == '80.00'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\n    \"Kate\", \"Patty\", \"George\", \"John\",\n    \"Tim\", \"Anna\", \"Maria\", \"Samantha\",\n    \"Lily\", \"William\", \"David\", \"Marilyn\"\n]) == \"Mr. John\\nMs. Patricia\\nMs. Lily\\nMr. William\\nMr. David\\nMr. Tim\\nMr. Gloria\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1. John\\n2. Abc\\n3. Andy\\n4. Azy\\n5. Vasya\\n') == '1. Abc\\n2. John\\n4. Azy\\n5. Vasya\\n3. Andy\\n'\nassert solution('1\\n1. Peter\\n2. John\\n3. Peter\\n') == '1. Peter\\n2. John\\n'\n'''\n",
        "num_ids_2": 103,
        "num_ids_4": 103
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n    Bob Thomson\n    Tom David\n    Frank Dorn\n    Tom David\n''') == \"Mr. Tom David\\nMs. Frank Dorn\\nMr. David Thomson\\nMs. Tom David\\nMs. Frank Dorn\\nMs. Tom David\\nMs. Frank Dorn\\nMr. Tom David\\nMs. Tom David\\n\"\nassert solution('''2\n    Sammy\n    Kelly\n    Tom\n    Faye\n    Otis\n''') == \"Ms. Kevin\\nMs. Thomas\\nMs. Sammy\\nMs. Kayle\\nMs. Otis\\nMs. Tom\\nMs. Faye\\nMr. Sammy\\nMr. Kayle\\nMr. Tom\\nMr. Faye\\n\"\nassert solution('''5\n    Harry\n    Ron\n    Ruth\n    Hermione\n    Ronnie\n''') == \"Ms. Hermione\\nMr. Ronnie\\nMr. Harry\\nMs. Ron\\nMs. Harry\\nMs. Hermione\\nMr. Harry\\nMs. Hermione\\nMr. Ronnie\\n\"\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\\nHarry\\n37\\nM\\n\") == \"Mr. Harry\\n\"\nassert solution(\"5\\nHenry\\n37\\nM\\n\") == \"Mr. Henry\\nMs. Henry\\n\"\nassert solution(\"5\\nMary\\n45\\nF\\n\") == \"Ms. Mary\\nMs. Mary\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 85
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\nAlfons\\nBertie\\nAlfonso\\n\") == \"Ms. Alfredo\\nMr. Bertie\\nMs. Alfaonso\\n\"\nassert solution(\"3\\nHenry\\nDavids\\nBertie\\n\") == \"Mr. Henry\\nMs. Diane\\nMs. Betty\\n\"\nassert solution(\"5\\nHenry\\nDavids\\nBertie\\nAlfons\\n\") == \"Mr. Henry\\nMs. Diane\\nMs. Betty\\nMs. Alfredo\\n\"\nassert solution(\"4\\nHenry\\nDavids\\nBertie\\nAlfons\\n\") == \"Mr. Henry\\nMs. Diane\\nMs. Betty\\nMs. Alfredo\\n\"\nassert solution(\"6\\nHenry\\nDavids\\nBertie\\nAlfons\\nMason\\n\") == \"Mr. Henry\\nMs. Diane\\nMs. Betty\\nMs. Alfredo\\nMs. Mason\\n\"\n\n'''",
        "num_ids_2": 84,
        "num_ids_4": 184
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\nMarry\\n20\\nF\") == \"Ms. Marry\"\nassert solution(\"1\\nEmma\\n18\\nF\") == \"Ms. Emma\"\nassert solution(\"2\\nAlisa\\n12\\nF\") == \"Ms. Alisa\"\nassert solution(\"5\\nAlexander\\n42\\nM\") == \"Mr. Alexander\"\nassert solution(\"8\\nBilly\\n42\\nM\") == \"Mr. Billy\"\n",
        "num_ids_2": 45,
        "num_ids_4": 89
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\nAdam    Adam   2\nAdam    Adam   2\nAdam    Adam   2\n''') == 'Mr. Adam\\nMs. Adam\\nMs. Adam\\nMs. Adam'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\nMike Thomson\\n28\\nM\\n\") == \"Mr. Mike Thomson\\n\"\nassert solution(\"2\\nNico Robin\\n21\\nM\\n\") == \"Ms. Nico Robin\\n\"\nassert solution(\"3\\nMike Thomson\\n19\\nM\\n\") == \"Ms. Mike Thomson\\n\"\n=====Sample Input and Output=====\nInput\n5\nMike Thomson\n28\nM\nNico Robin\n21\nM\nOutput\nMr. Mike Thomson\nMs. Nico Robin\nMs. Mike Thomson\n\n=====Explanation=====\nIn the first test case, the youngest person is the first name. The oldest person in this case is 'Mr. Mike Thomson'.\n\nIn the second test case, you have two people of the same age. You should print them in the following order: 'Ms. Nico Robin' and 'Ms. Mike Thomson'.\n\nIn the third test case, you have two people of the same age. You should print them in the following order: 'Ms. Nico Robin' and 'Ms. Mike Thomson'.\n\nIn the fourth test case, you have two people of the same age. You should print them in the following order: 'Ms. Nico Robin' and 'Ms. Mike Thomson'.\n\n=====Note=====\n",
        "num_ids_2": 55,
        "num_ids_4": 82
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\nMarry\\nAnna\\nPeter\\n\") == \"Mr. Peter\\nMs. Anna\\nMr. Marry\\n\"\nassert solution(\"5\\nMark\\nSara\\nJack\\nHeather\\nEmily\\n\") == \"Ms. Emily\\nMr. Jack\\nMr. Heather\\nMr. Sara\\nMs. Mark\\n\"\nassert solution(\"3\\nMark\\nSara\\nJack\\nHeather\\n\") == \"Mr. Jack\\nMs. Sara\\nMr. Heather\\n\"\nassert solution(\"1\\nBobby\\nPeter\\n\") == \"Bobby\\n\"\nassert solution(\"3\\nHenry\\nDavids\\n\") == \"Mr. Henry Davids\\nMs. Patricia D'Arcy\\n\"\n",
        "num_ids_2": 90,
        "num_ids_4": 152
    },
    {
        "number": 4673,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"Mr. Henry Davids\\nMs. Mary George\\n\"\nassert solution(\"3\") == \"Mr. Henry Davids\\nMs. Mary George\\nMr. Henry Davids\\n\"\n",
        "num_ids_2": 51,
        "num_ids_4": 51
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\n2\n3\n2\n\n''') == '''\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n'''\n\nassert solution('''\n1\n1\n2\n3\n\n''') == '''\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n'''\n\nassert solution('''\n4\n5\n5\n2\n\n''') == '''\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2],[2,0,0],[2,0,1],[2,0,2],[2,1,0],[2,1,1],[2,1,2]]\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n'''\n",
        "num_ids_2": 83,
        "num_ids_4": 83
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([1, 1, 1, 3]) == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\"\"\"\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([1,1,1,3]) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Output=====\n[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2]]\n\n'''\n\n\n'''\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Output=====\n[0, 0, 0],\n[0, 0, 1],\n[0, 0, 2],\n[0, 1, 0],\n[0, 1, 1],\n[1, 0, 0],\n[1, 0, 1],\n[1, 1, 0],\n[1, 1, 1],\n[1, 1, 2]\n\"\"\"",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1 2 3\") == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nassert solution(\"1 1 1 2\") == [[0,0,0],[0,0,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[2,0,0],[2,0,1],[2,1,0],[2,1,1]]\nassert solution(\"1 1 1 1\") == [[0,0,0],[0,0,1],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1]]\n",
        "num_ids_2": 154,
        "num_ids_4": 213
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 1, 3]) == [[0, 0, 0]]\nassert solution([1, 2, 3, 4]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n\n\"\"\"\n\nimport itertools",
        "num_ids_2": 89,
        "num_ids_4": 158
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1, 1, 2, 3]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 1, 2]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([-5, 1, 1, -5]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([-1, 1, 1, -1]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\nassert solution([1, 1, 1, 1]) == [[0, 0, 0], [0, 0, 1], [0, 1, 0], [0, 1, 1], [1, 0, 0], [1, 0, 1], [1, 1, 0], [1, 1, 1]]\n=====Output Format=====\nPrint the list in lexographic increasing order.\n\n=====Sample Test Cases=====\nInput 1\n\nOutput 1\n\nInput 2\n\nOutput 2\n\nInput 3\n\nOutput 3\n\nInput 4\n\nOutput 4\n\n\"\"\"\n\nx = int(input())\ny = int(input())\nz = int(input())\nn = int(input())\n\n\nprint(list(map(lambda a, b, c: [i, j, k], range(x+1), range(y+1), range(z+1))))\n\nprint(\n    list(\n        map(\n            lambda a, b, c: [a, b, c],\n            range(x), range(y), range(z),\n        )\n    )\n)\n\nprint(\n    list(\n        map(\n            lambda a, b: a + b,\n            range(x + 1), range(y + 1),\n        )\n    )\n)\n\nprint(\n    list(\n        map(\n            lambda a, b, c: a + b + c,\n            range(x + 1), range(y + 1), range(z + 1),\n        )\n    )\n)\n",
        "num_ids_2": 138,
        "num_ids_4": 280
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == expected_output\n=====Test Case 1======\nInput\n0\n1\n1\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 2======\nInput\n4\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 3======\nInput\n3\n1\n1\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 4======\nInput\n3\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 5======\nInput\n3\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 6======\nInput\n3\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 7======\nInput\n4\n2\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 8======\nInput\n3\n1\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 9======\nInput\n4\n2\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 10======\nInput\n4\n2\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 11======\nInput\n4\n2\n2\n2\n2\nOutput\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\nExpected Output\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n\n=====Test Case 12======\nInput",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4674,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(x = 1, y = 1, z = 2, n = 3) == [[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[0,1,2],[1,0,0],[1,0,1],[1,0,2],[1,1,0],[1,1,1],[1,1,2]]\n=====Output=====\n[[0,0,0],[0,0,1],[0,0,2],[0,1,0],[0,1,1],[1,0,0],[1,0,1],[1,1,0],[1,1,1],[1,1,2]]\n'''",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"3.00+1.00i\"\nassert solution(\"1 2.001\") == \"3.000+1.000i\"\nassert solution(\"1 2.00\") == \"1.00+1.00i\"\nassert solution(\"1 2.0001\") == \"1.000+1.000i\"\n\n=====Test Cases=====\nCase 1:\nInput:\n1 2\nOutput:\n3.00+1.00i\nCase 2:\nInput:\n1 2.001\nOutput:\n3.000+1.000i\nCase 3:\nInput:\n1 2.00\nOutput:\n1.00+1.00i\nCase 4:\nInput:\n1 2.0001\nOutput:\n1.000+1.000i\nCase 5:\nInput:\n1 2.0000001\nOutput:\n1.000+1.000i\nCase 6:\nInput:\n1 2.00000001\nOutput:\n1.000+1.000i\nCase 7:\nInput:\n1 2.00000001\nOutput:\n1.000+1.000i\n\n'''",
        "num_ids_2": 38,
        "num_ids_4": 78
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.2 3.4\") == \"1.2+3.4i\"\nassert solution(\"1.2 3.4 -1.1\") == \"1.2-3.4i\"\nassert solution(\"0.5 -1.1\") == \"0.5-1.1i\"\nassert solution(\"0.5 -1.1\") == \"0.5-1.1i\"\n",
        "num_ids_2": 48,
        "num_ids_4": 94
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\" 1.1 0.2i\") == \"1.1-0.2i\", \"First\"\nassert solution(\" 2.1i -1.2\") == \"2.1-1.2\", \"Second\"\n=====Constraints=====\n\u25cf    For the complex numbers, the real part should be positive.\n\u25cf    For the complex numbers, the imaginary part should be between -2 and 2 and has no decimal places.\n\u25cf    The modulus of a number should be calculated accurately.\n\n'''\n\nimport math\nfrom decimal import *",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 -2i') == '1 -2i'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(' 1.2+0.0i') == '1.2+0.00i', \"Wrong Answer\"\nassert solution(' 1.2+-0.0i') == '1.2-0.00i', \"Wrong Answer\"\nassert solution(' 1.2+0.0i') == '1.2+0.00i', \"Wrong Answer\"\nassert solution(' 1.2+-0.0i') == '1.2-0.00i', \"Wrong Answer\"\nassert solution(' 1.2-0.0i') == '1.2+0.00i', \"Wrong Answer\"\n",
        "num_ids_2": 59,
        "num_ids_4": 118
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2\n1 2''') == '2 4', '1+2i'\nassert solution('''-3 5\n2 -7''') == '5 -7i', '-3+5i'\nassert solution('''-2 3\n-1 -8''') == '2 -2i', '-2+-1i'\nassert solution('''3 4\n3 5''') == '5 -4i', '3+4i'\nassert solution('''-4 1\n-2 -7''') == '2 -4i', '-4+-2i'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.1 + 2.2i\") == \"1.1 + 2.2i\"\nassert solution(\"1.1 - 2.2i\") == \"1.1 - 2.2i\"\nassert solution(\"1.1 * 2.2i\") == \"2.2i\"\nassert solution(\"1.1 / 2.2i\") == \"0.5 + 2.2i\"\nassert solution(\"1.1 % 2.2i\") == \"1.1 - 1.2i\"\n",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == '1.22+1.88i'\n'''\n\n\nimport math\n\nclass Complex(object):\n    def __init__(self, a, b):\n        self.a = a\n        self.b = b\n        \n    def __str__(self):\n        if self.b < 0:\n            return str(self.a) + \"-\" + str(self.b)\n        else:\n            return str(self.a) + \" + \" + str(self.b)\n        \n    def __add__(self, no):\n        return Complex(self.a + no.a, self.b + no.b)\n        \n    def __sub__(self, no):\n        return Complex(self.a - no.a, self.b - no.b)\n        \n    def __mul__(self, no):\n        return Complex(self.a * no.a - self.b * no.b, self.a * no.b + self.b * no.a)\n    \n    def __truediv__(self, no):\n        return Complex((self.a * no.a + self.b * no.b)/(no.a**2 + no.b**2), (self.b * no.a - self.a * no.b)/(no.a**2 + no.b**2))\n    \n    def __pow__(self, n):\n        x,y = self.a,self.b\n        for i in range(n):\n            x,y = (x**2 + y**2), (2*x*y)\n        return Complex(x,y)\n        \n    def mod(self):\n        return Complex(math.sqrt(self.a**2 + self.b**2), 0)\n    \n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 + 1i') == '1.00 + 1.00i'\nassert solution('1.1 + 1.1i') == '1.00 + 1.01i'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4675,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"3.00+5.00i\"\nassert solution(\"-1 -2\") == \"1.00+5.00i\"\nassert solution(\"-1.2\") == \"0.00+1.2i\"\nassert solution(\"1\") == \"1.00+0.00i\"\nassert solution(\"-1\") == \"0.00+1.00i\"\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"xyz\\nabc\") == \"xaybzc\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == '', \"Tests in your program failed!\"\nassert solution('xyz') == 'xaybzc', \"Tests in your program failed!\"\nassert solution('abc') == 'xaybzc', \"Tests in your program failed!\"\nassert solution('abcd') == 'xaybzc', \"Tests in your program failed!\"\n",
        "num_ids_2": 40,
        "num_ids_4": 85
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"xyz\") == \"xaybzc\"\nassert solution(\"abc\") == \"xaybzc\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('xyz') == 'xaybzc'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('xyz') == 'xaybzc'\nassert solution('abc') == 'xaybzc'\nprint(solution(input()))\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4676,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"xaybzc\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"00\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0B0') == '00'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"00\"\n\"\"\"\n\nstdin = input().split(' ')\nstring = stdin[0]\nfor i in range(0, len(string), 2):\n    if string[i] == '0':\n        string = string[:i] + '0' + string[i + 1:]\n    else:\n        string = string[:i] + '1' + string[i + 1:]\nprint(string)\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('') == ''\nassert solution('01B0') == '00'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == ''\nassert solution('01B0') == '00'\nassert solution('01B01B0') == '00'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"0B0\") == \"00\"\nassert solution(\"B0\") == \"00\"\nassert solution(\"B0B0B0B0\") == \"00\"\nassert solution(\"1B0\") == \"01\"\nassert solution(\"1B1B\") == \"01\"\n",
        "num_ids_2": 23,
        "num_ids_4": 52
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(solution.__doc__) == \"00\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0B\") == \"00\"\nassert solution(\"01B0\") == \"00\"\nassert solution(\"1B\") == \"01\"\nassert solution(\"1B0\") == \"01\"\nassert solution(\"1B0B\") == \"10\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"01B0\") == \"00\"\nprint(solution(\"01B0\"))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4677,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == ''\nassert solution('01B0') == '00'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('01B0') == '00'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"1\") == \"0\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"10\") == \"6\"\nassert solution(\"15\") == \"6\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\nassert solution('''\n3\n1 5 1\n''') == '3'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n''') == '1'\nassert solution('''\n100\n6 9 8 1 1 3 2 6 3 5 2 1 4 5 3 6 7\n''') == '36'\nassert solution('''\n10\n5 3 3 2 5 1 5 1 5 2 2 3 2 5 1\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5\\n2 1 5 4 3') == '4'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"3\") == \"1\"\nassert solution(\"2 2 3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([2, 1, 5, 4, 3]) == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5\n2 1 5 4 3\n''') == '4'\nassert solution('''\n3\n4 5 6\n''') == '6'\nassert solution('''\n1\n1\n1\n''') == '2'\nassert solution('''\n2\n2\n1\n''') == '2'\nassert solution('''\n3\n1 1 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\\n2 1 5 4 3\\n\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4678,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5\\n2 1 5 4 3\\n') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n\"\"\"\n\nfrom collections import deque",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'\nassert solution('ab') == ''\nassert solution('ac') == ''\n",
        "num_ids_2": 21,
        "num_ids_4": 39
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"aca\\n\"\n    \"accc\\n\"\n    \"ca\\n\"\n) == \"A\"\n\nassert solution(\n    \"aba\\n\"\n    \"cba\\n\"\n    \"a\\n\"\n) == \"A\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"B\"\nassert solution(\"ca\") == \"C\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'C'\nassert solution('ca') == 'C'\nassert solution('abcd') == 'C'\nassert solution('a') == 'A'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\naca\naccc\nca\n''') == 'A'\nassert solution('''\nA\naB\nabC\n''') == 'A'\nassert solution('''\naA\naAA\nAaA\n''') == 'A'\nassert solution('''\ncB\nbB\n''') == 'B'\nassert solution('''\nA\naCC\nccc\n''') == 'A'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aca') == 'A'\nassert solution('accc') == 'B'\nassert solution('ca') == 'C'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4679,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aca\") == \"A\"\nassert solution(\"accc\") == \"C\"\nassert solution(\"ca\") == \"C\"",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"10 10 10\") == \"NO\"\nassert solution(\"10 10 10 10\") == \"YES\"\nassert solution(\"5 5 3\") == \"NO\"\nassert solution(\"1 1 1\") == \"YES\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 5 7\\n') == 'YES'\nassert solution('1 2 3 4\\n') == 'NO'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5 7') == 'YES'\nassert solution('1 1 5') == 'NO'\nassert solution('1 1 5') == 'NO'\nassert solution('0 0 0') == 'NO'\nassert solution('1 1 1') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5 7') == 'YES'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"1 2 3\") == \"NO\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"10 10 7\") == \"YES\"\nassert solution(\"9 9 7\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5 7\") == \"YES\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1 2 3\n1 2 3\n4 5 6\n4 5 6\n5 6 7\n5 6 7''') == 'YES'\nassert solution('''1 2 3\n1 2 3\n4 5 6\n4 5 6\n5 6 7\n5 6 7''') == 'NO'\nassert solution('''1 2 3\n1 2 3\n4 5 6\n4 5 6\n5 6 7\n5 6 7''') == 'YES'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 5 7\") == \"YES\"\nassert solution(\"4 4 4\") == \"NO\"\nassert solution(\"3 3 3\") == \"NO\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4680,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5 7\n\n10 10 10''') == 'YES'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\n\") == \"11\"\nassert solution(\"6\\n\") == \"12\"\nassert solution(\"10\\n\") == \"21\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '11'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '11'\nassert solution('10') == '83'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5') == '11'\nassert solution('1\\n2\\n3\\n4\\n5') == '11'\nassert solution('1\\n2\\n3\\n4\\n5') == '11'\nassert solution('1\\n2\\n3\\n4\\n5') == '11'\nassert solution('1\\n2\\n3\\n4\\n5') == '11'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n''') == '11'\nassert solution('''\n5\n''') == '11'\nassert solution('''\n13\n''') == '10'\nassert solution('''\n7\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([\"5\"]) == \"11\"\nassert solution([\"5\", \"6\", \"10\"]) == \"13\"\nassert solution([\"10\"]) == \"1\"\nassert solution([\"8\"]) == \"2\"\nassert solution([\"6\"]) == \"4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 54
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '11'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4681,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '11'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '15'\nassert solution('7') == '35'\nassert solution('6') == '36'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == '7'\nassert solution('3') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"10\"\nassert solution(\"2\") == \"10\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('2') == '7'\n\n\"\"\"\n\na, b, h = map(int, stdin.readline().strip().split())\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n4\\n2') == '7'\nassert solution('5\\n5\\n1') == '10'\nassert solution('9\\n9\\n1') == '18'\nassert solution('13\\n13\\n1') == '29'\nassert solution('3\\n3\\n1') == '3'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"3 2\") == \"9\"\nassert solution(\"3 2 4\") == \"10\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '7'\nassert solution('4') == '12'\nassert solution('2') == '10'\nassert solution('3 3 2') == '15'\nassert solution('6 4 2') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"7\"\nassert solution(\"4\") == \"12\"\nassert solution(\"2\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4682,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n2') == '7'\nassert solution('2\\n1\\n1') == '3'\nassert solution('3\\n4\\n5') == '14'\nassert solution('5\\n2\\n2') == '5'\nassert solution('5\\n4\\n3') == '11'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"11\"\nassert solution(input()) == \"0\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n1 2 3\n\"\"\") == \"11\"\nassert solution(\"\"\"\n2\n1 2\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2 3\") == 11\nassert solution(\"1\") == 1\nassert solution(\"\") == 0\n",
        "num_ids_2": 18,
        "num_ids_4": 25
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '11', \"First\"\nassert solution('''\n4\n1 2 1 4\n''') == '10', \"Second\"\nassert solution('''\n6\n1 2 5 4 4 3\n''') == '22', \"Third\"\n\n'''\npython solution.py\n11\n\npython solution.py\n10\n\npython solution.py\n11\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\n1 2 3\") == \"11\"\nassert solution(\"2\\n1 2\") == \"0\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3') == '11'\nassert solution('2 1 4') == '5'\nassert solution('10 100') == '50505050505'",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '11'\nassert solution('5') == '14'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"11\"\nassert solution(\"2 3\") == \"13\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1 2 3\") == \"11\"\n",
        "num_ids_2": 17,
        "num_ids_4": 29
    },
    {
        "number": 4683,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"11\"\nassert solution(\"1\") == \"1\"\n\nN = int(stdin.readline())\na = list(map(int, stdin.readline().strip().split()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\n\nimport re",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 5 4') == \"YES\", \"Test 1 failed\"\nassert solution('5 6 3') == \"NO\", \"Test 2 failed\"\nassert solution('3 2 1') == \"YES\", \"Test 3 failed\"\nassert solution('3 2 3') == \"YES\", \"Test 4 failed\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 3 2') == 'YES', 'TESTING'\nassert solution('5 1 6') == 'NO', 'TESTING'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 'YES'\nassert solution('4 5 6') == 'NO'\nassert solution('1 2 3') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 4 3\") == \"YES\"\nassert solution(\"1 4 2\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3 2') == 'YES'\nassert solution('1 2 3') == 'NO'\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3 2') == 'YES', 'Test 1 Failed'\nassert solution('1 5 5') == 'YES', 'Test 2 Failed'\nassert solution('1 2 4') == 'NO', 'Test 3 Failed'\nassert solution('5 3 2') == 'YES', 'Test 4 Failed'",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3 2') == 'YES'\n\nassert solution('5 3 2') == 'NO'\n\nassert solution('1 1 1') == 'YES'\n\nassert solution('3 4 2') == 'NO'",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4684,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3 2\") == \"YES\"\nassert solution(\"5 6 7\") == \"NO\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"30\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 11\") == \"30\"\nassert solution(\"5 3 22\") == \"13\"\nassert solution(\"1\") == \"2\"\nassert solution(\"3 1\") == \"5\"\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 5') == '20'\nassert solution('5 6 7') == '10'\nassert solution('4 6 7') == '10'\nassert solution('1 2 3') == '15'\nassert solution('2 5 7') == '10'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 11\\n1\") == \"30\"\nassert solution(\"5 3 11\\n2\") == \"30\"\nassert solution(\"5 3 11\\n3\") == \"30\"\nassert solution(\"5 3 11\\n4\") == \"30\"\nassert solution(\"5 3 11\\n5\") == \"30\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 3 11\") == \"30\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 11\n1''') == '30'\nassert solution('''5 3 11\n1\n2\n3\n4\n5''') == '35'\nassert solution('''5 3 11\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10''') == '50'\nassert solution('''5 3 11\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11''') == '61'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n5 3 11\n1\n\n''') == \"30\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 3 11\n1\n''') == '30'\nassert solution('''5 3 11\n2\n''') == '14'\nassert solution('''5 3 11\n3\n''') == '15'\nassert solution('''5 3 11\n4\n''') == '20'\nassert solution('''5 3 11\n5\n''') == '25'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4685,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 11') == '30'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abaccaba') == 'Yes'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('') == 'No'\nassert solution('abaccaba') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abc') == 'No'\nassert solution('aaaaaa') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('abbcccdddd') == 'No'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"abaccaba\") == \"Yes\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('ab') == 'No'\nassert solution('ac') == 'Yes'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abaccaba') == 'Yes'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('a') == 'No'\nassert solution('abc') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"abaccaba\") == \"Yes\", \"Expected: Yes, Actual: No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4686,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abaccaba') == 'Yes'\nassert solution('z') == 'No'\nassert solution('ab') == 'Yes'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '3'\nassert solution('7 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"\nassert solution(\"3 4\\n1 1\\n2 2\\n3 3\") == \"3\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 4\n1 1\n2 2\n3 3\n''') == '3'\nassert solution('''5 4\n1 2\n2 1\n3 3\n''') == '3'\nassert solution('''5 4\n1 1\n2 2\n3 3\n4 4\n''') == '3'\nassert solution('''5 4\n1 1\n2 2\n3 3\n4 4\n5 5\n''') == '3'\nassert solution('''5 4\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '3'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\", \"Error in sample test case\"\nassert solution(\"3 4\") == \"3\", \"Error in sample test case\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\\n1 2\") == \"2\"\nassert solution(\"1 1\\n2 2\") == \"1\"\nassert solution(\"2 3\\n3 3\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '3'\nassert solution('7 3\\n3 6 4 5 2 1 3') == '3'\nassert solution('10 10\\n10 9 8 7 6 5 4 3 2 1') == '5'\nassert solution('1 1\\n3 3\\n5 5\\n7 7') == '1'\nassert solution('1 1\\n2 2\\n4 4\\n6 6') == '2'\n\"\"\"\nimport heapq\nimport sys\nfrom functools import cmp_to_key\n\nstdin = sys.stdin.read()",
        "num_ids_2": 38,
        "num_ids_4": 84
    },
    {
        "number": 4687,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2 3\n1 2\n3 3''') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2') == '2'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2') == '2'\nassert solution('5 2') == '10'\nassert solution('12 2') == '21'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2') == '2'\n\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"1 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"5 4\") == \"5\"\nassert solution(\"5 5\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2') == '2'\nassert solution('1') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '3'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"2\"\nassert solution(\"3 3\") == \"3\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 3') == '1'\nassert solution('3 3') == '2'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4688,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2') == '2'\nassert solution('100 10') == '7'\nassert solution('10 100') == '25'\nassert solution('10 100000') == '25'\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"30 3\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''20 3\n5 10 15''') == '10'\nassert solution('''20 3\n15 10 5''') == '15'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"100 10\") == \"95\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"10 30\") == \"20\"\nassert solution(\"100 100\") == \"50\"\nassert solution(\"5 10 3\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 3') == '6'\nassert solution('2 4') == '10'\nassert solution('3 6') == '11'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"20 3\") == \"10\"\nassert solution(\"10 7\") == \"7\"\nassert solution(\"10 10\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"20 3\") == \"10\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20 3\\n5 10 15') == '10'\nassert solution('20 4\\n3 9 12 10\\n15 2 9 5\\n16 4 8 6\\n12 11 16 9') == '15'\nassert solution('20 5\\n1 2 3 4 5\\n8 7 6 5\\n6 4 5 3\\n7 2 1 5\\n5 4 3 1') == '0'\n",
        "num_ids_2": 51,
        "num_ids_4": 93
    },
    {
        "number": 4689,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20 3\\n5 10 15\") == \"10\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"1 1 1 2\") == \"2\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2 7\") == \"15\"\nassert solution(\"4 5 2 7\") == \"14\"\nassert solution(\"4 5 4 7\") == \"14\"\nassert solution(\"8 5 7 8\") == \"25\"\nassert solution(\"6 7 2 7\") == \"24\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 4 3 2') == '15'\nassert solution('7 3 5 2') == '14'\nassert solution('0 0 0 0') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5 2 7\") == \"15\"\nassert solution(\"10 10 10 10\") == \"10\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '4'\nassert solution('2 2 1 3') == '3'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '1'\nassert solution('1 2 3 4 5') == '1'\nassert solution('1 2 3 4 5 6') == '1'\n",
        "num_ids_2": 27,
        "num_ids_4": 42
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(['3', '5', '2', '7']) == '15'\nassert solution(['3', '5', '2', '7']) == '14'\nassert solution(['3', '5', '2', '7']) == '10'\nassert solution(['2', '4', '3', '5']) == '15'\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 2 2') == '3'\nassert solution('3 5 2 7') == '15'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5 2 7') == '15'\nassert solution('3 5 2 7') == '15'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4690,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 2 7') == '15'\nassert solution('3 3 3 3') == '9'\nassert solution('1 1 1 1') == '1'\nassert solution('2 2 2 2') == '4'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('1') == 'WA x 1'\nassert solution('2') == 'TLE x 2'\nassert solution('0') == 'RE x 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('6') == \"AC x 3\"\nassert solution('1') == \"WA x 1\"\nassert solution('2') == \"TLE x 2\"\nassert solution('3') == \"RE x 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"6\") == \"AC x 3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\nAC\\nAC\\nAC\\n\") == \"AC x 3\\n\"\nassert solution(\"4\\nAC\\nAC\\nWA\\n\") == \"AC x 3\\nWA x 1\\n\"\nassert solution(\"4\\nAC\\nWA\\nAC\\nWA\\n\") == \"AC x 3\\nWA x 1\\nAC x 3\\n\"\nassert solution(\"4\\nAC\\nWA\\nAC\\nWA\\n\") == \"AC x 3\\nWA x 1\\nAC x 3\\n\"\nassert solution(\"1\\n\") == \"AC x 0\\n\"\n",
        "num_ids_2": 55,
        "num_ids_4": 131
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6') == 'AC x 3'\nassert solution('6') == 'AC x 3'\nassert solution('5') == 'WA x 1'\nassert solution('4') == 'TLE x 2'\nassert solution('3') == 'AC x 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"WA 1\\nWA 1\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"AC x 3\"\nassert solution(\"1\") == \"WA x 1\"\nassert solution(\"2\") == \"TLE x 2\"\nassert solution(\"0\") == \"RE x 0\"\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nAC\nTLE\nAC\nAC\nWA\nTLE\n''') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\nassert solution('10') == 'AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\\n'\n\n\"\"\"",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4691,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(TEST_INPUT) == \"AC x 3\\nWA x 1\\nTLE x 2\\nRE x 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == '10'\nassert solution('20') == '27'\nassert solution('21') == '27'\nassert solution('22') == '28'\nassert solution('23') == '29'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    6\n''') == '6'\nassert solution('''\n    22\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"20\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution([\"1\"]) == \"1\"\nassert solution([\"2\"]) == \"0\"\nassert solution([\"3\"]) == \"0\"\nassert solution([\"4\"]) == \"1\"\nassert solution([\"5\"]) == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('21') == '27'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20') == '21'\nassert solution('10') == '10'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"30\") == \"27\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4692,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('23') == '27'\n\nprint(solution(input()))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 5\") == \"7\"\nassert solution(\"5 10\") == \"error\"\nassert solution(\"2 3\") == \"error\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == '3'\nassert solution('5 6') == '7'\nassert solution('1000000000 3') == '10000000001'\n",
        "num_ids_2": 22,
        "num_ids_4": 37
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"9\"\nassert solution(input()) == \"error\"\nassert solution(input()) == \"7\"\nassert solution(input()) == \"error\"\nassert solution(input()) == \"11\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"error\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == '10'\nassert solution('1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3') == '9'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"3\", \"Test 1 failed\"\nassert solution(\"10 4\") == \"error\", \"Test 2 failed\"\nassert solution(\"1 2\") == \"3\", \"Test 3 failed\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 3\") == \"6\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"3 9\") == \"error\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\n10 9\n''') == 'error'\nassert solution('''8 8\n4 4\n''') == '10'\nassert solution('''8 9\n10 9\n''') == 'error'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4693,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4') == 'error'\nassert solution('1 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n2 3 7 9\n''') == '7'\nassert solution('''\n4\n2 3 7 9\n''') == '7'\nassert solution('''\n4\n-2 3 7 9\n''') == '4'\nassert solution('''\n5\n2 3 7 9 2\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 4') == '2'\nassert solution('1\\n1') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 7 9') == 7\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"7\"\nassert solution(\"4\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 7 9') == '7'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 7 9\") == \"7\"\nassert solution(\"4\") == \"4\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == \"7\"\nassert solution(\"5\") == \"11\"\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4\\n2 3 7 9') == '7'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4694,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 7 9') == '7'\nassert solution('4') == '4'\nprint(solution(input()))\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('4 5') == 'No'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 2\") == \"No\"\nassert solution(\"1 4\") == \"No\"\nassert solution(\"1 2\") == \"Yes\"\n\nstdin = \"\"\"1 3\n2 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1 4\n1 2\n1",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 3\") == \"No\"\nassert solution(\"3 2\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('1 4') == 'No'\nassert solution('5 3') == 'No'\nassert solution('3 1') == 'Yes'\nassert solution('2 2') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3') == 'Yes'\nassert solution('2 4') == 'No'\nassert solution('1 5') == 'Yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('2 1') == 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'Yes'\nassert solution('1 3') == 'Yes'\nassert solution('1 2')!= 'No'\nassert solution('1 1')!= 'No'\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 2\") == \"No\"\nassert solution(\"2 3\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4695,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3\") == \"Yes\"\nassert solution(\"2 4\") == \"No\"\nassert solution(\"3 5\") == \"Yes\"\nassert solution(\"1 4\") == \"No\"\nassert solution(\"2 5\") == \"Yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"1 1\") == \"Even\"\nassert solution(\"1 1\") == \"Even\"\nassert solution(\"1 1\") == \"Even\"\nassert solution(\"1 1\") == \"Even\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sys.stdin.read()) == \"Even\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == 'Even'\nassert solution('4 5') == 'Odd'\nassert solution('-1 2') == 'Odd'",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"Even\"\nassert solution(\"3\") == \"Odd\"\nassert solution(\"4\") == \"Even\"\nassert solution(\"5\") == \"Odd\"\nassert solution(\"6\") == \"Even\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"1 3\") == \"Odd\"\nassert solution(\"2 1\") == \"Odd\"\nassert solution(\"3 2\") == \"Even\"\nassert solution(\"4 5\") == \"Even\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == 'Even'\nassert solution('1 3') == 'Odd'\n\"\"\"",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"1 3\") == \"Odd\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"3 4\") == \"Even\"\nassert solution(\"4 5\") == \"Odd\"",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 4') == 'Even'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4696,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"Even\"\nassert solution(\"2 1\") == \"Odd\"\n\nThe submitted function should return the string \"Even\" if the product of a and b is even, and \"Odd\" if it is odd.\n\nNote that your solution will be run on an infinite number of test cases. This does not affect grading.\n\n\"\"\"\n\nimport re\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 6\\n\") == \"2\", \"Invalid\"\nassert solution(\"1 10\\n\") == \"2\", \"Invalid\"\nassert solution(\"4 6\\n\") == \"4\", \"Invalid\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 6') == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 5') == '2'\nassert solution('3 4') == '1'\n\"\"\"\n\nn, m = list(map(int, input().split()))",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 6\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1 2\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 6') == '2'\nassert solution('2 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 6') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"2 6\") == \"4\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 6\") == \"2\"\nassert solution(\"3 9\") == \"3\"\nassert solution(\"1 1\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4697,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\") == \"2\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\nassert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"\n",
        "num_ids_2": 54,
        "num_ids_4": 108
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\\n9\\n\"\nassert solution(\"2\") == \"6\\n9\\n\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3\\n') == '6\\n9'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '6\\n9\\n'\nassert solution('4') == '14\\n14\\n'\nassert solution('5') == '17\\n17\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '6\\n9'\nassert solution('4') == '12\\n14'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 1 4\\n2\\n1 1\\n2 3') == '6\\n9'\n\"\"\"\n\nfrom itertools import combinations",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"2\") == \"9\"\nassert solution(\"3\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n2 1 4\n2\n1 1\n2 3\n\"\"\") == \"6 9\"\nassert solution(\"\"\"\n5\n3 2 1 4 5\n4\n3 3 2 3\n2 3 1 1\n2 2 1 2\n3 3 1 2\n\"\"\") == \"18 18\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '6\\n9\\n'\nassert solution('2') == '6\\n9\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4698,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\\n2 1 4\\n2\\n1 1\\n2 3\") == \"6 9\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000 8') == '2000'\nassert solution('2021 16') == '2031'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000 8') == '2000'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n    100 1\n    3 4 5 6 7 8 9\n''') == '2000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5 6 7 8 9\") == \"2000\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"10\"\nassert solution(\"1 1 1 1 1 1 1 1 1\") == \"0\"\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1000 8\n1 3 4 5 6 7 8 9''') == '2000'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"10 2\") == \"10\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 2 3 4 5 6 7 8 9\n''') == '2000'\nassert solution('''\n1000 8\n1 3 4 5 6 7 8 9\n''') == '2000'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n1 2\n3 2\n4 5\n''') == '2000'\nassert solution('''\n10\n1 2\n3 2\n4 5\n6 7\n8 9\n10 11\n12 13\n14 15\n16 17\n18 19\n20 21\n''') == '2500'\nassert solution('''\n1\n1 2\n3 2\n4 5\n''') == '3'\nassert solution('''\n1\n1 2\n3 2\n4 5\n''') == '2'\nassert solution('''\n1\n1 2\n3 2\n4 5\n6 7\n8 9\n10 11\n12 13\n14 15\n16 17\n18 19\n20 21\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1000 8\") == \"2000\"\nassert solution(\"500 100\") == \"500\"\nassert solution(\"1\") == \"1\"\nassert solution(\"\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4699,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 8') == '2000'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 3\\n1 2 3 4\\n1 3\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\") == \"1\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n1 4\") == \"0\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n1 4\") == \"1\"\nassert solution(\"3 3\\n1 2 3 4\\n1 3\\n2 3\\n1 4\") == \"2\"\n",
        "num_ids_2": 46,
        "num_ids_4": 104
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"0\"",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '2'\n\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\n",
        "num_ids_2": 58,
        "num_ids_4": 87
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\\n1 2 3 4\\n1 3\\n2 3\") == \"2\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\\n\") == \"2\"\nassert solution(\"5 5\\n1 3\\n4 2\\n3 1\\n2 5\\n5 4\\n3 4\\n1 5\\n\") == \"3\"\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4') == '2'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''4 3\n1 2 3 4\n1 3\n2 3\n2 4\n''') == '2'\nassert solution('''4 2\n1 2\n1 3\n2 3\n2 4\n''') == '1'\nassert solution('''5 5\n1 2\n2 3\n1 3\n2 4\n3 4\n3 5\n''') == '4'\nassert solution('''5 5\n1 2\n3 3\n4 4\n3 5\n4 5\n''') == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4700,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 3\\n1 2 3 4\\n1 3\\n2 3\\n2 4\") == \"2\"\nassert solution(\"5 2\\n1 3\\n2 4\\n2 5\\n3 4\") == \"2\"\nassert solution(\"1 2\\n3 5\\n4 5\\n5 6\\n4 7\\n2 7\") == \"1\"\n\"\"\"",
        "num_ids_2": 56,
        "num_ids_4": 87
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nassert solution(\"2\\n3\") == \"4\"\nassert solution(\"3\\n3\") == \"9\"\nassert solution(\"6\\n5\") == \"55\"",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\") == \"10\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '10'\nassert solution('4') == '20'\nassert solution('5') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n3\") == \"10\"\nassert solution(\"10\\n2\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4') == '10'\nassert solution('3') == '10'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2\n4\n''') == '10'\nassert solution('''3\n2\n''') == '8'\nassert solution('''4\n2\n''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4701,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '8'\nassert solution('5') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('0') == '0'\nassert solution('-1') == '0'\nassert solution('2') == '1'\nassert solution('-0.5') == '0.5'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0') == '0', \"Wrong!\"\nassert solution('1') == '0', \"Wrong!\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('0') == '0'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0', 'Test 1'\nassert solution('0') == '1', 'Test 2'\nassert solution('0.5') == '0.5', 'Test 3'\nassert solution('1.5') == '0.5', 'Test 4'\nassert solution('0.75') == '0.75', 'Test 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 64
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(1) == '0'\nassert solution(0) == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('1') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4702,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"125\") == \"176\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"125\") == \"176\"\nassert solution(\"12\") == \"176\"\nassert solution(\"1+2\") == \"3\"\nassert solution(\"1+2+5\") == \"8\"\nassert solution(\"1+2+5+8\") == \"13\"\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('125') == '176'\nassert solution('12') == '26'\nassert solution('5') == '11'\nassert solution('2') == '10'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('125') == '176'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('125') == '176'\nassert solution('1+2+3') == '4'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(stdin='') == '176'\nassert solution(stdin='') == '0'\nassert solution(stdin='') == '0'\nassert solution(stdin='') == '0'\nassert solution(stdin='') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '176'\nprint('All tests passed!')\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('125') == '176'\nassert solution('1+25') == '26'\nassert solution('12+5') == '17'\nassert solution('1+2+5') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('125') == '176'\nassert solution('1') == '1'\nassert solution('12') == '12'\nassert solution('1+2') == '3'\nassert solution('1+2+3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4703,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('125') == '176'\nassert solution('12') == '17'\nassert solution('5') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"6\") == \"1\"\nassert solution(\"4\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '1'\nassert solution('1') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n1 2 3 4 5 6') == '1'\nassert solution('2\\n3 2 2 2') == '1'\nassert solution('1\\n1 1 2') == '2'\n\"\"\"\nimport math",
        "num_ids_2": 34,
        "num_ids_4": 49
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"6\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n1 2 3\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == '1'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1 2 3 4 5\\n') == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4704,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\n1 2 3 4 5 6\") == \"1\"\nassert solution(\"10\\n1 2 3 4 5 6\\n\") == \"1\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '15000'\nassert solution('20') == '16200'\nassert solution('1') == '8000'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"15800\") == \"15800\"\nassert solution(\"20\") == \"16000\"\nassert solution(\"8\") == \"16000\"\nassert solution(\"9\") == \"15800\"\nassert solution(\"20\") == \"15800\"",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n\n''') == '8080'\nassert solution('''\n100\n\n''') == '16200'\nassert solution('''\n20\n\n''') == '15800'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4\") == \"22\"\nassert solution(\"10\") == \"220\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"20\") == \"15800\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20') == '15800'\nassert solution('1') == '-1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n') == '15800'\nassert solution('20\\n') == '15800'\nassert solution('10\\n') == '15900'\nassert solution('100\\n') == '15900'\nassert solution('20\\n') == '14900'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20') == '15800'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4705,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"15800\"\nassert solution(\"10\\n\") == \"159200\"\nassert solution(\"21\\n\") == \"1615100\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\nassert solution(\"cne\") == \"cne\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"ant\"\n) == \"abc\"\n\nassert solution(\n    \"obe\"\n) == \"abc\"\n\nassert solution(\n    \"rec\"\n) == \"abc\"",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ant') == 'abc', 'Test 1 fails'\nassert solution('obe') == 'abc', 'Test 2 fails'\nassert solution('rec') == 'abc', 'Test 3 fails'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"abc\") == \"abc\"\nassert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abec\"\nassert solution(\"rec\") == \"abc\"\n\n\"\"\"\nimport sys",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ant') == 'abc'\nassert solution('obe') == 'abc'\nassert solution('rec') == 'abc'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ant\") == \"abc\"\nassert solution(\"obe\") == \"abc\"\nassert solution(\"rec\") == \"abc\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4706,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('ant') == 'abc', 'Input: ant'\nassert solution('obe') == 'abc', 'Input: obe'\nassert solution('rec') == 'abc', 'Input: rec'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('') == '1'\nassert solution('101') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"101010\") == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"101\") == \"2\"\nprint(solution(\"101\"))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('101') == '2'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"101\") == \"2\"\nassert solution(\"11\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('101') == \"2\"\nassert solution('1011') == \"4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"101\") == '2'\nassert solution(\"010\") == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2'\nassert solution('101') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('101') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4707,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"101\") == \"2\"\nprint(solution(\"101\"))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"48000\"\nassert solution(\"3\") == \"48000\"\nassert solution(\"1\") == \"0\"\n\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '48000'\nassert solution('2') == '48000'\nassert solution('6') == '48000'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3\\n10000\\n9000') == '48000'\nassert solution('2\\n3\\n10000\\n9000') == '38000'\nassert solution('1\\n3\\n1\\n1') == '1'\nassert solution('2\\n3\\n1\\n1') == '0'\nassert solution('1\\n4\\n10000\\n10000') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 80
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5\") == \"48000\"\nassert solution(\"0\") == \"0\"\nassert solution(\"0 1\") == \"0\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"5\n3\n10000\n9000\n\"\"\") == \"48000\"\nassert solution(\"\"\"2\n3\n10000\n9000\n\"\"\") == \"8500\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '48000'\n\"\"\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n\"\"\"\n5\n3\n10000\n9000\n\"\"\") == \"48000\"\nassert solution(\n\"\"\"\n10\n5\n10000\n9000\n10000\n9000\n10000\n9000\n\"\"\") == \"108000\"\nassert solution(\n\"\"\"\n5\n3\n10000\n9000\n9000\n9000\n\"\"\") == \"108000\"\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\n3\\n10000\\n9000') == '48000'\nassert solution('0\\n0\\n1') == '1'\nassert solution('2\\n3\\n9000\\n3') == '50000'\nassert solution('5\\n2\\n10000\\n9000') == '48000'\nassert solution('100\\n10\\n1\\n9000') == '10000'\n",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n3\n10000\n9000\n''') == '48000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4708,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"5\\n3\\n10000\\n9000\\n\"\n) == \"48000\"\n\"\"\"\n\nN, K, X, Y = [int(n) for n in input().split()]",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 / 2\") == \"0.5\"\nassert solution(\"1 ^ 2\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('-1 + 2') == '1'\nassert solution('1 - 2') == '-1'\nassert solution('-1 - 2') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 + 2') == '3'\n\"\"\"\n\na, b, op = stdin.split()",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('2 + 1') == '3'\nassert solution('3 - 1') == '2'\nassert solution('2 - 3') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 + 2') == '3'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('5 + 7') == '12'\nassert solution('3 - 4') == '1'\nassert solution('0 - 4') == '-4'\nassert solution('3 - 4 + 5 - 6') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('1 * 2') == '2'\nassert solution('1 / 2') == '0.5'\nassert solution('1 * 2 + 3') == '6'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 + 2') == '3'\nassert solution('1 - 2') == '-1'\nassert solution('1 * 2') == '2'\nassert solution('1 / 2') == '0.5'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"-1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 * 2 + 1\") == \"3\"\nassert solution(\"-1 + 1\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4709,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 + 2\") == \"3\"\nassert solution(\"1 - 2\") == \"1\"\nassert solution(\"1 * 2\") == \"2\"\nassert solution(\"1 / 2\") == \"0.5\"\nassert solution(\"1 ^ 2\") == \"2\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 50
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1250') == 'ARC'\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000\") == \"ABC\"\nassert solution(\"1200\") == \"ARC\"\nassert solution(\"1205\") == \"ARC\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == 'ABC'\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1200') == 'ARC'\nassert solution('1000') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n''') == 'ABC'\nassert solution('''\n1000\n''') == 'ARC'\nassert solution('''\n200\n''') == 'ARC'\nassert solution('''\n10000\n''') == 'ARC'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('1201') == 'ARC'\nassert solution('1202') == 'ARC'\nassert solution('1203') == 'ARC'\n\"\"\"\n\n\nimport math\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == 'ARC'\nassert solution('1000') == 'ABC'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == 'ABC'\nassert solution('12000') == 'ARC'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4710,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000\") == \"ARC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 20\") == \"1300\"\nassert solution(\"4 1 2\") == \"1300\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1000 10 500\") == \"1300\"\nassert solution(\"100 100 100\") == \"1500\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"300 600 800\") == \"2700\"\nassert solution(\"400 300 500\") == \"1000\"\nassert solution(\"900 700 800\") == \"1300\"\nassert solution(\"700 600 800\") == \"1300\"\nassert solution(\"700 500 600\") == \"1300\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('1000000 10000000 1000000000 1000000000 10000000000') == '1000000'\nassert solution('13007') == '13007'\nassert solution('123') == '123'",
        "num_ids_2": 33,
        "num_ids_4": 55
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('1 2 3') == '0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"200 200 200\") == \"500\"\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 2000 3000') == '1003'\nassert solution('700 600 780') == '1300'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('700 600 780') == '1300'\nassert solution('700 600 780') == '1300'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4711,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"700 600 780\") == \"1300\"\nassert solution(\"7000 7000 7000\") == \"1480\"\nassert solution(\"7000 7100 7100\") == \"1380\"\n\nstdin = \"\"\"\n7000 7000 7100\n\"\"\"\nimport sys\nimport io\n\nsys.stdin = io.StringIO(stdin.strip())\n",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == '#abc#\\n#arc#'\nassert solution('100 5') == '#abc#\\n#arc#'\nassert solution('3 4') == '#####\\n#arc#'\nassert solution('2 2') == '#####\\n#arc#'\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 3\na b\nc d''') == '#####\\n#a#b#\\n#c#d#'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 3\nabc\narc\"\"\") == \"#####\\n#abc#\\n#arc#\\n#####\"\nassert solution(\"\"\"3 3\nabc\narc\nxyz\"\"\") == \"#####\\n#abc#\\n#arc#\\n#xyz#\\n#####\"\nassert solution(\"\"\"4 3\nabc\narc\nxyz\nxyz\"\"\") == \"#####\\n#abc#\\n#arc#\\n#xyz#\\n#####\\n#####\\n#####\\n#####\"\nassert solution(\"\"\"6 5\nabc\narc\nxyz\nxyz\nxyz\nxyz\nxyz\"\"\") == \"#####\\n#abc#\\n#arc#\\n#xyz#\\n#xyz#\\n#xyz#\\n#xyz#\\n#####\\n#####\\n#####\\n#####\"\nassert solution(\"\"\"4 1\na\nb\nc\nd\"\"\") == \"#####\\n#####\\n#####\\n#####\\n#####\"",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"###\\n###\"\nassert solution(\"10 10\") == \"####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\\n####\"",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\nab\nc\n''') == '###\\n#c#\\n###'\nassert solution('''3 5\na\nb\nc\nd\ne\n''') == '####\\n#ab#\\n###\\n#cd#\\n#de#\\n####'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3\\nabcd\\n') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n# #\\n# #') == '###\\n# #\\n###'\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4712,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3') == '#####\\n#abc#\\n#arc#\\n#####'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('4') == '1'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"2\"\nassert solution(\"6\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\nIIDID''') == '2'\nassert solution('''5\nIIDID''') == '2'\nassert solution('''5\nIIDID''') == '2'\nassert solution('''5\nIIDID''') == '2'\nassert solution('''5\nIIDID''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\nIIDID''') == '2'\nassert solution('''2\nIIDID''') == '2'\nassert solution('''3\nIIDID''') == '1'\nassert solution('''4\nIIDID''') == '2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"4\\nIDIDD\") == \"3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2'\nassert solution('6') == '2'\nassert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\nIIDID') == '2'\nassert solution('2\\nIIDID') == '2'\nassert solution('1\\nIIDID') == '1'\nassert solution('3\\nIIDID') == '1'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\nIIDID\") == \"2\"\nassert solution(\"4\\nDD\") == \"2\"\nassert solution(\"3\\nDD\") == \"2\"\nassert solution(\"2\\nDD\") == \"2\"\nassert solution(\"1\\nDD\") == \"2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 54
    },
    {
        "number": 4713,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '2'\nassert solution('1') == '1'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3') == '3'\nassert solution('1 2 3') == '4'\nassert solution('1 2 3') == '5'\nassert solution('11009 11332') == '4'\nassert solution('11009 11332') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('17') == '0'\nassert solution('0') == '1'\nassert solution('100') == '1'\nassert solution('-7') == '2'\n\"\"\"\n\na, b = map(int, input().split())",
        "num_ids_2": 23,
        "num_ids_4": 43
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11009 11332\") == \"4\"\nassert solution(\"15000 50000\") == \"5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('11009 11332') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(11009, 11332) == 4",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11009 11332') == '4'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11009 11332') == '4'\n\nassert solution('-1') == '0'\n\nassert solution('-11') == '0'\n\nassert solution('0') == '0'\n\nassert solution('1') == '1'",
        "num_ids_2": 24,
        "num_ids_4": 45
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11009 11332') == '4'\nassert solution('1905 124 65') == '4'\nassert solution('24986 1001') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11009 11332') == '4'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4714,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11009 11332') == '4'\n\n\"\"\"\n\nA, B = map(int, input().split())",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('re').sub('\\n', ''.join(stdin.splitlines()))\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"5 4 8\") == \"3\"\nassert solution(\"5 7 2\") == \"2\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1 4\") == \"3\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 2 3\") == \"3\"\nassert solution(\"5 2 4\") == \"3\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 1 2\") == \"2\"\nassert solution(\"1 1 3\") == \"3\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"5 1 4\") == \"3\"\nassert solution(\"1 2 1\") == \"1\"\nassert solution(\"1 1 1\") == \"1\"\nassert solution(\"1 2 1\") == \"1\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"3 1 4\",\"3 1 2\",\"3 2 1\",\"3 2 2\",\"3 3 1\",\"3 3 2\"]) == \"3\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1 4') == '3'\nassert solution('4 1 6') == '4'\nassert solution('5 3 7') == '5'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\n\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 1 4') == '3'\nassert solution('3 1 4') == '3'\nassert solution('4 1 4') == '3'\nassert solution('2 3 4') == '3'\nassert solution('3 2 4') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4715,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 1 4\") == \"3\"\nassert solution(\"3 1 4\") == \"3\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"12\"\nassert solution(\"2 5\") == \"5\"\nassert solution(\"3\") == \"5\"\nassert solution(\"3 1\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3, 4, 5]) == \"12\"\nassert solution([1, 2, 3, 4, 5]) == \"10\"\nassert solution([2, 1, 1, 3, 2, 5, 1]) == \"6\"\nassert solution([3, 2, 1, 1]) == \"4\"\nassert solution([3, 2, 1]) == \"3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 70
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == '12'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 4 5\") == \"12\"\nassert solution(\"6 5\") == \"9\"\nassert solution(\"4 4\") == \"16\"\nassert solution(\"6 3\") == \"9\"\nassert solution(\"5 4\") == \"13\"\n",
        "num_ids_2": 25,
        "num_ids_4": 47
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3\\n1 2 3 4 5\") == \"12\"\nassert solution(\"6 4\\n2 2 5 4 3 3\\n\") == \"11\"\nassert solution(\"4 1\\n1 2\") == \"3\"\nassert solution(\"4 2\\n1 2\") == \"3\"",
        "num_ids_2": 39,
        "num_ids_4": 69
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == '12'\nassert solution('6 5') == '18'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '12'\nassert solution('4 5\\n1 2 3 4 5') == '12'\nassert solution('8 2\\n1 2 3 4 5 6 7 8') == '19'\n\n\"\"\"\n",
        "num_ids_2": 36,
        "num_ids_4": 57
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3\\n1 2 3 4 5') == '12'\nassert solution('10 5\\n1 2 3 4 5 6 7 8 9 10') == '15'\nassert solution('50 5\\n1 2 3 4 5 6 7 8 9 10') == '35'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 5\") == \"12\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4716,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == '12'\n\n'''\n\nimport sys\ninput = lambda: sys.stdin.readline().rstrip()\nfrom math import factorial",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2 7') == 'B', 'SAMPLE FAILURE'\nassert solution('5 2 4') == 'A', 'SAMPLE FAILURE'\nassert solution('5 5 4') == 'B', 'SAMPLE FAILURE'\nassert solution('10 4 5') == 'A', 'SAMPLE FAILURE'\nassert solution('10 6 5') == 'B', 'SAMPLE FAILURE'\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''x a b\n    5 2 7\n    ''') == 'B'\nassert solution('''x a b\n    1 1 1\n    ''') == 'A'\nassert solution('''x a b\n    5 2 7\n    ''') == 'A'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'B'\nassert solution('5 2 7') == 'B'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2 7') == 'B'\nassert solution('10 1 5') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"1 2 3\") == \"A\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 2 7\") == \"B\", \"Wrong answer!\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 2 7\") == \"B\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 7\") == \"B\"\nassert solution(\"5 2 1\") == \"A\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 2 7\") == \"B\", \"First\"\nassert solution(\"5 2 7\") == \"B\", \"Second\"\nassert solution(\"1 5 7\") == \"A\", \"Third\"\nassert solution(\"10 10 10\") == \"A\", \"Fourth\"\nassert solution(\"1 1 1\") == \"A\", \"Fifth\"",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4717,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 7') == 'B'\nassert solution('10 2 7') == 'A'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/07-123') == '2018/01/07-123'\nassert solution('2017-01-07') == '2018/01/07'\nassert solution('2017/01-07') == '2018/01/07'\nassert solution('2017-01-07-123') == '2018/01/07-123'\n",
        "num_ids_2": 40,
        "num_ids_4": 76
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n\n'''\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/08\") == \"2017/01/08\"\nassert solution(\"2017/01/08\") == \"2017/01/08\"\nassert solution(\"2017/01/08\") == \"2017/01/08\"\nassert solution(\"2017/01/08\") == \"2017/01/08\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/08') == '2018/01/08'\nassert solution('2017/01/09') == '2018/01/09'\nassert solution('2017/01/10') == '2018/01/10'\nassert solution('2017/01/11') == '2018/01/11'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/06\") == \"2017/01/06\"\nassert solution(\"2017/01/05\") == \"2017/01/05\"\nassert solution(\"2017/01/04\") == \"2017/01/04\"\nassert solution(\"2017/01/03\") == \"2017/01/03\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('') == ''\nassert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/06') == '2018/01/06'\nassert solution('2017/12/31') == '2018/12/31'\nassert solution('2017/01/31') == '2018/01/31'\n",
        "num_ids_2": 26,
        "num_ids_4": 62
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2017/01/07') == '2018/01/07'\nassert solution('2017/01/01') == '2018/01/01'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4718,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2017/01/07\") == \"2018/01/07\"\nassert solution(\"2017/01/27\") == \"2018/01/27\"\nassert solution(\"2017/01/27\") == \"2018/01/27\"\nassert solution(\"2017/01/27\") == \"2018/01/27\"\nassert solution(\"2017/01/27\") == \"2018/01/27\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'aac'\nassert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == ''\nassert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'acac'\nassert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'cbaa'\nassert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == ''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\ncbaa\ndaacc\nacacac''') == 'aac'\nassert solution('''5\naaabbbaaabbbaaabbbaaa\nbbbbbbbbbbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbb\nbbbbbbbbbbbbbbbbbbbbbb\n''') == 'bbbbbbbbbbbbbbbbbbbbbb'\nassert solution('''1\na\nb\nb\n''') == 'b'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'aac'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\\ncbaa\\ndaacc\\nacacac\") == \"aac\"\nassert solution(\"1\\nc\") == \"\"\nassert solution(\"2\\nac\") == \"\"\nassert solution(\"3\\nac\") == \"ac\"\n",
        "num_ids_2": 33,
        "num_ids_4": 57
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\ncbaa\\ndaacc\\nacacac') == 'aac'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n        e\n        ggt''') == 'egt'\nassert solution('''3\n        v\n        dme\n        qf''') == 'vmdqf'\nassert solution('''8\n        bun\n        haeg\n        qwe\n        zxcv\n        dva\n        hsk\n        mcl''') == 'dvamclls'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'cba'\nassert solution('6') == ''\nassert solution('6') == ''\nassert solution('3') == 'a'\nassert solution('3') == 'a'\n",
        "num_ids_2": 19,
        "num_ids_4": 37
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"a\"\nassert solution(\"2\") == \"aa\"\nassert solution(\"3\") == \"aaa\"\n\n\"\"\"",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4719,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\ncbaa\ndaacc\nacacac\n''') == 'aac'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\n    \"1\",\n    \"24 30\",\n]) == \"7\"\nassert solution([\n    \"1\",\n    \"1000000 1000\",\n]) == \"1000001\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '7'\nassert solution('10') == '23'\nassert solution('100') == '47'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '7\\n'\nassert solution('2') == '7\\n'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n24 30\\n\") == \"7\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\n24 30''') == '7'\nassert solution('''2\n12 4\n''') == '6'\nassert solution('''3\n3 5\n''') == '4'\nassert solution('''4\n12 30\n''') == '4'\nassert solution('''5\n12 30\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '7'\nassert solution('3') == '7'\nassert solution('4') == '7'\nassert solution('5') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([1,24,30]) == '7'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([1]) == '1'\nassert solution([24,30]) == '7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4720,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"11\"\nassert solution(\"3\") == \"17\"\nassert solution(\"4\") == \"22\"\nassert solution(\"5\") == \"28\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '6'\n\nThe output should only contain integers\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '4'\nassert solution('3 3') == '6'\nassert solution('4 4') == '12'\nassert solution('6 6') == '24'\n\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 4\") == \"6\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '6'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == '6'\nassert solution('1 1') == '1'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4') == '6'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == '6'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '6'\n\"\"\"\n\nimport sys\n\nsys.stdin = open(\"input.txt\", \"r\")\n\nn, m = map(int, input().split())",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4721,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2') == '2'\nassert solution('1 3') == '2'\nassert solution('1 2') == '2'\nassert solution('1 1') == '1'\nassert solution('2 1') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Possible'\nassert solution('3 4') == 'Impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 4\") == \"Possible\"\nassert solution(\"3 2\") == \"Impossible\"\n\"\"\"\n\nimport sys",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4') == 'Possible'\nassert solution('7 5') == 'Impossible'\n\"\"\"\n\na,b=map(int,input().split())",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'Possible'\nassert solution('1 1') == 'Impossible'\nassert solution('4 2') == 'Impossible'\nassert solution('4 3') == 'Possible'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\n\") == \"Possible\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4 5\n1 2''') == 'Possible'\nassert solution('''4 5\n3 3''') == 'Impossible'\n''')\n\n'''\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('2 5') == 'Impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 6\n3 5\n4 4\n5 2\n''') == \"Possible\"\nassert solution('''\n5 4\n3 5\n2 5\n''') == \"Impossible\"\n\nInput:\n5 6\n5 6\n\nOutput:\nPossible\n\nIf Snuke gives nine cookies, each of the three goats can have three cookies.\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\n''') == 'Possible'\nassert solution('''0 10\n''') == 'Impossible'\nassert solution('''1 100\n''') == 'Impossible'\nassert solution('''2 3\n''') == 'Possible'\nassert solution('''3 5\n''') == 'Possible'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4722,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 5') == 'Possible'\nassert solution('1 3') == 'Possible'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"atcoder\"\n\"\"\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('?') == 'UNRESTORABLE'\nassert solution('?tc????') == 'atcoder'\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == \"atcoder\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"atcoder\"\nassert solution(\"?\") == \"UNRESTORABLE\"\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('?') == 'UNRESTORABLE'\nassert solution('abcde') == 'abcde'\nassert solution('abcd?') == 'abcd?'\n\ns = input()\nt = input()\n\nalphabet = \"abcdefghijklmnopqrstuvwxyz\"\n\nprint(\"All strings that satisfy the condition :\")\n\nfor i in alphabet:\n    if i == '?':\n        continue\n    if s.find(i) == -1:\n        continue\n    print(i, end=\" \")\nprint()\n\nfor i in alphabet:\n    if i == '?':\n        continue\n    if t.find(i) == -1:\n        continue\n    print(i, end=\" \")",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"atcoder\"\nassert solution(input()) == \"UNRESTORABLE\"\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"?tc????\") == \"atcoder\"\nassert solution(\"coder\") == \"unrestorable\"\n\n'''\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"?tc?????\") == \"atcoder\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('?tc????') == 'atcoder', \"Wrong\"\nassert solution('coder') == 'coder', \"Wrong\"\nassert solution('a') == 'a', \"Wrong\"\n",
        "num_ids_2": 34,
        "num_ids_4": 48
    },
    {
        "number": 4723,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''?tc????''') == 'atcoder'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2017\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"10\") == \"5\"\nassert solution(\"17\") == \"16\"\nassert solution(\"1\") == \"1\"\nassert solution(\"20\") == \"20\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2002\\n2017') == '2032'\nassert solution('2000\\n2017') == '2001'\nassert solution('2001\\n2017') == '2021'\nassert solution('2000\\n2001') == '2001'\nassert solution('2001\\n2001') == '2000'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2002') == '2032'\nassert solution('2017') == '2017'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\nassert solution('2032') == '2002'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2002\\n2017\") == \"2032\"\nassert solution(\"0\\n1\") == \"1\"\nassert solution(\"-1\\n1\") == \"0.5\"\nassert solution(\"100\\n3\") == \"200\"\nassert solution(\"5\\n2\") == \"2\"\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2002') == '2017'\nassert solution('2017') == '2032'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2002\") == \"2017\"\nassert solution(\"2017\") == \"2002\"\nassert solution(\"2032\") == \"2032\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4724,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2002\"\n) == \"2032\"\nassert solution(\n    \"2017\"\n) == \"2032\"\nassert solution(\n    \"3\"\n) == \"3\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == '4'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"1\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == 0\nassert solution('aaaaa') == 4\nassert solution('aaaaaaa') == 4\nassert solution('a') == 1\nassert solution('abc') == 2\n",
        "num_ids_2": 17,
        "num_ids_4": 34
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"string\") == 6\nassert solution(\"letter\") == 4\nassert solution(\"aaaaaa\") == 0\nassert solution(\"uncopyrightable\") == 13\nassert solution(\"ambidextrously\") == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('') == 0\nassert solution('a') == 0\nassert solution('aaaaaaaaaaaaa') == 1\nassert solution('aabcd') == 2\nassert solution('aa') == 0\n",
        "num_ids_2": 16,
        "num_ids_4": 37
    },
    {
        "number": 4725,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('string') == 6\nassert solution('letter') == 4\nassert solution('aaaaaa') == 0\nassert solution('uncopyrightable') == 13\nassert solution('ambidextrously') == 12\n",
        "num_ids_2": 16,
        "num_ids_4": 36
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'TLE'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n100000000 500 3\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 50 3\n\"\"\") == \"AC\"\nassert solution(\"\"\"\n100000000 10001 5\n\"\"\") == \"TLE\"\nassert solution(\"\"\"\n100000000 10000 5\n\"\"\") == \"AC\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"AC\"\nassert solution(\"1\") == \"AC\"\nassert solution(\"100000000\") == \"AC\"\nassert solution(\"100000000500\") == \"AC\"\nassert solution(\"10000000050\") == \"AC\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n\n---\n\nPython:\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100000000 500 3') == 'AC'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'TLE'\nassert solution('19931568 1000000 6') == 'AC'\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"100000000 500 3\") == \"TLE\"\nassert solution(\"100000000 50 3\") == \"AC\"\nassert solution(\"100000000 10001 5\") == \"TLE\"\nassert solution(\"100000000 10000 5\") == \"AC\"\nassert solution(\"19931568 1000000 6\") == \"TLE\"",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4726,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('100000000 500 3') == 'TLE'\nassert solution('100000000 50 3') == 'AC'\nassert solution('100000000 10001 5') == 'TLE'\nassert solution('100000000 10000 5') == 'AC'\nassert solution('19931568 1000000 6') == 'TLE'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"2 0 0 2\") == \"4 16 8 2\"\nassert solution(\"2 0 0 2\") == \"2 64 32 4\"\nassert solution(\"2 0 0 2\") == \"1024 1024 64 0\"\nassert solution(\"2\") == \"0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '4 16 8 2\\n4 64 32 4\\n2 64 32 4\\n2048 64 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n0 0 2048 64\\n'\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '2 4 8 0\\n4 0 4 0\\n16 16 16 16\\n32 16 16 32\\n'\nassert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n''') == '2 0 0 4\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 4\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"4 16 8 2\") == \"2 64 32 4\"\nassert solution(\"2 64 32 4\") == \"1024 64 0 0\"\nassert solution(\"2 2 4 8\") == \"4 4 8 0\"\nassert solution(\"2 0 0 2\") == \"4 4 8 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 0 0 2') == '4 0 0 0'\nassert solution('4 16 8 2') == '2 64 32 4'\nassert solution('2 64 32 4') == '1024 64 0 0'\nassert solution('2 0 0 2') == '0 0 0 4'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 0 0 0\n2 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '2 0 0 0\\n4 16 8 2\\n2 64 32 4\\n1024 1024 64 0\\n0 0 2048 64\\n'\n\nassert solution('''\n2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n''') == '2 16 8 4\\n4 64 32 4\\n2 1024 64 0\\n1024 0 0 0\\n'\n\nassert solution('''\n2 0 0 0\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n2\n''') == '0 0 0 4\\n4 16 8 2\\n2 64 32 4\\n1024 0 0 0\\n0 0 2048 64\\n'\n\nassert solution('''\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n''') == '4 4 8 0\\n8 4 0 0\\n32 32 0 0\\n32 32 32 0\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n0 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n\"\"\") == \"\"\"\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n\"\"\"[1:-1]\n\nassert solution(\"\"\"\n0 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n1\n\"\"\") == \"\"\"\n2 16 8 4\n4 64 32 4\n2 1024 64 0\n1024 0 0 0\n\"\"\"[1:-1]\n\nassert solution(\"\"\"\n0 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n3\n\"\"\") == \"\"\"\n2 0 0 0\n4 16 8 0\n2 64 32 4\n1024 1024 64 4\n\"\"\"[1:-1]\n\nassert solution(\"\"\"\n2 2 4 8\n4 0 4 4\n16 16 16 16\n32 16 16 32\n0\n\"\"\") == \"\"\"\n2 0 0 4\n4 4 8 0\n8 4 0 0\n32 32 0 0\n32 32 32 0\n\"\"\"[1:-1]\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2\nassert solution(sample_input_3) == sample_output_3\nassert solution(sample_input_4) == sample_output_4\nassert solution(sample_input_5) == sample_output_5\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 0 0 2\n4 16 8 2\n2 64 32 4\n1024 1024 64 0\n0\n''') == '''\n4 0 0 0\n4 16 8 2\n2 64 32 4\n2048 64 0 0\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 0 0 2\") == \"4 0 0 0\"\nassert solution(\"4 16 8 2\") == \"2 64 32 4\"\nassert solution(\"2 64 32 4\") == \"0 0 2048 64\"\nassert solution(\"0\") == \"0 0 0 0\"\nassert solution(\"2\") == \"0 0 0 0\"\n",
        "num_ids_2": 32,
        "num_ids_4": 61
    },
    {
        "number": 4727,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('C6H6OCH2O 10') == '1'\nassert solution('C6H14 10') == '12'\nassert solution('H2OC100H') == '0'\nassert solution('C2H6 10') == '6'",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"0\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"H 2\") == \"0\"\nassert solution(\"O\") == \"1\"\nassert solution(\"C2H6 10\") == \"6\"\nassert solution(\"C3H8\") == \"1\"\nassert solution(\"CH3OH 1\") == \"1\"\n",
        "num_ids_2": 21,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\nassert solution(input_4) == output_4\nassert solution(input_5) == output_5\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"./input.txt\") == \"12\"\n\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nH 2\nO\n''') == '0'\n\nassert solution('''\nC2H6 10\nC3H8\n''') == '6'\n\nassert solution('''\nCH3OH 1\nCH4\n''') == '1'\n\nassert solution('''\nC6H6OCH2O 10\nHCN\n''') == '0'\n\nassert solution('''\nC6H14 10\nC5H10\n''') == '12'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''H 2\nO''') == '0'\n\nassert solution('''C2H6 10\nC3H8\n''') == '6'\n\nassert solution('''CH3OH 1\nCH4\n''') == '1'\n\nassert solution('''C6H6OCH2O 10\nHCN\n''') == '12'",
        "num_ids_2": 19,
        "num_ids_4": 44
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\"H 2\", \"O\", \"\"])) == \"0\"\nassert solution('\\n'.join([\"C 2H 6\", \"O\", \"\"])) == \"0\"\nassert solution('\\n'.join([\"CH3OH 1\", \"CH4\", \"\"])) == \"1\"\nassert solution('\\n'.join([\"C 6H6OCH2O 10\", \"HCN\", \"\"])) == \"0\"\nassert solution('\\n'.join([\"C 6H14 10\", \"C5H10\", \"\"])) == \"12\"",
        "num_ids_2": 48,
        "num_ids_4": 105
    },
    {
        "number": 4728,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'PASS'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nABC HAPPYBIRTHDAYCACEY\n''') == 'PASS'\n\nassert solution('''\nABC TRAGICBIRTHDAYCACEY\n''') == 'FAIL'\n\nassert solution('''\nABC HAPPYBIRTHDAY\n''') == 'FAIL'\n\nassert solution('''\nSECRET SOMECHORESARETOUGH\n''') == 'PASS'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"ABC HAPPYBIRTHDAYCACEY\"\n) == \"PASS\"\nassert solution(\n    \"ABC TRAGICBIRTHDAYCACEY\"\n) == \"FAIL\"\nassert solution(\n    \"ABC HAPPYBIRTHDAY\"\n) == \"FAIL\"\nassert solution(\n    \"SECRET SOMECHORESARETOUGH\"\n) == \"PASS\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'\n\n---\n\nSample Input 1:\nHAPPYBIRTHDAYCACEY\n\nSample Output 1:\nFAIL\n\nSample Input 2:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 2:\nFAIL\n\nSample Input 3:\nSECRET SOMECHORESARETOUGH\n\nSample Output 3:\nPASS\n\nSample Input 4:\nABC HAPPYBIRTHDAY\n\nSample Output 4:\nFAIL\n\nSample Input 5:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 5:\nFAIL\n\nSample Input 6:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 6:\nFAIL\n\nSample Input 7:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 7:\nFAIL\n\nSample Input 8:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 8:\nFAIL\n\nSample Input 9:\nABC HAPPYBIRTHDAY\n\nSample Output 9:\nFAIL\n\nSample Input 10:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 10:\nFAIL\n\nSample Input 11:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 11:\nFAIL\n\nSample Input 12:\nABC HAPPYBIRTHDAY\n\nSample Output 12:\nFAIL\n\nSample Input 13:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 13:\nFAIL\n\nSample Input 14:\nABC HAPPYBIRTHDAY\n\nSample Output 14:\nFAIL\n\nSample Input 15:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 15:\nFAIL\n\nSample Input 16:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 16:\nFAIL\n\nSample Input 17:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 17:\nFAIL\n\nSample Input 18:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 18:\nFAIL\n\nSample Input 19:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 19:\nFAIL\n\nSample Input 20:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 20:\nFAIL\n\nSample Input 21:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 21:\nFAIL\n\nSample Input 22:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 22:\nFAIL\n\nSample Input 23:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 23:\nFAIL\n\nSample Input 24:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 24:\nFAIL\n\nSample Input 25:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 25:\nFAIL\n\nSample Input 26:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 26:\nFAIL\n\nSample Input 27:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 27:\nFAIL\n\nSample Input 28:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 28:\nFAIL\n\nSample Input 29:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 29:\nFAIL\n\nSample Input 30:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 30:\nFAIL\n\nSample Input 31:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 31:\nFAIL\n\nSample Input 32:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 32:\nFAIL\n\nSample Input 33:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 33:\nFAIL\n\nSample Input 34:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 34:\nFAIL\n\nSample Input 35:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 35:\nFAIL\n\nSample Input 36:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 36:\nFAIL\n\nSample Input 37:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 37:\nFAIL\n\nSample Input 38:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 38:\nFAIL\n\nSample Input 39:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 39:\nFAIL\n\nSample Input 40:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 40:\nFAIL\n\nSample Input 41:\nABC HAPPYBIRTHDAYCACEY\n\nSample Output 41:\nFAIL\n\nSample Input 42:\nABC HAPPYBIRTHDAYCACE",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == 'PASS'\nassert solution(input()) == 'FAIL'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('SECRET SOMECHORESARETOUGH') == 'PASS'",
        "num_ids_2": 41,
        "num_ids_4": 77
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('ABC HAPPYBIRTHDAYCACEY') == 'PASS'\nassert solution('ABC TRAGICBIRTHDAYCACEY') == 'FAIL'\nassert solution('ABC HAPPYBIRTHDAY') == 'FAIL'\nassert solution('ABC SECRET SOMECHORESARETOUGH') == 'PASS'\n",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC TRAGICBIRTHDAYCACEY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"ABC SECRET SOMECHORESARETOUGH\") == \"PASS\"",
        "num_ids_2": 41,
        "num_ids_4": 78
    },
    {
        "number": 4729,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"FAIL\"\nassert solution(\"ABC\") == \"PASS\"\nassert solution(\"ABC HAPPYBIRTHDAYCACEY\") == \"PASS\"\nassert solution(\"ABC HAPPYBIRTHDAY\") == \"FAIL\"\nassert solution(\"ABC HAPPYBIRTHDAY C\") == \"FAIL\"\n",
        "num_ids_2": 20,
        "num_ids_4": 58
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''8\n([] [] ]\n''') == '] 7'\n\nassert solution('''13\n(([] [[]] ())\n''') == 'ok so far'\n\nassert solution('''21\n[ { { () () () () } ]\n''') == '] 20'\n\nassert solution('''27\n[ { [[()]] (({})) } ] () {}\n''') == 'ok so far'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input_string) == \"ok so far\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''([] ())''') == '] 1'\nassert solution('''([] [] )''') == '] 2'\nassert solution('''([] [] ] )''') == '] 3'\nassert solution('''([[] ] )''') == '] 0'\nassert solution('''([[] ] )''') == '] 0'\n",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == \"ok so far\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n([] [] ]\n''') == '] 7'\nassert solution('''\n(() [] )\n''') == 'ok so far'\nassert solution('''\n(([] [[]] ()) ())\n''') == '] 20'\nassert solution('''\n([] [[([]])])\n''') == 'ok so far'\nassert solution('''\n([] [[[[]]]])\n''') == 'ok so far'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"ok so far\"\nassert solution(\"([] [] )\") == \"] 7\"\nassert solution(\"([] [] )]\") == \"] 7\"\nassert solution(\"([] [] )(([]))\"]) == \"] 7\"\nassert solution(\"([] [] )(([]) )\") == \"] 7\"\n",
        "num_ids_2": 25,
        "num_ids_4": 57
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'ok so far'\nassert solution('2') == 'ok so far'\nassert solution('3') == 'ok so far'\nassert solution('4') == 'ok so far'\nassert solution('5') == 'ok so far'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n\"\"\"\n([] [] ]\n\"\"\"\n) == \"\"\"\n] 7\n\"\"\", 'Do not forget the closing delimiters! (They can be nested.)'\nassert solution(\n\"\"\"\n([] [] ]\n\"\"\"\n) == \"\"\"\nok so far\n\"\"\", 'Do not forget the closing delimiters! (They can be nested.)'\nassert solution(\n\"\"\"\n(([] [[]] ())\n\"\"\"\n) == \"\"\"\n] 20\n\"\"\", 'Do not forget the closing delimiters! (They can be nested.)'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n'''([] [] )''') == '] 7'\nassert solution(\n'''(([] [[]] ()) ())''') == 'ok so far'\nassert solution(\n'''([] )''') == 'ok so far'\nassert solution(\n'''([] )''') == 'ok so far'\nassert solution(\n'''([[] {}] )''') == 'ok so far'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4730,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'ok so far'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Fair Game\"\nassert solution(\"2\") == \"Player 2 lost\"\nassert solution(\"3\") == \"Player 1 lost\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4\napple\near\nreal\nletters\nstyle''') == \"Fair Game\", \"First\"\nassert solution('''2\napple\nextra\napple''') == \"Player 1 lost\", \"Second\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5\napple\near\nreal\nletters\nstyle\n''') == 'Fair Game'\nassert solution('''\n2\napple\nextra\napple\n''') == 'Player 1 lost'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"Fair Game\"\nassert solution(\"1\") == \"Player 1 lost\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == 'Fair Game', 'First'\nassert solution('3') == 'Player 1 lost', 'Second'\nassert solution('2') == 'Player 2 lost', 'Third'\n'''",
        "num_ids_2": 29,
        "num_ids_4": 44
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\") == \"Player 1 lost\"\nassert solution(\"2\") == \"Player 1 lost\"\nassert solution(\"5\") == \"Fair Game\"\nassert solution(\"4\") == \"Player 2 lost\"\nassert solution(\"1\") == \"Player 2 lost\"\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\napple\\nextra') == 'Player 2 lost'\nassert solution('3\\napple\\nexpo') == 'Player 1 lost'\n'''\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5\\napple\\near\\nreal\\nletters\\nstyle') == 'Fair Game'\nassert solution('3\\napple\\nextra\\napple\\n') == 'Player 1 lost'\nassert solution('2\\napple\\neat\\n') == 'Player 2 lost'\n",
        "num_ids_2": 48,
        "num_ids_4": 68
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\napple\\near\") == \"Fair Game\"\nassert solution(\"3\\napple\\nextra\\napple\") == \"Player 1 lost\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4731,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == 'Player 1 lost'\nassert solution('2') == 'Player 2 lost'\nassert solution('5') == 'Fair Game'\nassert solution('7') == 'Player 1 lost'\nassert solution('101') == 'Player 2 lost'\n",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '101010'\nassert solution('10') == '10100'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1000\\n+\\n100\\n') == '100000'\nassert solution('10000\\n+\\n10\\n') == '101000'\nassert solution('10\\n+\\n1000\\n') == '101001'\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '101010'\nassert solution('10') == '1010'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1000') == '100000', 'Wrong result'\nassert solution('10') == '1010', 'Wrong result'\nassert solution('+') == '10010', 'Wrong result'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1000\n*\n100''') == '100000', 'Should be 100000'\nassert solution('''10\n+\n1000''') == '10010', 'Should be 10010'\nassert solution('''10\n+\n10''') == '1010', 'Should be 1010'\n\nprint('Tests passed')",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1000\n*\n100\n''') == '100000'\n\nassert solution('''\n10000\n+\n10\n''') == '10010'\n\nassert solution('''\n10\n+\n1000\n''') == '1010'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == \"10010\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"100000\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1000') == '100000'\nassert solution('10000') == '100010'\nassert solution('10') == '1010'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4732,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1000\\n*\\n100\\n\") == \"100000\"\nassert solution(\"10\\n+\\n1000\\n\") == \"1010\"\nassert solution(\"10\\n+\\n100\\n\") == \"10100\"\nprint(f\"Congratulations, your solution {solution(input())} is correct.\")",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 out\\n\") == \"3\"\nassert solution(\"8 in\\n\") == \"6\"\nassert solution(\"52 out\\n\") == \"8\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"8 out\") == \"3\"\nassert solution(\"8 in\") == \"6\"\nassert solution(\"52 out\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''8 out\n    ''') == '3'\nassert solution('''8 in\n    ''') == '6'\nassert solution('''52 out\n    ''') == '8'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''8 out\n8 in''') == '6'\nassert solution('''10 out\n9 in''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4733,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 out') == '3'\nassert solution('8 in') == '6'\nassert solution('52 out') == '8'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\n\"\"\"\n\nstdin = input()\nstdin = stdin.strip()\nstdin = stdin.split(\" \")\nprint(stdin[0][:-2]+stdin[1])\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''menolaxios mox''') =='menolaxiosexmox'\nassert solution('''alemaxe maxos''') == 'alemaxexmaxos'\nassert solution('''pamoli toxes''') == 'pamolextoxes'\nprint('PASSED ALL TEST CASES!')\n",
        "num_ids_2": 47,
        "num_ids_4": 69
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input_1) == output_1\nassert solution(input_2) == output_2\nassert solution(input_3) == output_3\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\nassert solution(\"menolaxiosexmox\") == \"menolaxiosexmox\"\n\n\"\"\"",
        "num_ids_2": 41,
        "num_ids_4": 84
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\nassert solution(\"calculator abc\") == \"calculatoreaxabc\"\nassert solution(\"a b c\") == \"abc\"\n",
        "num_ids_2": 41,
        "num_ids_4": 79
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"menolaxios mox\") == \"menolaxiosexmox\"\nassert solution(\"alemaxe maxos\") == \"alemaxexmaxos\"\nassert solution(\"pamoli toxes\") == \"pamolextoxes\"\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4734,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('menolaxios mox') =='menolaxiosexmox'\nassert solution('alemaxe maxos') == 'alemaxexmaxos'\nassert solution('pamoli toxes') == 'pamolextoxes'\n\n\"\"\"",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\nassert solution('2021') == 'no'\nassert solution('2022') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2018\") == \"yes\"\nassert solution(\"2019\") == \"no\"\nassert solution(\"2020\") == \"yes\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == \"yes\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(inp1) == 'yes', solution(inp1)\nassert solution(inp2) == 'no', solution(inp2)\nassert solution(inp3) == 'yes', solution(inp3)\n",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4735,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2018') == 'yes'\nassert solution('2019') == 'no'\nassert solution('2020') == 'yes'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 0 0 0 4 0 0 0 0 4\n4\n3\nSample Input 4:\n
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\\n3\\n\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\\n4\\n\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\\n4\\n\") == \"1820000\"\n",
        "num_ids_2": 48,
        "num_ids_4": 74
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4\\n3') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4\\n4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10\\n4') == '1820000'\nassert solution('10 10 10 20 0 10 10 10 10 10\\n5') == '0'\n",
        "num_ids_2": 44,
        "num_ids_4": 90
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 0 0 0 4 0 0 0 0 4\n3\n''') == '64'\nassert solution('''\n4 0 0 0 4 0 0 0 0 4\n4\n''') == '0'\nassert solution('''\n10 10 10 20 0 10 10 10 10 10\n4\n''') == '1820000'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"64\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"64\"\nassert solution(\"4 0 0 0 4 0 0 0 0 4\") == \"0\"\nassert solution(\"10 10 10 20 0 10 10 10 10 10\") == \"1820000\"",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == str(__import__('sys').stdout.read())",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('4 0 0 0 4 0 0 0 0 4') == '0'\nassert solution('10 10 10 20 0 10 10 10 10 10') == '1820000'\n",
        "num_ids_2": 38,
        "num_ids_4": 59
    },
    {
        "number": 4736,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 0 0 0 4 0 0 0 0 4') == '64'\nassert solution('3') == '0'\nassert solution('4') == '0'\n\n'''",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''\n7 2\n30 270 995 996 997 998 999\n''') == '0 0'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"7 0\\n\"\n    \"30 270 995 996 997 998 999\"\n) == \"2 330\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 0\") == \"2 330\"\nassert solution(\"7 1\") == \"2 570\"\nassert solution(\"7 2\") == \"0 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"7 0\") == \"2 330\"\nassert solution(\"7 1\") == \"2 570\"\nassert solution(\"7 2\") == \"0 0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999\n''') == '0 0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999''') == '2 330'\nassert solution('''7 1\n30 270 995 996 997 998 999''') == '2 570'\nassert solution('''7 2\n30 270 995 996 997 998 999''') == '0 0'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n7 0\n30 270 995 996 997 998 999\n''') == '2 330'\nassert solution('''\n7 1\n30 270 995 996 997 998 999\n''') == '2 570'\nassert solution('''\n7 2\n30 270 995 996 997 998 999\n''') == '0 0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''7 0\n30 270 995 996 997 998 999\nSample Input 1:\n7 1\n30 270 995 996 997 998 999\nSample Output 1:\n2 330\n\nSample Input 2:\n7 2\n30 270 995 996 997 998 999\nSample Output 2:\n0 0\n\nSample Input 3:\n7 3\n30 270 995 996 997 998 999\nSample Output 3:\n2 570''') == '2 570'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4737,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 0') == '2 330'\nassert solution('7 1') == '2 570'\nassert solution('7 2') == '0 0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n\"\"\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\nprint('All tests passed!')\n'''\n\nimport math\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abbaabbaabba\") == \"2\"\nassert solution(\"abcdef\") == \"6\"\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"a\") == \"1\"\nassert solution(\"aaaaaaaa\") == \"1\"\nassert solution(\"abcdef\") == \"6\"\nassert solution(\"abbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"a\") == \"a\"\nassert solution(\"ab\") == \"ab\"\nassert solution(\"abac\") == \"abac\"\nassert solution(\"abacd\") == \"abcd\"\n",
        "num_ids_2": 17,
        "num_ids_4": 39
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"aaaaaaaa\") == 1\nassert solution(\"abbaabbaabba\") == 2\nassert solution(\"abcdef\") == 6\n",
        "num_ids_2": 19,
        "num_ids_4": 28
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('aaaaaaaa') == '1', 'Your first solution goes here'\nassert solution('abbaabbaabba') == '2', 'Your second solution goes here'\nassert solution('abcdef') == '6', 'Your third solution goes here'",
        "num_ids_2": 37,
        "num_ids_4": 55
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n'''\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4738,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaaaaaaa') == '1'\nassert solution('abbaabbaabba') == '2'\nassert solution('abcdef') == '6'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sys.stdin.read()) == \"2\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"2\"\nassert solution(\"4 5\") == \"1\"\nassert solution(\"5 10\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 10\") == \"1\"\nassert solution(\"3 5\") == \"1 2\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(f) == f'2\\n1 2'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\nassert solution('''\n3 6\n1 2 3 4\n11 12 15 19 24 30\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\nassert solution('''5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\nassert solution('''3 6\n1 2 3 4 5\n11 12 15 19 24 30\n''') == '0'\n\nprint(solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n'''))",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 12\n1 2 4 5\n6 8 12 18 26 28 30 34 36 37 39 40\n''') == '2'\n\nassert solution('''\n5 10\n1 2 3 4 5\n0 1 2 3 4 5 6 7 8 9\n''') == '1'\n\nassert solution('''\n3 6\n1 2 3\n11 12 15 19 24 30\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3') == '1 2 3'\nassert solution('5 10') == '1 2 3 4 5 6 7 8 9'\nassert solution('4 10') == '0 1 2 3 4 5 6 7 8 9'",
        "num_ids_2": 33,
        "num_ids_4": 53
    },
    {
        "number": 4739,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5551212''') == '1'\nassert solution('''5519876''') == '0'\nassert solution('''5055555''') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5551212\n5519876\n5055555\n''') == '1'\nassert solution('''557777\n''') == '0'\nassert solution('''5549876\n5549877\n5549878\n5549897\n5549898\n5549900\n5549901\n5549902\n5549903\n''') == '1'\nassert solution('''5550000\n5550000\n5550000\n5550000\n5550000\n5550000\n5550000\n5550000\n5550000\n5550000\n5550000\n''') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(sys.stdin.read()) == '0'\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'\nassert solution() == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1000000\") == \"1\"\nassert solution(\"5551212\") == \"1\"\nassert solution(\"5519876\") == \"0\"\nassert solution(\"5055555\") == \"0\"",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('''5551212\n5519876\n5055555''') == '0'\nassert solution('''5055555\n5055555''') == '0'\nassert solution('''5555555\n5055555''') == '1'",
        "num_ids_2": 17,
        "num_ids_4": 35
    },
    {
        "number": 4740,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5551212') == '1'\nassert solution('5519876') == '0'\nassert solution('5055555') == '0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('-40/1') == '-40/1'\nprint('all tests passed')\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"32/1\") == \"0/1\"\nassert solution(\"33/1\") == \"5/9\"\nassert solution(\"-40/1\") == \"-40/1\"",
        "num_ids_2": 28,
        "num_ids_4": 43
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''32/1\n33/1\n-40/1''') == '0/1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(sys.stdin.read()) == '0/1'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\nassert solution('0/1') == '0/1'",
        "num_ids_2": 28,
        "num_ids_4": 58
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('32/1') == '0/1'\nassert solution('33/1') == '5/9'\nassert solution('-40/1') == '-40/1'\n\n---Output---\n3\n3\n-5\n'''",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4741,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''32/1''') == '0/1'\nassert solution(\n'''33/1''') == '5/9'\nassert solution(\n'''-40/1''') == '-40/1'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\n\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\n\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\\nE E G\") == \"Transposition\"\nassert solution(\"3\\nC E G\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\") == \"Retrograde\"",
        "num_ids_2": 32,
        "num_ids_4": 73
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\nC E G\\nD F# A\\n\") == \"Transposition\"\nassert solution(\"7\\nC C G G A A G\\nC C F F D# D# F\\n\") == \"Inversion\"\nassert solution(\"7\\nA B C D E F G\\nG F E D C B A\\n\") == \"Retrograde\"\n",
        "num_ids_2": 57,
        "num_ids_4": 89
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'\nassert solution('''10\nG G G G G G G G G\nG G G G G G G G G G\n''') == 'Nonsense'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''7\nC C G G A A G\nC C F F D# D# F\n''') == 'Inversion'\nassert solution('''7\nA B C D E F G\nG F E D C B A\n''') == 'Retrograde'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"Nonsense\"\nassert solution(\"1\") == \"Transposition\"\nassert solution(\"2\") == \"Transposition\"\nassert solution(\"3\") == \"Transposition\"\nassert solution(\"4\") == \"Nonsense\"\n",
        "num_ids_2": 21,
        "num_ids_4": 43
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == \"Transposition\"\nassert solution('7') == \"Inversion\"\nassert solution('7 2') == \"Transposition\"\nassert solution('7 3') == \"Transposition\"\nassert solution('7 4') == \"Retrograde\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    '3\\nC E G\\nD F# A\\n'\n    ) == 'Transposition'\nassert solution(\n    '7\\nC C G G A A G\\nC C F F D# D# F\\n'\n    ) == 'Inversion'\nassert solution(\n    '7\\nA B C D E F G\\nG F E D C B A\\n'\n    ) == 'Retrograde'\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4742,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5\nC E G\nD F# A\n''') == 'Transposition'\nassert solution('''\n5\nC C G G A A G\nC C F F D# D# F\n''') == 'Retrograde'\nassert solution('''\n7\nC C G G A A G\nG F E D C B A\n''') == 'Inversion'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\nprint(solution(input()))\n'''",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    'I love ba-na-na\\n'\n    'Cat-a-pil-lar\\n'\n    'Co-ding is the best\\n'\n    ) == (\n    'Gah kove bababa\\n'\n    'Catacillar\\n'\n    'Cociccah gs the bestuh\\n'\n    )\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n'''",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nI love ba-na-na\n''') == 'Gah kove bababa'\nassert solution('''\nCat-a-pil-lar\n''') == 'Catacillar'\nassert solution('''\nCo-ding is the best\n''') == 'Cociccah gs the bestuh'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('') == ''\nassert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\n",
        "num_ids_2": 29,
        "num_ids_4": 72
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa', \"First\"\nassert solution('Cat-a-pil-lar') == 'Catacillar', \"Second\"\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh', \"Third\"\n\nprint('All test cases passed')\n",
        "num_ids_2": 47,
        "num_ids_4": 73
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n    The cat sat on the mat.\n    The dog ate my homework.\n    ''') == 'Gah kove bae ba-na-na gs the bestuh'\nassert solution('''\n    The cat sat on the mat.\n    The dog ate my homework.\n    ''') == 'Gah kove bae ba-na-na gs the bestuh'\nassert solution('''\n    Cat-a-pil-lar\n    The dog ate my homework.\n    ''') == 'Catacillar gs the bestuh'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"I love ba-na-na\") == \"Gah kove bababa\"\nassert solution(\"Cat-a-pil-lar\") == \"Catacillar\"\nassert solution(\"Co-ding is the best\") == \"Cociccah gs the bestuh\"\n\"\"\"\n\n\nimport collections\nfrom heapq import heappush, heappop\nfrom bisect import bisect_left\nfrom string import ascii_lowercase, ascii_uppercase\n\nclass Solution:\n    def __init__(self, strs):\n        self.strs = strs\n\n    def solution(self):\n        syllables = collections.defaultdict(list)\n        for word in self.strs:\n            idx = -1\n            while idx < len(word)-1 and word[idx].lower() not in ascii_lowercase:\n                idx += 1\n            if idx > -1:\n                syllables[word[idx]].append(word[idx+1:])\n            syllables[word[0]].append(word)\n        \n        max_length = max(len(word) for word in self.strs)\n        new_syllables = collections.defaultdict(list)\n        for word in self.strs:\n            new_syllables[len(word)].append(word)\n        \n        best_syllables = {}\n        for key, value in new_syllables.items():\n            for word in value:\n                if len(word) > max_length:\n                    heappush(best_syllables[max_length], word)\n                else:\n                    heappush(best_syllables[len(word)], word)\n        \n        syllables = collections.defaultdict(list)\n        for word in self.strs:\n            syllables[len(word)].append(word)\n        \n        best_syllables = collections.defaultdict(list)\n        for key, value in new_syllables.items():\n            for word in value:\n                if len(word) > max_length:\n                    heappush(best_syllables[max_length], word)\n                else:\n                    heappush(best_syllables[len(word)], word)\n        \n        new_strs = []\n        for i in range(1, max_length+1):\n            cur_syllables = best_syllables[i]\n            prev_syllables = best_syllables[i-1]\n            while cur_syllables and prev_syllables:\n                cur_word = heappop(cur_syllables)\n                prev_word = heappop(prev_syllables)\n                \n                new_word = cur_word[:len(cur_word)//2]\n                new_word += prev_word[len(prev_word)//2:].capitalize()\n                new_word += prev_word[:len(prev_word)//2].lower()\n                \n                new_strs.append(new_word)\n        \n        return new_strs",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4743,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('I love ba-na-na') == 'Gah kove bababa'\nassert solution('Cat-a-pil-lar') == 'Catacillar'\nassert solution('Co-ding is the best') == 'Cociccah gs the bestuh'\nprint('All test cases passed.')",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1\n4\n7\n2\n10\n18\n4\n8\n5\n6''') == '6'\n\nassert solution('''4\n8\n11\n12\n13''') == '14'\n\nassert solution('''8\n10\n11\n12\n13\n14''') == '16'\n\nassert solution('''4\n8\n11\n12\n13\n14''') == '16'\n\nassert solution('''1\n4\n8\n11\n12''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"6\"\nassert solution(\"4\") == \"16\"\nassert solution(\"3\") == \"14\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\nprint(solution(input()))\n\n=======\nFidget spinners are so 2017; this year\u2019s rage are fidget cubes. A fidget cube is a cube with unit side lengths, which you hold in your hand and fidget with. Kids these days, right? \n\nYou work in the planning department for a company that creates and ships fidget cubes. Having done some market analysis, you found that your customers want to receive shipments of exactly $V$ fidget cubes.\n\nThis means you have to design a container that will hold exactly $V$ fidget cubes. Since fidget cubes are very fragile, you cannot have any empty space in your container. If there is empty space, they might move around, bump into each other and get damaged. Because of this, you decided to ship the fidget cubes in a rectangular cardboard box.\n\nThe cost of a cardboard box is proportional to its surface area, costing exactly one unit of money per square unit of surface area. Of course you want to spend as little money as possible. Subject to the above constraints, how much money do you have to spend on a box for $V$ fidget cubes?\n\n-----Input-----\nThe input contains a single integer, $1 \\leq V \\leq 10^6$, the number of fidget cubes for which you need to build a box.\n\n-----Output-----\nPrint the cost of the cheapest rectangular box as specified in the statement.\n\n-----Examples-----\nSample Input 1:\n1\nSample Output 1:\n6\n\nSample Input 2:\n4\nSample Output 2:\n16\n\nSample Input 3:\n3\nSample Output 3:\n14\nprint(solution(input()))\n\n>>>>>>> 1a0a5a2e2350e76090c4c9b8f4a5f7b87e81b26\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == '16'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n') == '6\\n'\nassert solution('4\\n') == '16\\n'\nassert solution('3\\n') == '14\\n'\n",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '6'\nassert solution('2') == '16'\nassert solution('3') == '14'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4744,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '6'\nassert solution('4') == '16'\nassert solution('3') == '14'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3 5 7') == \"2\"\nassert solution('10 9 8 7') == \"4\"\nassert solution('4 5 1 9 7') == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n3 6\n1 2 3 4 5\n\"\"\"\n) == \"3\"\nassert solution(\n\"\"\"\n5 10\n4 8 1 9 7\n\"\"\"\n) == \"2\"\nassert solution(\n\"\"\"\n4 10\n1 3 1 7\n\"\"\"\n) == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 10') == '3'\nassert solution('5 10') == '4'\nassert solution('4 10') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 6\") == \"3\"\nassert solution(\"5 10\") == \"2\"\nassert solution(\"4 10\") == \"4\"\nprint('Tests passed')\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n1 2 3 4 5\n''') == '3'\nassert solution('''5 10\n4 8 1 9 7\n''') == '2'\nassert solution('''4 10\n1 3 1 7\n''') == '4'\n\nprint('All tests passed!')",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '3'\nprint(solution())\n\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '3'\nassert solution('5 6') == '3'\nassert solution('5 10') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 6\\n1 2 3 4 5\\n') == '3'\nassert solution('5 10\\n4 8 1 9 7\\n') == '2'\nassert solution('4 10\\n1 3 1 7\\n') == '4'\n",
        "num_ids_2": 40,
        "num_ids_4": 59
    },
    {
        "number": 4745,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 6') == '3'\nassert solution('5 10') == '2'\nassert solution('4 10') == '4'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'possible'\nassert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 2\\n0 1 1\\n1 0 0\") == \"possible\"\nassert solution(\"1 2\\n1 0 0\\n0 1 0\") == \"impossible\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == 'possible', 'First'\nassert solution('1 2') == 'impossible', 'Second'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0\\n') == 'possible'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 2\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 2\n0 1 1\n1 0 0\n''') == 'possible'\n\nassert solution('''1 2\n1 0 0\n0 1 0\n''') == 'impossible'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == 'possible'\nassert solution('1 2') == 'impossible'\nassert solution('1 2') == 'impossible'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n0 1 1\\n1 0 0') == 'possible'\nassert solution('1 2\\n1 0 0\\n0 1 0') == 'impossible'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4746,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"possible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 2\") == \"impossible\"\nassert solution(\"1 2\") == \"impossible\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\nprint('Check passed')\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\nprint('Congratulations! All test cases passed!')\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"1.875\"\nassert solution(\"6 2\") == \"4.25\"",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4747,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 3') == '1.875'\nassert solution('6 2') == '4.25'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 37
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '0 1'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\nprint(solution('''\n3 0 0\n'''))",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 0 1\n1 0 1''') == '0 0'\nassert solution('''4 2 7\n1 4''') == '1 4'\nassert solution('''3 0 0\n1 0 1''') == '1 6'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n3 1 0\n\"\"\") == \"0 0\"\nassert solution(\"\"\"\n4 2 7\n\"\"\") == \"1 4\"\nassert solution(\"\"\"\n3 0 0\n\"\"\") == \"1 6\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 0 0\\n\") == \"1 6\"\nassert solution(\"1 1 0\\n\") == \"0 0\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4748,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1 0') == '0 0'\nassert solution('4 2 7') == '1 4'\nassert solution('3 0 0') == '1 6'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\") == \"1\"\nassert solution(\"6\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\") == '1'\nassert solution(\"5\") == '0'\nassert solution(\"4\") == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n4\nWBBW\nWBWB\nBWWB\nBWBW\n''') == '1', 'first'\nassert solution('''\n4\nBWWB\nWBWB\nWBBW\nBWBW\n''') == '0','second'\nassert solution('''\n6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '0', 'third'\nassert solution('''\n6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '1', 'fourth'\nassert solution('''\n12\nBWBWWBB\nWBWBWBW\nWBBWBWB\nBBWBWWB\nBWWBBWB\nWWBBWBW\nWBBWBWB\nBBWBWWB\nBBWBWBW\nBBWBWBW\nWWBBWBW\n''') == '0', 'fifth'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4\\nWBWB\\nWBWB\\nBWWB\\nBWBW\\n\") == '1'\nassert solution(\"4\\nBBWB\\nWBWB\\nWBBW\\nWBWW\\n\") == '0'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == \"1\"\nassert solution(input()) == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\nBWBWBWB\\nWBWBWBW\\nWBBWBW\\nWBWBWBW\\nWBBWBW\\n') == '0'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n6\nBWBWWB\nWBWBWB\nWBBWBW\nBBWBWW\nBWWBBW\nWWBWBB\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\nWBBW\\nWBWB\\nBWWB\\nBWBW\") == '1'\nassert solution(\"4\\nBWWB\\nWBWB\\nWBBW\\nBWBW\") == '0'\nassert solution(\"6\\nBWBWWB\\nWBWBWB\\nWBBWBW\\nBBWBWW\\nBWWBBW\\nWWBWBB\") == '0'\n",
        "num_ids_2": 58,
        "num_ids_4": 101
    },
    {
        "number": 4749,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(sample_input_1) == \"1\"\nassert solution(sample_input_2) == \"0\"\nassert solution(sample_input_3) == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\nassert solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\nassert solution('''\n5\n2 2 3 3\n1 3 2 4\n3 2 5 2\n5 2 4 3\n1 4 4 7\n''') == '3 2'\nassert solution('''\n5\n2 2 3 3\n1 3 2 4\n3 2 5 2\n5 2 4 3\n1 4 4 7\n''') == '2 3'\nassert solution('''\n5\n2 2 3 3\n1 3 2 4\n3 2 5 2\n5 2 4 3\n1 4 4 7\n''') == '2 3'\n\nprint(solution('''\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n'''))\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 1 2') == '2 1'\nassert solution('2 6 3 4') == '3 4'\nassert solution('2 4 1 3') == '3 2'\nassert solution('1 2 1 3') == '2 1'\nassert solution('1 4 5 8') == '3 7'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\n\n\nassert solution('''\n1 2 1 2\n3 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 4'\n\nassert solution('''\n1 2 1 2\n3 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '1 2'\n\n\nassert solution('''\n1 2 1 2\n3 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '1 2 3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"2 1\"\nassert solution(\"\") == \"\"\nassert solution(\"2\") == \"2 1\"\nassert solution(\"2 2\") == \"2 1\"\nassert solution(\"1 2 3 4\") == \"3 4\"\n",
        "num_ids_2": 16,
        "num_ids_4": 39
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1\n1 1\n2 3\n1 2\n2 3\n3 4''') == '2 1'\nassert solution('''5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8''') == '3 4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '2 1'\nassert solution('''\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n''') == '3 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 1 2') == '2 1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"3 2\"\nassert solution(\"\"\"\n3\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"2 3\"\nassert solution(\"\"\"\n4\n3 1 1 2\n2 5 2 4\n3 1 1 2\n1 2 1 3\n1 4 5 8\n\"\"\") == \"3 4\"\nassert solution(\"\"\"\n5\n1 2 1 2\n2 6 3 4\n2 4 1 3\n1 2 1 3\n1 4 5 8\n\"\"\") == \"3 2\"\nassert solution(\"\"\"\n4\n1 1 1 2\n2 5 2 4\n3 1 1 2\n1 2 1 3\n1 4 5 8\n\"\"\") == \"3 2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2 1'\nassert solution('5') == '3 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4750,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"3 4\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([3,2,0,-4]) == 'true'\nassert solution([1,2]) == 'true'\nassert solution([1]) == 'false'\nassert solution([]) == 'false'",
        "num_ids_2": 28,
        "num_ids_4": 47
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([3,2,0,-4], 1) == 'true'\nassert solution([1,2], 0) == 'true'\nassert solution([1], -1) == 'false'",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"[3,2,0,-4]\") == \"true\"\nassert solution(\"[1,2]\") == \"true\"\nassert solution(\"[1]\") == \"false\"\nassert solution(\"[1,2,3]\") == \"false\"\n\n\"\"\"\n",
        "num_ids_2": 32,
        "num_ids_4": 60
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"true\"\nassert solution([1,2]) == \"true\"\nassert solution([1]) == \"true\"\nassert solution([]) == \"false\"\nassert solution([3,2,0,-4]) == \"true\"\n",
        "num_ids_2": 20,
        "num_ids_4": 39
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n[3,2,0,-4]\n1\n''') == 'true'\nassert solution('''\n[1]\n0\n''') == 'true'\nassert solution('''\n[]\n-1\n''') == 'false'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nhead = []\npos = 0\n''') == 'true'\n\nassert solution('''\nhead = [3,2,0,-4]\npos = 1\n''') == 'true'\n\nassert solution('''\nhead = [1,2]\npos = 0\n''') == 'true'\n\nassert solution('''\nhead = [1]\npos = -1\n''') == 'false'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('[3,2,0,-4]') == 'true'\nassert solution('[1,2]') == 'true'\nassert solution('[1]') == 'false'\n",
        "num_ids_2": 32,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2,3,1,0,-4') == 'true'\nassert solution('1,2') == 'true'\nassert solution('1,2,3') == 'false'\n\nimport unittest\n\n\nclass Node:\n    def __init__(self, val, next=None):\n        self.val = val\n        self.next = next\n\n    def __str__(self):\n        return f'{self.val}->{self.next}'\n\n\nclass Solution:\n    def hasCycle(self, head: Node) -> bool:\n        pass\n\n\nclass Test(unittest.TestCase):\n    def test_equal(self):\n        s = Solution()\n        self.assertEqual(s.hasCycle(Node(1)), True)\n        self.assertEqual(s.hasCycle(Node(2)), False)\n        self.",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == 'true'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4751,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n[3,2,0,-4]\n1\n[1,2]\n0\n[1]\n-1\n''') == \"true\"\nassert solution('''\n[3,2,0,-4]\n1\n[1,2]\n0\n[1]\n0\n''') == \"false\"\nassert solution('''\n[3,2,0,-4]\n1\n[1,2]\n0\n[1]\n0\n[1]\n''') == \"false\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n\n'''\n\nfrom typing import List\n\nclass Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        complement = dict()\n\n        for i in range(len(nums)):\n            complement[target - nums[i]] = i\n            if nums[i] in complement and i!= complement[nums[i]]:\n                return i, complement[nums[i]]",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1, 2, 3, 4, 5, 6, 7, 8\") == \"0, 1\"\nassert solution(\"1, 1, 2, 3, 4, 5, 6, 7, 8\") == \"0, 6\"\nassert solution(\"1, 2, 3, 4, 5, 6, 7, 8, 9\") == \"9, 0\"\nassert solution(\"1, 2, 3, 4, 5, 6, 7, 8, 9, 10\") == \"0, 10\"\n",
        "num_ids_2": 54,
        "num_ids_4": 112
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([2, 7, 11, 15]) == [0, 1]\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n1 2\n\n''') == '2 1'\nprint(solution(input()))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2, 7, 11, 15\") == \"0 1\"\nassert solution(\"3, 2, 4, 1\") == \"1 0\"\nassert solution(\"3, 2, 4, 1\") == \"1 0\"\nassert solution(\"4, 2, 5, 1\") == \"0 1\"\n\"\"\"\nimport unittest\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 7 11 15\") == [\"0\", \"1\"]\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == [\"6\", \"13\"]\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12\") == [\"13\", \"10\"]\n\n'''",
        "num_ids_2": 40,
        "num_ids_4": 64
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"0 1\"\n\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution([2, 7, 11, 15]) == [\"0\", \"1\"]\nassert solution([3, 2, 4]) == []\nassert solution([3, 3]) == []\nassert solution([0, 0]) == [\"0\"]\nassert solution([9, 2, 7, 11, 15]) == [\"1\", \"2\"]\n",
        "num_ids_2": 31,
        "num_ids_4": 53
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"0 1\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4752,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1,2,3') == '0,2'\nassert solution('1,2,3,5') == '0,3'\nassert solution('3,7,2,5,4,2,8') == '0,3,4'\nassert solution('3,7,2,5,4,2,8,3,10') == '0,3,4,6'\nassert solution('7,7,7,7,7,7') == '0,7'\n",
        "num_ids_2": 34,
        "num_ids_4": 92
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '0'\nassert solution('4') == '1'\nassert solution('1') == '0'\n\nassert solution('5') == '1'\nassert solution('2') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\nassert solution(\"5\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6\\n') == '0'\nassert solution('5\\n') == '1'\nassert solution('4\\n') == '0'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n2\n3\n1\n1''') == '1'\n\nassert solution('''4\n2\n2\n3\n2\n2''') == '0'\n\nassert solution('''5\n3\n3\n3\n3\n3\n3\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n3\\n2\\n0') == '0'\nassert solution('4\\n2\\n1\\n0') == '1'\nprint('Congratulations! All test cases passed')\n\"\"\"",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2\n1''') == '0'\n\nassert solution('''5\n1\n2\n3\n4\n5''') == '1'\n\nassert solution('''10\n8\n3\n2\n1\n3\n9\n7\n6\n4\n5\n7\n10\n11\n12\n16\n15\n18\n17\n9\n6\n4''') == '2'\n\nassert solution('''100\n99\n98\n97\n96\n95\n94\n93\n92\n91\n90\n89\n88\n87\n86\n85\n84\n83\n82\n81\n80''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n4 1 2\n2 3 2\n3 5 3\n4 5 4\n5 6 5\n''') == '1'\n\nassert solution('''\n4\n4 1 2\n2 3 2\n3 5 3\n4 5 4\n5 6 5\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '0'\nassert solution('4') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4753,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"0\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 2 2 1\n''') == 'impossible'\nassert solution('''\n1\n3 7\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n5 2 3 1 4\n''') == 'impossible'\nassert solution('''\n5\n1 2 3 1 4\n''') == '4'\nassert solution('''\n5\n1 2 2 1 4\n''') == 'impossible'\nassert solution('''\n5\n1 2 2 1 4\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '4'\nassert solution('1') == 'impossible'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2''') == 'impossible'\nassert solution('''1\n3''') == '4'\nassert solution('''1\n3\n3''') == '4'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == '4'\nassert solution('1') == 'impossible'\nassert solution('3 7') == 'impossible'",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n2\n1 2 2 1\n\"\"\") == \"4\"\nassert solution(\"\"\"\n1\n3 7\n\"\"\") == \"impossible\"\nassert solution(\"\"\"\n1\n1\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'impossible'\nassert solution('1') == '4'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 2 2 1') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4754,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1\n1\n''') == '4'\nassert solution('''\n1\n3 7\n''') == 'impossible'\nassert solution('''\n2\n3 7\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4 1') == '4'\nassert solution('10 1') == '10'\n\nassert solution('10 50') == '50'\nassert solution('1 0') == '1'\nassert solution('100 10') == '100'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''184 1\nSample Output 1:\n180\n\nSample Input 2:\n123450995 1\nSample Output 2:\n123451000''') == '123451000'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('184 1') == '180'\nassert solution('123450995 1') == '123451000'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"184 1\") == \"180\"\nassert solution(\"123450995 1\") == \"123451000\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n184 1\n''') == '180'\nassert solution('''\n123450995 1\n''') == '123451000'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"18 1\") == \"180\"\nassert solution(\"1\") == \"1\"\nassert solution(\"123450995 1\") == \"123451000\"",
        "num_ids_2": 21,
        "num_ids_4": 37
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"124\"\nprint(solution(s))\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4755,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(samples.sample_input_1) == \"180\"\nassert solution(samples.sample_input_2) == \"123451000\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n3\n0 1\n1 0\n1 1\n\"\"\") == \"0.333333\"\nassert solution(\"\"\"\n1\n5\n8 9\n\"\"\") == \"1.8\"\nassert solution(\"\"\"\n2\n5\n8 9\n\"\"\") == \"2.8\"\nassert solution(\"\"\"\n3\n5\n5 2\n5 4\n\"\"\") == \"5.00000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '0.000000'\nassert solution('2 2') == '0.000000'\nassert solution('3 3') == '0.000000'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0.000000'\nassert solution('2') == '0.000000'\nassert solution('3') == '0.000000'\nassert solution('4') == '0.000000'\nassert solution('5') == '0.000000'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '0.000000'\nassert solution('1 1') == '0.000000'\nassert solution('2 2') == '0.000000'\nassert solution('3 3') == '0.000000'\nassert solution('1 3') == '0.000000'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n3\n1 1\n2 2\n3 3\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n7\n1 2\n2 0\n3 1\n4 1\n5 1\n6 1\n7 1\n\"\"\") == \"1.7420491\"\nassert solution(\"\"\"\n10\n3 3\n3 7\n8 5\n8 7\n7 6\n6 2\n5 2\n5 8\n5 4\n5 7\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n10\n0 1\n1 0\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n\"\"\") == \"0.000000\"\nassert solution(\"\"\"\n10\n0 1\n2 1\n3 2\n4 2\n5 2\n6 1\n7 2\n8 1\n9 1\n10 1\n\"\"\") == \"0.000000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'\nassert solution('3\\n0 1\\n1 0\\n1 1') == '0.000000'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2 2') == '0.000000'\nassert solution('3\\n1 1') == '0.000000'\nassert solution('3\\n0 1') == '0.000000'\nassert solution('6\\n4 3\\n2 1\\n5 4\\n3 1\\n2 1') == '0.000000'",
        "num_ids_2": 32,
        "num_ids_4": 80
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 1\\n2 2\\n3 3') == '0.000000'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n1 1\\n2 2\\n3 3') == '0.000000'\nassert solution('1\\n1 1\\n2 2\\n3 3') == '0.000000'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4756,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n1 1\n2 2\n3 3\n4 4\n5 5''') == '0.000000'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\") == \"1\\n2\\n4\\n8\\n\"\n\nassert solution(\"\"\"\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n\"\"\") == \"1\\n2\\n6\\n8\\n\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 4'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 4'\nassert solution('''\n9\n8\n6 5 7 3 2 4 1\n6 6 4 2 7 1\n6 7 7 3 2 4\n6 7 4 5 2 1\n6 7 5 3 4 1\n6 7 2 4 1\n6 4 1 3\n6 1 2 3 4\n''') == '3 4 1'\nassert solution('''\n13\n4\n3 4 1 3 2 3 4 1 4 2 1 4 5 4 2\n4 2 5 6 7 8 4 2\n4 4 3 6 7 8 4 2\n3 2 4 6 8 1 4 5 2\n3 4 4 5 6 7 8 1 4\n3 2 4 5 6 7 8 1 4\n4 2 4 5 6 7 8 1 4\n4 4 5 6 7 8 1 4\n3 2 4 5 6 7 8 1 4\n''') == '3 2 4 5 6 7 8 1 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == '1\\n2\\n4\\n'\nassert solution('8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\\n4 2 6 8 1') == '1\\n2\\n6\\n8\\n'\n",
        "num_ids_2": 92,
        "num_ids_4": 92
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\") == \"1\\n2\\n4\\n\"\n\"\"\"\n\nInput:\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\nOutput:\n1\n2\n4\n\"\"\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''\n8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"\"\"\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n\"\"\"\n) == \"1 2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n3\\n2 1 2') == '1\\n2'\nassert solution('8\\n5\\n4 1 3 5 6') == '1\\n2\\n4\\n'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\\n3\\n2 1 2\") == \"1\\n2\"\nassert solution(\"8\\n5\\n4 1 3 5 6\\n2 5 6\\n3 6 7 8\\n2 6 2\" ) == \"1\\n2\\n6\\n8\"\nassert solution(\"4\\n3\\n2 1 2\") == \"1\\n2\"\n",
        "num_ids_2": 67,
        "num_ids_4": 88
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''4\n3\n2 1 2\n3 2 3 4\n3 4 2 1\n''') == '1 2 4'\nassert solution('''8\n5\n4 1 3 5 6\n2 5 6\n3 6 7 8\n2 6 2\n4 2 6 8 1\n''') == '1 2 4 6 8'\nassert solution('''8\n8\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n1 1 1 1 1 1 1 1\n''') == '1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4757,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '1 2'\nassert solution('4\\n3\\n2 1 2\\n3 2 3 4\\n3 4 2 1') == '1 2'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2\\n3') == '6'\nassert solution('2\\n2\\n4') == '8'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(None) == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n4\n5\n''') == '60'\n\nassert solution('''\n2\n2\n2\n''') == '8'\n\nassert solution('''\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4 5\") == \"60\"\nassert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 4 5') == '60'\nassert solution('2 2 2') == '8'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 2\") == \"8\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 4 5\") == \"60\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4758,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '60'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '0.6666666666666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"3\n3 0 2\n\"\"\") == \"1.6666666666666667\"\nassert solution(\"\"\"3\n1 -1 4\n\"\"\") == \"2.5\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 0 2') == '1.0'\nassert solution('3 0 2') == '1.0'\nassert solution('3 10 20 30 40 50') == '1.0'\nassert solution('3 1 0 2') == '2.0'\nassert solution('3 -1 4') == '2.5'\nprint('Doctests completed')\n",
        "num_ids_2": 28,
        "num_ids_4": 60
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 4 2') == '1.5'\nassert solution('3 1 2 0') == '1.5'\nassert solution('5 0 -1') == '2.5'\nassert solution('2 0 2 2 -1') == '1.5'\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 0 2\") == \"1.5\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1.0'\nassert solution('2') == '2.0'\nassert solution('3') == '1.6666666666666667'\n",
        "num_ids_2": 24,
        "num_ids_4": 39
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n3 0 2') == '1.6666666666666667'\nassert solution('3\\n1 -1 4') == '2.5'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 0 2') == '1.6666666666666667'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 0 2\") == \"1.666666\"\nprint(solution(input()))\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4759,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '1.6'\nassert solution('3 2 0') == '1.6'\nassert solution('3 2 1') == '0.3333333333333333'\n",
        "num_ids_2": 26,
        "num_ids_4": 43
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '7'\nassert solution(\"7 3\") == '6'",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '2'\nassert solution('10') == '9'\nassert solution('3') == '2'\nassert solution('11') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6') == '6'\nassert solution('7') == '7'\nassert solution('15') == '7'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '6'\nassert solution('7') == '7'\nassert solution('8') == '8'\nassert solution('9') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 2 3 4 5') == '6'\nassert solution('10 10 10 10 10 10') == '0'\nassert solution('1000 1001 1002 1003 1004 1005') == '1006'\nassert solution('1000 1001 1002 1003 1004 1005') == '1000'\nassert solution('1 1 2 3 4 5') == '0'\n",
        "num_ids_2": 30,
        "num_ids_4": 71
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '2'\nassert solution('10\\n') == '9'\nassert solution('10\\n') == '2'\nassert solution('8\\n') == '7'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 5') == '7'\nassert solution('7 8') == '7'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3\") == \"6\"\nassert solution(\"15 12\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4760,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 3') == '6'\nassert solution('15 12') == '7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2\n8689 72565 72566 72567 72568 72569\n''') == '1'\nassert solution('''\n5\n41230 31233 41234 31235 41236 41237 41238 41239 41300 41301 41302 41303 41304\n41305 41306 41307 41308 41309 41310 41311 41312 41313 41314 41315 41316 41317\n41318 41319 41320 41321 41322 41323 41324 41325 41326 41327 41328 41329 41330\n41331 41332 41333 41334 41335 41336 41337 41338 41339 41340 41341 41342 41343\n41344 41345 41346 41347 41348 41349 41350 41351 41352 41353 41354 41355 41356\n41357 41358 41359 41360 41361 41362 41363 41364 41365 41366 41367 41368 41369\n41370 41371 41372 41373 41374 41375 41376 41377 41378 41379 41380 41381 41382\n41383 41384 41385 41386 41387 41388 41389 41390 41391 41392 41393 41394 41395\n41396 41397 41398 41399 41400 41401 41402 41403 41404 41405 41406 41407 41408\n41409 41410 41411 41412 41413 41414 41415 41416 41417 41418 41419 41420 41421\n41422 41423 41424 41425 41426 41427 41428 41429 41430 41431 41432 41433 41434\n41435 41436 41437 41438 41439 41440 41441 41442 41443 41444 41445 41446 41447\n41448 41449 41450 41451 41452 41453 41454 41455 41456 41457 41458 41459 41460\n41461 41462 41463 41464 41465 41466 41467 41468 41469 41470 41471 41472 41473\n41474 41475 41476 41477 41478 41479 41480 41481 41482 41483 41484 41485 41486\n41487 41488 41489 41490 41491 41492 41493 41494 41495 41496 41497 41498 41499\n41500 41500 41501 41502 41503 41504 41505 41506 41507 41508 41509 41510 41511\n41512 41513 41514 41515 41516 41517 41518 41519 41520 41521 41522 41523 41524\n41525 41526 41527 41528 41529 41530 41531 41532 41533 41534 41535 41536 41537\n41538 41539 41540 41541 41542 41543 41544 41545 41546 41547 41548 41549 41550\n41551 41552 41553 41554 41555 41556 41557 41558 41559 41560 41561 41562 41563\n41564 41565 41566 41567 41568 41569 41570 41571 41572 41573 41574 41575 41576\n41577 41578 41579 41580 41581 41582 41583 41584 41585 41586 41587 41588 41589\n41590 41591 41592 41593 41594 41595 41596 41597 41598 41599 41600 41600 41601\n41602 41603 41604 41605 41606 41607 41608 41609 41610 41611 41612 41613 41614\n41615 41616 41617 41618 41619 41620 41621 41622 41623 41624 41625 41626 41627\n41628 41629 41630 41631 41632 41633 41634 41635 41636 41637 41638 41639 41640\n41641 41642 41643 41644 41645 41646 41647 41648 41649 41650 41651 41652 41653\n41654 41655 41656 41657 41658 41659 41660 41661 41662 41663 41664 41665 41666\n41667 41668 41669 41670 41671 41672 41673 41674 41675 41676 41677 41678 41679\n41680 41681 41682 41683 41684 41685 41686 41687 41688 41689 41690 41691 41692\n41693 41694 41695 41696 41697 41698 41699 41700 41701 41702 41703 41704 41705\n41706 41707 41708 41709 41710 41711 41712 41713 41714 41715 41716 41717 41718\n41719 41720 41721 41722 41723 41724 41725 41726 41727 41728 41729 41730 41731\n41732 41733 41734 41735 41736 41737 41738 41739 41740 41741 41742 41743 41744\n41745 41746 41747 41748 41749 41750 41751 41752 41753 41754 41755 41756 41757\n41758 41759 41760 41761 41762 41763 41764 41765 41766 41767 41768 41769 41770\n41771 41772 41773 41774 41775 41776 41777 41778 41779 41780 41781 41782 41783\n41784 41785 41786 41787 41788 41789 41790 41791 41792 41793 41794 41795 41796\n41797 41798 41799 41800 41801 41802 41803 41804 41805 41806 41807 41808 41809\n41810 41811 41812 41813 41814 41815 41816 41817 41818 41819 41820 41821 41822\n41823 41824 41825 41826 41827 41828 41829 41830 41831 41832 41833 41834 41835\n41836 41837 41838 41839 41840 41841 41842 41843 41844 41845 41846 41847 41848\n41849 41850 41851 41852 41853 41854 41855 41856 41857 41858 41859 41860 41861\n41862 41863 41864 41865 41866 41867 41868 41869 41870 4",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4 5 6 7 8') == '1'\nassert solution('1 1 1 1 1 1 1 1') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n123864 123865\n''') == '1'\nassert solution('''\n198765 198769\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('123456 123864') == '1'\nassert solution('198765 198769') == '0'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n-13 23\n10 9 5\n-11 9 4\n''') == '1'\n\nassert solution('''\n-1 -1\n7 7\n-2 -2\n''') == '0'\n\nassert solution('''\n-1 -1\n-8 -8\n-4 -4\n''') == '0'\n\nassert solution('''\n-1 -1\n-9 -9\n-5 -5\n''') == '0'\n\nassert solution('''\n-1 -1\n-7 -7\n-4 -4\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\nassert solution('123864 123865 123864 123865 123864 123865 123864 123865 123864 123865 123864 123865 123864 123865 123864 123865 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 123864 12",
        "num_ids_2": 28,
        "num_ids_4": 1497
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == '1'\nassert solution('123864 123865') == '1'\nassert solution('198765 198769') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4761,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"123864 123865\") == \"1\"\nassert solution(\"198765 198769\") == \"0\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n1 2\n2 3\n''') == '0.66666667'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n\n\"\"\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\nassert solution('3') == '0.666666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\nassert solution('3') == '0.33333333'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0.50000000'\nassert solution('2') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n1 2\n2 3\n2 1\n3 1\n1 2''') == '0.66666667'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n2\") == \"0.50000000\"\nassert solution(\"2\\n3\") == \"0.66666667\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4762,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '0.50000000'\nassert solution('3') == '0.66666667'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n180\nsingle 20\ntriple 20\n''') == 'triple 20'\nassert solution('''\n120\nsingle 20\ntriple 20\n''') == 'triple 20'\nassert solution('''\n120\nsingle 20\ntriple 20\nsingle 19\n''') == 'impossible'\nassert solution('''\n120\nsingle 20\ntriple 20\nsingle 20\nsingle 20\ntriple 20\nsingle 19\n''') == 'triple 20'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    '180'\n) == 'triple 20'\nassert solution(\n    '96'\n) == 'triple 19'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('180') == 'triple 20'\nassert solution('96') == 'triple 19'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n20\n180\n''') == 'impossible'\nassert solution('''\n20\n96\n''') =='single 19'\nassert solution('''\n180\n96\n''') == 'triple 19'\nassert solution('''\n20\n100\n''') == 'impossible'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"180\") == \"triple 20\\ntriple 20\\ntriple 20\\n\"\nassert solution(\"96\") == \"triple 19\\ndouble 15\\nsingle 9\\n\"\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('180') == \"triple 20\"\nassert solution('96') == \"triple 19\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('180') == \"triple 20\"\nassert solution('96') == \"triple 19\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == 'impossible'\nassert solution('1') =='single 1'\nassert solution('3') == 'triple 1'\nassert solution('7') == 'triple 2'\nassert solution('15') == 'triple 3'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"impossible\"\nassert solution(\"1\") == \"single 1\"\nassert solution(\"1 1\") == \"single 1\"\nassert solution(\"2\") == \"double 2\"\nassert solution(\"2 1\") == \"double 2\"\n",
        "num_ids_2": 21,
        "num_ids_4": 44
    },
    {
        "number": 4763,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"triple 19\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2 2') == '36'\nassert solution('10 4 7') == '168'\nassert solution('8 9 8') == '108'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2 5') == '196', 'Should be 196'\nassert solution('3 3 3') == '216', 'Should be 216'\nassert solution('20 2 5') == '120', 'Should be 120'\nprint('All tests passed')\n\"\"\"\nimport sys\nimport math",
        "num_ids_2": 34,
        "num_ids_4": 51
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 4 7\n5 2 2''') == '168'\nassert solution('''5 2 2\n4 4 7''') == '336'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8 12 2\n2 2\n''') == '24', '4'\nassert solution('''8 13 2\n2 2\n''') == '32', '4'\nassert solution('''5 12 2\n2 2\n''') == '36', '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n12 2 4\n''') == '8'\nassert solution('''\n3 1 2\n''') == '3'\nassert solution('''\n4 5 4\n''') == '24'\nassert solution('''\n8 8 8\n''') == '32'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"36\"\nassert solution(\"10 4 7\") == \"168\"\nassert solution(\"5 2 2\") == \"36\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 2 2\n''') == '36'\nassert solution('''10 4 7\n''') == '168'\nassert solution('''5 2 3\n''') == '24'\nassert solution('''5 1 2\n''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4764,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 4 7') == '168'\nassert solution('5 2 2') == '36'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n3 8\n5 8''') == \"1\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n10 10\n3 10\n5 8\n\"\"\") == \"1000000000\"\nassert solution(\"\"\"\n2\n3 8\n5 8\n\"\"\") == \"1000000000\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1\n3 10\n5 8\n''') == '7'\nassert solution('''2\n3 8\n5 8\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1\n10 5\n10 5\n\"\"\") == \"7\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n4\n3 5\n2 2\n1 4\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n5\n8 2\n6 1\n4 2\n7 2\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n1\n1\n3\n1\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '7'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''1\n3 10\n3 2\nSample Output 3:\n3\n''') == '3'\nassert solution('''3\n3 8\n3 8\nSample Output 4:\n1''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"7\"\nassert solution(\"2\") == \"1\"\nassert solution(\"1\") == \"7\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4765,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3 10\\n5 8') == '7'\nassert solution('2\\n3 8\\n5 8') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"Simon says smile.\"\nassert solution(\"2\") == \"Lower your right hand.\"\nassert solution(\"3\") == \"raise your right hand.\"\n\"\"\"\n\nimport re\nimport sys\nimport os\nfrom io import StringIO\n\nsys.setrecursionlimit(3000)\n",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == ''\nassert solution('2') =='raise your right hand.'\nassert solution('3') =='raise your left hand.'\nassert solution('4') == 'raise your right hand.'\nassert solution('5') == 'raise your left hand.'\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\nSimon says smile.\n''') =='smile'\nassert solution('''\n2\nSimon says raise your right hand.\n''') == ''\nassert solution('''\n3\nSimon says raise your left hand.\n''') =='raise your left hand.'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\nSimon says touch your nose.\nStop touching your nose.\n''') =='touch your nose.\n'''\nassert solution('''\n3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\nSample Output 2:\n raise your right hand.\n raise your left hand.\n''') == 'raise your right hand.'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\nSimon says raise your right hand') =='raise your right hand'\nassert solution('2\\nLower your right hand') =='raise your left hand'\nassert solution('3\\nSimon says raise your right hand') == ''\n",
        "num_ids_2": 40,
        "num_ids_4": 56
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\nSimon says smile.\n''') =='smile.'\n\nassert solution('''\n3\nSimon says raise your right hand.\nLower your right hand.\nSimon says raise your left hand.\n''') =='raise your right hand.'\n\nassert solution('''\n2\nSimon says lower your right hand.\n''') == ''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    Simon says: touch your nose.\n    Stop touching your nose.\n    Simon says: touch your left foot.\n    Simon says: touch your right foot.\n    Simon says: raise your left foot.\n    Simon says: raise your right foot.\n    ''') =='touch your left foot.\\n touch your right foot.\\n raise your right foot.\\n raise your left foot.\\n'\n\nassert solution('''\n    Simon says: touch your nose.\n    Simon says: touch your left foot.\n    Simon says: touch your right foot.\n    Simon says: raise your left foot.\n    Simon says: raise your right foot.\n    ''') =='touch your left foot.\\n touch your right foot.\\n raise your left foot.\\n raise your right foot.\\n'\n\nassert solution('''\n    Simon says: touch your nose.\n    Simon says: touch your left foot.\n    Simon says: touch your right foot.\n    Simon says: raise your left foot.\n    Simon says: raise your right foot.\n    Simon says: touch your left foot.\n    Simon says: touch your right foot.\n    Simon says: raise your left foot.\n    Simon says: raise your right foot.\n    ''') =='touch your left foot.\\n touch your right foot.\\n raise your left foot.\\n raise your right foot.\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.'\nassert solution('3\\nSimon says raise your right hand.\\nLower your right hand.\\nSimon says raise your left hand.\\n') =='raise your right hand.'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\nSimon says smile.\\n') =='smile.\\n'\nassert solution('1\\nSimon says smile.\\nSimon says raise your right hand.\\n') =='smile.\\n raise your right hand.\\n'\nassert solution('1\\nSimon says smile.\\nSimon says raise your right hand.\\nSimon says upper your left hand.\\n') =='smile.\\n raise your right hand.\\n lower your left hand.\\n'\nassert solution('1\\nSimon says smile.\\nSimon says raise your right hand.\\nSimon says upper your left hand.\\nSimon says lower your right hand.\\n') =='smile.\\n raise your right hand.\\n lower your right hand.\\n lower your left hand.\\n'\nassert solution('1\\nSimon says smile.\\nSimon says raise your right hand.\\nSimon says upper your left hand.\\nSimon says lower your right hand.\\nSimon says touch your nose.\\n') =='smile.\\n raise your right hand.\\n lower your left hand.\\n lower your right hand.\\ntouch your nose.\\n'\n",
        "num_ids_2": 60,
        "num_ids_4": 184
    },
    {
        "number": 4766,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"raise your right hand.\"\nassert solution(\"3\") == \"raise your left hand.\"\nassert solution(\"1\") == \"smile.\"\nassert solution(\"4\") == \"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 45
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"5\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"0 0 4 6 10 12 16 18\") == \"5\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\nassert solution(\"1 2 4 6 10 12 16 18\") == \"0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(example_input_1) == '5'\nassert solution(example_input_2) == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n0 0 4 6 10 12 16 18\n''') == '5'\n\nassert solution('''\n1 2 4 6 10 12 16 18\n''') == '0'\n\nassert solution('''\n1 2 4 6 10 12 16 18\n''') == '0'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4767,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 0 4 6 10 12 16 18') == '5'\nassert solution('1 2 4 6 10 12 16 18') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '3'\nassert solution('0 0') == '0 1'\nassert solution('1 1') == '0 1'\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\\n\") == \"3\\n0 1\\n1 2\\n2 3\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == '3'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 2\nAA\nAT\nTT''') == '3'\nassert solution('''3 2\nAA\nAT\nTT''') == '2'\nassert solution('''10 1\nAC\nAG\nAC\nCC\nAA\nAG\nAC\nAC\nAC\nCC\nAA\nAC''') == '10'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4 2\nAA\nAT\nTT\nTC''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nassert solution('''4 1\nAA\nAT\nAA\nAT''') == '0 1 2 3'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\nAA\nAT\nTT''') == '3'\nassert solution('''4 1\nA\nA\nG\nT''') == '2'\nprint(solution('''5 1\nAA\nAT\nAC\nCT\nGA'''))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == '2'\nassert solution('2 1') == '0 1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4\\nAA\\nAT\\nTT\") == \"2\"\nassert solution(\"3 1\\nA\\nA\\nA\") == \"1\"\nassert solution(\"3 2\\nAA\\nAA\\nAA\") == \"0\"\n",
        "num_ids_2": 40,
        "num_ids_4": 60
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4768,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 2\\nAA\\nAT\\nTT\\nTC\") == \"3\"\nassert solution(\"4 1\\nA\\nA\\nG\\nT\") == \"2\"",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    'aaaa'\n) == 'a'\n\nassert solution(\n    'ab'\n) == -1\n\"\"\"\n\nimport collections",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"-\"\nassert solution(\"a\") == \"a\"\nassert solution(\"b\") == \"-\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"aaa\") == \"a\"\nassert solution(\"abb\") == -1\nassert solution(\"baab\") == -1\nassert solution(\"bbb\") == \"b\"\nassert solution(\"aaaa\") == \"a\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == -1\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('aaaa') == 'a'\nassert solution('ab') == '-1'\nprint(solution(input()))\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == -1\nassert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == -1\nassert solution(\"baba\") == -1\nassert solution(\"babaa\") == \"baba\"\n",
        "num_ids_2": 18,
        "num_ids_4": 37
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"ab\") == -1\nassert solution(\"aaaa\") == \"a\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''aaaa''') == 'a'\nassert solution('''ab''') == -1\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4769,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"aaaa\") == \"a\"\nassert solution(\"ab\") == \"-1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''20 100\n2 3\n''') == 'Dr. Chaz will have 1 piece of chicken left over!'\n\nassert solution('''20 100\n10 3\n''') == 'Dr. Chaz needs 10 more piece[s] of chicken!'\n\nprint(\"Tests passed...\")",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\nassert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nprint(solution(*input().split()))\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('20 100 11') == 'Dr. Chaz needs 11 more piece[s] of chicken!'\nassert solution('1') == 'Dr. Chaz needs $1 more piece[s] of chicken!'\n",
        "num_ids_2": 44,
        "num_ids_4": 91
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20 100\") == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution(\"2 3\") == \"Dr. Chaz will have 1 piece of chicken left over!\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20 100') == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution('2 3') == \"Dr. Chaz will have 1 piece of chicken left over!\"",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == 'Dr. Chaz will have 1 piece of chicken left over!'\nassert solution('20 100') == 'Dr. Chaz will have 80 pieces of chicken left over!'\nassert solution('2 5') == 'Dr. Chaz needs 2 more piece[s] of chicken!'\nassert solution('20 50') == 'Dr. Chaz will have 50 pieces of chicken left over!'\nassert solution('1') == 'Dr. Chaz will have 1 piece of chicken left over!'\n",
        "num_ids_2": 44,
        "num_ids_4": 89
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''20 100\n20 100\n10\n20 20''') == \"Dr. Chaz needs 1 more piece[s] of chicken!\"\nassert solution('''5\n2\n10\n20 20\n0\n0\n''') == \"Dr. Chaz will have 80 pieces of chicken left over!\"\nassert solution('''5\n0\n10\n20 20\n0\n0\n''') == \"Dr. Chaz needs 1 more piece[s] of chicken!\"\n",
        "num_ids_2": 15,
        "num_ids_4": 22
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"20 100\\n\"\n    \"2 3\"\n) == \"Dr. Chaz will have 1 piece of chicken left over!\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4770,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 10') == 'Dr. Chaz will have 10 pieces of chicken left over!'\nassert solution('10 9') == 'Dr. Chaz needs 9 more piece[s] of chicken!'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 50\n2 2 3\n1 3 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 10\n1 1 2\n2 2 2\n3 2 1\n''') == '-2'\nassert solution('''\n3 30\n1 1 1\n5 2 3\n5 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '-2'\nassert solution('3 200\\n1 2 5\\n3 2 3\\n5 2 2\\n') == '0'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1') == '-2'\nassert solution('3 10\\n1 1 1\\n5 2 3\\n5 2 1') == '0'",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 1 2') == '0'\nassert solution('3 1 2') == '-2'\nassert solution('3 10') == '-2'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 10\\n2 2 2\\n3 2 1\\n') == '-2'\nassert solution('2 3\\n4 3 5\\n7 1 3\\n10 2 1\\n') == '1'\nassert solution('8 2\\n9 1 5\\n11 2 1\\n13 2 1\\n17 1 2\\n') == '0'\n",
        "num_ids_2": 52,
        "num_ids_4": 85
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 10\\n1 1 2\\n2 2 2\\n3 2 1\") == '-2'\nassert solution(\"3 30\\n1 1 1\\n5 2 3\\n5 2 1\") == '0'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10\\n1 1 2\\n2 2 2\\n3 2 1') == '0'\nassert solution('3 40\\n1 1 1\\n5 2 3\\n5 2 1') == '-2'\n",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 10\\n1 1 2\\n2 2 2\\n3 2 1\\n') == '-2'\nassert solution('3 30\\n1 1 1\\n5 2 3\\n5 2 1\\n') == '0'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4771,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3 10\n1 1 2\n2 2 2\n3 2 1''') == '-2'\nassert solution('''3 100\n1 1 2\n2 2 2\n3 2 1''') == '0'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"4 4\nluka\no#a#\nkula\ni#a#\"\"\") == \"kala\", \"First example\"\nassert solution(\"\"\"4 4\nluka\no#a#\nkula\ni#as\n\"\"\") == \"as\", \"Second example\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#as''') == 'kala'\n\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\n''') == 'as'\n\nassert solution('''3 3\nabcd\nbc\ncda''') == 'bc'\n\nassert solution('''2 2\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala', 'Wrong'\n\nassert solution('''4 4\nluka\no#a#\nkula\ni#as\n''') == 'kasa', 'Wrong'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'as'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"as\"\nassert solution(\"kala\") == \"as\"\nassert solution(\"luka\") == \"kala\"\nassert solution(\"kula\") == \"luka\"\nassert solution(\"\") == \"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 43
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"kala\"\n\nimport re",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#as\n''') == 'kala'\n\nfrom collections import deque\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\nluka\no#a#\nkula\ni#a#\n''') == 'kala', 'First'\nassert solution('''\n4 4\nluka\no#a#\nkula\ni#as\n''') == 'kasa', 'Second'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4\\nluka\\n#a#\\nkula\\ni#a#') == 'kala'\nassert solution('4 4\\nluka\\n#a#\\nkula\\ni#as\\n#a#\\n#a#\\n#a#\\ni#a#') == 'as'\n",
        "num_ids_2": 78,
        "num_ids_4": 78
    },
    {
        "number": 4772,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\nluka\\n#a#kula\\ni#as\") == \"kala\"\nassert solution(\"4 4\\nluka\\n#a#kula\\ni#a#s\") == \"kala\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WNMWMME') == '10'\nprint(solution('WNEENWEENEEN'))",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nWNEENWEENEEN\n''') == '10'\n\nassert solution('''\nNSEW\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(None) == -1\nassert solution(\"WNEENWEENEENWEEN\") == 10\nassert solution(\"NSEW\") == 4\n\n\"\"\"\nimport math\nfrom functools import reduce",
        "num_ids_2": 24,
        "num_ids_4": 34
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"NSEW\") == \"4\"\nassert solution(\"NSEW\") == \"4\"\n\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('NSEW') == '4'\n\ninput = 'NSEW'\n\ni = 0\nwhile i < len(input):\n    i += 1\n    if i % 3 == 0:\n        input = input + 'N'\n    if i % 3 == 1:\n        input = input + 'S'\n    if i % 3 == 2:\n        input = input + 'E'\n\nprint(input)",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 10\nassert solution(input()) == 4",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"WNEMWNEMWNW\") == \"10\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"10\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4773,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '10'\nassert solution('WNEENWEENEENE') == '10'\nassert solution('NSEW') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1 2 3 4\n1 2 3 4''') == '1 - 2 = 3 - 4'\nassert solution('''1 2 3 4\n0 0 0 0''') == '0 * 0 = 0 - 0'\nassert solution('''0 4 2 2\n0 4 2 2''') == '0 + 4 = 2 * 2'\nassert solution('''0 4 2 2\n0 0 0 0''') == '0 / 4 = 2 - 2'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3 4\") == \"1 - 2 = 3 - 4\", \"1\"\nassert solution(\"0 4 2 2\") == \"0 * 4 = 2 - 2\", \"0\"\nassert solution(\"0 0 0 0\") == \"problems ahead\", \"0\"\n\n\"\"\"\n\nfrom math import gcd\nfrom math import trunc",
        "num_ids_2": 44,
        "num_ids_4": 62
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 2 - 2 = 3 4\\n1 / 2 = 3 / 4'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 2 3 4\n''') == '1 - 2 = 3 - 4\\n1 / 2 = 3 / 4\\n'\nassert solution('''\n0 4 2 2\n''') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2\\n0 + 4 = 2 + 2\\n0 / 4 = 2 - 2\\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'\nassert solution('1 2 1') == '1 - 2 = 1 - 1'\nassert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('3 2 0 2') == '3 * 2 = 6 - 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 75
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 2 3 4''') == '1 - 2 = 3 - 4'\nassert solution('''0 4 2 2''') == '0 * 4 = 2 - 2'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 4 2 2') == '0 * 4 = 2 - 2\\n0 + 4 = 2 * 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1 2 3 4\n''') == '1 - 2 = 3 - 4'\nassert solution('''\n0 4 2 2\n''') == '0 * 4 = 2 - 2'\n\nprint(solution('''\n2 1 2 1\n'''))",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4', 'Should output 1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2', 'Should output 0 * 4 = 2 - 2'\nassert solution('2 4 2 2') == '2 + 2 = 4 + 2', 'Should output 2 + 2 = 4 + 2'\nassert solution('3 4 2 2') == '3 + 2 = 5 + 2', 'Should output 3 + 2 = 5 + 2'\nassert solution('1 2 4 2') == '1 - 2 = 3 - 4', 'Should output 1 - 2 = 3 - 4'\n",
        "num_ids_2": 60,
        "num_ids_4": 120
    },
    {
        "number": 4774,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3 4') == '1 - 2 = 3 - 4'\nassert solution('0 4 2 2') == '0 * 4 = 2 - 2'",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"BANANA PIDZAMA\"\n    ) == \".\" * 4 + \"BANANA\" + \".\" * 4 + \"PIDZAMA\" + \".\" * 4 + \"BANANA\" + \".\" * 4\nassert solution(\n    \"MAMA TATA\"\n    ) == \".\" * 4 + \"MAMA\" + \".\" * 4 + \"TATA\" + \".\" * 4 + \"MAMA\" + \".\" * 4\nassert solution(\n    \"BAKERS BUSINESS\"\n    ) == \".\" * 4 + \"BAKERS\" + \".\" * 4 + \"BUSINESS\" + \".\" * 4 + \"BAKERS\" + \".\" * 4\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''BANANA PIDZAMA''') == '''.P....\n.I....\n.D....\n.Z....\nBANANA'''\n\nassert solution('''MAMA TATA''') == '''.T..\nMAMA\n.T..\n.A..\n'''\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\nassert solution(\"MAMA TATA\") == \".T..\\nMAMA\\n.T..\\n.A..\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('BANANA PIDZAMA') == '\\n.P....\\n.I....\\n.D....\\n.Z....\\nBANANA\\n.M....\\n.A....'\nassert solution('MAMA TATA') == '\\n.T..\\nMAMA\\n.T..\\n.A..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INP) == OUT",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(INPUT_S) == OUTPUT_S\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"BANANA PIDZAMA\") == \".P....\\n.I....\\n.D....\\n.Z....\\nBANANA\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''BANANA PIDZAMA\nSAMMAMA\nTATA''') == '''.P....\nMAMA\n.T..\n.A..\nBANANA\n.M....\n.I....\n.D....\n.Z....\nTATA'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4775,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('BANANA PIDZAMA') == '.P....\\n.I....\\n.D....\\n.Z....\\nBANANA'\nassert solution('MAMA TATA') == '.T..\\nMAMA\\n.T..\\n.A..'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n1 365\n20 28\n''') == '365'\nassert solution('''\n4\n1 365\n20 28\n25 26\n''') == '365'\nassert solution('''\n2\n1 365\n20 28\n25 26\n''') == '365'\n\nassert solution('''\n2\n1 365\n20 28\n25 26\n''') == '365'\nassert solution('''\n4\n1 365\n20 28\n25 26\n''') == '365'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3\"\n) == \"10\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"3\n10 14\n13 17\n25 26\"\"\") == \"10\"\nassert solution(\"\"\"3\n10 14\n13 17\n25 26\"\"\") == \"26\"\nassert solution(\"\"\"3\n1 365\n20 28\"\"\") == \"365\"\nassert solution(\"\"\"3\n0 100\n1 0\n5 100\"\"\") == \"100\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '10'\nassert solution('1 365') == '365'\n\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\nassert solution('''\n2\n1 365\n20 28\n''') == '365'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n15 17\n20 27\n25 20\n15 26\n10 23\n4\n12 29\n12 30\n6 12\n5 32\n8''') == '365'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n10 14\n13 17\n25 26\n''') == '10'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\n1 365\\n20 28\") == \"365\"\nassert solution(\"3\\n10 14\\n13 17\\n25 26\") == \"10\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n5\n10 13\n14 17\n25 26\n35 36\n50 51\n\"\"\") == \"5\"\nassert solution(\"\"\"\n4\n10 14\n13 17\n23 32\n35 36\n50 51\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n10 13\n14 17\n23 32\n35 36\n50 51\n\"\"\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4776,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n10 14\n13 17\n25 26\n''') == '10'\n\nassert solution('''2\n1 365\n20 28\n''') == '365'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n\") == \"0 1\"\nassert solution(\"2\\n\") == \"2 3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\n3\\n2\\n1\\n') == '0 1'\nassert solution('6\\n4\\n4\\n1\\n2\\n2\\n') == '0 3'",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1\n2\n3\n''') == '0 1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1\n''') == '0 1'\nassert solution('''\n3\n''') == '2 3'\nassert solution('''\n4\n''') == '2 3'\n\nprint('All tests passed!')",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == '0 1'\nassert solution('4') == '2 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0 1'\nassert solution('4') == '2 3'\nprint('Almost done! Go ahead and Check')\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4777,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0 1\"\nassert solution(\"4\") == \"2 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 0 99'\nassert solution('6 5') == 'A 0 99'\n\nstdin = \"\"\"\n6 5\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n\"\"\"\nassert solution(stdin) == \"A 0 99\"\n\nstdin = \"\"\"\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n\"\"\"\nassert solution(stdin) == \"A 0 99\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\") == \"B 100 49\"\nassert solution(\"4 4\") == \"A 0 99\"\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('10 4') == 'A 1 197'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n\"\"\") == \"A 100 49\"\nassert solution(\"\"\"\n4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\n\"\"\") == \"A 0 99\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == 'B 100 49'\nassert solution('4 4') == 'A 1 197'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98\") == \"A 1 197\\nA 49 100\\nB 1 198\\nB 49 100\\n0.1965897693\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3\\n3 100 200') == 'B 100 49'\nassert solution('4 4\\n3 100 99\\n2 100 99\\n1 100 99\\n4 100 99') == 'A 1 197'\nassert solution('5 3\\n1 100 200\\n2 100 99\\n3 100 50\\n3 100 50\\n2 100 98') == 'A 1 197'\nassert solution('5 5\\n3 100 99\\n4 100 99\\n1 100 99\\n2 100 99\\n1 100 99') == 'A 0 99'\n",
        "num_ids_2": 51,
        "num_ids_4": 127
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n''') == 'B 100 49'\nassert solution('''4 4\n3 100 99\n2 100 99\n1 100 99\n4 100 99\nSample Output 2:\nA 0 99\nA 0 99\nA 0 99\nA 0 99\n0.4974874372\n''') == 'A 1 197'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4778,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 3\n1 100 200\n2 100 99\n3 100 50\n3 100 50\n2 100 98\n\"\"\") == \"B 100 49\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == '168'\nassert solution('10') == '100000000'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n2\n1\n4\n3\n5''') == '168'\nprint('Tests passed!')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5\") == \"168\"\nassert solution(\"2\") == \"1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '168'\nassert solution('2') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '168'\nassert solution('3') == '0'\nassert solution('4') == '36'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(sys.stdin.read()) == '168'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n2\\n1\\n4\\n3') == '168'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '168'\nassert solution('10') == '2'\nassert solution('3') == '1'\nassert solution('5') == '168'\nprint('All tests passed!')\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '168'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4779,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '168'\nassert solution('10') == '960'\nassert solution('100') == '10240'\nassert solution('101') == '10240'",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3') == 'CBADEF', solution('3 3')\nassert solution('3 3') == 'CDBEAF', solution('3 3')\nassert solution('3 3') == 'CDBEAF', solution('3 3')",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 3\nABC\nDEF\n1\n\"\"\") == \"CBADEF\"\nassert solution(\"\"\"\n5 5\nXABCDEFG\nABCDEFG\nXABCDEFG\nABCDEFG\nXABCDEFG\n\"\"\") == \"CBADEF\"\nassert solution(\"\"\"\n10 10\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\") == \"ABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"ABCDEF\"",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3\nA\nB\nC\n''') == \"ABC\"\nassert solution('''3\nABC\nDEF\n0\n''') == \"CBADEF\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3\") == \"CBADEF\"\nassert solution(\"3 3\") == \"CDBEAF\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3\\nABC\\nDEF\\n0\\n\") == \"CBADEF\"\nassert solution(\"3 3\\nABC\\nDEF\\n2\\n\") == \"CDBEAF\"\nassert solution(\"4 4\\nABCDEF\\nDEABC\\n0\\n\") == \"ABCDEEB\"\n",
        "num_ids_2": 48,
        "num_ids_4": 75
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2\") == \"CADE\"\nassert solution(\"3\") == \"ABDC\"\nassert solution(\"4\") == \"ABDCC\"\nassert solution(\"5\") == \"ABCBA\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == 'CBADEF'\nassert solution('3 3') == 'CDBEAF'\nassert solution('3 3') == 'EFABCD'\nassert solution('3 3') == 'EFABCD'\nassert solution('3 3') == 'CBADEF'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\nABC\nDEF\n2\n''') == \"CBADEF\"\n\nassert solution('''\n1 4\nAB\nABC\n''') == \"ABCB\"\n\nassert solution('''\n5 5\nABCD\nEFGH\nIJKL\nMNOP\nQRST\n''') == \"FHMIDQRSTLAMNBKEDCIJKGYPQ\"\n\nassert solution('''\n3 3\nAB\nDEF\n2\n''') == \"BDCAFA\"\n\nassert solution('''\n3 3\nABC\nABC\n''') == \"ABCABC\"",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4780,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''2\nA\n0\n3''') == 'ABBADEF'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n') == '4'\nassert solution('2\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n') == '1'\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '5'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1'\nassert solution() == '2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '4'\nassert solution('4') == '3'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n5\\n20 T\\n50 T\\n80 T\\n50 T\\n30 T\\n') == '5'\nprint(solution('1\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n'))\nprint(solution('2\\n5\\n100 T\\n100 N\\n100 T\\n100 T\\n100 N\\n'))",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"4\"\nassert solution(\"3\") == \"4\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4781,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1\n5\n20 T\n50 T\n80 T\n50 T\n30 T\n''') == '4'\nassert solution('''3\n3\n20 T\n50 T\n80 T\n30 T\n''') == '3'\n\n'''\n\nimport math\nfrom collections import Counter\n\nn = int(input())\ns = [Counter(input()) for _ in range(n)]\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 3\n8 5\n7 6\n1 2\n2 4\n4 5\n3 7\n6 5\n7 8''') == '6'\n\nassert solution('''6 8\n7 9\n3 4\n1 2\n2 4\n5 6\n6 7\n4 5\n3 7\n8 5\n6 4\n''') == '22'\n\nassert solution('''3 10\n1 9\n2 5\n8 3\n4 7\n6 5\n9 6\n10 8\n3 2\n7 1\n4 4\n''') == '33'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''4 3\n2\n2\n2\n2\n2\n2\n''') == '6'\nassert solution('''6 8\n1\n2\n2\n3\n3\n3\n3\n''') == '22'\nprint(solution('''5 2\n3\n2\n3\n4\n4\n'''))",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 1\") == \"2\"\nassert solution(\"4 5\") == \"10\"\nassert solution(\"10 20\") == \"26\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\n2\n1\n''') == '5'\nassert solution('''3\n3\n1\n''') == '8'\n\n--Python3--\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"22\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4 3\n\"\"\") == \"6\"\nassert solution(\"\"\"\n6 8\n\"\"\") == \"22\"\nassert solution(\"\"\"\n1 2\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"6\"\nprint(solution())\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4782,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4 3') == '6'\nassert solution('6 8') == '22'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 3\n1 2 3\n6 5 4\n7 8 9\n''') == \"1\"\nassert solution('''\n1 4\n4 3 2 1\n''') == \"0\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3') == '1'\nassert solution('6 5 4') == '1'\n\nstdin = '1 4'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"3 2\") == \"1\"\nassert solution(\"5 5\") == \"1\"\nassert solution(\"8 9\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 4\") == \"1\"\nassert solution(\"2 3\") == \"1\"\nassert solution(\"10 10\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 3\n1 2 3\n6 5 4\n7 8 9\n''') == '1'\nassert solution('''\n1 4\n4 3 2 1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 4') == '0'\nassert solution('3 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n1 2 3 4 5') == '1'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4783,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n3 3\n1 2 3\n6 5 4\n7 8 9\n\"\"\") == \"1\"\nassert solution(\"\"\"\n1 4\n4 3 2 1\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"28\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"28\"\nassert solution(\"100\") == \"296\"\nassert solution(\"1000\") == \"3000\"\nassert solution(\"10000\") == \"30016\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"28\"\nassert solution(\"2\") == \"16\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\n3\n4\n6\n2\n''') == '28'\n\nassert solution('''10\n3\n10\n2\n''') == '16'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3\n2\n5\n1''') == '16'\nassert solution('''10\n3\n10\n2''') == '28'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\n3\n4\n6\n2\n''') == '28'\n\nassert solution('''\n10\n3\n10\n2\n12\nSample Output 3:\n16\n\n''') == '16'\n\nassert solution('''\n1\n1\n''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''10\n3\n4\n6\n2''') == '28'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"28\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''10\n3\n4\n6\n2\n12''') == '28'\nassert solution('''10\n3\n10\n2\n12''') == '16'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4784,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n10\n4\n6\n2\n12\n\"\"\") == \"\"\"\n28\n\"\"\", \"First Test Case\"\nassert solution(\"\"\"\n10\n3\n10\n2\n12\n\"\"\") == \"\"\"\n16\n\"\"\", \"Second Test Case\"\nassert solution(\"\"\"\n10\n1\n1\n\"\"\") == \"\"\"\n9\n\"\"\", \"Third Test Case\"\nassert solution(\"\"\"\n10\n1\n2\n1\n3\n\"\"\") == \"\"\"\n4\n\"\"\", \"Fourth Test Case\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('octopuses') == 'no hiss'\nassert solution('amiss') == 'hiss'\nassert solution('abab') == 'no hiss'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''octopuses''') == 'no hiss'\nassert solution('''amiss''') == 'hiss'\nassert solution('''octopuses''') == 'no hiss'\nassert solution('''amiss''') == 'hiss'\n''')\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"amiss\") == \"hiss\"\nassert solution(\"octopuses\") == \"no hiss\"\n\n------Task-----",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == 'hiss'\nassert solution(input()) == 'no hiss'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\nhiss\namiss\n''') == 'hiss'\nassert solution('''\noctopuses\n''') == 'no hiss'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''octopuses\n''') == 'no hiss'\nassert solution('''\n''') == 'hiss'\nassert solution('''\noctopuses\n''') == 'hiss'\n\"\"\"\n\nimport re\n\ns = input()\n",
        "num_ids_2": 15,
        "num_ids_4": 21
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nprint(solution(input()))\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == 'hiss'\nprint(solution(__import__(\"sys\").stdin.read()))\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4785,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('amiss') == 'hiss'\nassert solution('octopuses') == 'no hiss'\nassert solution('s') == 'no hiss'\nassert solution('aaa') == 'no hiss'\nassert solution('a a') == 'no hiss'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''c++\nC++\nc\nc#\n''') == '2'\n\nassert solution('''blockchain\nArtificial intelligence\nMachine-Learning\nLinux\n''') == '5'\n\nassert solution('''blockchain\nartificial intelligence\nmachine-learning\nLinux\n''') == '4'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '2'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"3\"\nassert solution(input()) == \"5\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    c++\n    C++\n    c\n    c#\n    ''') == '3'\n\nassert solution('''\n    cryptography\n    blockchain\n    Artificial intelligence\n    Machine-Learning\n    Linux\n    ''') == '5'\n\nassert solution('''\n    aa\n    aa\n    ''') == '0'\n\nassert solution('''\n    aa\n    aa\n    aa\n    ''') == '0'\n\nassert solution('''\n    aa\n    aa\n    aa\n    ''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '4'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\\ncryptography\\n\") == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nc++\nC++\nc\nc#\n''') == '3'\n\n'''\n    Given a string, return the string made of its first two characters, so the String \"Hello\" yields \"He\".\n\n    If the string is shorter than length 2, return whatever there is, so \"X\" yields \"X\", and the empty string \"\" yields the empty string \"\".\n\n    Sample Input: Hello\n    Sample Output: He\n'''\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '3'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == '3', \"Your solution doesn't match expected output.\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4786,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"\nassert solution(\"TCTCGTTT\") == \"21\"\nprint(\"You are correct!\")\n\n\"\"\"\nimport sys",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CC\") == \"9\"\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(sample_input_1) == sample_output_1\nprint('Solution:')\nprint(solution(input))\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'\nassert solution('GAGCCTAC') == '23'\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"TCGTTC\") == \"21\"\nassert solution(\"CCC\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('TCGTTC') == '21'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''TCGTTC''') == '21'\nassert solution('''CCC''') == '9'\nprint('\"solution()\" is working.')",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('TCGTTC') == '21'\nassert solution('CCC') == '9'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4787,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == '0'\nassert solution('TCGTTC') == '21'\nassert solution('CCCC') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"0\") == \"0\"\nassert solution(\"3\") == \"-90\"\nassert solution(\"359\") == \"90\"\nassert solution(\"270\") == \"90\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('315\\n45') == '90'\nassert solution('180\\n270') == '90'\n\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('-180') == '270'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('315\\n45\\n') == '90\\n'\nassert solution('180\\n270\\n') == '90\\n'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n90\n90\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\n180\n270\n\"\"\") == \"90\"\n\nassert solution(\"\"\"\n180\n180\n\"\"\") == \"180\"",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('315') == '90'\nassert solution('45') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0') == '0'\nassert solution('315') == '90'\nassert solution('180') == '90'\nassert solution('270') == '90'\nassert solution('-45') == '-45'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '180'\nassert solution('11') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4788,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"180\\n270\") == \"90\"\nassert solution(\"0\\n90\") == \"90\"\nassert solution(\"180\\n0\") == \"180\"\nassert solution(\"0\\n90\") == \"180\"\nassert solution(\"0\\n180\") == \"180\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\n1\\n23\\n18\\n13\\n99') == '3'\nassert solution('5\\n11\\n20\\n33\\n40\\n55') == '1'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '3'\nassert solution('5 1 23 18 13 99') == '2'\nassert solution('10') == '1'\n",
        "num_ids_2": 25,
        "num_ids_4": 35
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99\n''') == '3'\n\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '1'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    '3'\n    ) == '1'\n\nassert solution(\n    '4'\n    ) == '2'\n\nassert solution(\n    '5'\n    ) == '3'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n\nassert solution('''5\n1\n23\n18\n13\n99''') == '1'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99\n''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n1\n23\n18\n13\n99''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\n\nassert solution('''\n5\n1\n23\n18\n13\n99\n10\n''') == '2'\n\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n1\n23\n18\n13\n99\n''') == '3'\nassert solution('''\n5\n11\n20\n33\n40\n55\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4789,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution
        "num_ids_2": 1740,
        "num_ids_4": 1740
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBBB') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"WWWWBBW\") == '1'\nassert solution(\"WWWWBBWB\") == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"WWWWBBW\") == \"0\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''BWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB''') == '1'\nassert solution('''WWWWBBW\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB''') == '0'\nassert solution('''WWWWBBW\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB\nBWBWBWB''') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"WWWWBBW\") == \"1\"\nassert solution(\"WWWWBBWB\") == \"0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('WWWWBBW') == '1'\nassert solution('WWWWBBW') == '0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('WWWWBBW') == '0'\nassert solution('WWWWBBW') == '1'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(stdin) == '1'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4790,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''BWBWBWB\nBWBWBWB\nBWBWBWB\nWBBWBWB\nBWBWBWB\nWBWBWBWB\nBBWBWBWB\nBWBWBWB\nWBWBWBWB\nBBWBWBWB''') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nprint('All tests passed!')",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('1 1 1 1') == '1.250000000000003'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 3 3 3\") == \"9\"\nassert solution(\"1 2 1 1\") == \"1.299038105676658\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\nassert solution('1000000000 1000000000') == '1.299038105676658'\nprint('\"Run\" is good. Great job!')",
        "num_ids_2": 34,
        "num_ids_4": 56
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 1') == '1.299038105676658'\nassert solution('3 3 3 3') == '9'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 3 3') == '9'\nassert solution('1 2 1 1') == '1.299038105676658'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4791,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 3') == '9'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('robert') == 'robert', 'First'\nassert solution('rooobert') == 'robert', 'Second'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nassert solution('rroobert') == 'robert'\nassert solution('rrroobert') == 'robert'\nassert solution('roobetter') == 'robert'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('rrrroobbert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nrobert\n''') == 'robert'\nassert solution('''\nrooobert\n''') == 'robert'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('roooobwetner') == 'robert'\nassert solution('roobrudd') == 'robert'\nassert solution('roobruddt') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\nassert solution('rroooobert') == 'robert'\nprint('Congratulations! All test cases pass.')\n",
        "num_ids_2": 26,
        "num_ids_4": 60
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('robert') == 'robert'\nassert solution('robbie') == 'robert'\nassert solution('roobt') == 'robert'\nassert solution('roobt') == 'robert'\nassert solution('roobt') == 'robert'\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"robert\") == \"robert\"\nassert solution(\"roooobert\") == \"robert\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('robert') == 'robert'\nassert solution('rooobert') == 'robert'\nprint(solution('robert'))\nprint(solution('rooobert'))\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4792,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('robert') == 'robert'\nassert solution('roooobert') == 'robert'\nassert solution('rrrroobbert') == 'robert'\nassert solution('rrrrroobbert') == 'robert'\nassert solution('robertapalaxiamethostenes') == 'robert'\n",
        "num_ids_2": 26,
        "num_ids_4": 56
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_) == \"12 10\"\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 1 0\n10 9 7\n''') == '108 4'\nassert solution('''\n10 2 5\n10 9 7\n''') == 'Impossible'\n\n---Snippet---",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\nassert solution('4 5 7') == 'Impossible'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n1000 9 7\n''') == '108 4'\nassert solution('''\n1000 900 7\n''') == 'Impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1000 9 7\\n\") == \"108 4\"\nassert solution(\"1000 900 7\\n\") == \"Impossible\"\nassert solution(\"100 900 7\\n\") == \"Impossible\"\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n6 6 5\n\"\"\") == \"Impossible\"\n\nassert solution(\"\"\"\n100 1000 5\n\"\"\") == \"108 4\"\n\nassert solution(\"\"\"\n1000 9 5\n\"\"\") == \"Impossible\"\n\nassert solution(\"\"\"\n100 100 5\n\"\"\") == \"Impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4793,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1000 9 7') == '108 4'\nassert solution('1000 900 7') == 'Impossible'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '1'\nassert solution('2 2') == '2'\nassert solution('3 3') == '3'\nassert solution('4 4') == '9'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 4\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"1\\n1\\n2\\n1\\n0\\n\", \"Wrong result\"\nprint(solution(input))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4') == '1'\nassert solution('2 4') == '1'\nassert solution('3 4') == '1'\nassert solution('4 4') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 4\\n#...\\n..X.\\n.X..\\n....\\n#.XX') == '1'\nassert solution('10 4\\n...X.\\n..X.\\n...X.\\n..X.\\n...X.\\n...X.\\n....\\n#..X.\\n....\\n#...X') == '4'\nassert solution('8 8\\n...X.\\n..X.\\n...X.\\n...X.\\n...X.\\n...X.\\n...X.\\n#.X.\\n#.X.\\n#.X.\\n....\\n#...X') == '0'\n",
        "num_ids_2": 91,
        "num_ids_4": 163
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n#..#\\n..X.\\n#XX#\\n') == '1\\n2\\n3\\n1\\n0\\n'\nassert solution('4 4\\n..#.\\n..X.\\n#XX#\\n') == '1\\n2\\n1\\n0\\n0\\n'\nassert solution('4 4\\n..X.\\n..#.\\n#XX#\\n') == '1\\n2\\n3\\n1\\n0\\n'\nassert solution('4 4\\n#.##\\n..X.\\n#XX#\\n') == '0\\n1\\n2\\n3\\n0\\n0\\n'\n",
        "num_ids_2": 84,
        "num_ids_4": 171
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1\\n1\\n1\\n1\\n0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n4 4\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"4 4\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4794,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\") == \"2\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n20\n-1\n0\n-1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\nprint('All tests passed!')",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n212\n1253\n''') == '1953566'\nprint(solution('''\n5\n23\n17\n43\n52\n22\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1953566'\nassert solution('5') == '102'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n212\n1253\n43\n''') == '1953566'\nassert solution('''\n1\n2\n5\n''') == '102'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"1953566\"\nassert solution(\"5\") == \"102\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == \"1953566\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4795,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == '1953566'\nassert solution('5\\n23') == '102'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000'\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000'\nassert solution('''\n0 0 0\n0 0 0\n''') == '0.000000 0.000000 0.000000'\nassert solution('''\n0 0 0\n0 0 0\n''') == '0.000000 0.000000 0.000000'\nassert solution('''\n0 1 1\n0 1 0\n''') == '0.000000 0.000000 1.000000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 4\\n2 1 2') == '0.1000000000000000 4.3000000000000000 6.7000000000000000'\nassert solution('10 10 10\\n3 3 3') == '0.000000 0.000000 0.000000'",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"9 9 9\") == \"0.000000 3.000000 6.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10 10 10\n3 3 3\n''') == '0.000000 0.000000 0.000000', 'First'\nassert solution('''\n9 9 9\n3 2 1\n''') == '0.000000 3.000000 6.000000', 'Second'\nassert solution('''\n1 1 1\n1 1 1\n''') == '0.000000 0.000000 0.000000', 'Third'\nassert solution('''\n1 1 1\n1 1 1\n''') == '0.000000 0.000000 0.000000', 'Fourth'\n''') == '0.000000 0.000000 0.000000', 'Fifth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"10 10 10\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"100 100 100\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"100 100 100\") == \"0.000000 0.000000 0.000000\"\nassert solution(\"1000000 1000000 1000000\") == \"0.000000 0.000000 0.000000\"\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nprint('All tests passed!')\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 10 10') == '0.000000 0.000000 0.000000'\nassert solution('9 9 9') == '0.000000 3.000000 6.000000'\nprint('\"Run\" is the best way to get feedback on correctness!')\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4796,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"10 10 10\\n3 3 3\\n\") == \"0.000000 0.000000 0.000000\", 'This should always be true'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''a<bc<\nfoss<<rritun\n''') == 'forritun'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\nassert solution('afsad$<3<flg<>') == 'fadsa'\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 52
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"foss<<rritun\") == \"forritun\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"a<bc<\") == \"b\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"foss<<rritun\") == \"forritun\"\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '', \"First Test Case\"\nassert solution('foss<<rritun') == 'forritun', \"Second Test Case\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('a<bc<') == 'b'\nassert solution('foss<<rritun') == 'forritun'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4797,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''a<bc<''') == 'b'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"Mirko-Slavko\") == \"MS\"\n\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP', \"First\"\nassert solution('Mirko-Slavko') == 'MS', \"Second\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"./ex-stdin-01.txt\") == \"MS\"\nassert solution(\"./ex-stdin-02.txt\") == \"KMP\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"KMP\") == \"KMP\"\nassert solution(\"MS\") == \"MS\"\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n    Rivest,Shamir,Adleman\n    ''') == \"RivestShamAdleman\"\nassert solution('''\n    Knuth,Morris,Pratt\n    ''') == \"KnMPrt\"\nassert solution('''\n    Mirko,Slavko\n    ''') == \"MS\"\nassert solution('''\n    Rivest,Shamir,Adleman\n    ''') == \"RivestShamAdleman\"\nassert solution('''\n    Knuth,Morris,Pratt\n    ''') == \"KnMPrt\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nMIRKO-SLAVKO\n''') == 'MS', 'First'\nassert solution('''\nKnuth-Morris-Pratt\n''') == 'KMP', 'Second'\nassert solution('''\nMIRKO-SLAVKO\n''') == 'MS', 'Third'\nassert solution('''\nKnuth-Morris-Pratt\n''') == 'KMP', 'Fourth'\nassert solution('''\nKMP\n''') == 'KMP', 'Fifth'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('Knuth-Morris-Pratt') == 'KMP'\nassert solution('Mirko-Slavko') == 'MS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(sample_input_1) == sample_output_1\nassert solution(sample_input_2) == sample_output_2",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4798,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(r\"\"\"Caballeros\nUFO\nvida\nBoa\nAgostinho\n\nCaballeros-UFO-vida-Boa-Agostinho\n\"\"\"\n) == \"CABALLEROS-UFO-VIDA-BOA-AGOSTINHO\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 0 0\") == \"Province or Gold\"\nassert solution(\"2 1 0\") == \"Estate or Copper\"\nprint(solution(input()))\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 5 2\") == \"Estate or Copper\"\nassert solution(\"3 0 2\") == \"Province or Gold\"\nassert solution(\"0 0 1\") == \"Province or Gold\"\nassert solution(\"3 2 1\") == \"Province or Gold\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('0 1 0') == \"Estate or Copper\"\nassert solution('2 1 0') == \"Province or Gold\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''0 1 0\n2 1 0''') == 'Estate or Copper'\nassert solution('''0 1 0\n2 2 0''') == 'Province or Gold'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1 0') == 'Province or Gold'\nassert solution('2 1 0') == 'Duchy or Copper'\nassert solution('0 1 0') == 'Estate or Copper'\n",
        "num_ids_2": 31,
        "num_ids_4": 46
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0 1 0') == 'Estate'\nassert solution('2 1 0') == 'Province'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"0 1 0\") == \"Estate or Copper\"\nassert solution(\"2 1 0\") == \"Province or Gold\"\nassert solution(\"0 3 0\") == \"Province or Gold\"\nassert solution(\"1 3 0\") == \"Duchy or Copper\"\nassert solution(\"2 3 0\") == \"Duchy or Copper\"\n",
        "num_ids_2": 30,
        "num_ids_4": 61
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 0') == 'Estate or Copper'\nassert solution('2 1 0') == 'Province or Gold'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 1 0\\n\") == \"Province or Gold\"\nassert solution(\"0 1 0\\n\") == \"Estate or Copper\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4799,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 1 0') == \"Province or Gold\"\nassert solution('2 1 0') == \"Estate or Copper\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"impossible\"\nassert solution(\"2 2\") == \"impossible\"\nassert solution(\"4 5\") == \"81.25\"\nassert solution(\"8 3\") == \"83.333333\"\n",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''2 1\n70 50\n''') == '90.00'\nassert solution('''10 3\n80 90\n''') == '75.7142857'\nassert solution('''2 2\n5 50\n''') == 'impossible'\nassert solution('''10 4\n80 90 50 10\n''') == 'impossible'\nassert solution('''3 1\n100 100 100\n''') == 'impossible'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 1\n70 50\n''') == '90.00'\nassert solution('''10 3\n80 90\n''') == '75.7142857'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\nprint('Check Passed')\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\n70 50\n''') == '90.00'\n\nassert solution('''\n10 3\n80 90\n''') == '75.7142857'\n\nassert solution('''\n1 0\n''') == 'impossible'\n\nassert solution('''\n2 1\n10 20\n''') == 'impossible'\n\nassert solution('''\n10 10\n50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50 50",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 1') == 'impossible'\nassert solution('2 2') == 'impossible'\nassert solution('10 3') == '75.7142857'\nassert solution('9 9') == 'impossible'",
        "num_ids_2": 24,
        "num_ids_4": 51
    },
    {
        "number": 4800,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 1') == '90.00'\nassert solution('10 3') == '75.7142857'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''7\n2 3 1 5 4 7 6\n''') == '4\\n2 3 5 7'\n\nassert solution('''5\n1 2 3 4 5\n''') == '5\\n1 2 3 4 5'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'\nassert solution('4\\n3 1 2 5 4') == '4\\n3 1 2 5 4'\n\n\"\"\"\n\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"7\\n\"\n    \"2 3 1 5 4 7 6\"\n) == \"4\\n\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 2 3 4 5\n''') == '4'\nassert solution('''7\n2 3 1 5 4 7 6\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''7\n2 3 1 5 4 7 6''') == \"4, 2, 3, 5, 7\"\nassert solution('''5\n1 2 3 4 5''') == \"5, 1, 2, 3, 4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n1 2 3 4 5') == '5 1 2 3 4 5'\nassert solution('7\\n2 3 1 5 4 7 6') == '4 2 3 5 7'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1 2 3 4 5\") == \"5\"\nassert solution(\"1 2 3 4 5 6\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7\") == \"5\"\nassert solution(\"1 2 3 4 5 6 7 8\") == \"5\"\n",
        "num_ids_2": 23,
        "num_ids_4": 54
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7\\n2 3 1 5 4 7 6') == '4\\n2 3 5 7'\nassert solution('5\\n1 2 3 4 5') == '5\\n1 2 3 4 5'",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n1 2 3 4 5''') == '2 3 5'\nassert solution('''7\n2 3 1 5 4 7 6''') == '4 3 5 7'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4801,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 3\"\n    ) == \"1 0\"\nassert solution(\n    \"1 2\"\n    ) == \"2 1\"\nassert solution(\n    \"0 0\"\n    ) == \"0 0\"\nassert solution(\n    \"0 2\"\n    ) == \"2 1\"\nassert solution(\n    \"23 45\"\n    ) == \"9 25\"\n\nprint(solution(input()))\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"1 5\"\nassert solution(\"3 4\") == \"2 7\"\nassert solution(\"5 2\") == \"3 5\"\nassert solution(\"7 5\") == \"8 7\"\nassert solution(\"10 5\") == \"9 6\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(sys.stdin.read()) == \"9 25\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 7\n''') == '59 25'\nassert solution('''\n7\n''') == '59 25'\nassert solution('''\n0 0\n''') == '23 45'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"0 30\") == \"23 45\"\nassert solution(\"10 10\") == \"9 25\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"10 10\") == \"9 25\"\nassert solution(\"0 30\") == \"23 45\"\nassert solution(\"1 1\") == \"2 2\"",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4802,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '24'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.000000') == '1.000000'\n\nassert solution('2.000000') == '1.414214'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n\"\"\"\nimport math\n\nn = float(input())\nprint(math.pow(n, math.e))\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2.000000\n1.000000''') == '1.414214'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\nassert solution('2.50') == '2.50'\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.000000'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'\nassert solution('1.000000') == '1.414214'\nassert solution('2.000000') == '1.414214'",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1.000000\") == \"1.414214\"\nassert solution(\"2.000000\") == \"1.414214\"\nprint(solution(input()))\n\nimport math\n\na = float(input())",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000000') == '1.000000'\nassert solution('2.000000') == '1.414214'\nassert solution('-1.000000') == '0.0'\nassert solution('0.000000') == '0.000000'\nassert solution('2.000000') == '1.414214'\n",
        "num_ids_2": 29,
        "num_ids_4": 58
    },
    {
        "number": 4803,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2.000000\") == \"1.414214\"\nassert solution(\"1.000000\") == \"1.000000\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('100') == '100:'\nassert solution('1000') == '1000:'\nassert solution('10000') == '10000:'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == '3:\n2,1\n\nassert solution('50') == '50:\n2,1\n2,2\n3,2\n5,4\n5,5\n6,5\n10,10\n13,12\n17,16\n25,25\n\nassert solution('1001') == '1001:\n7,7\n7,8\n7,9\n8,8\n8,9\n9,9",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '1:'\nassert solution('5') == '5:'\nassert solution('50') == '50:'\nassert solution('51') == '51:'\nassert solution('5,2') == '5,2:'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('10000') == '10000:'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '3:\n2,1\n\nassert solution('50') == '50:\n2,1\n2,2\n3,2\n5,4\n5,5\n6,5\n10,10\n13,12\n17,16\n25,25\n\nassert solution('12') == '12:\n1,1\n2,1\n3,1\n4,1\n5,1\n6,1\n\nassert solution('100') == '100:\n1,1\n2,1\n3,1\n4,1\n5,1\n6,1\n7,1\n8,1\n9,1\n10,1\n11,1\n12,1\n13,1\n14,1\n15,1\n16,1\n17,1\n18,1\n19,1\n20,1\n21,1\n22,1\n23,1\n24,1\n25,1\n26,1\n27,1\n28,1\n29,1\n30,1\n31,1\n32,1\n33,1\n34,1\n35,1\n36,1\n37,1\n38,1\n39,1\n40,1\n41,1\n42,1\n43,1\n44,1\n45,1\n46,1\n47,1\n48,1\n49,1\n50,1\n51,1\n52,1\n53,1\n54,1\n55,1\n56,1\n57,1\n58,1\n59,1\n60,1\n61,1\n62,1\n63,1\n64,1\n65,1\n66,1\n67,1\n68,1\n69,1\n70,1\n71,1\n72,1\n73,1\n74,1\n75,1\n76,1\n77,1\n78,1\n79,1\n80,1\n81,1\n82,1\n83,1\n84,1\n85,1\n86,1\n87,1\n88,1\n89,1\n90,1\n91,1\n92,1\n93,1\n94,1\n95,1\n96,1\n97,1\n98,1\n99,1\n100:\n1,1\n2,1\n3,1\n4,1\n5,1\n6,1\n7,1\n8,1\n9,1\n10,1\n11,1\n12,1\n13,1\n14,1\n15,1\n16,1\n17,1\n18,1\n19,1\n20,1\n21,1\n22,1\n23,1\n24,1\n25,1\n26,1\n27,1\n28,1\n29,1\n30,1\n31,1\n32,1\n33,1\n34,1\n35,1\n36,1\n37,1\n38,1\n39,1\n40,1\n41,1\n42,1\n43,1\n44,1\n45,1\n46,1\n47,1\n48,1\n49,1\n50,1\n51:\n2,1\n3,1\n4,1\n5,1\n6,1\n7,1\n8,1\n9,1\n10,1\n11,1\n12,1\n13,1\n14,1\n15,1\n16,1\n17,1\n18,1\n19,1\n20,1\n21,1\n22,1\n23,1\n24,1\n25,1\n26,1\n27,1\n28,1\n29,1\n30,1\n31,1\n32,1\n33,1\n34,1\n35,1\n36,1\n37,1\n38,1\n39,1\n40,1\n41,1\n42,1\n43,1\n44,1\n45,1\n46,1\n47,1\n48,1\n49,1\n50:\n2,1\n3,1\n4,1\n5,1\n6,1\n7,1\n8,1\n9,1\n10,1\n11,1\n12,1\n13,1\n14,1\n15,1\n16,1\n17,1\n18,1\n19,1\n20,1\n21,1\n22,1\n23,1\n24,1\n25,1\n26,1\n27,1\n28,1\n29,1\n30,1\n31,1\n32,1\n33,1\n34,1\n35,1\n36,1\n37,1\n38,1\n39,1\n40,1\n41,1\n42,1\n43,1\n44,1\n45,1\n46,1\n47,1\n48,1\n49,1\n50,1\n51:\n2,1\n3,1\n4,1\n5,1\n6,1\n7,1\n8,1\n9,1\n10,1\n11,1\n12,1\n13,1\n14,1\n15,1\n16,1\n17,1\n18,1\n19,1\n20,1\n21,1\n22,1\n23,1\n24,1\n25,1\n26,1\n27,1\n28,1\n29,1\n30,1\n31,1\n32,1\n33,1\n34,1\n35,1\n36,1\n37,1\n38,1\n39,1\n40,1\n41,1\n42,1\n43,1\n44,1\n45,1\n46,1\n47,1\n48,1\n49,1\n50,1\n51:\n2,1\n3,1\n4,1\n5,1\n6,1\n7,1\n8,1\n9,1\n10,1\n11,1\n12,1\n13,1\n14,1\n15,1\n16,1\n17,1\n18,1\n19,1\n20,1\n21,1\n22,1\n23,1\n24,1\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '3:'\nassert solution('50') == '50:'\nassert solution('100') == '50:2,1'\n\nassert solution('50,100,50,100') == '50:2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,",
        "num_ids_2": 20,
        "num_ids_4": 1398
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0:0,1'\n\nassert solution('2') == '2:1'\nassert solution('50') == '50:2,1'\nassert solution('91') == '91:2,2'\nassert solution('101') == '101:3,2'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"\"\nassert solution(\"1\") == \"1:\"\nassert solution(\"2\") == \"2:\"\nassert solution(\"3\") == \"3:\"",
        "num_ids_2": 17,
        "num_ids_4": 37
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n3:\n2,1\n\n2:\n1,2\n3,2\n3,1\n\n50:\n2,1''') == '2,1,2,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,2,1,2,1,3,2,1,3,2,1,2,1,3,2,1,2,1,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,2,1,3,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2,1,2,1,3,2",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4804,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"2:1\"\nassert solution(\"50\") == \"50:2\"\nassert solution(\"100\") == \"2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1",
        "num_ids_2": 24,
        "num_ids_4": 1399
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('THE RAIN IN SPAIN') == 'yes'\nassert solution('IN THE RAIN AND THE SNOW') == 'no'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\nassert solution(\"HELLO WORLD\") == \"yes\"\n\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 46
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"THE RAIN IN SPAIN\") == \"yes\"\nassert solution(\"IN THE RAIN AND THE SNOW\") == \"no\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''THE RAIN IN SPAIN''') == \"yes\"\nassert solution('''IN THE RAIN AND THE SNOW''') == \"no\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4805,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('') == 'no'\nassert solution('THE RAIN IN SPAIN') == 'no'\nassert solution('IN THE RAIN AND THE SNOW') == 'yes'\nassert solution('THE RAIN IN SPAIN IN THE PLAIN') == 'no'\nassert solution('The rain in Spain') == 'yes'\n",
        "num_ids_2": 26,
        "num_ids_4": 63
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input_string) == \"SSKKKHHS\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == 'SSKKKHHS'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('RRLR') == \"SSKKKHHS\"\nassert solution('RLRLLRLL') == \"CHCS\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"RRBBBLLR\") == \"SSKKKHHS\"\nassert solution(\"RBLLLBRR\") == \"CHCS\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\nassert solution('BRRRBBBBLLL') == 'CCHH'\nassert solution('RRRRRRRRLL') == 'CCC'\n",
        "num_ids_2": 33,
        "num_ids_4": 64
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('RRBBBLLR') == 'SSKKKHHS'\nassert solution('RBLLLBRR') == 'CHCS'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4806,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('R') == 'S'\nassert solution('B') == 'S'\nassert solution('L') == 'L'\nassert solution('RRLR') == 'SKKKHHS'\nassert solution('BBRLRLR') == 'CHCS'\n",
        "num_ids_2": 20,
        "num_ids_4": 46
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2 3\") == \"1\\nFizz\\n2\"\nassert solution(\"2 4 7\") == \"1\\n2\\nFizz\\n3\\nFizz\\n5\\nFizz\\n7\\nFizzBuzz\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 3 7\\n\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\", \"Just kidding\"\nassert solution(\"2 4 7\\n\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\", \"Yeah, just kidding\"\n\nimport io\nimport sys\nimport unittest",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n'\n",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n4 3 7\n''') == '1Fizz\\n2Fizz\\n4Fizz\\n7Fizz\\nBuzz\\n'\nassert solution('''\n5 5 7\n''') == '1Fizz\\n2Fizz\\n4Fizz\\nBuzz\\nFizz\\n7Fizz\\nBuzz\\n'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3 7\") == \"1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n\"\nassert solution(\"2 4 7\") == \"1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n\"",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3 7') == '1\\nFizz\\nBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\nassert solution('2 4 7') == '1\\nFizz\\n3\\nFizzBuzz'\n",
        "num_ids_2": 43,
        "num_ids_4": 67
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input()) == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\nFizzBuzz\\n'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4807,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2 3 7\n''') == '1\\nFizz\\nBuzz\\nFizz\\n5\\nFizzBuzz\\n7\\n', \"First\"\nassert solution('''\n2 4 7\n''') == '1\\nFizz\\n3\\nFizzBuzz\\n5\\nFizz\\n7\\n', \"Second\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2\\n1 3 5 2') == \"It hadn't snowed this early in 2 years!\"\n\nassert solution('2 3\\n0 100') == \"It hadn't snowed this early in 0 years!\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(None) == 'It had never snowed this early!'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 2') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 2\\n3 3 3 2') == 'It hadn't snowed this early in 3 years!'\nassert solution('2 10\\n0 100') == 'It hadn't snowed this early in 0 years!'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 2') == 'It hadn't snowed this early in 2 years!'\nassert solution('4 10') == 'It hadn't snowed this early in 0 years!'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 10\n0 100\n''') == 'It hadn't snowed this early in 0 years!'\n\nassert solution('''4 2\n3 3 3 2\n''') == 'It hadn't snowed this early in 3 years!'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2') == \"It hadn't snowed this early in 2 years!\"\nassert solution('1 0') == \"It had never snowed this early!\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4 2\\n3 3 3 2\\n') == 'It hadn\u2019t snowed this early in 3 years!'\nassert solution('2 10\\n0 100\\n') == 'It hadn\u2019t snowed this early in 0 years!'",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 10') == 'It hadn\u2019t snowed this early in 0 years!'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4808,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 2\n3 3 3 2\n''') == 'It hadn't snowed this early in 3 years!'\nassert solution('''\n2 10\n0 100\n''') == 'It hadn't snowed this early in 0 years!'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"4 1\") == \"1\"\nassert solution(\"3 4\") == \"3\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2\\n2 2\\n') == '2'\nassert solution('5 10\\n2 2\\n') == '7'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"8 2\") == \"7\"\nassert solution(\"11 1\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 2\") == \"2\"\nassert solution(\"6 6\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '7'\nprint('\"success\" means correct execution. Anything else means there is a mistake in the code')\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 2') == '2'\nassert solution('10 10') == '7'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''10 2\n10 10''') == '7'\nassert solution('''1 5\n10 10''') == '2'\nassert solution('''1 10\n10 10''') == '1'\nassert solution('''1 1\n10 10''') == '1'\nassert solution('''1 2\n10 10''') == '1'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2') == '2'\nassert solution('3') == '1'\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4809,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 2\\n') == '2', \"Should be 2\"\nassert solution('10 10\\n') == '7', \"Should be 7\"\nassert solution('100 5\\n') == '101', \"Should be 101\"\nassert solution('50 50\\n') == '49', \"Should be 49\"\nassert solution('10 10\\n') == '7', \"Should be 7\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\n\"\"\"\n\npass",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"kakosi\"\n\"\"\"\nfrom collections import defaultdict\nstdin = input()\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('bok') == 'bok', 'First'\nassert solution('koaski') == 'koaski', 'Second'\nassert solution('koaskin') == 'kakosi', 'Third'\nassert solution('hello') == 'hello', 'Forth'\n\n'''",
        "num_ids_2": 32,
        "num_ids_4": 63
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('bok') == 'bok'\nassert solution('koaski') == 'koaski'\n\"\"\"\n\n\nimport os\nimport sys",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4810,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"bok\") == \"bok\"\nassert solution(\"koaski\") == \"koaski\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n') == '2 1'\nassert solution('6\\n') == '8 2'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\n1') == '4 1'\nassert solution('5\\n1') == '4 1'\nassert solution('2\\n1') == '1 1'\nassert solution('4\\n2') == '2 2'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6\n''') == '8 2'\nassert solution('''\n7\n''') == '8 3'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''6\n''') == '8 2'\nassert solution('''6\n''') == '8 3'\nassert solution('''6\n''') == '8 2'\nassert solution('''6\n''') == '8 2'\nassert solution('''6\n''') == '8 2'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2 2'\nassert solution('3') == '2 2'\nassert solution('9') == '3 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6\") == \"8 2\"\nassert solution(\"7\") == \"8 3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n') == '1 1'\nassert solution('10\\n') == '3 4'\nassert solution('1000000\\n') == '128 1'\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1 2'\nassert solution('5') == '3 1'\nassert solution('6') == '4 2'\nassert solution('8') == '6 3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4811,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"8 2\"\nassert solution(\"6\") == \"8 3\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"eet eat\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"eet\") == \"NO\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"difficult route\") == \"YES\"\nassert solution(\"worried and frantic\") == \"YES\"\n",
        "num_ids_2": 21,
        "num_ids_4": 47
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"drought\") == \"YES\"\nassert solution(\"worried\") == \"NO\"\nassert solution(\"tasty sprout\") == \"YES\"\n",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(solution.__doc__) == \"YES\\nNO\\nNO\\nNO\\nNO\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"cat\") == \"NO\"\nassert solution(\"pig\") == \"NO\"\nassert solution(\"garden\") == \"NO\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    \"drought\\n2\\naught ought aut acht\\nought oubt outte out oute\\n5\\ntasty sprout\\ndifficult route\\nworried and fierce\\napples and pears\"\n) == \"YES\\nYES\\nYES\\nYES\\nNO\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('stairs') == 'YES'\nassert solution('eet eat') == 'NO'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"stairs\") == \"YES\"\nassert solution(\"drought\") == \"YES\"\nassert solution(\"eet\") == \"NO\"\nassert solution(\"apples and pears\") == \"YES\"\nassert solution(\"plates of meat\") == \"NO\"\n\nstdin = \"\"\"\nfoofs\n4\nfov in for\nfoor\nfooe\nfooa\n\"\"\"\nfor _ in range(3):\n    print(solution(stdin))\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''S\n2\nerres\nairs\nares\naires\neet\neat''') == 'YES'\nassert solution('''drought\n2\naught\nought\noutt\nout\noute\nout\noubt\noutt''') == 'YES'\nassert solution('''tasty\nsprout\ndifficult\nroute\nworried\nand\nfrighten\nforever\nin\ndoubt''') == 'NO'\nassert solution('''tasty\nsprout\ndifficult\nroute\nworried\nand\nfrighten\nforever\nin\ndoubt''') == 'YES'\nassert solution('''tasty\nsprout\ndifficult\nroute\nworried\nand\nfrighten\nforever\nin\ndoubt''') == 'NO'\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4812,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nstairs\n2\nerres airs ears ares aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires aires a",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'WIN'\nassert solution('BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ') == 'LOSE'\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nHANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('HANGMAN') == 'WIN'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nHANGMAN\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'WIN', 'First example'\nassert solution('''\nBANANA\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE', 'Second example'\nassert solution('''\n''') == 'LOSE', 'Empty string'\nassert solution('''\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n''') == 'LOSE', 'Two of the same'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"WIN\"\nassert solution(\"BANANA\") == \"LOSE\"\nassert solution(\"HANGMAN\") == \"WIN\"",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"HANGMAN\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"WIN\"\nassert solution(\"BANANA\\nABCDEFGHIJKLMNOPQRSTUVWXYZ\") == \"LOSE\"",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4813,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('HANGMAN') == 'WIN'\nassert solution('BANANA') == 'LOSE'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5') == 'INCREASING'\nassert solution('11') == 'NEITHER'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\\nJOE\\nBOB\\nANDY\\nAL\\nADAM\") == \"DECREASING\"\nassert solution(\"11\\nHOPE\\nALI\\nBECKY\\nJULIE\\nMEGHAN\\nLAUREN\\nMORGAN\\nCARLI\\nMEGAN\\nALEX\\nTOBIN\") == \"NEITHER\"",
        "num_ids_2": 96,
        "num_ids_4": 96
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('11') == 'NEITHER'\n\"\"\"\n\nfrom typing import List\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == 'INCREASING'\nassert solution('11') == 'NEITHER'\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nJOE\nBOB\nANDY\nALI\n''') == \"DECREASING\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING'\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER'\nassert solution('''23\nANDRE\nBENNY\nCHRISTINA\nDANNY\nDAKOTA\nEJON\nFREDDIE\nJOHN\nJUNG\nJUDE\nJOHN\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE\nJUDE",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == 'INCREASING', 'test 1 failed'\nassert solution('11') == 'DECREASING', 'test 2 failed'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == 'DECREASING'\nassert solution('11') == 'NEITHER'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"INCREASING\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4814,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\nJOE\nBOB\nANDY\nAL\nADAM''') == 'DECREASING', \"First example\"\nassert solution('''11\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN''') == 'NEITHER', \"Second example\"\nassert solution('''15\nHOPE\nALI\nBECKY\nJULIE\nMEGHAN\nLAUREN\nMORGAN\nCARLI\nMEGAN\nALEX\nTOBIN\nYAHOO\nSAMMY\nSIBIE''') == 'INCREASING', \"Third example\"\nassert solution('''3\nHOPE\nALI\nBECKY''') == 'NEITHER', \"Fourth example\"\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\nassert solution(\"5 10 13\") == \"No winner!\"\nassert solution(\"7 10 13\") == \"George wins!\"\nassert solution(\"8 10 13\") == \"Nina wins!\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''3 10 13\nJohn\nKelly\nGeorge\nKelly 1\nGeorge 2\nKelly 1\nJohn 2\nGeorge 1\nJohn 3\nKelly 3\nKelly 1\nGeorge 3\nGeorge 1\nJohn 3\nGeorge 3\nKelly 1\n''') == 'George wins!'\nassert solution('''4 10 13\nBob\nNina\nJess\nTim\nNina 2\nBob 2\nNina 1\nJess 3\nBob 2\nJess 2\nNina 1\nJess 2\nNina 3\nBob 1\nNina 3\nJess 3\nBob 2\n''') == 'Nina wins!'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Nina wins!'\nassert solution('4 10 13') == 'No winner!'\n",
        "num_ids_2": 27,
        "num_ids_4": 40
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"No winner!\"\nassert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\nassert solution(\"1 1 2\") == \"George wins!\"\n",
        "num_ids_2": 23,
        "num_ids_4": 50
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"George wins!\"\nassert solution(\"5 10 13\") == \"Nina wins!\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"George wins!\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 10 13\") == \"George wins!\"\nassert solution(\"4 10 13\") == \"Nina wins!\"\n\nprint(solution.__doc__)\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 10 13') == 'George wins!'\nassert solution('4 10 13') == 'Jess wins!'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 10 13') == \"George wins!\"\nassert solution('4 10 13') == \"Nina wins!\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4815,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    3 10 13\n    John\n    Kelly\n    George\n    Kelly 1\n    George 2\n    Kelly 1\n    John 2\n    George 1\n    John 3\n    Kelly 3\n    Kelly 1\n    George 3\n    George 1\n    John 3\n    George 3\n    Kelly 1\n    ''') == 'George wins!'\n\nassert solution('''\n    4 10 13\n    Bob\n    Nina\n    Jess\n    Tim\n    Nina 2\n    Bob 2\n    Nina 1\n    Jess 3\n    Bob 2\n    Jess 2\n    Nina 1\n    Jess 2\n    Nina 3\n    Bob 1\n    Nina 3\n    Jess 3\n    Bob 2\n    ''') == 'Nina wins!'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nprint(solution(input()))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\nprint(solution(*[*map(int, input().split())]))\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n7 3 0 0 5 4\n''') == '2.0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('7 3 0 0 5 4') == '2.0'\nassert solution('6 0 0 2 7 6') == '2.0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n\"\"\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4816,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"7 3 0 0 5 4\") == \"2.0\"\nassert solution(\"6 0 0 2 7 6\") == \"2.0\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('6380943') == '0'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 32
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.read()\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n256\n''') == '0'\n\nassert solution('''\n8\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1', 'Smallest number is 1'\nassert solution('112') == '113', 'Smallest number is 113'\nassert solution('3330') == '0', 'Smallest number is 0'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == '5'\nassert solution('2') == '3'\nassert solution('3') == '3'\nassert solution('18') == '19'\nassert solution('6') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nprint('Check passed!')",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"147\") == \"165\"\nassert solution(\"1\") == \"0\"\nassert solution(\"123\") == \"0\"\nassert solution(\"8888\") == \"0\"\nassert solution(\"888\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4817,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('156') == '165'\nassert solution('330') == '0'\nassert solution('3300') == '0'\n\nprint(solution(input()))",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 4') == '2'\nassert solution('5 4') == '4'\nassert solution('10 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000''') == \"4\"\nassert solution('''5 4\n180000 185000 199999 100000\n199999 180000 170000 120000''') == \"3\"\nassert solution('''5 4\n80000 80000 80000 80000 80000''') == \"0\"\nassert solution('''4 4\n180000 185000 199999 100000\n199999 180000 170000 120000''') == \"3\"\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4') == '4'\nassert solution('4 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 4\n150000 100000 160000 100000 180000\n190000 170000 140000 160000\n''') == '4'\nassert solution('''\n6 4\n100000 100000 190000 180000 180000\n''') == '3'\nassert solution('''\n10 4\n1000000 100000 180000 100000 190000\n1000000 100000 180000 100000 190000\n100000 100000 180000 100000 190000\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 4\\n150000 100000 160000 100000 180000') == \"4\"\nassert solution('5 5\\n180000 185000 199999 100000\\n199999 180000 170000 120000') == \"3\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4') == '4'\nassert solution('4 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4') == '4'\nassert solution('4 4') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 4\\n'\n         '150000 100000 160000 100000 180000') == '4'\nassert solution('4 4\\n'\n         '180000 185000 199999 100000') == '3'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4818,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 4') == '4'\nassert solution('5 5') == '4'\nassert solution('6 3') == '3'\nassert solution('8 9') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '6'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '10'\nassert solution('2') == '1'\nassert solution('42') == '1'\nassert solution('84') == '1'\nassert solution('252') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"10\"\nassert solution(\"42\") == \"6\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\\n\") == \"10\"",
        "num_ids_2": 69,
        "num_ids_4": 69
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126\") == \"1\"",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10', \"Wrong\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1', \"Wrong\"\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10', \"Wrong\"\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1', \"Wrong\"\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10', \"Wrong\"\n",
        "num_ids_2": 82,
        "num_ids_4": 164
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '10'\nassert solution('1') == '1'\nassert solution('2') == '0'\nassert solution('42') == '1'\nassert solution('84') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('42\\n1') == '10'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '10'\nassert solution('42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '1'",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4819,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n42\\n84\\n252\\n420\\n840\\n126\\n42\\n84\\n420\\n126') == '10'\nprint('Congratulations! Your solution is correct!')",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 0') == 'yes'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'yes'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3') == 'yes'\nassert solution('1 0') == 'no'\nassert solution('1 1') == 'yes'\nassert solution('1 0') == 'no'\nassert solution('1 0') == 'no'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 0') == 'yes'\nassert solution('1 2') == 'no'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 1') == 'yes'\nassert solution('13 3') == 'no'\nprint(solution(input()))\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([3,1,2,3,1]) == \"yes\"\nassert solution([1,1,1,1,1]) == \"no\"\nassert solution([3,1,2,3,1]) == \"no\"\nassert solution([4,2,3,1]) == \"yes\"\nassert solution([8,1,1]) == \"yes\"\n",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"13 3\") == \"yes\"\nassert solution(\"1 0\") == \"yes\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([13, 3]) == \"yes\"\nassert solution([1, 0]) == \"yes\"\nprint(solution([13, 3]))\nprint(solution([1, 0]))\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4820,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('13 3') == 'yes'\nassert solution('1 0') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''P01K02H03H04\nP10K10P01K02H03H04''') == '12 12 11 13'\n\nassert solution('''H02H10P11H02\nH02H10P11H02''') == 'GRESKA'\n\nassert solution('''H02H10P11H02\nH02H10P11H02''') == 'GRESKA'",
        "num_ids_2": 28,
        "num_ids_4": 42
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''P01K02H03H04\nH02H10P11H02''') == '12 12 11 13'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"P01K02H03H04\") == \"12 12 11 13\"\nassert solution(\"H02H10P11H02\") == \"GRESKA\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13', \"Wrong!\"\nassert solution('H02H10P11H02') == 'GRESKA', \"Wrong!\"\n",
        "num_ids_2": 47,
        "num_ids_4": 47
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4821,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('P01K02H03H04') == '12 12 11 13'\nassert solution('H02H10P11H02') == 'GRESKA'\n\n## Solution",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 2') == '+-+..\\n|*|\\n+-+..'\nassert solution('3 5 3') == '+-+..\\n|*|\\n+-+..'\nassert solution('7 6 4') == '+-+..\\n|*|\\n+--+..\\n|*|\\n+--+..\\n|*.|\\n+--+..'\n\n'''",
        "num_ids_2": 48,
        "num_ids_4": 92
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('7 6 4') == '2'\nassert solution('3 5 3') == '1'\nassert solution('2 5 5') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3 5 3\") == \"1\", \"Simple Test Case\"\nassert solution(\"7 6 4\") == \"2\", \"Simple Test Case\"\nassert solution(\"1 2 3 4 5 6 7\") == \"8\", \"Simple Test Case\"\n",
        "num_ids_2": 34,
        "num_ids_4": 55
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n.*.*.''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*''') == '2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n*.*.''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*''') == '2'\nprint(solution('''7 7 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*'''))",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3 5 3\n.....\n.*.*.\n.....\n''') == '1'\nassert solution('''7 6 4\n......\n.*.*.*\n......\n.*.*..\n..*...\n..*...\n*....*\n''') == '2'\nassert solution('''10 20 10\n.**.\n.**.\n.**.\n...\n.....\n*.....\n''') == '0'\n\nprint(solution('''3 4 2\n...**.\n...**.\n*.*.*.\n'''))\n\nprint(solution('''5 8 3\n.**.*\n..*.\n*.*.*\n.***.\n*.*.*\n'''))\n\nprint(solution('''10 9 5\n...**.\n...**.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n*.*.*.\n'''))\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4822,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 5 3') == '1'\nassert solution('7 6 4') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\nAC AD AH AS KD\n\"\"\"\n) == \"4\"\nassert solution(\n\"\"\"\n2C 4D 4H 2D 2H\n\"\"\"\n) == \"3\"\nprint(\"all tests passed\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''AC AD AH AS KD\nSample Output 1:\n4\n\nSample Input 2:\n2C 4D 4H 2D 2H\nSample Output 2:\n3''') == \"3\"\n\nassert solution(\"\"\"2C 4D 4H 2D 2H\"\"\") == \"3\"\n\nassert solution(\"\"\"AC AD AH AS KD\nSample Output 1:\n4\n\nSample Input 2:\n2C 4D 4H 2D 2H\nSample Output 2:\n3\"\"\") == \"3\"\n",
        "num_ids_2": 32,
        "num_ids_4": 42
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\nprint('PASSED')\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == \"3\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('AC AD AH AS KD') == '4'\nassert solution('2C 4D 4H 2D 2H') == '3'\n\n'''\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4823,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"AC AD AH AS KD\") == \"4\"\nassert solution(\"2C 4D 4H 2D 2H\") == \"3\"\nprint('\"Run\" is good practice.')\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 2 1 1 0') == '7'\nassert solution('6 5') == '5'\nassert solution('4 4') == '7'\n",
        "num_ids_2": 26,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 1\") == \"5\"\nassert solution(\"6 5\") == \"5\"\nassert solution(\"6 6\") == \"7\"\nassert solution(\"6 5\") == \"7\"\nassert solution(\"6 5\") == \"7\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1''') == '5'\nassert solution('''7 1\n0 0 0 0 0''') == '7'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\\n\") == \"5\"\nassert solution(\"10 10\\n1 1 1 1 1 1 1\\n\") == \"37\"\nassert solution(\"3 3\\n1 1 1 1\\n\") == \"6\"\nassert solution(\"3 5\\n1 1 1 1 1\\n\") == \"7\"\nassert solution(\"4 4\\n0 0 0 0\\n\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 82
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6 5\\n2 1 1 1 0 1\") == \"5\"\nassert solution(\"5 1\\n0 0 0 0 0\") == \"7\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''7 1\n0 0 0 0 0\n''') == '7'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('6 5\\n2 1 1 1 0 1') == '5'\nassert solution('5 1\\n0 0 0 0 0') == '7'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 1\\n0 0 0 0 0') == '7'\nassert solution('6 5\\n2 1 1 1 0 1') == '5'",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4824,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''6 5\n2 1 1 1 0 1\n''') == '5'\nassert solution('''5 1\n0 0 0 0 0\n''') == '7'\nassert solution('''5 2\n0 0 0 0 0\n''') == '2'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('All your base are belong to us.') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n'\\'][\\'#|Z3(,|_|3[]\\[][]\\[]3\\'][\\'[-]?\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('a b c d e f g h i j k l m n o p q r s t u v w x y z') == '@1`~0|_|1 [email\u00a0protected]$2 @|
        "num_ids_2": 1244,
        "num_ids_4": 1244
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"All your base are belong to us.\") == \"@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ']['0 |_|$.\\n\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?\\n\"\n",
        "num_ids_2": 117,
        "num_ids_4": 117
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Hello World!') == '-3110 /\\/0|Z1|)!'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"Hello World!\") == \"$$&^|(%)#0123456789\\n@@&^|!#$%()*+,-./:;<=>?@[\\]^_`{|}~\"\nassert solution(\"What's the Frequency, Kenneth?\") == \"###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n###\\n",
        "num_ids_2": 1243,
        "num_ids_4": 1243
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nAll your base are belong to us.\n''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 '\nassert solution('''\nWhat's the Frequency, Kenneth?\n''') == '\\/\\/[-]@\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''What's the Frequency, Kenneth?''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6'\\\n                                                       '\\'][\\'$ \\'][\\'[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3\\'][' \\\n                                                       '[-]?''''",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''All your base are belong to us.\nWhat's the Frequency, Kenneth?''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 '''\"'''[-]@'][''$ ']['[-]3 #|Z3(,)|_|3[]\\[](`/, |<3[]\\[][]\\[]3']['[-]?'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"Hello World!\") == \"[-]3110 \\\\/\\/0|Z1|!\nassert solution(\"What's the Frequency, Kenneth?\") == \"\\/\\/[-]@'][''$ ']['[-]3 #|Z3(,|_|3[]\\[](`/|<3[]\\[][]\\[]3']['[-]?",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4825,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\nAll your base are belong to us.\n''') == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n'''))) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\[]6 ',' '.join(solution('''\nWhat's the Frequency, Kenneth?\n''')) == '@11 `/0|_||Z [email\u00a0protected]$3 @|Z3 8310[]\\",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"Bob\"\nassert solution(\"1\") == \"Alice\"\nprint(solution())\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == 'Bob'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n    2\n    1 2\n    ''') == 'Alice'\nassert solution('''\n    4\n    1 3 2 4\n    ''') == 'Bob'\nassert solution('''\n    8\n    1 2 3 4 5 6 7 8\n    ''') == 'Bob'\nassert solution('''\n    1000000000\n    1 2 3 4 5 6 7 8\n    ''') == 'Bob'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n') == 'Alice'\nassert solution('2\\n') == 'Bob'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4826,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nthis\\nhas\\nletters\\n') == 'this sentence has thirtyone letters', 'Solution is not correct'\nassert solution('7\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\\n') == 'thirty is the number of letters here', 'Solution is not correct'\nprint('Solution: OK')\n\n'''\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nthe\\nword\\nhas\\n$\\nletters') == 'this sentence has thirtyone letters'\nassert solution('7\\nis\\nthe\\nnumber\\nof\\nletters\\nhere') == 'thirty is the number of letters here'\nassert solution('3\\nblah\\nblah\\n17') == 'blah blah seventeen'\nassert solution('3\\nblah\\nblah\\n17\\n17') == 'blah blah seventeen seventeen'\nassert solution('3\\nblah\\nblah\\n17\\n17\\n17') == 'blah blah seventeen seventeen seventeen'\n\"\"\"\n",
        "num_ids_2": 64,
        "num_ids_4": 116
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"this sentence has thirtyone letters\") == \"this sentence has thirtyone letters\"\nassert solution(\"$\") == \"$\"\nassert solution(\"is\") == \"is\"\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 39
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nthis sentence has thirtyone letters\n$\nletters\n''') == 'this sentence has thirtyone letters'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\nthis\\nhas\\n$\\nletters\\n$\\n') == 'this sentence has thirtyone letters'\nassert solution('6\\n$\\n') == '$'\nassert solution('7\\n$\\nis\\nthe\\nnumber\\nof\\nletters\\nhere\\n') == 'thirty is the number of letters here'\nassert solution('1\\nthis\\n') == 'this'\nassert solution('2\\nis\\n') == 'is'\n",
        "num_ids_2": 47,
        "num_ids_4": 101
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == 'this sentence has thirtyone letters'\nassert solution('7') == 'thirty is the number of letters here'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\nprint(solution.__doc__)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'one'\nassert solution('2') == 'two'\nassert solution('3') == 'three'\nassert solution('4') == 'four'\nassert solution('5') == 'five'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nthis\nsentence\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\nassert solution('''\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4827,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\\\n5\nthis\nsentence\nhas\n$\nletters\n''') == 'this sentence has thirtyone letters', 'First'\nassert solution('''\\\n7\n$\nis\nthe\nnumber\nof\nletters\nhere\n''') == 'thirty is the number of letters here', 'Second'\n\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Abcd') == 0\nassert solution('EaEbFabG') == 5",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A,B,C\\nD,E,F,G\\nH\\n\") == '0'\nassert solution(\"A,B,C\\nD,E,F\\nG\\nH,I,J,K,L\\nM\\nN\\nO\\nP\\n\") == '5'\n",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == '1'\nassert solution('E') == '0'\nassert solution('abc') == '3'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 20,
        "num_ids_4": 45
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([\"Abcd\",\"EaEbFabG\"]) == \"5\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '0'\nassert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 21,
        "num_ids_4": 36
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''A\n\nb\n\nc\n\nb\n\nB''') == '0'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nC''') == '5'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nC''') == '5'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nC''') == '4'\n\nassert solution('''A\n\nb\n\nc\n\nb\n\nC''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('Abcd') == '0'\nassert solution('EaEbFabG') == '5'\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4828,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abcd') == '0'\nassert solution('EaEbFabG') == '5'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\nassert solution(\"5 2\") == \"Not a moose\"\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n20 10\n10 15\n15 30\n10 15\n''') == \"Odd 16\"\nassert solution('''\n30 20\n20 25\n25 35\n''') == \"Even 16\"\nassert solution('''\n0 0\n''') == \"Not a moose\"\nassert solution('''\n20 5\n5 10\n10 15\n''') == \"Odd 10\"\nassert solution('''\n20 15\n15 10\n10 20\n''') == \"Even 10\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\nassert solution(\"1 10\") == \"Not a moose\"\n\n-----Hints-----\nUse slicing to get the number of tines on each side.\n\"\"\"",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == 'Odd 6'\nassert solution('3 3') == 'Even 6'\nassert solution('3 3') == 'Even 6'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == 'Even 6'\nassert solution('3 3') == 'Odd 6'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4829,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 3\") == \"Odd 6\"\nassert solution(\"3 3\") == \"Even 6\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('tomo') == '1'\nassert solution('ja') == '2'\nassert solution('la') == '2'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"1\n\n2\n\n3\n\nabc",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '5'\nassert solution('6') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3') == '2', \"Wrong answer\"\nassert solution('2\\n4\\n8') == '4', \"Wrong answer\"\nassert solution('3\\n4\\n5') == '2', \"Wrong answer\"\nassert solution('4\\n5\\n6') == '4', \"Wrong answer\"\nassert solution('5\\n6\\n7') == '3', \"Wrong answer\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2', \"Wrong answer\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\ntomo\nmono\ndak\n6666\n''') == '2'\n\nassert solution('''\nja\nla\n52\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"4\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"0\") == \"0\"\nassert solution(\"99\") == \"0\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4830,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n2') == '2'\n\nassert solution('3\\nt1\\n2\\n') == '2'\n\nassert solution('4\\n1\\n3\\n') == '4'\n\nassert solution('5\\n1\\n2\\n3\\n') == '4'\n\nassert solution('6\\n3\\n4\\n') == '4'",
        "num_ids_2": 34,
        "num_ids_4": 73
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"A\") == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..\\n', 'First'\nassert solution(\"DOG\") == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..', 'Second'\n",
        "num_ids_2": 97,
        "num_ids_4": 97
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\nassert solution('ABCDEFGHIJKLMNOPQRSTUVWXYZ') == '.'*26\n",
        "num_ids_2": 29,
        "num_ids_4": 54
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('A') == '..#..\\n.#.#.\\n#.A.#\\n.#.#.\\n..#..'\nassert solution('DOG') == '..#...#...*..\\n.#.#.#.#.*.*.\\n#.D.#.O.*.G.*\\n.#.#.#.#.*.*.\\n..#...#...*..'",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n\n\"\"\"\nimport collections\nimport string",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('DOG') == '..#...#...*..'\nassert solution('A') == '..#..'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n'''",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A') == '..#..'\nassert solution('DOG') == '..#...#...*..'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4831,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"A\") == \"..#..\"\nassert solution(\"DOG\") == \"..#...#...*..\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"2.000000\"\nprint(solution(__import__('sys').stdin.read()))\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n''') == \"3.141593\"\nassert solution('''\n21\n''') == \"1385.442360\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"3.141593\"\nassert solution(\"21\") == \"1385.442360\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1\n2\n5\n''') == '3.141593\\n882.000000'\nassert solution('''21\n''') == '1385.442360'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '3.141593'\nassert solution('21') == '1385.442360'\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '3.141593'\nassert solution('21') == '1385.442360'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4832,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\\n\") == \"3.141593\"\nassert solution(\"21\\n\") == \"1385.442360\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4') == '0'\nassert solution('5') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n129 44 394 253 147\n''') == '2'\nassert solution('''8\n1\n1\n2\n2\n2\n2\n2\n''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 -2 3') == \"2\"\nassert solution('5 -4 -3 2 4') == \"1\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input) == '2'\nprint('Congratulations!')\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u044e solution(stdin), \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u043d\u0430 \u0432\u0445\u043e\u0434 \u0441\u0442\u0440\u043e\u043a\u0443 \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u0435\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c.\n\n\u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2014 \u0441\u0443\u043c\u043c\u0443 \u0432\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b.\n\n\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0412 \u044d\u0442\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435 \u043d\u0435\u043b\u044c\u0437\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 sort.\n\nSample Input 1:\n3\n1 -2 3\nSample Output 1:\n2\n\nSample Input 2:\n5\n129 44 394 253 147\nSample Output 2:\n0\n'''\n\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '2'\nassert solution('5') == '0'\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n1 -2 3') == '2'\nassert solution('5\\n129 44 394 253 147') == '0'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n-1 2 3\") == \"2\"\nassert solution(\"5\\n129 44 394 253 147\") == \"0\"\nprint('Congratulations! Your solution is correct.')\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n-50000 -2 3\n''') == '2'\nassert solution('''\n-1234 -2\n''') == '0'\nprint(\"You're all set!\")",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"1 -2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n129 44 394 253 147\n\"\"\") == \"0\"\nassert solution(\"\"\"\n-1 -2 3\n\"\"\") == \"3\"\nassert solution(\"\"\"\n-1 -2 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 14,
        "num_ids_4": 24
    },
    {
        "number": 4833,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '0'\nassert solution('3') == '2'\nassert solution('5') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '6'\nassert solution('3') == '8'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"3\") == \"8\"\nassert solution(\"3\") == \"10\"\nassert solution(\"3\") == \"12\"\nassert solution(\"3\") == \"14\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '10'\nassert solution('10') == '60'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"4\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3\\n2 2 2\\n') == '6'\nassert solution('3\\n4 1 2\\n') == '8'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3\\n2 2 2') == '6'\nassert solution('3\\n4 1 2') == '8'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n2 2 2\n''') == '6'\n\nassert solution('''\n3\n4 1 2\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4834,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '''\n    3\n    2 2 2\n    '''\n) == '6'\nprint(\"Congratulations! All test cases passed\")\n\nassert solution(\n    '''\n    3\n    4 1 2\n    '''\n) == '8'\nprint(\"Congratulations! All test cases passed\")\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''\n2 4 4\n1111\n1S01\n1011\n0L11\n''') == 'NOT POSSIBLE'\n\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"2 4 4\n1111\n1S01\n1011\n0U11\nSample Input 3:\n1 4 4\n111\n1S01\n1011\n0U11\nSample Output 3:\n2\n\"\"\") == \"2\"\nassert solution(\"\"\"1 4 4\n111\n1S01\n1011\n0U11\nSample Input 4:\n5 3 5\n1D1D1D1\n01S1S1S1\n1S1S1S1\n1S1S1S1\nSample Output 4:\n5\n\"\"\") == \"NOT POSSIBLE\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 4 4\\n1111\\n1S01\\n1011\\n0L11\\n\") == \"2\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2 4 4\n1111\n1S01\n1011\n0L11\n''') == '2'\nassert solution('''\n2 3 3\n1110\n010\n00\n''') == 'NOT POSSIBLE'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(input()) == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"\"\"\n2 4 4\n1111\n1S01\n1011\n0U11\n\"\"\"\n) == \"2\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 4 4\") == \"2\"\nassert solution(\"2 4 4\") == \"NOT POSSIBLE\"\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4 4\n1111\n1S01\n1011\n0U11\n''') == '2'\nassert solution('''2 4 4\n1111\n1S01\n1011\n0L11\n''') == 'NOT POSSIBLE'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4835,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\"\n) == \"2\"\nprint(solution(\n    \"2 4 4\\n1111\\n1S01\\n1011\\n0U11\\n\"\n))",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n4\n3 1 2 1 1\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n5\n3 1 2 1 1\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\nassert solution('5 20') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input_) == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 2 1 1\") == \"4\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"4\"\nassert solution(\"5 5\\n3 1 2 1 1\") == \"4\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5 5\n1 2 3 4 5\n''') == '4'\nassert solution('''7 5\n1 5 4 3 2 1 1\n''') == '3'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4836,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 5') == '4'\nassert solution('7 5') == '3'\nassert solution('10 20') == '3'\nassert solution('7 5') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '3'\nassert solution('5') == '10'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\nSSPPR\\n2\\nPPRRS\\nRRSSP') == '10'\nassert solution('10\\nSSSPS\\n2\\nPSPPP\\nRPPSP') == '15'\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\nSSRSS\n2\nPPPPP''') == '10'\nassert solution('''5\nSSRSS\n2\nPPPPP\nRPSSS''') == '15'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nS\\nP\\nR\\n') == '5'\nassert solution('2\\nP\\nR\\nS\\n') == '10'",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5\") == \"10\"\nassert solution(\"1\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2\nSSPPR\n1\nSSPPR''') == '5'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\") == \"\", \"Empty string\"\nassert solution(\"SSRSP\") == \"2\", \"Symbol tie\"\nassert solution(\"SSPPS\") == \"5\", \"Symbol tie\"\nassert solution(\"SSRPPR\") == \"8\", \"Symbol tie\"\nassert solution(\"SSPPRSP\") == \"10\", \"Symbol tie\"\n",
        "num_ids_2": 29,
        "num_ids_4": 63
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nSSPPR\n1\nSSPPR\n2\nPPRRS\nRRSSP\n''') == '10'\n\nassert solution('''10\nSSPPR\n1\nPPRRS\nRRSSP\nSSPPR\n''') == '15'\n\nassert solution('''4\nSSPPR\n1\nRRSSP\n2\nPPPRS\n''') == '5'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\nSSSPS') == '5'\nassert solution('5\\nSSSPS') == '10'\nassert solution('5\\nSSSPS') == '15'\nassert solution('5\\nSSPPR') == '5'\nassert solution('5\\nSSPPR') == '10'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4837,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '10'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n5\\n') =='still running'\nassert solution('2\\n4\\n6\\n') == '4'\nprint('all tests passed')\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2\") == \"4\"\nassert solution(\"5\") == \"still running\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '2'\nassert solution('4') == '3'\nassert solution('5') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n1\n7\n11\n\"\"\") == \"4\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n2\n5\n9\n10\n17\n''') == '4'\n\nassert solution('''\n5\n2\n5\n9\n10\n17\n''') =='still running'\n\nassert solution('''\n5\n2\n5\n9\n10\n17\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2') =='still running'\nassert solution('5\\n2') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n10\n''') =='still running'\nassert solution('''\n3\n7\n10\n''') =='still running'\nassert solution('''\n2\n7\n11\n''') == '4'\nassert solution('''\n5\n2\n5\n9\n10\n17\n''') =='still running'\nassert solution('''\n5\n2\n5\n9\n10\n17\n''') =='still running'\n\nprint('All Tests Passed!')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"3\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n7\\n11\") == \"4\"\nassert solution(\"2\\n5\\n9\\n10\\n17\") == \"still running\"\nassert solution(\"2\\n1\\n2\") == \"6\"\nassert solution(\"2\\n1\\n5\") == \"still running\"\nassert solution(\"1\\n1\\n1\") == \"0\"\n",
        "num_ids_2": 39,
        "num_ids_4": 72
    },
    {
        "number": 4838,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1\") == \"0\"\nassert solution(\"2\") == \"1\"\nassert solution(\"4\") == \"still running\"\nassert solution(\"5\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n6 1 3 2 2 3\n''') == '0.6'\nassert solution('''\n2 2\n''') == 'impossible'\nassert solution('''\n5 4 2 1 5 3\n''') == '1.0'\nassert solution('''\n3 4 1 2\n''') == '0.75'\nassert solution('''\n3 5 1 2\n''') == '0.75'\n''') == '0.75'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 2\n2 2\n3 1\n5 4\n4 3''') == 'impossible'\nassert solution('''4\n2 2\n2 2\n2 2\n2 2''') == '0.3333333333333333'\nprint('all tests passed')",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n3\n3 1 2 3\n2 2\n''') == 'impossible'\nassert solution('''\n5\n1 1 1 1 1\n1 1\n''') == '0.5'\nprint('Almost done! Go check your solution, you will know it! If it is hard to believe, keep trying and asking for help!')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6') == '0.6'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n6 1 3 2 2 3') == '0.6'\nassert solution('6\\n2 2') == 'impossible'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2 1\\n') == 'impossible'\nassert solution('3\\n2 2\\n') == '0.5'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n6 1 3 2 2 3') == '0.6'\nassert solution('2\\n2 2') == 'impossible'\n\nsolution('1\\n6 1 3 2 2 3') == '0.6'\nsolution('2\\n2 2') == 'impossible'\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n2 2\") == \"impossible\"\nassert solution(\"5\\n5 3 2 5 1\") == \"0.6\"\nassert solution(\"5\\n3 2 4 5 1\") == \"impossible\"\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"0.6\"\nassert solution(\"2\") == \"impossible\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4839,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6\n6 1 3 2 2 3\n''') == '0.6'\nassert solution('''\n4\n1 4\n''') == 'impossible'\nassert solution('''\n5\n10 1 10 1 10\n''') == '0.8'\n\nassert solution('''\n6\n6 1 3 2 2 3\n''') == '0.6'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4 1 4') == 'Emma'\nassert solution('1 8 1 8') == 'Tie'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(sample_input_1) == 'Emma'\nassert solution(sample_input_2) == 'Tie'\nassert solution(input) == 'Emma'\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 41
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 4 1 4\\n1 6 1 6\") == \"Emma\"\nassert solution(\"1 8 1 8\\n1 10 2 5\") == \"Tie\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4 1 4\") == \"Tie\"\nassert solution(\"1 6 1 6\") == \"Emma\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 4 1 4\\n1 6 1 6') == 'Emma'\nassert solution('1 8 1 8\\n1 10 2 5') == 'Tie'\nassert solution('1 2 5\\n1 3 2\\n1 2 2\\n1 1 1\\n1 1 1') == 'Tie'\nprint('All test cases passed!')\n",
        "num_ids_2": 40,
        "num_ids_4": 73
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Emma'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''\n3 4 1 4\n1 10 2 5\n''') == 'Emma'\nassert solution('''\n3 4 1 4\n1 6 1 6\n''') == 'Tie'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 4 1 4\n1 6 1 6''') == 'Emma'\nassert solution('''1 8 1 8\n1 10 2 5''') == 'Tie'\nassert solution('''1 2 1 3\n3 2 4''') == 'Gunnar'\nassert solution('''1 8 1 8\n1 10 2 5''') == 'Emma'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4840,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 4 1 4\n1 6 1 6\n''') == 'Emma'\nassert solution('''\n1 4 1 4\n1 10 2 5\n''') == 'Tie'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2 3 mumble 5\n1 2 3 mumble 7\n''') =='something is fishy'\nassert solution('''\n5\nmumble mumble mumble 7 mumble 8\n''') =='makes sense'\nassert solution('''\n5\n1 2 3 mumble 5\n1 2 3 mumble 7\n1 2 3 mumble 8\n''') =='something is fishy'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2 3\\nmumble 5\") == \"makes sense\"\nassert solution(\"1 2 3 mumble 5\") == \"something is fishy\"\nassert solution(\"1 2 3 mumble mumble 7 mumble 8\") == \"something is fishy\"\n",
        "num_ids_2": 35,
        "num_ids_4": 58
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 2 3 mumble 5\n''') =='makes sense', 'First'\nassert solution('''\n8\n1 2 3 mumble mumble 7 mumble 8\n''') =='something is fishy', 'Second'\n\n'''\n\nYou can find full example in \"test.py\"\n\n'''\n\nimport sys\nfrom typing import List\n\nclass Solution:\n    def solution(self, stdin: str) -> str:\n        lines: List[str] = stdin.strip().split('\\n')\n        res = []\n        for line in lines:\n            if line =='mumble':\n                continue\n            elif line == '':\n                continue\n            elif line =='makes sense':\n                res.append('makes sense')\n                continue\n            else:\n                num: int = int(line)\n                count: int = 0\n                while num > count:\n                    res.append(str(count))\n                    count += 1\n                res.append('makes sense')\n        return '\\n'.join(res)\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([\n    '1 2 3',\n    '1 2 3 mumble 5',\n    '1 2 3 mumble mumble 7 mumble 8'\n    ]) =='something is fishy'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5\\n1 2 3 mumble 5') =='makes sense'\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') =='something is fishy'\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '5\\n'\n    '1 2 3\\n'\n    'mumble\\n'\n    '5\\n'\n    '1 2 3\\n'\n    'mumble\\n'\n    '7 mumble 8'\n    ) =='something is fishy'\nassert solution(\n    '8\\n'\n    '1 2 3\\n'\n    'mumble\\n'\n    '5\\n'\n    '1 2 3\\n'\n    'mumble\\n'\n    '7 mumble 8'\n    ) =='makes sense'\nassert solution(\n    '4\\n'\n    '1\\n'\n    '2 3\\n'\n    '4\\n'\n    '5\\n'\n    '6\\n'\n    '7\\n'\n    '8\\n'\n    '9'\n    ) =='something is fishy'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n1 2 3 mumble 5') == \"makes sense\"\nassert solution('8\\n1 2 3 mumble mumble 7 mumble 8') == \"something is fishy\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(sys.stdin.read()) =='makes sense'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"makes sense\", \"One test case failed\"\nassert solution(\"8\") == \"something is fishy\", \"One test case failed\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4841,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 2 3 mumble 5''') =='makes sense', 'First'\nassert solution('''8 1 2 3 mumble 7 mumble 8''') =='something is fishy', 'Second'\nassert solution('''7 1 2 3 mumble 7 mumble 8''') =='something is fishy', 'Third'\nassert solution('''6 1 2 3 mumble 8 mumble 7 mumble 8''') =='something is fishy', 'Fourth'\nassert solution('''5 1 2 3 mumble 8 mumble 7 mumble 8''') =='something is fishy', 'Fifth'\n",
        "num_ids_2": 50,
        "num_ids_4": 109
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1 18\"\nassert solution() == \"2 121\"\n\n\"\"\"",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\nassert solution('5 3 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == \"1 18\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4 9 25 49 81\") == \"2 121\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 6 9 12 15') == '1 18'\nassert solution('4 9 25 49 81') == '2 121'\n\nfrom io import BytesIO\nfrom collections import Counter",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3 4 5') == '1 18'\nprint('ALL TEST CASES PASSED')\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4842,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    '5 3 6 9 12 15') == '1 18'\nassert solution(\n    '4 9 25 49 81') == '2 121'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 4\\n1 3\\n4 1\\n2 3\\n0 2') == \"CORRECT\"\nassert solution('3 3\\n1 2\\n4 2\\n2 1') == \"INCORRECT\"\nassert solution('6 3\\n1 4\\n5 3\\n4 0\\n2 1\\n3 2') == \"INCORRECT\"\nassert solution('7 7\\n1 1\\n5 5\\n6 6\\n5 4\\n2 4\\n4 3') == \"INCORRECT\"\n\n\"\"\"\n\nfrom typing import List\nimport sys",
        "num_ids_2": 53,
        "num_ids_4": 123
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3\n2 3\n1 1\n1 1\nSample Output 3:\nINCORRECT\n\"\"\") == \"INCORRECT\"\nassert solution(\"\"\"\n2\n0 0\n1 1\nSample Output 4:\nINCORRECT\n\"\"\") == \"INCORRECT\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == 'CORRECT'\nassert solution('8') == 'INCORRECT'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'INCORRECT'\nassert solution('''7\n3 1\n2 0\n4 6\n0 5\n6 7\n1 4\n5 2\nSample Output 3:\nCORRECT\n\nSample Input 4:\n6\n3 2\n1 5\n7 0\n8 4\n5 1\n2 6\nSample Output 4:\nCORRECT\n\nSample Input 5:\n6\n4 0\n2 7\n1 5\n6 3\n1 2\nSample Output 5:\nINCORRECT''') == 'CORRECT'''",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"CORRECT\"\nassert solution(\"1\") == \"INCORRECT\"\nassert solution(\"2\") == \"INCORRECT\"\nassert solution(\"3\") == \"INCORRECT\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 3\\n1 0\\n0 2\\n3 1\\n') == \"CORRECT\"\nassert solution('6 2\\n2 5\\n0 1\\n3 4\\n5 0\\n1 3\\n4 6\\n7 4\\n') == \"CORRECT\"\nassert solution('7 2\\n0 6\\n1 5\\n2 4\\n3 3\\n4 1\\n5 0\\n6 7\\n') == \"CORRECT\"\nassert solution('8 1\\n0 6\\n5 2\\n4 1\\n7 3\\n6 0\\n3 5\\n2 4\\n1 7\\n') == \"CORRECT\"\nassert solution('10 4\\n0 8\\n1 3\\n4 2\\n5 7\\n8 4\\n2 0\\n6 5\\n9 1\\n7 6\\n') == \"INCORRECT\"\n",
        "num_ids_2": 68,
        "num_ids_4": 156
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 5\\n6 2\\n3 1\\n5 0\\n4 6\\n0 3\\n2 7\\n7 4\\n') == \"CORRECT\"\nassert solution('4\\n2 3\\n1 0\\n0 2\\n3 1\\n') == \"INCORRECT\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")",
        "num_ids_2": 72,
        "num_ids_4": 72
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3\\n1 2\\n0 3\") == \"CORRECT\"\nassert solution(\"3\\n0 2\\n1 3\") == \"INCORRECT\"\nassert solution(\"4\\n0 2\\n3 1\\n1 0\") == \"INCORRECT\"\nassert solution(\"4\\n1 0\\n0 3\\n3 1\") == \"INCORRECT\"\nassert solution(\"4\\n2 4\\n3 1\\n1 0\") == \"CORRECT\"",
        "num_ids_2": 39,
        "num_ids_4": 87
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4') == 'INCORRECT'\nassert solution('3') == 'INCORRECT'\nassert solution('2') == 'INCORRECT'\nassert solution('1') == 'CORRECT'\nassert solution('0') == 'CORRECT'",
        "num_ids_2": 24,
        "num_ids_4": 47
    },
    {
        "number": 4843,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''8\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'CORRECT'\nassert solution('''5\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'INCORRECT'\nassert solution('''5\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'INCORRECT'\nassert solution('''5\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'INCORRECT'\nassert solution('''6\n1 5\n6 2\n3 1\n5 0\n4 6\n0 3\n2 7\n7 4''') == 'INCORRECT'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5\n0 1 1\n0 0 2\n1 2 0\n1 0 1\n1 2 3\n''') == '1 2 3 1 11'\nprint('solution() is ok')\n\n\n'''\n\nGiven an array of non-negative integers, divide the array into two subsets such that the difference between the sum of the two subsets is as small as possible. For example, given the array $arr = {1, 2, 3, 4}$, divide it in to two subsets, $A = {1, 2, 3}$ and $B = {4}$, such that the difference between the sums of $A$ and $B$ is as small as possible. In this case, $B$ is the subset with a smaller sum.\n\nWrite a function:",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '1 2 3 1 11'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n0 1 1\n1 0 1\n1 1 0\n''') == '1 1 1'\nassert solution('''\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n''') == '1 2 3 1 11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1 1 1'\nassert solution('5') == '1 2 3 1 11'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\n1 1 1\n1 0 1\n1 1 0\n1 0 1\n''') == '1 2 3 1 11', 'First example test case'\nassert solution('''\n4\n0 1 1\n1 0 1\n1 1 0\n1 0 1\n''') == '0 0 0 0 0', 'Second example test case'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"\"\"\n3\n0 1 1\n1 0 1\n1 1 0\n\"\"\") == \"1 1 1\"\nassert solution(\"\"\"\n5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0\n\"\"\") == \"1 2 3 1 11\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5\") == \"1 2 3 1 11\"\nassert solution(\"3\") == \"1 1 1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\n0 0 1 1 1\n0 0 2 0 2\n1 2 0 1 3\n1 0 1 0 1\n1 2 3 1 0''') == '1 2 3 1 11'\nprint('All tests passed!')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4844,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 1 1\\n1 0 1\\n1 1 0\\n1 2 3') == '1 2 3 1 11'\nassert solution('3\\n0 1 1\\n1 0 1\\n1 1 0') == '1 1 1'\n",
        "num_ids_2": 61,
        "num_ids_4": 61
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution([\"2 1\", \"3 1\"]) == \"Monday\"\nassert solution([\"17 1\", \"8 1\"]) == \"Tuesday\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 2\n1 1''') == 'Thursday'\nassert solution('''9 1\n1 1''') == 'Sunday'\nassert solution('''9 1\n11 1''') == 'Saturday'\nassert solution('''9 1\n12 1''') == 'Sunday'\nassert solution('''9 1\n1 12''') == 'Saturday'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 2\n1 1\n''') == 'Thursday'\nassert solution('''3 2\n17 1\n''') == 'Saturday'\nassert solution('''3 2\n17 1\n''') == 'Friday'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3 1\n1 1\n''') == 'Tuesday'\nassert solution('''1 1\n3 1\n''') == 'Thursday'\nassert solution('''17 1\n3 1\n''') == 'Saturday'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"Thursday\"\nassert solution(\"17 1\") == \"Saturday\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4845,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == 'Thursday'\nassert solution('17 1') == 'Saturday'\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('500') == '129'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n100\n4\n''') == '4'\nassert solution('''\n1\n500\n12\n''') == '129'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1\n100\n4\n''') == '4'\nassert solution('''\n1\n500\n12\n''') == '129'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n100\n4\n''') == '4'\n\nassert solution('''\n100\n500\n12\n''') == '129'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1\") == \"4\"\nassert solution(\"100\") == \"40\"\nassert solution(\"100\") == \"40\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '4'\nassert solution('100') == '40'\nassert solution('1000') == '129'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"100\") == \"4\"\nassert solution(\"500\") == \"40\"\nprint(solution(input()))\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1\n100\n4\n''') == '4'\nassert solution('''\n1\n100\n5\n''') == '129'\nassert solution('''\n100\n500\n12\n''') == '480'\nassert solution('''\n100\n500\n11\n''') == '129'\nassert solution('''\n100\n500\n15\n''') == '500'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4846,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('100') == '4'\nassert solution('500') == '40'\nassert solution('12') == '129'\nassert solution('1000') == '480'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('5 1') == '4.0'\nassert solution('3 2') == '6.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n''') == '4.0'\n\nassert solution('''\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n''') == '6.0'\n\nassert solution('''\n5 5\n5 5\n1 5\n2 5\n2 4\n2 3\n2 3\n2 2\n''') == '20.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 1') == '4.0'\nassert solution('3 2') == '6.0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\n5 1') == '4.0'\nassert solution('3 2\\n5 4\\n1 6\\n3') == '6.0'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"4.0\nassert solution(\"\"\"\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n\"\"\") == \"6.0\n\"\"\")\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n1 1\n5 1\n3 3\n4\n3 1\n3 2\n3 3\n3 4\n\"\"\") == \"4.0\"\nassert solution(\"\"\"\n3 2\n5 4\n1 6\n3\n2 4\n3 5\n4 3\n\"\"\") == \"6.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"4.0\"\nassert solution(\"3 2\") == \"6.0\"\nassert solution(\"3 3\") == \"4.0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4847,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n5 1\n5 4\n4 4\n\"\"\") == \"4.0\"\nassert solution(\"\"\"\n5 4\n3 3\n3 2\n3 3\n3 4\n4 3\n\"\"\") == \"6.0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '2'\nassert solution('30') == '7'\nassert solution('3') == '2'\nassert solution('50') == '7'\nassert solution('12') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"2\"\nassert solution(\"4\") == \"2\"\nassert solution(\"5\") == \"4\"\nassert solution(\"6\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '2'\nassert solution('3') == '2'\nassert solution('30') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == '1'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('30') == '7'\nprint('all tests passed')\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4848,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '2'\nassert solution('30') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('N-FBI1') == '1'\nassert solution('9A-USKOK') == '1'\nassert solution('I-NTERPOL') == '2'\nassert solution('G-MI6') == '3'\nassert solution('RF-KGB1') == '3'\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n\") == \"1\"\nassert solution(\"N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n\") == \"HE GOT AWAY!\"\nassert solution(\"\\n\") == \"HE GOT AWAY!\"\n",
        "num_ids_2": 93,
        "num_ids_4": 107
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1\\n'\nassert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI2\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '2\\n'\nassert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI2\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == 'HE GOT AWAY!\\n'\nassert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI2\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI3\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == 'HE GOT AWAY!\\n'\nassert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI2\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI3\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI4\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI5\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI6\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI7\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\nN-FBI8\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == 'HE GOT AWAY!\\n'\n",
        "num_ids_2": 124,
        "num_ids_4": 324
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1\\n') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1\\n') == 'HE GOT AWAY!'\n",
        "num_ids_2": 93,
        "num_ids_4": 93
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"1\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\nN-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n''') == '1'\n\nassert solution('''\nN-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n''') == 'HE GOT AWAY!'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('N-FBI1\\n9A-USKOK\\nI-NTERPOL\\nG-MI6\\nRF-KGB1') == '1'\nassert solution('N321-CIA\\nF3-B12I\\nF-BI-12\\nOVO-JE-CIA\\nKRIJUMCAR1') == 'HE GOT AWAY!'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\n\"\"\") == \"1\"\nassert solution(\"\"\"N-FBI1\n9A-USKOK\nI-NTERPOL\nG-MI6\nRF-KGB1\nF-BI-12\n\"\"\") == \"0\"\nassert solution(\"\"\"N321-CIA\nF3-B12I\nF-BI-12\nOVO-JE-CIA\nKRIJUMCAR1\n\"\"\") == \"HE GOT AWAY!\"\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"9A-USKOK\") == \"1\"\nassert solution(\"I-NTERPOL\") == \"2\"\nassert solution(\"G-MI6\") == \"1\"\nassert solution(\"RF-KGB1\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 55
    },
    {
        "number": 4849,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"N-FBI1\") == \"1\"\nassert solution(\"N321-CIA\") == \"1\"\nassert solution(\"N-FBI1\") == \"HE GOT AWAY!\"\nassert solution(\"N321-CIA\") == \"HE GOT AWAY!\"\nassert solution(\"N-FBI1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 58
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == '8.0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n3 4 5\\n4 5 6') == '8.0'\nassert solution('2\\n3 3 3\\n4 4 5') == '8.0'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '8.0'\nassert solution('3') == '6.843530573929037'\n\"\"\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2\\n3 3 3\\n4 5 4') == '8.0'\nassert solution('2\\n3 3 3\\n4 5 4') == '6.843530573929037'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3 3 3\n4 4 5\n''') == \"8.0\"\nassert solution('''\n1 2 3\n1 3 2\n''') == \"7.0\"\nassert solution('''\n2 1\n1 2\n''') == \"1.0\"\nassert solution('''\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31\n
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '8.0'\nassert solution('3') == '6.843530573929037'\n\n'''\nimport math\nfrom itertools import combinations",
        "num_ids_2": 22,
        "num_ids_4": 40
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n3 3 3\\n4 4 5\\n') == \"8.0\"\nassert solution('2\\n1 1 2\\n3 4 5\\n') == \"6.843530573929037\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n3 3 3\\n4 4 5\\n') == '8.0'\nassert solution('2\\n4 3 2\\n5 2 1\\n') == '6.843530573929037'\nassert solution('1\\n3 3 3\\n4 4 5\\n') == '10.0'\n",
        "num_ids_2": 54,
        "num_ids_4": 78
    },
    {
        "number": 4850,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '0.0'\nassert solution
        "num_ids_2": 1648,
        "num_ids_4": 1648
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1''') == '1'\nassert solution('''2''') == '2'\nassert solution('''3''') == '3'\nassert solution('''4''') == '4'\nassert solution('''5''') == '5'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"7\") == \"13\"\nassert solution(\"15\") == \"29\"\n\n\"\"\"\n\nn = int(input())\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n56\n''') == '57'\nassert solution('''\n19\n''') == '20'\nassert solution('''\n1\n''') == '2'\nassert solution('''\n10\n''') == '11'\nassert solution('''\n87\n''') == '88'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4') == '4'\nassert solution('25') == '27'\nassert solution('156') == '157'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '12'\nassert solution('17') == '19'\nassert solution('100001') == '10001'\nassert solution('100000') == '10001'",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('24') == '24'\nassert solution('25') == '27'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '4'\nassert solution('5') == '5'\nassert solution('8') == '8'\nassert solution('12') == '19'\nassert solution('24') == '24'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '5'\nassert solution('3') == '3'\nassert solution('9') == '9'\nassert solution('1') == '1'\nassert solution('9') == '9'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4851,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n24\n''') == '24'\n\nassert solution('''\n25\n''') == '27'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''1+2+3+4+5+6+7+8+9''') == '188'\nassert solution('''1+2+3+4+5+6+7+8+9+8+7''') == '376'\n\n'''",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"7\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(solution.__doc__) == \"7\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1+9+8+4') == '7'\nassert solution('1+2+3+4+5+6+7+8+9') == '188'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\nassert solution(\"1+2+3+4+5+6+7+8+9\") == \"188\"\nassert solution(\"1+2+3+4+5+6+7+8+9+1\") == \"201\"\n\"\"\"",
        "num_ids_2": 42,
        "num_ids_4": 70
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1+9+8+4\") == \"7\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4852,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1+9+8+4''') == '7'\nassert solution('''1+2+3+4+5+6+7+8+9''') == '188'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''1 5 2''') == '2 5'\nassert solution('''2 2 -4 5''') == '5 -2 4'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 5 2\n2 5''') == '2 5'\nassert solution('''1 1 2\n-1 1''') == '-1 -1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 2 3\n''') == '5 -2 4'\nassert solution('''\n1\n1\n''') == '2 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 5 2') == '2 5'\nassert solution('2 2 -4 5') == '5 -2 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 5 2\") == \"2 5\"\nassert solution(\"2 2 -4 5\") == \"5 -2 4\"\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4853,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1 5 2\n''') == '2 5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 2\n2 1 2 1 2\n''') == '2 2 1 1 2'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 2\\n2 1 2 1 2') == '2 2 2 1 1'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\n\n\"\"\"",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n2\n2 1 2\n\"\"\") == \"\"\"\n2 2 1\n\"\"\".strip()\nassert solution(\"\"\"\n10\n3 3 3 3 2 2 2 1 1 1 1\n\"\"\") == \"\"\"\n3 1 1 3 3 2 2 2\n\"\"\".strip()\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1 2 3'\nassert solution('5 2\\n2 1 2 1 2') == '2 1 2 1 2 2'\nassert solution('9 3\\n1 3 3 3 2 2 2 1 1') == '1 1 1 3 3 3 2 2 2'\nassert solution('10 4\\n5 3 2 2 2 1 1 1 1 2 2') == '1 1 1 1 2 2 2 2 3 3 2 4'\n",
        "num_ids_2": 41,
        "num_ids_4": 106
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n5 2\n2 1 2 1 2\n''') == '2 2 1 1 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2\") == \"2 2 2 1 1\"\nassert solution(\"9 3\") == \"1 1 1 3 3 3 2 2 2\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4854,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '2 2 2 1 1'\nassert solution('9 3') == '1 1 1 3 3 3 2 2 2'\nprint('all tests passed')",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('38 24') == '875'\nassert solution('1 100') == '100'\nprint('ALL TEST CASES PASSED')\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 1') == '1', \"Wrong result for sample case\"\nassert solution('38 24') == '875', \"Wrong result for sample case\"\nassert solution('1 100') == '100', \"Wrong result for sample case\"\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 57
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3 1\") == \"875\"\nassert solution(\"2 1\") == \"100\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"10 5\") == \"750\"\nassert solution(\"1 20\") == \"20\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 100') == '100'\nassert solution('38 24') == '875'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n38 24\n''') == '875'\nprint('Congratulations!')\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2') == '1'\nassert solution('1 100') == '100'\nassert solution('2 1') == '1'\nassert solution('2 100') == '100'\nassert solution('1 2 3') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 10\") == \"875\"\nassert solution(\"1 100\") == \"100\"\nassert solution(\"3 100\") == \"125\"\nassert solution(\"5 10\") == \"95\"\nassert solution(\"30 100\") == \"75\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''38 24\n1 100\n''') == '875'\nprint(solution('''1 100\n'''))",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 2') == '875'\nassert solution('1 100') == '100'\nassert solution('10 1') == '101'\nassert solution('100 1') == '100'\nassert solution('10 1') == '101'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4855,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8 5') == '875'\nassert solution('1 100') == '100'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('77 1 765') == '765 1 777'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\nprint('All test cases passed.')\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(__import__('sys').stdin.read()) == '437'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('734 893') == '437'\nassert solution('221 231') == '132'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4856,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"734 893\") == \"437\"\nassert solution(\"221 231\") == \"132\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 4\") == \"impera\"\nassert solution(\"10 11\") == \"impersu\"\n\"\"\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution([\"11 131\"]) == \"programming\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8 2') == '8'\nassert solution('9 2') == '8'\nassert solution('11 13') == 'programming'\nassert solution('11 4') == 'impossible'\nassert solution('13 5') == 'impossible'\n\"\"\"",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"11 131\") == \"programming\"\nassert solution(\"7 96\") == \"contest\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''31\n22\n16\n14\n17\n1\n19\n12\n3\n5\n2\n10\n7\n4\n8''') == 'contest'\n\nassert solution('''1\n1\n1\n1\n1\n1\n1\n1\n1\n1''') == 'programming'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input()) == 'programming'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7 96''') == 'contest'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n11 131\n''') == 'programming'\nassert solution('''\n7 96\n''') == 'contest'\nassert solution('''\n10 131\n''') == 'impossible'\nassert solution('''\n12 131\n''') == 'impossible'\nassert solution('''\n10 131\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4857,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 131') == 'programming'\nassert solution('7 96') == 'contest'",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\nSample Input 3:\n3 4 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABB\nBBABABABABAB\nBABABABABABA\nSample Output 3:\nBBABABABABABB\nBBABABABABAB\nBBABABABABAB\n'''\nassert solution('''3 2 'X'\nX^\n--\n\n.X\n--\n''') == '''.^\n--\n\nSample Input 4:\n4 2 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABB\nBBABABABABAB\nBABABABABABA\nSample Output 4:\nBBABABABABABB\nBBABABABABAB\nBBABABABABAB\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 2 \"X\"') == '.^'\nassert solution('3 12 \"A\"') == 'ABABABABABAC'\nassert solution('3 2 \"X\"') == 'ABABABABABAC'\n",
        "num_ids_2": 34,
        "num_ids_4": 54
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 2 'X'\nX^''') == '.^'\nassert solution('''3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == 'BBABABABABAB'\nassert solution('''5 5 'X'\nX^\n--\n\n.X\n--\nX^\nX^\nX^\nX^\n\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^\nX^",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\") == \"\"\".^\n--\n\"\"\"\nassert solution(\n\"\"\"3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n\"\"\"\n) == \"\"\"BBABABABABAC\nBBBABABABABA\nBBABABABABAB\n\"\"\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 'X'\") == '.^\\n--'\nassert solution(\"3 12 'A'\") == '.ABAABABABAC'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 2 'X'\nX^\n--\n\n.X\n--\n\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\n''') == 'BBABABABABAC\\nBBBABABABABA\\nBBABABABABAB\\n'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 2 'X'\") == \".^\"\nassert solution(\"3 12 'A'\") == \"BBABABABABAC\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2 'X'\") == \"X^\"\nassert solution(\"3 12 'A'\") == \"ABABABABABAC\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == stdin\n\nstdin = \"\"\"\n2 2 'X'\nX^\n--\n\n.X\n--\n\"\"\"\n\nprint(solution(stdin))\n\nstdin = \"\"\"\n3 12 'A'\nABABABABABAC\nBABABABABABB\nABABABABABAB\n\nBABABABABABA\nBBABABABABAB\nBABABABABABA\nSample Output 2:\nBBABABABABAC\nBBBABABABABA\nBBABABABABAB\n\"\"\"\n\nprint(solution(stdin))\n\nstdin = \"\"\"\n1 1 'A'\n\n--\n\n.X\n--\n\nSample Output 1:\n.^\n--\n\nSample Output 2:\n.^\n--\n\"\"\"\n\nprint(solution(stdin))\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4858,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 \"X\"') == '.X'\nassert solution('3 12 \"A\"') == 'BBABABABABAC'\nassert solution('1 2 \"A\"') == ''\n",
        "num_ids_2": 34,
        "num_ids_4": 46
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n'''\n2 4 4 14\n''') == '1 0 3\n\n'''\nSAMPLE INPUT\n\n3\n\nSAMPLE OUTPUT\n\n0 0 1\n1 1 1\n1 0 2\n1 1 2\n'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 4 4 14''') == \"1 0 3\"\nassert solution('''100 80 60 240''') == \"0 0 4\"\nassert solution('''5 0 1''') == \"0 0 1\"\nassert solution('''5 1 0''') == \"5 1 0\"\nassert solution('''7 0 0''') == \"0 0 0\"",
        "num_ids_2": 36,
        "num_ids_4": 70
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n\"\"\"\n\nb d c l\n4 4 4 14\n\"\"\"\n) == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\\n5 0 1\\n5 1 0\\n7 0 0\\n\"\n\n\"\"\"\n--- Day 4: Passport Processing ---\nYou arrive at the airport only to realize that you grabbed your North Pole Credentials instead of your passport. While these documents are extremely similar, North Pole Credentials aren\u2019t issued by a country and therefore aren\u2019t actually valid documentation for travel in most of the world.\n\nIt seems like you're not the only one having problems, though; a very long line has formed for the automatic passport scanners, and the delay could upset your travel itinerary.\n\nDue to some questionable network security, you realize you might be able to solve both of these problems at the same time.\n\nThe automatic passport scanners are slow because they're having trouble detecting which passports have all required fields. The expected fields are as follows:\n\nbyr (Birth Year)\niyr (Issue Year)\neyr (Expiration Year)\nhgt (Height)\nhcl (Hair Color)\necl (Eye Color)\npid (Passport ID)\ncid (Country ID)\nPassport data is validated in batch files (your puzzle input). Each passport is represented as a sequence of key:value pairs separated by spaces or newlines. Passports are separated by blank lines.\n\nHere is an example batch file containing four passports:\n\necl:gry pid:860033327 eyr:2020 hcl:#fffffd\nbyr:1937 iyr:2017 cid:147 hgt:183cm\n\niyr:2013 ecl:amb cid:350 eyr:2023 pid:028048884\nhcl:#cfa07d byr:1929\n\nhcl:#ae17e1 iyr:2013\neyr:2024\necl:brn pid:760753108 byr:1931\nhgt:179cm\n\nhcl:#cfa07d eyr:2025 pid:166559648\niyr:2011 ecl:brn hgt:59in\nThe first passport is valid - all eight fields are present. The second passport is invalid - it is missing hgt (the Height field).\n\nThe third passport is interesting; the only missing field is cid, so it looks like data from North Pole Credentials, not a passport at all! Surely, nobody would mind if you made the system temporarily ignore missing cid fields. Treat this \"passport\" as valid.\n\nThe fourth passport is missing two fields, cid and byr. Missing cid is fine, but missing any other field is not, so this passport is invalid.\n\nAccording to the above rules, your improved system would report 2 valid passports.\n\nCount the number of valid passports - those that have all required fields. Treat cid as optional. In your batch file, how many passports are valid?\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"2 4 4 14\") == \"1 0 3\"\nassert solution(\"100 80 60 240\") == \"0 0 4\"\nassert solution(\"2 5 2 4 8\") == \"1 1 2\"\nassert solution(\"100 3 6 7 5 8\") == \"2 2 1\"\nassert solution(\"2 5 3 5 6\") == \"impossible\"\n",
        "num_ids_2": 30,
        "num_ids_4": 63
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"3 4 4 14\") == \"1 0 3\\n1 1 2\\n1 2 1\\n1 3 0\"\nassert solution(\"100 80 60 240\") == \"0 0 4\\n0 3 0\\n1 1 1\\n1 2 1\\n1 3 0\\n3 0 2\\n3 1 1\\n3 2 0\"\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''2 4 4 14''') == '1 0 3'\nassert solution('''100 80 60 240''') == '0 0 4'\n'''\nimport math\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4859,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 4 4 14') == '1 0 3'\nassert solution('100 80 60 240') == '0 0 4'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n2\n4\n5\n7\n8\n9\n10\n11\n13\n''') == 'good job'\nassert solution('''\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n''') == '1, 3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36, 39, 42, 45, 48, 51, 54, 57, 60, 63, 66, 69, 72, 75, 78, 81, 84, 87, 90, 93, 96, 99, 102, 105, 108, 111, 114, 117, 120, 123, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 177, 180, 183, 186, 189, 192, 195, 198, 201, 204, 207, 210, 213, 216, 219, 222, 225, 228, 231, 234, 237, 240, 243, 246, 249, 252, 255, 258, 261, 264, 267, 270, 273, 276, 279, 282, 285, 288, 291, 294, 297, 300, 303, 306, 309, 312, 315, 318, 321, 324, 327, 330, 333, 336, 339, 342, 345, 348, 351, 354, 357, 360, 363, 366, 369, 372, 375, 378, 381, 384, 387, 390, 393, 396, 399, 402, 405, 408, 411, 414, 417, 420, 423, 426, 429, 432, 435, 438, 441, 444, 447, 450, 453, 456, 459, 462, 465, 468, 471, 474, 477, 480, 483, 486, 489, 492, 495, 498, 501, 506, 509, 512, 515, 518, 521, 524, 527, 530, 533, 536, 539, 542, 545, 548, 551, 554, 557, 560, 563, 566, 569, 572, 575, 578, 581, 584, 587, 590, 593, 596, 599, 600, 603, 606, 609, 612, 615, 618, 621, 624, 627, 630, 633, 636, 639, 642, 645, 648, 651, 654, 657, 660, 663, 666, 669, 670, 673, 676, 679, 680, 683, 686, 689, 692, 695, 698, 701, 704, 707, 710, 713, 716, 719, 722, 725, 728, 731, 734, 737, 740, 743, 746, 749, 752, 755, 758, 761, 764, 767, 770, 773, 776, 779, 782, 785, 788, 791, 794, 797, 800, 803, 806, 809, 812, 815, 818, 821, 824, 827, 830, 833, 836, 839, 842, 845, 848, 851, 854, 857, 860, 863, 866, 869, 872, 875, 878, 881, 884, 887, 890, 893, 896, 899, 902, 905, 908, 911, 914, 917, 920, 923, 926, 929, 932, 935, 938, 941, 944, 947, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001, 1004, 1007, 1010, 1013, 1016, 1019, 1022, 1025, 1028, 1031, 1034, 1037, 1040, 1043, 1046, 1049, 1052, 1055, 1058, 1061, 1064, 1067, 1070, 1073, 1076, 1079, 1082, 1085, 1088, 1091, 1094, 1097, 1100, 1103, 1106, 1109, 1112, 1115, 1118, 1121, 1124, 1127, 1130, 1133, 1136, 1139, 1142, 1145, 1148, 1151, 1154, 1157, 1160, 1163, 1166, 1169, 1172, 1175, 1178, 1181, 1184, 1187, 1190, 1193, 1196, 1199, 1202, 1205, 1208, 1211, 1214, 1217, 1220, 1223, 1226, 1229, 1232, 1235, 1238, 1241, 1244, 1247, 1250, 1253, 1256, 1259, 1262, 1265, 1268, 1271, 1274, 1277, 1280, 1283, 1286, 1289, 1292, 1295, 1298, 1301, 1304, 1307, 1310, 1313, 1316, 1319, 1322, 1325, 1328, 1331, 1334, 1337, 1340, 1343, 1346, 1349, 1352, 1355, 1358, 1361, 1364, 1367, 1370, 1373, 1376, 1379, 1382, 1385, 1388, 1391, 1394, 1397, 1400, 1403, 1406, 1409, 1412, 1415, 1418, 1421, 1424, 1427, 1430, 1433, 1436, 1439, 1442, 1445, 1448, 1451, 1454, 1457, 1460, 1463, 1466, 1469, 1472, 1475, 1478, 1481, 1484, 1487, 1490, 1493, 1496, 1499, 1502, 1505, 1508, 1511, 1514, 1517, 1520, 1523, 1526, 1529, 1532, 1535, 1538, 1541, 1544, 1547, 1550, 1553, 1556, 1559, 1562, 1565, 1568, 1571, 1574, 1577, 1580, 1583, 1586, 1589, 1592, 1595, 1598, 1601, 1604, 1607,",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"9\") == \"1\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"6\"\nassert solution(\"5\") == \"12\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8\n4\n5\n7\n8\n9\n10\n11\n13\n''') == '1 3 6 12'\nassert solution('''\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n13\n''') == '1 3 6 12'\nassert solution('''\n5\n2\n6\n6\n4\n2\n1\n''') == '1 3 6 12'\n\n'''\nExplanation:\n1) 8 is the first number.\n2) 4 is the second number.\n3) 5 is the third number.\n4) 6 is the fourth number.\n5) 6 is the fifth number.\n6) 6 is the sixth number.\n7) 6 is the seventh number.\n8) 6 is the eighth number.\n9) 6 is the ninth number.\n10) 6 is the tenth number.\n11) 6 is the eleventh number.\n12) 6 is the twelfth number.\n\n''') == '1 3 6 12'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"good job\"\nassert solution(\"2\") == \"3\"\nassert solution(\"4\") == \"5\"\nassert solution(\"5\") == \"6\"\nassert solution(\"7\") == \"8\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == 'good job'\nassert solution('1\\n2\\n3\\n') == '1\\n3\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '1\\n3\\n5\\n'",
        "num_ids_2": 34,
        "num_ids_4": 66
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\n') == '6'\nassert solution('5\\n') == '3'\nassert solution('8\\n') == '12'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n10\n5\n2\n''') == 'good job'\nassert solution('''\n3\n10\n7\n''') == '3, 6, 9, 12'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1 3 6 12'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('9\\n2\\n4\\n5\\n7\\n8\\n9\\n10\\n11\\n13') == '1\\n3\\n6\\n12\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10') == '1\\n3\\n6\\n12\\n'\nassert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11') == '1\\n3\\n6\\n12\\n'",
        "num_ids_2": 96,
        "num_ids_4": 147
    },
    {
        "number": 4860,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1, 2, 3'\nassert solution('6') == '1, 2, 3, 4, 5, 6'\nassert solution('8') == '1, 2, 3, 4, 5, 6, 7, 8'\nassert solution('9') == '1, 2, 3, 4, 5, 6, 7, 8, 9'",
        "num_ids_2": 24,
        "num_ids_4": 68
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\nassert solution('''\n10 1000000.1 10000000.1\n''') == '722725.723272725'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 8.9 40075000 272.1''') == '157079.04857106 15.598261092309'\nassert solution('''5 10.4 2.3''') == '11089.640281211'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10 8.9 40075000 272.1\n''') == '157079.04857106 15.598261092309'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\nassert solution(\"10 8.9 40075000 272.1\") == \"157079.04857106 15.598261092309\"\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 5.9 40075000 272.1') == '1099.1455333867862'\nassert solution('1 3.9 40075000 272.1') == '16.7766769195762'\n\"\"\"\n",
        "num_ids_2": 60,
        "num_ids_4": 86
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5\\n8.9 2.4\\n0.05\\n10\\n0.03') == '157079.0'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 7.7 40075000 272.1') == '157079.04857106 15.598261092309'\n",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\\n1000000\\n10\\n0.0075\\n\") == \"157079.04857106\"\nassert solution(\"10\\n1000000\\n10\\n0.0075\\n\") == \"157079.04857106\"\nassert solution(\"50\\n8000000\\n10\\n0.0075\\n\") == \"157079.04857106\"\n\"\"\"\nn, p, s, v = map(float, input().split())\nprint(s * (1 + 1/c))\n",
        "num_ids_2": 62,
        "num_ids_4": 93
    },
    {
        "number": 4861,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'\nassert solution('10 8.9 40075000 272.1') == '157079.04857106 15.598261092309'",
        "num_ids_2": 64,
        "num_ids_4": 64
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''2\n10\n10\n10\n10\n20\n20\n20\n20\n20\n20\n''') == '1'\nassert solution('''1\n10\n10\n10\n10\n20\n20\n20\n20\n20\n20\n''') == '0'\nassert solution('''4\n10\n10\n10\n10\n20\n20\n20\n20\n20\n''') == '1'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0'\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4') == '0'\nassert solution('3') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2') == '4'\nassert solution
        "num_ids_2": 1786,
        "num_ids_4": 1786
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'\nassert solution('3') == '4'\nassert solution('4') == '7'\nassert solution('5') == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '0'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == '2'\nassert solution('6') == '8'\nassert solution('20') == '32'\nassert solution('55') == '161'\nassert solution('101') == '373'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '0'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4862,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('3') == '1'\nassert solution('4') == '2'\nassert solution('5') == '3'\nassert solution('6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n    3\n    A\n    D\n    C\n    ''') == \"3\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == '3'\nassert solution('4\\nA\\nB\\nC\\nD') == '2'\nassert solution('4\\nB\\nA\\nC\\nD') == '2'\nassert solution('4\\nA\\nA\\nC\\nD') == '2'\nassert solution('4\\nA\\nB\\nC\\nA') == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4\\nA\\nA\\nA\\nA') == '3'\nassert solution('3\\nA\\nB\\nC\\n') == '1'\n'''",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''4\nA\nA\nA\nA''') == '3'\n\nassert solution('''4\nA\nB\nC\nD''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\n\nassert solution('2') == '2'\n\nassert solution('3') == '3'\n\nassert solution('4') == '3'\n\nassert solution('5') == '3'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"3\"\nassert solution(\"4\") == \"2\"\nassert solution(\"10\") == \"10\"\nassert solution(\"3\") == \"3\"\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4\nA\nA\nA\nA\nSample Input:\n5\nB\nA\nB\nD\nSample Output:\n1\n''') == '1'\n\nassert solution('''7\nB\nA\nB\nD\nC\nA\nB\nSample Input:\n7\nB\nA\nB\nD\nC\nA\nB\nSample Output:\n3\n''') == '3'\n\nassert solution('''7\nC\nA\nB\nD\nC\nA\nB\nSample Input:\n7\nC\nA\nB\nD\nC\nA\nB\nSample Output:\n3\n''') == '0'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"\n\n\"\"\"\nn = int(input())\n\nfor i in range(n):\n    a = input()\n    if a == 'A':\n        print('A')\n    elif a == 'B':\n        print('B')\n    elif a == 'C':\n        print('C')\n    elif a == 'D':\n        print('D')\n    else:\n        print(\"Invalid\")",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4863,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n'''\nA\nA\nA\nA\n''') == '3'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4 3 1 2\n.x.\nx.x\n.x.\nSample Output:\n..xx..\nxx..xx\n..xx..\n''') == '''..xx..\nxx..xx\n..xx..\n'''\n\nassert solution('''\n3 3 1 2\nx.x\nx.x\nx.x\nSample Output:\nx.xx\nxx.xx\nxx.xx\n''') == '''xx.xx\nxx.xx\nxx.xx\n'''\n\nassert solution('''\n3 3 1 2\nx.x\nx.x\nx.x\nSample Output:\nxx.xx\nxx.xx\nxx.xx\n''') == '''xx.xx\nxx.xx\nxx.xx\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 3 1 2') == '..xx..'\nassert solution('1 1 1 1') == 'x'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution([3, 3, 1, 2]) == \".x.\\nx.x\\n.x.\\n\"\n\"\"\"\n\n__author__ = \"josip enekut\"\n__email__ = \"s17269@stud.uni-leipzig.de\"\n__date__ = \"2017-02-08\"",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''3 3 1 2\n.x.\nx.x\n.x.''') == '..xx..'\n\nassert solution('''3 3 3 2\n.x.\nx.x\n.x.\nSample Input:\n2 2 4 4\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 2\nxx\n.x.\nxx\n''') == 'xx..xx'\n\nassert solution('''\n2 3\nxx\nxx\nxx\nxx\nxx\nxx\nxx\n''') == 'xx..xxxx'\n\nassert solution('''\n4 4\nxx\nxx\nxx\nxx\nxx\nxx\nxx\n''') == 'xx..xxxxxx'\n\nassert solution('''\n1 5\nxx\nxx\nxx\nxx\nxx\nxx\nxx\n''') == 'xx..xxxxxxxx'\n\nassert solution('''\n2 3\nxx\nxx\nxx\nxx\nxx\nxx\nxx\n''') == 'xx..xxxxxxxxxx'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 3 1 2\") == \"..xx..\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3 1 2\n.x.\nx.x\n.x.\nx.x\nxx.\nSample Output:\n..xx..\nxx..xx\n..xx..\nxx..xx\nxx..xx\n''') == 'x.xxx'\n\nSample Input:\n5 3 1 4\nx.xx\nx.xx\nx.xx\nxx.xx\nx.xx\nSample Output:\nx.xxx\nx.xxx\nx.xxx\nxx.xxx\nxx.xxx\n'''\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3 1 2') == '..xx..','sample test'\nassert solution('2 4 1 2') == 'x.x.x','sample test'\nassert solution('6 4 1 2') == 'x.x.x.','sample test'\nassert solution('3 1 1 2') == 'x.x','sample test'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 3 1 2') == 'x..x'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4864,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 3 1 2') == 'xxx'\nassert solution('4 2 2 3') == 'x.x.x.x'\nassert solution('1 2 2 3') == 'x.x.x.x'\nassert solution('2 2 1 2') == 'xx..x'\nassert solution('3 2 2 1') == 'xx..xx'\n",
        "num_ids_2": 32,
        "num_ids_4": 66
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('F 60 13 20') == '14 20'\nassert solution('B 60 13 20') == '13 20'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"F 20 50 14\") == \"16 20\"\n\n---Input---\n3\nF 60 13 20\nF 60 10 20\nF 20 50 14\n\n---Output---\n16 20\n16 20\n16 20\n\n---Input---\n2\nF 60 13 20\nB 60 10 20\n\n---Output---\n13 20\n13 20\n\"\"\"\nimport sys\nimport string",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\nF 60 13 20\n\"\"\") == \"\"\"14 20\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('F 60 13 20') == '14 20'\n\nThe input file is purposefully small to test the program, so be sure that it is runnable without errors.\n\n--- Part Two ---\nIn addition to clock adjustments, the planned days on which daylight saving time (DST) activates and deactivates, you're also given the option of extending the clock by an additional amount, $H$. For example, if $H = 30$ and DST is in effect on Tuesday, you could test the following clock:\n\n-- 00:00:00,     -- 00:30:00,       -- 01:00:00,       -- 01:30:00,       -- 02:00:00,       -- 02:30:00,       -- 03:00:00,\n-- 00:30:00,     -- 01:30:00,       -- 01:45:00,       -- 02:00:00,       -- 02:45:00,       -- 03:00:00,\n-- 01:45:00,     -- 02:00:00,       -- 02:45:00,       -- 03:00:00,       -- 03:30:00,       -- 04:00:00,\n-- 02:45:00,     -- 03:00:00,       -- 03:45:00,       -- 04:00:00,       -- 04:30:00,       -- 05:00:00,\n-- 03:45:00,     -- 04:00:00,       -- 04:45:00,       -- 05:00:00,       -- 05:30:00,       -- 06:00:00,\n-- 04:45:00,     -- 05:00:00,       -- 05:45:00,       -- 06:00:00,       -- 06:30:00,       -- 07:00:00,\n-- 05:45:00,     -- 06:00:00,       -- 06:45:00,       -- 07:00:00,       -- 07:30:00,       -- 08:00:00,\n-- 06:45:00,     -- 07:00:00,       -- 07:45:00,       -- 08:00:00,       -- 08:30:00,       -- 09:00:00,\n-- 07:45:00,     -- 08:00:00,       -- 08:45:00,       -- 09:00:00,       -- 09:30:00,       -- 10:00:00,\n-- 08:45:00,     -- 09:00:00,       -- 09:45:00,       -- 10:00:00,       -- 10:30:00,       -- 11:00:00,\n-- 09:45:00,     -- 10:00:00,       -- 10:45:00,       -- 11:00:00,       -- 11:30:00,       -- 12:00:00,\n-- 11:45:00,     -- 12:00:00,       -- 12:45:00,       -- 13:00:00,       -- 13:30:00,       -- 14:00:00,\n-- 12:45:00,     -- 13:00:00,       -- 13:45:00,       -- 14:00:00,       -- 14:30:00,       -- 15:00:00,\n-- 13:45:00,     -- 14:00:00,       -- 14:45:00,       -- 15:00:00,       -- 15:30:00,       -- 16:00:00,\n-- 14:45:00,     -- 15:00:00,       -- 15:45:00,       -- 16:00:00,       -- 16:30:00,       -- 17:00:00,\n-- 16:45:00,     -- 17:00:00,       -- 17:45:00,       -- 18:00:00,       -- 18:30:00,       -- 19:00:00,\n-- 17:45:00,     -- 18:00:00,       -- 18:45:00,       -- 19:00:00,       -- 19:30:00,       -- 20:00:00,\n-- 19:45:00,     -- 20:00:00,       -- 20:45:00,       -- 21:00:00,       -- 21:30:00,       -- 22:00:00,\n-- 21:45:00,     -- 22:00:00,       -- 22:45:00,       -- 23:00:00,       -- 23:30:00,       -- 00:00:01\n-- 00:00:01,\n\nIn the above example, adding an additional hour of clock time would increase the number of days on which daylight saving time (DST) activates by 1, so 1 day would pass, while 1 day would pass, and 1 day would pass.\n\nGiven the input from your puzzle input, determine how many days it takes to reach a given DST date. For example, given DST start date 3/9/2020 and DST end date 2/11/2020, the number of days would be 4.\n\n-- Input Format\nThe first line contains a single integer $N$ (1 <= N <= 500) indicating the number of test cases. Each test case begins with a single line containing four space-separated integers $D$, $H$, $M$ and $Y$ (0 <= D, H, M, Y <= 23, 59, 60, and 999,999,999 respectively), representing the DST start date, hour, minutes, and year respectively.\n\n-- Output Format\nFor each test case, output one line containing the number of days between the start date and the end date, separated by a single space.\n\n-- Sample Input\n2\n2\n3/8/2020 3 8 0\n4/1/2020 4 1 0\nSample Output\n2\n3\n4\nExplanation\nTest Case 1:\nStart date: March 8th, 2020\nEnd date: March 9th, 2020\nIn this case, it takes 1 day to activate DST.\n\nTest Case 2:\nStart date: April 1st, 2020\nEnd date: April 2nd, 2020\nIn this case, it takes 4 days to activate DST.\n\n-----Hints-----\nUsing math.ceil() to round up, math.floor() to round down, and +1 to indicate whether to increase or decrease the time by 1 hour.\n\nWe need to find the first DST date on which the clock changes. The first DST date is the first one in which the clock is more than 1 hour ahead or 1 hour behind the sun. If we want a date to be DST on this day, then we need to have more than 1 hour ahead or 1 hour behind the sun, so the day is the next one after that.\n\nFor example, if we are in DST on the day we want to find, we need to find the date at which the clock is exactly one hour ahead of the sun, and we also need to find the date at which the clock is exactly one hour behind the sun. We can do this by adding 1 to both of those numbers.\n\nWe need to find the first DST date on which the clock changes, so we need to find the first DST date on which the clock changes. Since we are looking for DST dates on the same day, we need to search the range of days, and check whether the",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"14 20\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('F 60 13 20') == '14 20'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nF 60 13 20\nF 60 -13 20\nB 60 -13 20\nB 60 13 20\nB 60 -13 20\n''') == '14 20'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"F 60 13 20\\n\"\n) == \"14 20\"\nassert solution(\n    \"B 60 13 20\\n\"\n) == \"13 20\"\nassert solution(\n    \"F 600 13 20\\n\"\n) == \"1320\"\nassert solution(\n    \"B 600 13 20\\n\"\n) == \"1320\"\nassert solution(\n    \"F 300 13 20\\n\"\n) == \"1320\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4865,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"F 60 13 20\") == \"14 20\"\nassert solution(\"B 60 13 20\") == \"13 20\"\nassert solution(\"F 60 13 30\") == \"13 30\"\nassert solution(\"B 60 13 30\") == \"13 30\"\nassert solution(\"F 60 13 50\") == \"13 50\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 31') == 'nope'\nassert solution('MAR 31') == 'nope'\n\n'''\n\nmonth_dict = {\n    'JAN': 31,\n    'FEB': 28,\n    'MAR': 31,\n    'APR': 30,\n    'MAY': 31,\n    'JUN': 30,\n    'JUL': 31,\n    'AUG': 31,\n    'SEP': 30,\n    'OCT': 31,\n    'NOV': 30,\n    'DEC': 31,\n    }\n\nline = stdin.split('\\n')\ndate = line[0]\nday_month = date.split(' ')\nday = day_month[0]\nmonth = day_month[1]",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''OCT 31''') == 'yup'\nassert solution('''FEB 27''') == 'nope'\nassert solution('''FEB 28''') == 'nope'\nassert solution('''FEB 29''') == 'nope'\n''')",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 31') == 'nope'\nassert solution('FEB 9') == 'yup'\nassert solution('FEB 1') == 'nope'\nassert solution('JAN 1') == 'nope'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('SEP 25') == 'nope'\n'''\n\ns = input()\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"yup\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('FEB 9') == 'yup'\nassert solution('JAN 9') == 'nope'\n\nprint(solution(input()))\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"yup\"\nassert solution(\"OCT 31\") == \"yup\"\nassert solution(\"FEB 9\") == \"yup\"\nassert solution(\"JAN 8\") == \"nope\"\nassert solution(\"MAR 12\") == \"nope\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('OCT 31') == 'yup'\nassert solution('JAN 29') == 'nope'\nassert solution('FEB 25') == 'yup'\nassert solution('FEB 29') == 'nope'\nassert solution('FEB 9') == 'yup'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"OCT 31\") == \"yup\"\nassert solution(\"JAN 3\") == \"nope\"\nassert solution(\"FEB 9\") == \"yup\"\nassert solution(\"DEC 25\") == \"yup\"\nassert solution(\"JAN 7\") == \"nope\"",
        "num_ids_2": 26,
        "num_ids_4": 51
    },
    {
        "number": 4866,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'yup'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 4\\n2 2 2 2\\nhoni\\noker\\nnera\\nirak\") == \"#.#.#.#.\\n.#.#.#.#\\n.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\"\n\n-------------------",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 4') == '#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#'\n",
        "num_ids_2": 62,
        "num_ids_4": 62
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n\"\"\") == \"\"\"#.#.#.#.\n.#.#.#.#\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input_string) == solution_test_cases[0]\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 4\") == \"#.#.#.#.\"\nassert solution(\"4 4\") == \"#.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\"\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4 4\n2 2 2 2\nhoni\noker\nnera\nirak\n''') == '#.#.#.#.\\n.honi#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#.\\n#.#.#.#.\\n#.#.#.#.'''\nassert solution('''\n4 3\n2 2 2 2\nhoni\nhoc\noker\nnera\nirak\n''') == '#.#.#.#.\\n.honi#.\\n#.hoc#.\\n#.oker#.\\n#.nera#.\\n#.irak#.\\n#.#.#.#.'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 3\\n2 2\\nhoni\\noker\\nnera\\nirak') == '#.#.#.#.\\n.honi#.\\n.#oker.#\\n.nera#.\\n.#irak.#\\n.#.#.#.#\\n#.#.#.#.#'",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 4\n2 2 2 2\nhoni\noker\nnera\nirak''') == '''#.#.#.#.\n.#.#.#.#\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"#\"\nassert solution(\"2\") == \"#\"\nassert solution(\"2 3\") == \"#.h\"\nassert solution(\"1 1\") == \"#h.h\"\nassert solution(\"3 3\") == \"#.h.h\"\n",
        "num_ids_2": 18,
        "num_ids_4": 43
    },
    {
        "number": 4867,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"4 4\\n2 2 2 2\") == \"#.#.#.#.\\n.#.#.#.#\\n#.honi#.\\n.#oker.#\\n#.nera#.\\n.#irak.#\\n#.#.#.#.\\n#.#.#.#.#\"\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+'''\n\n'''",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+' == solution('White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4')\nassert solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P:|...|:P:|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+' == solution('Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6')\n",
        "num_ids_2": 968,
        "num_ids_4": 968
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"White: Nc6, Ra8, Nc6, Bc8, Ng8, Nc6, a7, b7, c7, d7, e7, f7, h7, h6, a3, e4, c4, d4, f4, g4, h4, a6, b6, c6, d6, e6, f6, g6, h6, a8, b8, c8, d8, e8, f8, g8, h8, a9, b9, c9, d9, e9, f9, g9, h9, a10, b10, c10, d10, e10, f10, g10, h10, a11, b11, c11, d11, e11, f11, g11, h11, a12, b12, c12, d12, e12, f12, g12, h12, a13, b13, c13, d13, e13, f13, g13, h13, a14, b14, c14, d14, e14, f14, g14, h14, a15, b15, c15, d15, e15, f15, g15, h15, a16, b16, c16, d16, e16, f16, g16, h16, a17, b17, c17, d17, e17, f17, g17, h17, a18, b18, c18, d18, e18, f18, g18, h18, a19, b19, c19, d19, e19, f19, g19, h19, a20, b20, c20, d20, e20, f20, g20, h20, a21, b21, c21, d21, e21, f21, g21, h21, a22, b22, c22, d22, e22, f22, g22, h22, a23, b23, c23, d23, e23, f23, g23, h23, a24, b24, c24, d24, e24, f24, g24, h24, a25, b25, c25, d25, e25, f25, g25, h25, a26, b26, c26, d26, e26, f26, g26, h26, a27, b27, c27, d27, e27, f27, g27, h27, a28, b28, c28, d28, e28, f28, g28, h28, a29, b29, c29, d29, e29, f29, g29, h29, a30, b30, c30, d30, e30, f30, g30, h30, a31, b31, c31, d31, e31, f31, g31, h31, a32, b32, c32, d32, e32, f32, g32, h32, a33, b33, c33, d33, e33, f33, g33, h33, a34, b34, c34, d34, e34, f34, g34, h34, a35, b35, c35, d35, e35, f35, g35, h35, a36, b36, c36, d36, e36, f36, g36, h36, a37, b37, c37, d37, e37, f37, g37, h37, a38, b38, c38, d38, e38, f38, g38, h38, a39, b39, c39, d39, e39, f39, g39, h39, a40, b40, c40, d40, e40, f40, g40, h40, a41, b41, c41, d41, e41, f41, g41, h41, a42, b42, c42, d42, e42, f42, g42, h42, a43, b43, c43, d43, e43, f43, g43, h43, a44, b44, c44, d44, e44, f44, g44, h44, a45, b45, c45, d45, e45, f45, g45, h45, a46, b46, c46, d46, e46, f46, g46, h46, a47, b47, c47, d47, e47, f47, g47, h47, a48, b48, c48, d48, e48, f48, g48, h48, a49, b49, c49, d49, e49, f49, g49, h49, a50, b50, c50, d50, e50, f50, g50, h50, a51, b51, c51, d51, e51, f51, g51, h51, a52, b52, c52, d52, e52, f52, g52, h52, a53, b53, c53, d53, e53, f53, g53, h53, a54, b54, c54, d54, e54, f54, g54, h54, a55, b55, c55, d55, e55, f55, g55, h55, a56, b56, c56, d56, e56, f56, g56, h56, a57, b57, c57, d57, e57, f57, g57, h57, a58, b58, c58, d58, e58, f58, g58, h58, a59, b59, c59, d59, e59, f59, g59, h59, a60, b60, c60, d60, e60, f60, g60, h60,",
        "num_ids_2": 1422,
        "num_ids_4": 1422
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6''') == '+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:P.|:P:|...|:P:|:P.|:P:|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:P.|.P.|:P.|:P.|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|:R:|.N.|:B:|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\\nWhite: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6 Black: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4''')\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: +---+---+---+---+---+---+---+---+\\n+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p:|.p.|:p.|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:P.|:::|.P.|:P.|...|:P.|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|.P.|:::|.P.|:P.|...|:P.|.P.|:P.|\\n+---+---+---+---+---+---+---+---+\\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n+---+---+---+---+---+---+---+---+\"",
        "num_ids_2": 536,
        "num_ids_4": 536
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"",
        "num_ids_2": 216,
        "num_ids_4": 216
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input) == stdin\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: +---+---+---+---+---+---+---+---+\\nBlack: |:p:|.P.|:P.|.P.|:P.|:p.|:p.|:p.|\\n+---+---+---+---+---+---+---+---+\\n|:p:|.p.|:p.|.p.|:p.|.p.|:::|.p.|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|.n.|:::|...|:::|...|:p:|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\\n|...|:::|...|:::|...|:::|...|:::|\\n+---+---+---+---+---+---+---+---+\\n|:::|...|:::|...|:::|...|:::|...|\\n+---+---+---+---+---+---+---+---+\"\n",
        "num_ids_2": 408,
        "num_ids_4": 408
    },
    {
        "number": 4868,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\") == \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"Black: Kg8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\") == \"White: Kg1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\n",
        "num_ids_2": 216,
        "num_ids_4": 326
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 9.000000') == 'Need more materials!'\nassert solution
        "num_ids_2": 35,
        "num_ids_4": 1718
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5.000000 5.000000') == 'Diablo is happy!'\n\"\"\"\nimport math",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('5.000000 10.000000') == 'Need more materials!'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 3.000000') == 'Need more materials!'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('0.000000 0.000000') == 'Need more materials!'\nassert solution('3.000000 4.000000') == 'Need more materials!'\nassert solution('3.000000 2.000000') == 'Need more materials!'\n",
        "num_ids_2": 35,
        "num_ids_4": 69
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('0.1000000000000 1.000000000000') == \"Diablo is happy!\"\nprint(solution('0.1000000000000 1.000000000000'))\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.000000 4.000000\") == \"Diablo is happy!\"\nassert solution(\"0.000000 1.000000\") == \"Need more materials!\"\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == 'Need more materials!'\nassert solution('3.5') == 'Need more materials!'\nassert solution('1.5') == 'Need more materials!'\nassert solution('1.5') == 'Need more materials!'\nassert solution('2.5') == 'Need more materials!'\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.000000 4.000000') == 'Diablo is happy!'\nassert solution('1.000000 3.000000') == 'Need more materials!'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4869,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input()) == \"Diablo is happy!\"\nassert solution(input(\"\")) == \"Need more materials!\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10 1 10 2 1\\n\") == \"6\"\nassert solution(\"5 2 2\\n\") == \"2\"\nassert solution(\"3 4 4\\n\") == \"use the stairs\"\n",
        "num_ids_2": 30,
        "num_ids_4": 46
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 1 1 1 1 1 1 1') == 'use the stairs'\nassert solution('100 50 100 100 50 100 50') == 'use the stairs'\n",
        "num_ids_2": 34,
        "num_ids_4": 52
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('10 1 10 4 2') == 'use the stairs'\n\n\"\"\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('10 100 1 10 2 1') == 'use the stairs'\nassert solution('10 10 1 10 2 1') == 'use the stairs'\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 1 10 2 1') == '6'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('4 1 10 2 1') == 'use the stairs'\nassert solution('3 5 6 7') == 'use the stairs'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n1 2\\n2 2') == 'use the stairs'\n\nassert solution('5\\n1 3\\n3 4\\n4 5\\n5 2') == '4'\n\nassert solution('5\\n1 5\\n5 1\\n4 2\\n3 2') == 'use the stairs'\n\nassert solution('5\\n2 3\\n2 4\\n3 4\\n4 3') == 'use the stairs'\n\nassert solution('7\\n0 2\\n0 1\\n1 1\\n1 2\\n1 3\\n3 1\\n3 2') == 'use the stairs'",
        "num_ids_2": 46,
        "num_ids_4": 102
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 1 10 2 1') == '6'\nassert solution('1 1 1 1 1') == 'use the stairs'\nassert solution('3 1 10 5 1') == '7'\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3 5 8 1\") == \"7\"\nassert solution(\"10 1 10 2 1\") == \"6\"\nassert solution(\"1 5 5 1 2\") == \"use the stairs\"\n\n'''\n",
        "num_ids_2": 27,
        "num_ids_4": 43
    },
    {
        "number": 4870,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == 'use the stairs'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '2',\n    '500',\n    '120',\n    '75'\n    ) == '128.8'\n\nassert solution(\n    '3',\n    '500',\n    '120',\n    '75'\n    ) == '89.06666666666666'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\\n500\\n120\\n75\\n\") == '128.8'\nassert solution(\"2\\n400\\n100\\n0\\n\") == '89.0'\nassert solution(\"3\\n500\\n120\\n75\\n\") == '128.8'\nassert solution(\"4\\n400\\n100\\n0\\n\") == '89.0'\nassert solution(\"5\\n400\\n100\\n0\\n\") == '89.0'\n",
        "num_ids_2": 46,
        "num_ids_4": 92
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '128.8'\nassert solution('4') == '89.06666666666666'\nprint(solution(input()))\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n10\n125\n125\n125\n125\n125\n125\n125\n125\n125\n125\n125\n''') == \"128.80000000000000\"\nassert solution('''\n3\n500\n120\n75\nSample Output:\n89.06666666666666\n''') == \"89.06666666666666\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '128.8'\nassert solution('5') == '89.0'\nassert solution('20') == '89.0'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n500\\n120\\n75\\n\") == \"128.8\"\nassert solution(\"3\\n500\\n120\\n75\\n\") == \"89.06666666666666\"\nassert solution(\"10\\n200\\n1000\\n1200\\n2000\\n3000\\n4000\\n5000\\n6000\\n7000\\n8000\\n9000\\n10000\\n\") == \"13.720000000000006\"",
        "num_ids_2": 49,
        "num_ids_4": 104
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"128.8\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '128.8'\nassert solution('5') == '90.0'\nassert solution('10') == '88.8'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3\\n500\\n120\\n75') == '128.8'\nassert solution('4\\n600\\n200\\n50\\n150') == '85.0'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4871,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n500\n120\n75\n''') == '128.800000000000001'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '5\\n'\n    '1 45 65 84 346\\n'\n) == '4'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n1 45 65 84 346\\n') == '4'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n1 45 65 84 346') == \"4\"\nassert solution('1\\n0') == \"1\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('5') == '4'\nassert solution('5 4 4 4 4') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 34
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5\n1 45 65 84 346\n''') == '4', 'Should give 4'\nassert solution('''\n10\n
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '4'\nassert solution('2\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '2'\nassert solution('3\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '1'\nassert solution('4\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '0'\nassert solution('5\\n1 2\\n2 3\\n3 4\\n4 5\\n') == '1'",
        "num_ids_2": 56,
        "num_ids_4": 112
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4 1\\n5\\n4\\n') == '4'\nassert solution('3\\n3 2 1\\n2\\n1\\n') == '1'",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\n1 45 65 84 346\n''') == '4'\nassert solution('''6\n1 20 22 22\n''') == '2'\nassert solution('''6\n1 10 20 22\n''') == '1'\nassert solution('''5\n1 20 20 20 20\n''') == '1'\n'''\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"\") == \"0\"\nassert solution(\"5\\n1 45 65 84 346\") == \"4\"\nassert solution(\"5\\n1 45 65 84 346\\n5\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 56
    },
    {
        "number": 4872,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"4\"\nassert solution(\"1\") == \"0\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n3\\n'*10000) == '1000'\n\nassert solution('1\\n2\\n'*10000) == '955'\n\nassert solution('2\\n4\\n'*10000) == '955'\n\nassert solution('3\\n4\\n'*10000) == '101'",
        "num_ids_2": 37,
        "num_ids_4": 74
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n#######\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"1\"\nassert solution(\"\"\"\n7 4\n#######\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"1\"\nassert solution('''\n5\n#####\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 3') == \"1\"\nassert solution('2 3') == \"1\"\nassert solution('5 4') == \"3\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4873,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('7 4\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '1'\nassert solution('7 5\\n#######\\n#P.GTG#\\n#..TGG#\\n#######') == '0'\nassert solution('7 3\\n#######\\n#P.GTG#\\n#.TGG#\\n#######') == '1'\n",
        "num_ids_2": 68,
        "num_ids_4": 102
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5':\n    print('Success')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"13 50\\n\"\n    \"____$$$_______$$$______$$$________$$$______$$$____\\n\"\n    \"____$$$_______$$$______$$$________$$$______$$$____\\n\"\n    \"_____$_________$________$__________$________$_____\\n\"\n    \"___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\\n\"\n    \"__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\\n\"\n    \"_$____$$____$__$__$___$$____$___$__$__$___$$____$_\\n\"\n    \"$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\\n\"\n    \"_____$_$______$_$_____$_$_________$_$_____$_$_____\\n\"\n    \"____$___$____$___$____$___$______$___$____$___$___\\n\"\n    \"___$____$___$_____$___$____$____$_____$___$____$__\\n\"\n    \"__$_____$___$_____$___$_____$___$_____$___$_____$_\\n\"\n    \"__$_____$___$_____$___$_____$___$_____$___$_____$_\\n\"\n    \"_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\\n\"\n) == \"5\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13 50') == '5'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\nSample Input:\n13 50\n_____$$___$___$____$$___$____$___$____$___$___$___\n_____$_$$_____$_$$_____$_$$_____$_$$_____$_$$_____\n____$___$____$___$____$___$____$___$____$___$____$___\n__$____$___$____$___$____$____$___$____$___$____$__\n_$_____$$___$___$___$___$____$$___$___$___$____$$_\n__$_____$___$___$___$___$____$___$___$___$___$___$__\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\nSample Output:\n5\n''') == '5'\n\n\nprint(solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\nSample Input:\n13 50\n_____$$___$___$____$$___$____$___$____$___$___$___\n_____$_$$_____$_$$_____$_$$_____$_$$_____$_$$_____\n____$___$____$___$____$___$____$___$____$___$____$___\n__$____$___$____$___$____$____$___$____$___$____$__\n_$_____$$___$___$___$____$___$____$___$___$___$___$__\n__$_____$___$___$___$____$___$___$___$___$___$___$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\nSample Output:\n5\n'''))\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13 50') == '5'\n\n\"\"\"\n\nimport sys\nfrom collections import deque",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13 50') == '1'\nassert solution('50 50') == '2'\n'''\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"5\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''13 50\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$$____$___$__$__$___$$____$_\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '5'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n____$$$_______$$$______$$$________$$$______$$$____\n____$$$_______$$$______$$$________$$$______$$$____\n_____$_________$________$__________$________$_____\n___$_$_$_____$_$_$____$_$_$______$_$_$____$_$_$___\n__$__$_$____$__$__$___$_$__$____$__$__$___$_$__$__\n_$____$$____$__$__$___$_$____$___$__$__$___$_$__$__\n$_____$$___$___$___$__$$_____$_$___$___$__$$_____$\n_____$_$______$_$_____$_$_________$_$_____$_$_____\n____$___$____$___$____$___$______$___$____$___$___\n___$____$___$_____$___$____$____$_____$___$____$__\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n__$_____$___$_____$___$_____$___$_____$___$_____$_\n_$$_____$$_$$_____$$_$$_____$$_$$_____$$_$$_____$$\n''') == '10'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4874,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n10 10\n
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''anigay oday atinlay itay oray oray ekigay atinlay oray otay oray igay atinlay oray otay ayay oray ayay otay oday''') == 'iyay anigay otay oray oray otay oday atinlay oray otay ayay otay ayay otay oray otay oday atinlay otay oday ekigay atinlay otay otay otay ekigay atinlay otay otay otay igay atinlay otay otay oray oray otay oray oray otay atinlay otay otay otay oday oray otay oday ayay otay ayay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay oray otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay otay ot",
        "num_ids_2": 1624,
        "num_ids_4": 1624
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''a ab abc abca abcb abcc abcd abcdeg abcegh abcdef abcdefg abcdefghi\nabcdij abcdlj abcdmj abcdop abcdyj abcegj abcghlj abcgmnj abcmno abcnop\nabcnqrj abcnqpj abcnqrtj abcnrtj abctop abctujt abdghab tjbkqqj dxyhiz tjbkqp\ntjbkqrtj abcykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj\nabopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnv\nqkqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj\nabvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abou\nopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj\nabnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj\nabnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj\nabvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj\nabvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj\nabnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnv\nqkqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj\nabekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj\nabvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj\nabvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj\nabopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj\nabnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnv\nqkqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj\nabmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj\nabvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj\nabvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj abvqkqj abvqpj abvqrtj abvykqj abekqj abmnoqj abnuopqj abnvqkqj abnvqpj abnvqrtj abnyqj abopqj abouopqj",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'\nassert solution('or rather i dont speak pig latin') == 'or rather i dont speak pig latin'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"\nassert solution(\"this is a test\") == \"thay osyay isay ateh tay\"\nassert solution(\"pig latin is a game to play\") == \"igpay atinlay eayay\"\nassert solution(\"all the lemons were rotten\") == \"all the wayyay otay rottay yayay\"\nassert solution(\"the cat in the hat sat on the flat mat\") == \"theay atinlay yayay otay atay otay eayay yayay satyay atay satyay yayay onyay matyay\"\n\n---Input---\nSample Input 1:\nthis is a test\nSample Output 1:\nthisay isay ayatay atay\n\n---Input---\nSample Input 2:\npig latin is a game to play\nSample Output 2:\npiglay atinlay eayay\n\n---Input---\nSample Input 3:\nall the lemons were rotten\nSample Output 3:\nall the wayyay otay rottay yayay\n",
        "num_ids_2": 51,
        "num_ids_4": 103
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('i cant speak pig latin') == 'iyay antcay eakspay igpay atinlay'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''i cant speak pig latin\ni need a little help''') == 'iyay antcay eakspay igpay atinlay'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"i cant speak pig latin\") == \"iyay antcay eakspay igpay atinlay\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4875,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''i cant speak pig latin''') == 'iyay antcay eakspay igpay atinlay', 'Wrong output'\nassert solution('''i can speak pig latin''') == 'iyay antcay eakspay igpay atinlay', 'Wrong output'\nassert solution('''I can speak pig latin''') == 'iyay antcay eakspay igpay atinlay', 'Wrong output'\nassert solution('''I can speak pig latin I''') == 'iyay antcay eakspay igpay atinlay', 'Wrong output'\nassert solution('''I can speak pig latin I can speak pig latin''') == 'iyay antcay eakspay igpay atinlay', 'Wrong output'\n",
        "num_ids_2": 72,
        "num_ids_4": 145
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n\nassert solution('''\n3\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npunsch\n''') == 'Anywhere is fine I guess'\n\nassert solution('''\n5\n5\nq\npotatoes\nsalad\n3\nnymble\npancakes\npunsch\n''') == 'Anywhere is fine I guess'\n\nassert solution('''\n5\n5\nq\npotatoes\nsalad\n3\nnymble\npancakes\npunsch\n''') == 'Anywhere is fine I guess'\n\nassert solution('''\n6\n1\nq\npotatoes\nsalad\n3\nnymble\npancakes\npunsch\n''') == 'Anywhere is fine I guess'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == 'Anywhere is fine I guess'\nassert solution('2') == 'nymble'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2\\nq\\npotatoes') == 'nymble', \"First\"\nassert solution('2\\nnymble\\npotatoes') == 'anywhere is fine I guess', \"Second\"\nassert solution('2\\nanywhere is fine I guess\\nnymble\\npotatoes') == 'potatoes', \"Third\"\nassert solution('3\\nnymble\\nnymble\\nnymble') == 'anywhere is fine I guess', \"Fourth\"\nassert solution('1\\n') == 'Anywhere is fine I guess', \"Fifth\"\n",
        "num_ids_2": 47,
        "num_ids_4": 107
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nq\\n') == 'nymble'\nassert solution('2\\npotatoes\\n') == 'anywhere is fine I guess'\nassert solution('2\\nsalad\\n') == 'anywhere is fine I guess'\nassert solution('2\\nnymble\\n') == 'anywhere is fine I guess'\n\nprint(solution('''2\npotatoes\npancakes\npea soup\npunsch'''))\n",
        "num_ids_2": 37,
        "num_ids_4": 79
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2\n1\nq\npotatoes\nsalad\n2\nn\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\n\nassert solution('''3\n1\nq\npotatoes\nsalad\n2\nn\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'anywhere is fine I guess'\n\nassert solution('''2\n3\nq\npotatoes\nsalad\n2\nn\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'anywhere is fine I guess'\n\nassert solution('''5\n1\nq\npotatoes\nsalad\n2\nn\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'anywhere is fine I guess'\n\nassert solution('''5\n3\nq\npotatoes\nsalad\n2\nn\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'anywhere is fine I guess'",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n2\\nq\\npotatoes') == 'nymble'\nassert solution('2\\n3\\npea soup\\nsalad\\n3\\npunsch') == 'pea soup'\nassert solution('3\\n4\\nnymble\\nsalad\\n3\\npunsch') == 'punsch'\nassert solution('3\\n5\\nnymble\\npotatoes\\n3\\npunsch') == 'Anywhere is fine I guess'",
        "num_ids_2": 52,
        "num_ids_4": 115
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch''') == 'nymble'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\\nq\\npotatoes\") == \"nymble\"\nassert solution(\"2\\nq\\npancakes\") == \"anywhere is fine I guess\"\nassert solution(\"3\\nnymble\\npancakes\\npea soup\\npunsch\") == \"nymble\"\n",
        "num_ids_2": 40,
        "num_ids_4": 68
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == 'Anywhere is fine I guess'\nassert solution('2') == 'Anywhere is fine I guess'\n\"\"\"\n\ninput_str = input()\nn = int(input_str)\nmenus = []\nfor _ in range(n):\n    menus.append(input().strip())\nfor _ in range(n):\n    restaurant = input().strip()\n    list_of_item = []\n    for i in range(len(menus[0])):\n        if menus[0][i] in restaurant:\n            list_of_item.append(menus[0][i])\n    if len(list_of_item) > 1:\n        print(list_of_item[0])\n    else:\n        print('Anywhere is fine I guess')\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4876,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n2\nq\npotatoes\nsalad\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'nymble'\nassert solution('''\n2\nq\nsalad\npotatoes\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\nq\nsalad\npotatoes\n3\nnymble\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\nq\nsalad\npotatoes\n3\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\nassert solution('''\n2\nq\nsalad\npotatoes\n3\npancakes\npea soup\npunsch\n''') == 'Anywhere is fine I guess'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 0 15') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('10 2 3') == '5'\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 0 15\") == \"3\"\nassert solution(\"0 0 0\") == \"0\"\nassert solution(\"0 5 0\") == \"1\"\nassert solution(\"0 1 0\") == \"2\"\nassert solution(\"0 2 0\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 5\") == \"3\"\nassert solution(\"5 0 15\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n'''\n5 0 15\n''') == '3'\nassert solution(\n'''\n10 0 15\n''') == '4'\nassert solution(\n'''\n100 0 15\n''') == '4'\nassert solution(\n'''\n99999999 0 15\n''') == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 0 15\\n') == '3'\nassert solution('1 0 8\\n') == '8'\nassert solution('0 0 8\\n') == '8'\nassert solution('0 0 0\\n') == '0'\nassert solution('0 0 0\\n') == '0'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 0 15''') == '3'\nassert solution('''10 0 15''') == '4'\n'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 1 2') == '2'\nassert solution('1 2 3') == '3'\nassert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 5') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4877,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 0 15') == '3'\nassert solution('5 0 17') == '1'\nassert solution('5 0 16') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"11 15\") == \"19\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('15 3') == '19'\nassert solution('11 15') == '19'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"11 15\") == \"19\"\nassert solution(\"4 5\") == \"8\"\nassert solution(\"-5 -10\") == \"-5\"",
        "num_ids_2": 22,
        "num_ids_4": 35
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''10\n1\n''') == '9'\nassert solution('''20\n1\n''') == '19'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5') == '6', \"Wrong!\"\n\"\"\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 10\") == \"5\", \"Should be 5\"\nassert solution(\"12 13\") == \"15\", \"Should be 15\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11 15') == '19'\nassert solution('1 1') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('11 15') == '19'\nassert solution('-1 9') == '9'\nassert solution('-15 -1') == '1'",
        "num_ids_2": 23,
        "num_ids_4": 36
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('11 15') == '19'\n\n---Input\n13 5\n\n--Output\n\n10\n\n\"\"\"\n\nimport sys\n\nr1, s = [int(x) for x in sys.stdin.readline().split()]\n\nr2 = r1 - s",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4878,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('11 15') == '19'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"Yes\"\nassert solution(\"North\") == \"No\"\nassert solution(\"West\") == \"Yes\"\nassert solution(\"North East South\") == \"Yes\"\nassert solution(\"North West South East\") == \"Yes\"\n",
        "num_ids_2": 18,
        "num_ids_4": 40
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'Yes'\nassert solution(input) == 'Yes'\nassert solution(input) == 'Yes'\n",
        "num_ids_2": 18,
        "num_ids_4": 28
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('North West East') == 'Yes'\nassert solution('North West East North') == 'Yes'\nassert solution('North East South') == 'No'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North East') == 'No'\nassert solution('North East South West') == 'Yes'\nassert solution('North East South East') == 'No'\nassert solution('North South East') == 'Yes'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''North\nSouth\nEast''') == 'Yes'\nassert solution('''North\nSouth\nEast''') == 'No'\nassert solution('''North\nWest\nEast''') == 'Yes'\nassert solution('''North\nEast\nWest''') == 'No'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"North South East\") == \"Yes\"\nassert solution(\"North South East North West\") == \"Yes\"\nassert solution(\"North South East South West\") == \"Yes\"\nassert solution(\"North South East North East\") == \"Yes\"\nassert solution(\"North South East South East\") == \"Yes\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North West East') == 'No'\nassert solution('North East South') == 'No'\nassert solution('North East South East') == 'Yes'\nassert solution('North East South South East') == 'Yes'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('South West East') == 'Yes'\nassert solution('North West East') == 'No'\nassert solution('North East West') == 'No'\n\n--Input:--\nSouth West East\nNorth West East\nNorth East West\n--Output:--\nYes\nNo\nNo\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"North West South East\") == \"Yes\"\nassert solution(\"North East South West\") == \"No\"\nprint('Test passed')\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4879,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"North East\") == \"Yes\", \"South East\"\nassert solution(\"North West\") == \"Yes\", \"North West\"\nassert solution(\"North South\") == \"Yes\", \"North South\"\nassert solution(\"North East\") == \"No\", \"North East\"\nassert solution(\"North West\") == \"No\", \"North West\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 16 \\n again \\n pirpumsemoystoal') =='marywasnosyagain'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 16') =='marywasnosyagain'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal\n''') =='marywasnosyagain'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''5 16\nagain\npirpumse\nm''') =='marywasnosyagain'\n\nassert solution('''8 9\nae\nhgfdljn'\nm''') == 'amfgjdflt'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 16\\npirpumsemoystoal\\n') =='marywasnosyagain'\n\n\nSample Input 2:\n5 18\nnemuzozmoymoyn\nmoymoyn\nSample Output 2:\nmoynwaszmoymoyn\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"5 16\nagain\npirpumse\n\n\"\"\") == \"marywasnosyagain\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 4\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\nassert solution(\"6 9\\nagain\\npirpumsemoystoal\") == \"marywasnosyagain\"\n\"\"\"\n\nfrom math import gcd\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 16\nagain\npirpumsemoystoal''') == \"marywasnosyagain\"\nassert solution('''5 21\ndipirupamseoal\nmultilaytodol''') == \"dltoalpimlambaytodol\"\nassert solution('''7 7\nmaiyarapmtgdnayrpq\namqcifarghnopzryt''') == \"maiyarapmnqcifarghnopzryt\"\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() =='marywasnosyagain'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4880,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 16 \\nagain\\npirpumsemoystoal\\n') =='marywasnosyagain'\n\nassert solution('5 16 \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1580,
        "num_ids_4": 1580
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(1) == 'Either'\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n10\n12\n15\n13\n11\n10\n7\n''') == 'Either'\n\n\"\"\"\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"Even\"\nassert solution(\"9\") == \"Odd\"\nassert solution(\"7\") == \"Either\"\nassert solution(\"4\") == \"Even\"\nassert solution(\"9\") == \"Odd\"\n\"\"\"\nimport itertools",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'\n",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"Odd\"\nassert solution(\"5\") == \"Odd\"\nassert solution(\"9\") == \"Even\"\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5') == \"Odd\"\nassert solution('6') == \"Even\"\nassert solution('7') == \"Odd\"\nassert solution('8') == \"Even\"\n\n[exec(f\"assert {i} == {'Even' if i % 2 == 0 else 'Odd'}\") for i in range(1, 10)]\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == 'Even'\nassert solution('5') == 'Odd'\nassert solution('10') == 'Either'\n\"\"\"\n\nn = int(input())",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'Even'\nassert solution('2') == 'Odd'\nassert solution('3') == 'Either'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'Odd'\nassert solution('2') == 'Even'\nassert solution('4') == 'Odd'\n'''",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4881,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__(\"sys\").stdin.readline()) == \"Either\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"314\") == \"3\"\nassert solution(\"5926\") == \"4\"\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"314\") == \"3\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5926\") == \"4\"\nassert solution(\"5\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5\\n314\\n1\\n5926\\n5\\n35897') == '3'\nassert solution('5\\n1') == '1'\nassert solution('5\\n1\\n11\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20') == '6'\n",
        "num_ids_2": 41,
        "num_ids_4": 114
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n314\n1\n5926\n5\n35897\n''') == '3'\nassert solution('''\n2\n28\n1\n9\n5\n35897\n''') == '4'\nassert solution('''\n2\n55\n1\n5926\n5\n35897\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n5\n314\n1\n5926\n5\n35897\n\"\"\") == \"3\"\nassert solution(\"\"\"\n7\n27\n4\n0\n10\n5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n10000\n10\n5\n\"\"\") == \"4\"\nassert solution(\"\"\"\n15\n1010\n1\n5\n\"\"\") == \"3\"\nassert solution(\"\"\"\n10000\n10000\n10\n5\n\"\"\") == \"4\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\\\n5\n314\n1\n5926\n5\n35897\n''') == '3'\nassert solution('''\\\n2\n8\n1\n5\n''') == '1'\nassert solution('''\\\n7\n4\n3\n5\n8\n10\n7\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '3'\nassert solution('1') == '1'\nassert solution('5926') == '4'\nassert solution('5') == '1'\nassert solution('35897') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n10\n314\n1\n5926\n5\n35897\n\"\"\") == \"3\"\n\nassert solution(\"\"\"\n5\n314\n1\n5926\n5\n35897\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10\n327\n1\n878\n5\n69999\n\"\"\") == \"3\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n314\n1\n5926\n5\n35897\n''') == '3'\nassert solution('''\n100\n314\n1\n5926\n5\n35897\n''') == '1'\nassert solution('''\n9000\n314\n1\n5926\n5\n35897\n''') == '4'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4882,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"10\") == \"1\"\nassert solution(\"14\") == \"2\"\nassert solution(\"9\") == \"1\"\nassert solution(\"10\") == \"4\"\n\nsolution()\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == 'yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'yes'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('9 5\\nct\\nicr\\nk p\\noco c\\nreo t\\nte f\\ntho h\\nwep we\\ncan th\\nwork pe\\nmoue p\\nitof\\nout t\\n') == 'yes\\nno\\nno\\nyes\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\nno\\",
        "num_ids_2": 1331,
        "num_ids_4": 1331
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('9 5\\nc t\\ni r\\k p\\no c\\r o\\t e\\t f\\th u\\tw p\\twe we\\tc an\\t out the\\t work people\\tit of\\t out t\\t\\n') == 'yes'\nassert solution('9 5\\nt c\\n\\ti r\\n\\tk p\\no c\\r o\\t e\\t f\\th u\\tw p\\twe we\\tc an\\t out the\\t work people\\tit of\\t out t\\t\\n') == 'no'\nassert solution('9 5\\nc t\\n\\ti r\\n\\tk p\\no c\\r o\\t e\\t f\\th u\\tw p\\twe we\\tc an\\t out the\\t work people\\tit of\\t out t\\t\\n') == 'yes'\n",
        "num_ids_2": 134,
        "num_ids_4": 203
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the\n''') == 'yes\\nno\\nno\\nyes\\nyes\\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"yes\"\n\nassert solution(\"3 1\\nc c\\nc c\\n\") == \"yes\"\nassert solution(\"6 1\\nc c\\nk p\\nk p\\nr o\\nk o\\nk o\\nk o\\nk o\\nk o\\nk o\\nk o\\nk o\\nk o\\nk o\\nk o\\n\") == \"no\"\nassert solution(\"1 1\\nc c\\n\") == \"yes\"\nassert solution(\"5 1\\nc c\\nt r\\nc o\\n\") == \"yes\"\n",
        "num_ids_2": 27,
        "num_ids_4": 114
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''4 1\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'yes'\n\nassert solution('''9 1\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'no'\n\nassert solution('''11 1\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'no'\n\nassert solution('''5 1\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'no'\n\nassert solution('''5 1\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'no'",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''9 5\nc t\ni r\nk p\no c\nr o\nt e\nt f\nu h\nw p\nwe we\ncan the\nwork people\nit of\nout the''') == 'yes'\nassert solution('''2 1\ni p\ni f''') == 'no'\nassert solution('''2 2\nf i\ni t''') == 'no'\nassert solution('''10 3\ni s\np e\ng d\nk i\nc a\nt l\ne n\na t\nt s\nh i\nt h\ne l\nd r\n''') == 'yes'\nassert solution('''20 10\ni s\np e\ng d\nk i\nc a\nt l\ne n\na t\nt s\nh i\nt h\ne l\nd r\ni p\ng d\nk i\nc a\nt l\ne n\na t\nt s\nh i\nt h\ne l\nd r\n''') == 'no'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 1\") == \"yes\", \"Sample Test 1 Failed\"\nassert solution(\"2 1\") == \"no\", \"Sample Test 1 Failed\"\nassert solution(\"5 2\") == \"no\", \"Sample Test 1 Failed\"\nassert solution(\"9 3\") == \"no\", \"Sample Test 1 Failed\"\nassert solution(\"1 3\") == \"no\", \"Sample Test 1 Failed\"\n",
        "num_ids_2": 34,
        "num_ids_4": 68
    },
    {
        "number": 4883,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('9 5') == 'yes'\nassert solution('c t') == 'no'\nassert solution('i r') == 'no'\nassert solution('k p') == 'yes'\nassert solution('o c') == 'yes'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    3\n    carrots?\n    bunnies\n    carrots?\n    huffle-puffs\n    carrots?\n    carrots?\n    ''') == '1'\n\nassert solution('''\n    5\n    carrots?\n    bunnies\n    carrots?\n    carrots?\n    huffle-puffs\n    carrots?\n    carrots?\n    ''') == '1'\n\nassert solution('''\n    6\n    carrots?\n    bunnies\n    carrots?\n    carrots?\n    carrots?\n    carrots?\n    huffle-puffs\n    carrots?\n    carrots?\n    carrots?\n    carrots?\n    carrots?\n    ''') == '4'\n\nassert solution('''\n    5\n    carrots?\n    bunnies\n    carrots?\n    carrots?\n    huffle-puffs\n    carrots?\n    carrots?\n    carrots?\n    carrots?\n    carrots?\n    ''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\ncarrots') == '1'\nassert solution('1\\nbunnies') == '1'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n2\ncarrots?\nbunnies\n\"\"\") == \"1\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 1\\ncarrots?\\nbunnies\\n') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1\\ncarrots?\\nbunnies') == '1'\nassert solution('1 5\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies') == '5'\nassert solution('1 4\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies\\ncarrots?\\nbunnies') == '0'\n",
        "num_ids_2": 58,
        "num_ids_4": 105
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"1 1\") == \"1\"\nassert solution(\"2 3\") == \"3\"\nassert solution(\"4 5\") == \"9\"",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1\\ncarrots?') == '1'\nassert solution('2 2\\ncarrots?\\nbunnies?') == '2'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\n''') == '1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2 1\ncarrots?\nbunnies\n''') == '1'\nassert solution('''\n3 10\ncarrots?\nbunnies?\nbunnies?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncarrots?\ncar",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4884,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3 1\\ncarrots?\\nbunnies\\n') == '1'\nassert solution('10 1\\ncarrots?\\nbunnies\\nfish-pond\\n') == '8'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,a4,h4,a5,i4,a6,i5,a7,j4,a8,j5,a9,i6,a10,i7,a8,k4,a9,l4,a10,m4,a11,i4,m4,a12,l4,i5,a13,m5,i6,a14,m6,i7,a15,m7,i8,a9,m8,i9,a10,m9,i10,a11,m10,i11,a12,m12,i13,a14,m13,i15,a15,m16,i16,a17,m17,a18,m18\" == solution(\"+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\")\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,a4,h4,a5,i4,a6,i5,a7,j4,a8,j5,a9,i6,a10,i7,a8,k4,a9,l4,a10,m4,a11,i4,m4,a12,l4,i5,a13,m5,i6,a14,m6,i7,a15,m7,i8,a9,m8,i9,a10,m9,i10,a11,m10,i11,a12,m12,i13,a14,m13,i15,a15,m16,i16,a17,m17,a18,m18\" == solution(\"+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+\")\n",
        "num_ids_2": 684,
        "num_ids_4": 684
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|...|:::|.n.|:::|...|:::|...|:p:|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:::|...|:::|...|:::|...|:::|...|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|...|:::|...|:::|...|:::|...|:::|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:P.|.P.|:P.|.P.|:P.|.P.|:P.|.P.|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n\"\n    \"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\n\"\n    \"Black: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n)\n\nassert solution(\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|...|:::|.n.|:::|...|:::|...|:p:|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:::|...|:::|...|:::|...|:::|...|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|...|:::|...|:::|...|:::|...|:::|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:P.|.P.|:P.|.P.|:P.|.P.|:P.|.P.|\\n\"\n    \"+---+---+---+---+---+---+---+---+\\n\"\n    \"|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\\n\"\n    \"+---+",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Kb1,Qb1,Rb1,Rb2,Rb3,Ra1,Ra2,Ra3,Ra4,Ra5,Ra6,Ra7,Ra8,Rb1,Rb2,Rb3,Rb4,Rb5,Rb6,Rb7,Rb8,Rc1,Rc2,Rc3,Rc4,Rc5,Rc6,Rc7,Rc8,Rf1,Rf2,Rf3,Rf4,Rf5,Rf6,Rf7,Rf8,Rh1,Rh2,Rh3,Rh4,Rh5,Rh6,Rh7,Rh8,Ri1,Ri2,Ri3,Ri4,Ri5,Ri6,Ri7,Ri8,Rj1,Rj2,Rj3,Rj4,Rj5,Rj6,Rj7,Rj8,Rk1,Rk2,Rk3,Rk4,Rk5,Rk6,Rk7,Rk8,Rn1,Rn2,Rn3,Rn4,Rn5,Rn6,Rn7,Rn8\")\n\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\n\nassert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Kd8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 457,
        "num_ids_4": 623
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == 'White: K1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: K8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6'\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == \"White: Kd1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution('|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|') == \"White: Rc1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution('|:p:|.p.|:p:|.p.|:p:|.p.|:p:|') == \"White: Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,Pb1,Pc1,Pd1,Pe1,Pe1,Pf1,Pg1,Pg1,Ph1,Pk1,P",
        "num_ids_2": 166,
        "num_ids_4": 936
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4,Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 124,
        "num_ids_4": 124
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('+---+---+---+---+---+---+---+---+') == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\"\n",
        "num_ids_2": 127,
        "num_ids_4": 127
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\") == \"White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\"\nassert solution(\"|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\") == \"White: Rc1,Rd1,Rf1,Ke1,Qc1,Qd1,Qf1,Kc1,Kd1,Kf1,Nc1,Nd1,Nf1\"\n",
        "num_ids_2": 166,
        "num_ids_4": 166
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|..|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\nSample Input:\n+---+---+---+---+---+---+---+---+\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\n+---+---+---+---+---+---+---+---+\n|:p:|.p.|:p:|.p.|:p:|.p.|:::|.p.|\n+---+---+---+---+---+---+---+---+\n|...|:::|.n.|:::|...|:::|...|:p:|\n+---+---+---+---+---+---+---+---+\n|:::|...|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|...|:::|...|:::|...|:::|...|:::|\n+---+---+---+---+---+---+---+---+\n|:P.|..|:::|...|:::|...|:::|...|\n+---+---+---+---+---+---+---+---+\n|.P.|:::|.P.|:P:|...|:P:|.P.|:P:|\n+---+---+---+---+---+---+---+---+\n|:R.|.N.|:B.|.Q.|:K.|.B.|:::|.R.|\n+---+---+---+---+---+---+---+---+\nSample Output:\nWhite: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\nBlack: Ke8,Qd8,Ra8,Rh8,Bc8,Ng8,Nc6,a7,b7,c7,d7,e7,f7,h7,h6\n''') == 'White: Ke1,Qd1,Ra1,Rh1,Bc1,Bf1,Nb1,a2,c2,d2,f2,g2,h2,a3,e4\\nBlack: Ke",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4885,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"+---+---+---+---+---+---+---+---+\\n|.r.|:::|.b.|:q:|.k.|:::|.n.|:r:|\\n+---+---+---+---+---+---+---+---+\") == \"White: Kd2,Qd3,Rd4,Rb4,Nd4,Nf4,Nf5,a3,c3,d3,f3,g3,h3,a4,e4\\nBlack: Kd8,Qd8,Rd8,Rb8,Nd8,Nf8,Nf6,a7,b7,c7,d7,e7,f7,h7,h6\"",
        "num_ids_2": 185,
        "num_ids_4": 185
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2') == 'Your wish is granted!'\nassert solution('9 3') == 'You will become a flying monkey!'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''8 3\n1 4 5''') == 'Your wish is granted!'\nassert solution('''8 3\n1 2 3 4 5''') == 'You will become a flying monkey!'\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 4') == 'Your wish is granted!'\nassert solution('8 3') == 'You will become a flying monkey!'\n'''",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"1 2\") == \"You will become a flying monkey!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n8 3\n1 5\n4 6\n1 6\n3 4\n6 2\n7 7\n2 2\n''') == 'Your wish is granted!','solution'\n\nassert solution('''\n8 3\n1 5\n1 2\n1 6\n4 6\n4 2\n6 2\n7 7\n2 2\n''') == 'You will become a flying monkey!','solution'\n\nassert solution('''\n8 5\n1 5\n3 2\n4 6\n5 6\n7 5\n6 2\n6 2\n8 2\n7 6\n''') == 'Your wish is granted!','solution'\n\nassert solution('''\n8 4\n1 6\n1 3\n2 6\n1 5\n3 5\n3 4\n4 3\n5 6\n''') == 'Your wish is granted!','solution'\n\nassert solution('''\n8 4\n1 6\n1 3\n3 5\n1 4\n2 6\n3 5\n5 4\n''') == 'You will become a flying monkey!','solution'\n\"\"\"\n\nn, k = map(int, input().split())\n\na = list(map(int, input().split()))",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('5 2') == 'You will become a flying monkey!'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 3') == 'Your wish is granted!'\nassert solution('8 9') == 'Your wish is granted!'\nassert solution('8 10') == 'Your wish is granted!'\nassert solution('5 5') == 'Your wish is granted!'\nassert solution('5 8') == 'Your wish is granted!'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('8 3') == \"Your wish is granted!\"\nassert solution('3 2') == \"You will become a flying monkey!\"\nassert solution('2 2') == \"Your wish is granted!\"\nassert solution('2 1') == \"You will become a flying monkey!\"\nassert solution('8 1') == \"You will become a flying monkey!\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3 3\n3 7\n7 1\n''') == 'Your wish is granted!'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4886,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"8 3\") == \"Your wish is granted!\"\nassert solution(\"2 3\") == \"You will become a flying monkey!\"",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '1.592029'\nassert solution('20') == '1.398512'\nassert solution('10') == '1.5'\n",
        "num_ids_2": 28,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('16') == '16'\nassert solution('-16') == '16'\nassert solution('123') == '123'\nassert solution('1.5') == '1.5'\nassert solution('0.5') == '0.5'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"2.0\"\nassert solution(\"16\") == \"7.0\"\nassert solution(\"18\") == \"8.0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('16') == '16'\n\n\"\"\"\n\nclass TestSolution:\n\n    def test_solution(self):\n        assert solution('16') == '16'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10') == '10'\nassert solution('16') == '16'\nassert solution('8.88') == '24'\nassert solution('0.12') == '12'\nassert solution('1.2') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('16') == '16'\nassert solution('1') == '1'\nassert solution('15') == '15'\nassert solution('0') == '0'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n20\n''') == \"16\"\nassert solution('''\n4\n''') == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('16') == '16'\nassert solution('1000000') == '16'\n",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"2.5\"\nassert solution(\"10\") == \"5\"\nassert solution(\"100\") == \"10\"\nassert solution(\"1000000\") == \"1\"\nassert solution(\"100000000\") == \"1\"",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4887,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('16') == '16'\nassert solution('0') == '0'\nassert solution('123456') == '123456'\nassert solution('1') == '1'\nassert solution('1.123456789') == '1.123456789'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input) == \"4\"\nassert solution([6, 180, 45, 30, 55, 20, 80, 20]) == \"4\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nassert solution('''\n6 100\n0 0 0 0 0 0\n''') == '6'\nassert solution('''\n5 150\n1 2 3 4 5\n''') == '5'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('6 180\\n45 30 55 20 80 20') == \"4\"\nassert solution('5 3\\n2 9 6 7 10') == \"3\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\n\nassert solution('''\n5 20\n45 40 20 20 40\n''') == '3'\n\nassert solution('''\n5 50\n15 25 35 55 20\n''') == '4'\n\nassert solution('''\n6 180\n30 45 55 20 80 20\n''') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(r'''\n6 180\n45 30 55 20 80 20\n''') == '4'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 180\\n45 30 55 20 80 20\") == \"4\"",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n180') == '1'\nassert solution('1\\n180') == '0'\n'''",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '1'\nassert solution('5 5') == '1'\nassert solution('7 6') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 180\n45 30 55 20 80 20''') == '4', 'Should be 4'\n'''\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4888,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n6 180\n45 30 55 20 80 20\n''') == '4'\nassert solution('''\n6 180\n30 45 55 20 80 20\n''') == '3'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('4\\n21\\n34\\n18\\n9') == '79'\nassert solution('10\\n120\\n150\\n100\\n170\\n180') == '1660'\nassert solution('2\\n20\\n30') == '32'\n'''\n\nn = int(input())\nrods = []\nfor i in range(n):\n    rods.append(int(input()))\nrods.sort(reverse=True)\nfor rod in rods:\n    total = 0\n    for i in range(n-1):\n        total += rod\n        rods[i] -= 1\n    total += rods.pop()\n    print(total)",
        "num_ids_2": 48,
        "num_ids_4": 64
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2') == '41'\nassert solution('4') == '82'\nassert solution('2') == '41'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '79'\nprint('Wow! Your code works like a charm!')",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2') == '3'\nassert solution('1\\n3') == '6'\nassert solution('1\\n4') == '8'\nassert solution('5\\n6') == '10'\nassert solution('5\\n10') == '15'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n2') == '3\\n'\nassert solution('1\\n3') == '5\\n'\nassert solution('2\\n3') == '5\\n'\nassert solution('3\\n4') == '5\\n'\nassert solution('4\\n5') == '10\\n'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2\n21\n34\n''') == '79'\nassert solution('''\n5\n21\n34\n20\n15\n9\n''') == '124'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\n21\n34\n18\n9\n''') == '79'\n\nassert solution('''\n3\n1\n1\n1\n''') == '1'\n\nassert solution('''\n3\n18\n2\n4\n''') == '16'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''2\n21\n34\n18\n9\n''') == '79'\nassert solution('''3\n21\n34\n18\n9\n''') == '79'\nassert solution('''4\n21\n34\n18\n9\n''') == '89'\nassert solution('''5\n21\n34\n18\n9\n''') == '94'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n1\n\"\"\") == \"2\"\n\nassert solution(\"\"\"\n4\n100\n100\n100\n100\n\"\"\") == \"104\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4889,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2\\n2\\n3\\n2') == '3'\nassert solution('4\\n12\\n6\\n8') == '24'\nassert solution('5\\n1\\n2\\n3\\n3\\n2\\n1') == '4'\n",
        "num_ids_2": 38,
        "num_ids_4": 66
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 3 0') == '2 3 0'\nassert solution('5 3 3 4') == '4 1 1 2'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 2 5 4\\n1 1 2 3\\n3 4 5 6') == '2 3 0'\nassert solution('10 3 3 4\\n1 1 1 1\\n2 2 2 2') == '3 3 0'\nassert solution('10 4 4 4\\n1 1 2 2\\n2 2 2 3\\n3 3 3 3') == '4 3 0'\nassert solution('6 2 5 5\\n1 2 3 3\\n2 2 3 4\\n3 2 3 4\\n4 2 3 4\\n5 2 3 4\\n6 2 3 4\\n7 2 3 4') == '3 2 1 4'\nassert solution('6 2 5 5\\n1 2 3 3\\n2 2 3 4\\n3 2 3 4\\n4 2 3 4\\n5 2 3 4\\n6 2 3 4\\n7 2 3 4\\n8 2 3 4\\n9 2 3 4\\n10 2 3 4') == '3 2 1 4'\n",
        "num_ids_2": 54,
        "num_ids_4": 145
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 3 4\n0 1 4\n0 2 4\n0 3 4\n''') == '0 0 0'\nassert solution('''4 6 3\n0 1 4\n0 2 4\n0 3 4\n0 4 4\n''') == '0 0 2'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 3 4\") == \"2 3 0\"\nassert solution(\"100 100 3 4\") == \"6 3 0\"\nassert solution(\"3 3 3 3\") == \"0 0 0\"\nassert solution(\"3 3 3 4\") == \"3 0 0\"\nassert solution(\"4 3 3 4\") == \"3 3 3\"\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 3 4') == '2 3 0'\nassert solution('1 1 1 2') == '1 2 0'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4 5 6') == '3 4 0 3'\nassert solution('2 2 2 3 4') == '0 0 0 1'\nassert solution('5 10 3 4') == '4 0 0 4'\nassert solution('10 0 0 2') == '2 0 0 2'\nassert solution('100 100 1 2') == '2 0 0 1'\n",
        "num_ids_2": 33,
        "num_ids_4": 65
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3 1 4\\n0 1 4\\n') == '2 3 0'\nassert solution('1 2 3 4\\n0 1 4\\n') == '3 0 1'\nassert solution('5 3 3 4\\n0 1 4\\n') == '0 0 1'\nassert solution('5 3 3 4\\n0 1 4\\n') == '0 0 1'\nassert solution('5 3 3 4\\n0 1 4\\n') == '3 4 0'\n\n\"\"\"\n\nn, m, s, d = map(int, input().split())\n\nc = list(map(int, input().split()))\n\nsoda = [0] * s\nfor i in range(s):\n    soda[i] = c[i]\n\nfor i in range(m):\n    soda.sort()\n    soda.reverse()\n    soda = soda[:s]",
        "num_ids_2": 44,
        "num_ids_4": 88
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 3 4\\n0 1 4\\n') == '2 3 0'\nassert solution('5 3 3 4\\n2 0 0\\n') == '2 3 0'\nassert solution('5 3 3 4\\n0 1 4\\n') == '2 3 0'\n",
        "num_ids_2": 44,
        "num_ids_4": 66
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('4 4 4 4') == '3 3 0'\nassert solution('10 10 10 10') == '0 0 0 0'\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4890,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 3 4\\n0 1 4') == '2 3 0'\nassert solution('8 5 3 2\\n0 1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8\\n3 4 5 6 7 8\\n4 5 6 7 8') == '1 2 3 4 5 6 7 8'\nassert solution('10 4 3 2\\n0 1 2 3 4 5 6 7 8 9 10\\n1 2 3 4 5 6 7 8 9 10\\n2 3 4 5 6 7 8 9 10\\n3 4 5 6 7 8 9 10\\n4 5 6 7 8 9 10\\n5 6 7 8 9 10') == '4 5 6 7 8 9 10'\nassert solution('4 4 4 4\\n0 1 2 3 4 5 6 7 8\\n1 2 3 4 5 6 7 8\\n2 3 4 5 6 7 8\\n3 4 5 6 7 8\\n4 5 6 7 8') == '1 2 3 4 5 6 7 8'\nassert solution('8 8 8 8\\n0 1 1 1 1 1 1 1 1 1\\n1 2 2 2 2 2 2 2 2 2\\n2 3 3 3 3 3 3 3 3 3\\n3 4 4 4 4 4 4 4 4 4\\n4 5 5 5 5 5 5 5 5 5 5\\n5 6 6 6 6 6 6 6 6 6 6\\n6 7 7 7 7 7 7 7 7 7 7\\n7 8 8 8 8 8 8 8 8 8 8 8\\n8 9 9 9 9 9 9 9 9 9 9 9\\n9 10 10 10 10 10 10 10 10 10 10') == '9 10 10 10 10 10 10 10 10 10 10 10'\n",
        "num_ids_2": 85,
        "num_ids_4": 232
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 1 0 0 0 0') == '1 0 0 0 0 0'\nassert solution('7 5 0 0 0 0 0') == '7 6 0 0 0 0 0'\n",
        "num_ids_2": 40,
        "num_ids_4": 62
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''0 1 2 2 2 7\n    ''') == '1 0 0 0 0 1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n0 1 2 2 2 7\n''') == '1 0 0 0 0 1'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"1 0 0 0 0 1\"\nassert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"0 1 2 2 2 7\") == \"1 0 0 0 0 1\"\nassert solution(\"0 1 2 2 2 -7\") == \"0 1 2 2 2 1\"\nprint(\"Coding complete? Click 'Check' to earn cool rewards!\")\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2 2 2 2 7\") == \"1 0 0 0 0 1\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 5 2 2 2 7') == '0 1 0 0 0 5'\n\n-----------------------------",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('1 1 1 1 1 1') == '0 0 0 0 0 0'\nprint('\u2705 Test Pass\\n')\n\nstdin = \\\n'''\n0 1 2 2 2 7\n'''\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('0 0 0 0 0 0') == '0 0 0 0 0 0'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4891,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('0 1 2 2 2 7') == '1 0 0 0 0 1'\nassert solution('10 10 10 10 10 10 10 10 10') == '0 0 0 0 0 0 0 0 0'\nassert solution('-1 -1 -1 -1 -1 -1 -1 -1 -1') == '1 0 0 0 0 0 0 0 0'",
        "num_ids_2": 46,
        "num_ids_4": 81
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\n\nassert solution('''\n3\nabc 0.6\nxyz 0.2\npqr 0.1\n''') == '0.5'\n\nassert solution('''\n3\na 1.0\nb 0.1\nc 1.0\n''') == '0.4'\n\nassert solution('''\n10\na a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a a",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3333'\n\"\"\"\n\nfrom math import floor, log",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\nassert solution('''\n3\n112233 0.7778\n123456 0.5555\nqwerty 0.3333\n''') == '2.11111'\nassert solution('''\n8\n121111 0.8888\n222222 0.8888\n333333 0.7777\n444444 0.7777\n555555 0.8888\n666666 0.7777\n777777 0.8888\n888888 0.7777\n999999 0.8888\n''') == '0.8888'\nassert solution('''\n10\n111111 0.0000\n222222 0.3333\n333333 0.5555\n444444 0.7777\n555555 0.8888\n666666 0.7777\n777777 0.8888\n888888 0.7777\n999999 0.8888\n''') == '0.7777'\nassert solution('''\n100\n111111 0.0000\n222222 0.3333\n333333 0.5555\n444444 0.7777\n555555 0.8888\n666666 0.7777\n777777 0.8888\n888888 0.7777\n999999 0.8888\n''') == '0.8888'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2\n123456 0.6666\nqwerty 0.3334''') == '1.3334'\nprint(solution('''2\n123456 0.6666\nqwerty 0.3334'''))\nassert solution('''2\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888''') == '0.8888'\nprint(solution('''2\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888'''))\nassert solution('''5\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888\ncat 0.9954\ndog 0.8025''') == '0.9954'\nprint(solution('''5\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888\ncat 0.9954\ndog 0.8025'''))\nassert solution('''8\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888\ncat 0.9954\ndog 0.8025\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om''') == '0.9954'\nprint(solution('''8\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888\ncat 0.9954\ndog 0.8025\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om''') == '0.9954')\nassert solution('''8\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888\ncat 0.9954\ndog 0.8025\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om''') == '0.9954'\nprint(solution('''8\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888\ncat 0.9954\ndog 0.8025\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om''') == '0.9954')\nprint(solution('''8\n123456 0.6666\nqwerty 0.3334\ntigger 0.8888\ncat 0.9954\ndog 0.8025\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7jkl 8op9 0om\n1qaz 2wsx 3edc 4rfv 5tgb 6yhn 7",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1.3334'\nassert solution('2') == '1.0'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\n    '2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'\nassert solution('1\\nqwerty 0.3334') == '0.3334'\nassert solution('1\\nqwerty 0.3334') == '0.3334'\nassert solution('1\\nqwerty 0.3334') == '0.3334'\nassert solution('1\\nqwerty 0.3334') == '0.3334'\n",
        "num_ids_2": 26,
        "num_ids_4": 70
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '1.3333'\nassert solution('1') == '0.0000'\nassert solution('0') == '0.0000'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n123456 0.6666\\nqwerty 0.3334') == '1.3334'",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\n\nassert solution('''\n2\n123456 0.6666\nqwerty 0.3334\n''') == '1.3334'\n\nassert solution('''\n2\n123456 0.6666\nqwerty 0.3333\n''') == '1.3333'\n\nassert solution('''\n2\n123456 0.6666\nqwerty 0.33333\n''') == '1.33333'\n\nassert solution('''\n2\n123456 0.6666\nqwerty 0.33333\n''') == '1.33333'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4892,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '1.3334'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 1\\n5 7\\n4') == '1'\nassert solution('1 10\\n3 2 3 3 1\\n') == '1'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 1') == '1'\nassert solution('10 1') == '1'\nassert solution('3 2') == '1'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"5 1\\n\"\n    \"2 5 4 2\\n\"\n) == \"1\\n\"\nassert solution(\n    \"5 1\\n\"\n    \"3 2 4 2\\n\"\n) == \"1\\n\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 1') == '1'\nassert solution('5 1') == '2'\nassert solution('10 1') == '3'\nassert solution('13 1') == '4'\nassert solution('20 1') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n1 1\n''') == '1'\n\nassert solution('''\n3 2\n1 2 5\n''') == '2'\n\nassert solution('''\n3 1\n1 2 4\n''') == '4'\n\nassert solution('''\n10 11 12\n''') == '12'\n\nassert solution('''\n10 11 11 12\n''') == '11'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution([3, 1, 2, 4]) == \"1\"\n\"\"\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1 1\n1 2 4\n2\n''') == '1'\n\nassert solution('''\n3 1\n1 2 4\n2\n''') == '2'\n\nassert solution('''\n3 1\n1 2 4\n4\n''') == '1'\n\nassert solution('''\n5 1\n1 2 3 4 5\n2\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 3') == '2'\nassert solution('5 4') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\n1 2 4\n''') == '1'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4893,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3 1\n1 2 4\n''') == '1'\nassert solution('''\n5 5\n1 2 5 1 2\n''') == '2'\nassert solution('''\n10 10\n1 2 5 1 3 5 2 7 5 2 2\n''') == '5'\nassert solution('''\n10 10\n1 2 5 1 2 3 3 2 2\n''') == '3'\n'''\nSample Input:\n3 1\n1 2 4\nSample Output:\n2\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'G:               \\nF: -------------------------------------*--------------------\\nE:       *   *          *             *   *                  \\nD: ----*-------**-----*-------------*-------*----------------\\nC: * *     *      * *     **    * *           *         ** **\\nB: --------------------------**-----------------*-----*------\\nA:                                                  \\ng: -----------------------------------------------*----------\\nf:                                                   \\ne: ----------------------------------------------------------\\nd:                                                               \\nc:                                                               \\nb:                                                               \\na: ----------------------------------------------------------\\n'\nassert solution('5') == 'G:          \\nF:            \\nE:          \\nD:            \\nC:          \\nB:            \\nA:          \\ng:          \\nf:          \\ne:          \\nd:          \\nc:          \\nb:          \\na:          \\n'",
        "num_ids_2": 206,
        "num_ids_4": 206
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"25\") == \"G:       *   *          *            *   *                  \\nF: *************************-------------*-------*-----------------*-----*------\\nE:    *   *          *            *   *                  \\nD: ----------------*-----------*-------------*-------*----------------\\nC: * *    *      * *    **    * *           *        ** *\\nB: --------------------------*-----*------*-----*------*\\nA:                                                \\ng: -----------------------------------------------*----------\\nf:       *                        *        *\\ne: ----------------------------------------------------------\\nd:                                                \\nc:                                                \\nb:                                                \\na: ----------------------------------------------------------\\n\"\n\nassert solution(\"50\") == \"G:       *   *          *            *   *                  \\nF: *************************-------------*-------*-----------------*-----*------\\nE:    *   *          *            *   *                  \\nD: ----------------*-----------*-------------*-------*----------------\\nC: * *    *      * *    **    * *           *        ** *\\nB: --------------------------*-----*------*-----*------*\\nA:                                                \\ng: -----------------------------------------------*----------\\nf:                                                \\ne: ----------------------------------------------------------\\nd:                                                \\nc:                                                \\nb:                                                \\na: ----------------------------------------------------------\\n\"\n",
        "num_ids_2": 310,
        "num_ids_4": 310
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''13\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2''') == '''\nG:\nF: ------------------------*-------**-----*-------------*-------*----------------\nE:    *    *    *          *    *    *    *          *    *    *          *            \nD: ------------------------*-------*-------------*-------*----------------\nC: * *    *    *    **    * *    *    *           *        *    *    *          *            \nB: ------------------------**-----------------*-----*------*-----*------\nA:\ng: ------------------------**-----------------*-----*------*-----*------\nf:\ne:\nd:\nc:\nb:\na:\n'''\nassert solution('''123\nA C D E F G A B C\n''') == '''\nA:\ng:\nf:\ne:\nd:\nc:\nb:\na:\n'''\nassert solution('''13\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2\n
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"G:           \\nF:       *      *      *       *      \\nE:       *      *       *       *       \\nD:       *      *       *       *       \\nC:       *      *      *       *       \\nB:       *      *       *       *       \\nA:       *      *       *       *       \"\nassert solution(\"2\") == \"G:          \\nF:       *      *      *       *      \\nE:       *      *       *       *       \\nD:       *      *      *       *       \\nC:       *      *      *       *       \\nB:       *      *      *       *       \\nA:       *      *      *       *       \"",
        "num_ids_2": 180,
        "num_ids_4": 180
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('27') == 'G: \\n F: -------------------------\\n E: *\\n D: ----*-------**-----\\n C: * *     *      * *\\n B: --------------------------\\n A: \\n g: \\n f: \\n e: ----------------------------------------------------------\\nd: \\n c: \\n b: \\n a: ----------------------------------------------------------\\n'\n",
        "num_ids_2": 89,
        "num_ids_4": 89
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == '''G:\nF: ---------------------------------*--------------------\nE:       *   *          *             *   *                \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                  *        \ng: -----------------------------------------------*----------\nf:                                                   \ne: ----------------------------------------------------------\nd:                                                   \nc:                                                   \nb:                                                   \na: ----------------------------------------------------------'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('27') == 'G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G: G:",
        "num_ids_2": 1204,
        "num_ids_4": 1204
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    '27'\n    ) == 'G:       *    *          *             *   *\\n' + \\\n    'F: -------------------------------------*--------------------\\n' + \\\n    'E:       *   *          *             *   *                  \\n' + \\\n    'D: ----*-------**-----*-------------*-------*----------------\\n' + \\\n    'C: * *     *      * *     **    * *           *         ** **\\n' + \\\n    'B: --------------------------**-----------------*-----*------\\n' + \\\n    'A:                                                *\\n' + \\\n    'g: -----------------------------------------------*----------\\n' + \\\n    'f:                                               *\\n' + \\\n    'e: ----------------------------------------------------------\\n' + \\\n    'd:                                               *\\n' + \\\n    'c:                                               *\\n' + \\\n    'b:                                               *\\n' + \\\n    'a: ----------------------------------------------------------'\n    ) == '''G:                                                               \nF: -------------------------------------*--------------------\nE:       *   *          *             *   *                  \nD: ----*-------**-----*-------------*-------*----------------\nC: * *     *      * *     **    * *           *         ** **\nB: --------------------------**-----------------*-----*------\nA:                                                *\ng: -----------------------------------------------*----------\nf:                                                               \ne: ----------------------------------------------------------\nd:                                                               \nc:                                                               \nb:                                                               \na: ----------------------------------------------------------'''\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2\") == \"G:        \\nF: ----------------------------------------------------------\\nE:        \\nD: ----------------------------------------------------------\\nC:        \\nB: ----------------------------------------------------------\\nA:        \\ng: ----------------------------------------------------------\\nf:        \\ne:        \\nd:        \\nc:        \\nb:        \\na:        \\n\"\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4894,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\nC C D E C E D2 C C D E C2 B2 C C D E F E D C B g A B C2 C2') == 'G:\\nF:------------------------------------*--------------------\\nE: * * *\\nD: * *\\nC: * *\\nB: --------------------------*-----*------\\nA:\\nG: -----------------------------------------------*----------\\nf: *\\ne: *\\nd: *\\nc: *\\nb: *\\na: *\\n'\n",
        "num_ids_2": 120,
        "num_ids_4": 120
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n1 1 1\\n') == 'possible', f'actual: {solution(\"3\\n1 1 1\\n\")}'\nassert solution('2\\n2 2\\n') == 'impossible', f'actual: {solution(\"2\\n2 2\\n\")}'\nassert solution('1\\n2 2\\n') == 'impossible', f'actual: {solution(\"1\\n2 2\\n\")}'\nassert solution('4\\n1 1 2 3\\n') == 'possible', f'actual: {solution(\"4\\n1 1 2 3\\n\")}'",
        "num_ids_2": 72,
        "num_ids_4": 146
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2\\n2 2\\n') == 'impossible'\n\"\"\"\n\nimport sys\n",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1 1\") == \"possible\"\nassert solution(\"2 2 2\") == \"impossible\"\nassert solution(\"3 1 3\") == \"impossible\"\nassert solution(\"3 2 2\") == \"possible\"\nassert solution(\"2 3 3\") == \"impossible\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 1 1\\n\") == \"possible\"\nassert solution(\"2\\n2 2\\n\") == \"impossible\"\nassert solution(\"100\\n100 100 100\\n\") == \"impossible\"",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 1 1\\n') == 'possible'\nassert solution('2\\n1 2\\n') == 'impossible'\nassert solution('3\\n4 5 6\\n') == 'impossible'\n\"\"\"",
        "num_ids_2": 35,
        "num_ids_4": 53
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n1 1 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n1 8 1\n1 9 1\n1 10 1\n1 11 1\n1 12 1\n1 13 1\n1 14 1\n1 15 1\n1 16 1\n1 17 1\n1 18 1\n1 19 1\n1 20 1\n1 21 1\n1 22 1\n1 23 1\n1 24 1\n1 25 1\n1 26 1\n1 27 1\n1 28 1\n1 29 1\n1 30 1\n1 31 1\n1 32 1\n1 33 1\n1 34 1\n1 35 1\n1 36 1\n1 37 1\n1 38 1\n1 39 1\n1 40 1\n1 41 1\n1 42 1\n1 43 1\n1 44 1\n1 45 1\n1 46 1\n1 47 1\n1 48 1\n1 49 1\n1 50 1\n1 51 1\n1 52 1\n1 53 1\n1 54 1\n1 55 1\n1 56 1\n1 57 1\n1 58 1\n1 59 1\n1 60 1\n1 61 1\n1 62 1\n1 63 1\n1 64 1\n1 65 1\n1 66 1\n1 67 1\n1 68 1\n1 69 1\n1 70 1\n1 71 1\n1 72 1\n1 73 1\n1 74 1\n1 75 1\n1 76 1\n1 77 1\n1 78 1\n1 79 1\n1 80 1\n1 81 1\n1 82 1\n1 83 1\n1 84 1\n1 85 1\n1 86 1\n1 87 1\n1 88 1\n1 89 1\n1 90 1\n1 91 1\n1 92 1\n1 93 1\n1 94 1\n1 95 1\n1 96 1\n1 97 1\n1 98 1\n1 99 1\n1 100 1\n1 101 1\n1 102 1\n1 103 1\n1 104 1\n1 105 1\n1 106 1\n1 107 1\n1 108 1\n1 109 1\n1 110 1\n1 111 1\n1 112 1\n1 113 1\n1 114 1\n1 115 1\n1 116 1\n1 117 1\n1 118 1\n1 119 1\n1 120 1\n1 121 1\n1 122 1\n1 123 1\n1 124 1\n1 125 1\n1 126 1\n1 127 1\n1 128 1\n1 129 1\n1 130 1\n1 131 1\n1 132 1\n1 133 1\n1 134 1\n1 135 1\n1 136 1\n1 137 1\n1 138 1\n1 139 1\n1 140 1\n1 141 1\n1 142 1\n1 143 1\n1 144 1\n1 145 1\n1 146 1\n1 147 1\n1 148 1\n1 149 1\n1 150 1\n1 151 1\n1 152 1\n1 153 1\n1 154 1\n1 155 1\n1 156 1\n1 157 1\n1 158 1\n1 159 1\n1 160 1\n1 161 1\n1 162 1\n1 163 1\n1 164 1\n1 165 1\n1 166 1\n1 167 1\n1 168 1\n1 169 1\n1 170 1\n1 171 1\n1 172 1\n1 173 1\n1 174 1\n1 175 1\n1 176 1\n1 177 1\n1 178 1\n1 179 1\n1 180 1\n1 181 1\n1 182 1\n1 183 1\n1 184 1\n1 185 1\n1 186 1\n1 187 1\n1 188 1\n1 189 1\n1 190 1\n1 191 1\n1 192 1\n1 193 1\n1 194 1\n1 195 1\n1 196 1\n1 197 1\n1 198 1\n1 199 1\n1 200 1\n1 201 1\n1 202 1\n1 203 1\n1 204 1\n1 205 1\n1 206 1\n1 207 1\n1 208 1\n1 209 1\n1 210 1\n1 211 1\n1 212 1\n1 213 1\n1 214 1\n1 215 1\n1 216 1\n1 217 1\n1 218 1\n1 219 1\n1 220 1\n1 221 1\n1 222 1\n1 223 1\n1 224 1\n1 225 1\n1 226 1\n1 227 1\n1 228 1\n1 229 1\n1 230 1\n1 231 1\n1 232 1\n1 233 1\n1 234 1\n1 235 1\n1 236 1\n1 237 1\n1 238 1\n1 239 1\n1 240 1\n1 241 1\n1 242 1\n1 243 1\n1 244 1\n1 245 1\n1 246 1\n1 247 1\n1 248 1\n1 249 1\n1 250 1\n1 251 1\n1 252 1\n1 253 1\n1 254 1\n1 255 1\n1 256 1\n1 257 1\n1 258 1\n1 259 1\n1 260 1\n1 261 1\n1 262 1\n1 263 1\n1 264 1\n1 265 1\n1 266 1\n1 267 1\n1 268 1\n1 269 1\n1 270 1\n1 271 1\n1 272 1\n1 273 1\n1 274 1\n1 275 1\n1 276 1\n1 277 1\n1 278 1\n1 279 1\n1 280 1\n1 281 1\n1 282 1\n1 283 1\n1 284 1\n1 285 1\n1 286 1\n1 287 1\n1 288 1\n1 289 1\n1 290 1\n1 291 1\n1 292 1\n1 293 1\n1 294 1\n1 295 1\n1 296 1\n1 297 1\n1 298 1\n1 299 1\n1 300 1\n1 301 1\n1 302 1\n1 303 1\n1 304 1\n1 305 1\n1 306 1\n1 307 1\n1 308 1\n1 309 1\n1 310 1\n1 311 1\n1 312 1\n1 313 1\n1 314 1\n1 315 1\n1 316 1\n1 317 1\n1 318 1\n1 319 1\n1 320 1\n1 321 1\n1 322 1\n1 323 1\n1 324 1\n1 325 1\n1 326 1\n1 327 1\n1 328 1\n1 329 1\n1 330 1\n1 331 1\n1 332 1\n1 333 1\n1 334 1\n1 335 1\n1 336 1\n1 337 1\n1 338 1\n1 339 1\n1 340 1\n1 341 1\n1 342 1\n1 343 1\n1 344 1\n1 345 1\n1 346 1\n1 347 1\n1 348 1\n1 349 1\n1 350 1\n1 351 1\n1 352 1\n1 353 1\n1 354 1\n1 355 1\n1 356 1\n1 357 1\n1 358 1\n1 359 1\n1 360 1\n1 361 1\n1 362 1\n1 363 1\n1 364 1\n1 365 1\n1 366 1\n1 367 1\n1 368 1\n1 369 1\n1 370 1\n1 371 1\n1 372 1\n1 373 1\n1 374 1\n1 375 1\n1 376 1\n1 377 1\n1 378 1\n1 379 1\n1 380 1\n1 381 1\n1 382 1\n1 383 1\n1 384 1\n1 385 1\n1 386 1\n1 387 1\n1 388 1\n1 389 1\n1 390 1\n1 391 1\n1 392 1\n1 393 1\n1 394 1\n1 395 1\n1 396 1\n1 397 1\n1 398 1\n1 399 1\n1 400 1\n1 401 1\n1 402 1\n1 403 1\n1 404 1\n1 405 1\n1 406 1\n1 407 1\n1 408 1\n1 409 1\n1 410 1\n1 411 1",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3\n1 1 1\n''') == 'possible'\n\nassert solution('''\n3\n2 4 3\n''') == 'impossible'\n\nassert solution('''\n5\n6 7 9 3 7\n''') == 'impossible'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n4\n1 2 2 1\n\"\"\") == \"possible\"\nassert solution(\"\"\"\n4\n1 2 1 1\n\"\"\") == \"impossible\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == 'possible'\nassert solution('3') == 'impossible'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4895,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1 1\n''') == 'possible', 'Simple Case'\n\nassert solution('''\n2\n2 1\n''') == 'impossible', 'Two sticks'\n\nassert solution('''\n3\n1 2 3\n''') == 'impossible', 'Three sticks'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n4\\n3 3 2 1 2 2 1 1 3') == '3'\nassert solution('4\\n2 1 3 1 2') == '2'\nassert solution('20\\n1 20 1 5 5 20 10 10 10 10 20') == '5'\n",
        "num_ids_2": 41,
        "num_ids_4": 64
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('8 3 3 2 1 2 1 3 3 1') == '2'\nassert solution('5 1') == '1'\nassert solution('9 4 4 4 4 4') == '1'\nassert solution('9 2 4 4 4 4') == '3'\n",
        "num_ids_2": 38,
        "num_ids_4": 64
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n3 2\\n4 3\\n2 1 2\\n3 1 3\\n1 2 1\\n1 2 1\\n2 3\\n3 1 3\\n1 2 1\\n2 2\\n2 1\\n1 3\\n4 3\\n3 1 3\\n3 1 3\\n') == '3'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('20\\n4 3 1 3 2 5 2 5 2 1 2 2 1 1 2 2 3 4 5 6 4 5 4 5') == '6'\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10\\n4 3 3 2 1 2 2 1 1 3') == '3'\nassert solution('20\\n10 12 4 2 5 7 7 2 2 5') == '2'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"1\n2\n2 1\n2 1\n3 1\"\"\") == '2'\nassert solution(r\"\"\"1\n2\n2 2\n2 2\n3 2\"\"\") == '2'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\nassert solution(\"100\\n10 20 30 40 50 60 70 80 90 100\") == \"12\"\nassert solution(\"1\\n1\\n1\") == \"1\"\n",
        "num_ids_2": 44,
        "num_ids_4": 60
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10\\n4 3 3 2 1 2 2 1 1 3\") == \"3\"\n\n------Explanation-----\nThe first tower is built with the base of the first brick. It is not finished, so we place the next brick in the next tower.\n\nThe second tower is built. It is not finished, so we place the next brick in the next tower.\n\nThe third tower is built. It is not finished, so we place the next brick in the next tower.\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4 3 3 2 1 2 2 1 1 3\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4896,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n4 3 3 2 1 2 2 1 1 3') == '3'\nprint('YOUR CODE IS CORRECT!')\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6') == '35.54'\nassert solution('5') == '3.00'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3') == 'ASHMEADE\\nBLAKE\\nPOWELL'\n\nclass Coaches(object):\n    \"\"\"\n    A class representing all possible coach preferences.\n    \"\"\"\n    \n    def __init__(self):\n        self.runners = { }\n    \n    def __str__(self):\n        \n        s = ''\n        for key in sorted(self.runners.keys()):\n            s += '%s: %s\\n' % (key, self.runners[key])\n        return s\n    \n    def add_runner(self, runner, rating):\n        self.runners[runner] = rating\n        \n    def remove_runner(self, runner):\n        del self.runners[runner]\n        \n    def best_runner(self, runner_count):\n        runners = sorted(self.runners.items(), key = lambda x: x[1], reverse = True)\n        for i in range(runner_count):\n            runner = runners[i]\n            print(runner[0], end ='')\n            \n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"35.54\"\nassert solution(\"3\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"27.25\"\nassert solution(\"4\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"15.81\"\nassert solution(\"5\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"15.81\"\nassert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\") == \"7.47\"\n",
        "num_ids_2": 132,
        "num_ids_4": 264
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\nASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE'\nassert solution('2\\nASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nASHMEADE\\nFRATER\\nPOWELL'\nassert solution('3\\nASHMEADE 9.90 8.85\\nBOLT 9.58 8.43\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\n') == '35.54\\nBOLT\\nASHMEADE\\nPOWELL\\nFRATER'\n",
        "num_ids_2": 147,
        "num_ids_4": 223
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"6\") == \"35.54\"\nassert solution(\"6 1\") == \"ASHMEADE\"\nassert solution(\"6 2\") == \"BLAKE\"\nassert solution(\"6 3\") == \"BOLT\"\nassert solution(\"6 4\") == \"FRATER\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54'\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54'\nassert solution('''\n7\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nPOWELL 9.72 8.61\n''') == '35.54'\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\n''') == '35.54'\nassert solution('''\n6\nASHMEADE 9.90 8.85\nBLAKE 9.69 8.72\nBOLT 9.58 8.43\nCARTER 9.78 8.93\nFRATER 9.88 8.92\nPOWELL 9.72 8.61\nPOWELL 9.72 8.61\n''') == '35.54'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nASHMEADE 9.90 8.85') == 'ASHMEADE'\nassert solution('2\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72') == 'ASHMEADE'\nassert solution('3\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43') == 'ASHMEADE'\nassert solution('4\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93') == 'ASHMEADE'\nassert solution('5\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nFRATER 9.88 8.92') == 'ASHMEADE'\n",
        "num_ids_2": 57,
        "num_ids_4": 157
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('6') == '35.54'\nassert solution('2') == 'ASHMEADE,BOLT,POWELL,BLAKE'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"\nassert solution(\"7\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.92\\nFRATER 9.88 8.92\\nPOWELL 9.72 8.61\\nFRATE 8.73 8.62\\nPOWELL 9.70 8.61\") == \"35.54\\nCARTER\\nPOWELL\\nBLAKE\\nBOLT\\nFRATE\\nFRATER\"",
        "num_ids_2": 190,
        "num_ids_4": 314
    },
    {
        "number": 4897,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"6\\nASHMEADE 9.90 8.85\\nBLAKE 9.69 8.72\\nBOLT 9.58 8.43\\nCARTER 9.78 8.93\\nPOWELL 9.72 8.61\\n\") == \"35.54\\nCARTER\\nBOLT\\nPOWELL\\nBLAKE\"",
        "num_ids_2": 87,
        "num_ids_4": 87
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    2\n    1 2\n    2 4\n    5 6\n''') == '2'\nassert solution('''\n    5\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n''') == '3'\nassert solution('''\n    6\n    1 2\n    2 3\n    3 4\n    4 5\n    5 6\n    7 8\n''') == '2'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''1 2\n2 4\n5 6''') == '2'\nassert solution('''4\n1 2\n2 3\n4 5\n6 7''') == '1'\nassert solution('''6\n1 3\n2 4\n3 5\n4 6\n5 7''') == '2'\nassert solution('''8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n8 9''') == '1'\n",
        "num_ids_2": 15,
        "num_ids_4": 29
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2\n1 2\n2 4\n5 6\n''') == '2'\n\nassert solution('''\n1\n1 2\n2 4\n5 6\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1\\n2\\n3\\n') == '2'\nassert solution('3\\n4\\n5\\n') == '1'\nassert solution('2\\n2\\n4\\n') == '2'\nassert solution('4\\n6\\n3\\n') == '2'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2\n2 4\n5 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n4 3\n4 8\n8 3\n\"\"\") == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n5\\n') == '2'\nassert solution('1\\n2\\n3\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n') == '1'\nassert solution('1\\n2\\n3\\n4\\n5\\n') == '1'\nassert solution('5\\n2\\n3\\n4\\n') == '1'\n",
        "num_ids_2": 36,
        "num_ids_4": 81
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n5\\n') == '2'\nassert solution('2\\n4\\n3\\n') == '2'\nassert solution('3\\n6\\n4\\n') == '1'",
        "num_ids_2": 36,
        "num_ids_4": 54
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\") == \"1\"\nassert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"2\"\nassert solution(\"1 1\") == \"1\"\nassert solution(\"1 1 3\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 40
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n2\n1 2\n2 4\n5 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2\n2 4\n5 6\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3\n1 2\n2 5\n5 6\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4898,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2 1 1 3 4') == '2'\nassert solution('2 2 2 3 3 3 4') == '1'\nassert solution('2 2 2 3 2 2 3 2 4') == '0'\nassert solution('3 2 3 3 2') == '0'\n",
        "num_ids_2": 31,
        "num_ids_4": 63
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('hey') == 'heey'\nassert solution('heye') == 'heye'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('hey') == 'hee'\nassert solution('heyy') == 'heeee'\nassert solution('heeee') == 'heeee'",
        "num_ids_2": 23,
        "num_ids_4": 37
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('hey') == 'heey'\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('hey') == 'heey'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('hey') == 'heye'\nassert solution('yesssssoo') == 'yesyesssoo'\n'''\nimport string",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('hey') == 'heey'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('hey') == 'heeey'\nprint('solution() finished successfully!')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('hey') == 'heey'\nassert solution('hi') == 'ii'\nassert solution('hello') == 'lohelo'\nassert solution('hi there') == 'hii there'\nassert solution('you') == 'ouyou'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"hey\") == \"heeey\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4899,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"hey\") == \"heey\"\nassert solution(\"Howdy\") == \"Howdy\"\nassert solution(\"Hello\") == \"Hello\"\nassert solution(\"It's me\") == \"It's me\"\nassert solution(\"I'm a good boy\") == \"I'm a good boy\"\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"\"\"5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\"\"\") == \"\"\"1 2\n1 3\n1 4\n1 5\n2 3\n2 4\n2 5\n3 4\n3 5\n4 5\"\"\"\"\"\"\nassert solution(\"\"\"3\n1 2 3\n1 2 3\n1 2 3\"\"\") == \"\"\"1 2\n1 3\n1 4\"\"\"\nassert solution(\"\"\"2\n2 3\n2 3\"\"\") == \"\"\"2 3\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\"\nassert solution(\"2\\n0 1\\n1 0\") == \"1\\n1\\n\"\nassert solution(\"10\\n1 1 1 1 1 1 1 1 1 1 1\\n1 1 1 1 1 1 1 1 1 1 1\") == \"1\\n1\\n\"\n",
        "num_ids_2": 68,
        "num_ids_4": 109
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '0 1'\nassert solution('2') == '0 2'\nassert solution('3') == '0 2'\nassert solution('4') == '1 3'\nassert solution('5') == '1 4'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4'\n\nassert solution('''\n5\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n''') == '1 3\\n1 4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '1 2'\nassert solution('2 4 1 3') == '1 3'\n\n\"\"\"\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n\") == \"1 2\\n1 3\\n1 4\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4\n0 1 1 2\n1 0 2 3\n1 2 0 3\n2 3 3 0\n''') == '1 2\\n1 3\\n1 4\\n', 'Error!'\n\nassert solution('''\n3\n1 1 2\n2 3 4\n3 4 1\n''') == '1 3\\n1 4\\n', 'Error!'\n\nassert solution('''\n2\n1 1\n1 2\n''') == '1 2\\n', 'Error!'\n\nassert solution('''\n1\n0 1\n1 0\n''') == '1 0\\n1 1\\n', 'Error!'\n\nassert solution('''\n5\n0 1 2 3 4\n1 0 2 3 4\n1 2 0 3 4\n2 3 0 3 4\n3 4 0 3 4\n''') == '1 2\\n1 3\\n1 4\\n2 3\\n2 4\\n', 'Error!'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == \"1 2\"\nassert solution('2') == \"1 3\"\nassert solution('3') == \"1 4\"\nassert solution('4') == \"1 2 3 4\"\nassert solution('5') == \"1 2 3 4 5\"\n\n''''''",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\"\nassert solution(\"5\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\") == \"1 2\\n1 3\\n1 4\\n\"\nassert solution(\"10\\n0 1 1 2\\n1 0 2 3\\n1 2 0 3\\n2 3 3 0\\n5 6 7 8\\n9 10 11 12 13\\n13 14 15 16 17\\n\") == \"1 2\\n1 3\\n1 4\\n1 5\\n1 6\\n1 7\\n1 8\\n1 9\\n1 10\\n1 11\\n1 12\\n1 13\\n1 14\\n1 15\\n1 16\\n\"\n",
        "num_ids_2": 90,
        "num_ids_4": 205
    },
    {
        "number": 4900,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2\") == \"1 2\"\nassert solution(\"1\") == \"1 2\"\nassert solution(\"1 1 2\") == \"1 2\"\nassert solution(\"1 1 1 2\") == \"1 2\"\nassert solution(\"1 1 1 1 2\") == \"1 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 49
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"\n\"\"\"\n\nimport sys\nimport math",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"EWPGAJRB\") == \"ABCD\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n    \"EWPGAJRB\") == \"ABCD\"\nassert solution(\"EAFOJHZDFGRP\") == \"ABCD\"\nassert solution(\"ETYPRJZMXPVMS\") == \"ABCD\"\n",
        "num_ids_2": 22,
        "num_ids_4": 41
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == \"ABCD\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('EWPGAJRB') == 'ABCD'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('KMGNFDUOK') == 'YHPDP'\nassert solution('WWUOXUOP') == 'TTGVO'\nassert solution('QTWWYQQ') == 'RVKK'\nassert solution('AKZYIQK') == 'DUYU'\n\n---Input Format---\nThe first line contains the input string.\n\n---Constraints---\nAll characters in the input string are uppercase letters.\n\nThe input string's length is even and $\\leq 15000$.\n\n---Output Format---\nDisplay the decrypted DRM message.\n\nSample Input and Output\nInput\n\nInput Format\n\nThe first line contains the input string.\n\nOutput\n\nOutput Format\n\nDisplay the decrypted DRM message.\n\nSample Input and Output\nInput\n\nOutput\n\n\"\"\"\nfrom typing import List",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input()) == \"ABCD\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('BAFFGXRGEQXRPN') == 'FIRE'\nassert solution('EFGZYWXAUJZ') == 'GHI'\nassert solution('EFGAZWXAUJZ') == 'GHI'\n\n---\n\na=stdin\nb=list(a)\nc=[]\nx=[]\ny=[]\nz=[]\nz1=[]\nfor i in range(0,int(len(b))):\n    if(b[i]=='A'):\n        x.append(0)\n    elif(b[i]=='B'):\n        x.append(1)\n    elif(b[i]=='C'):\n        x.append(2)\n    elif(b[i]=='D'):\n        x.append(3)\n    elif(b[i]=='E'):\n        x.append(4)\n    elif(b[i]=='F'):\n        x.append(5)\n    elif(b[i]=='G'):\n        x.append(6)\n    elif(b[i]=='H'):\n        x.append(7)\n    elif(b[i]=='I'):\n        x.append(8)\n    elif(b[i]=='J'):\n        x.append(9)\n    elif(b[i]=='K'):\n        x.append(10)\n    elif(b[i]=='L'):\n        x.append(11)\n    elif(b[i]=='M'):\n        x.append(12)\n    elif(b[i]=='N'):\n        x.append(13)\n    elif(b[i]=='O'):\n        x.append(14)\n    elif(b[i]=='P'):\n        x.append(15)\n    elif(b[i]=='Q'):\n        x.append(16)\n    elif(b[i]=='R'):\n        x.append(17)\n    elif(b[i]=='S'):\n        x.append(18)\n    elif(b[i]=='T'):\n        x.append(19)\n    elif(b[i]=='U'):\n        x.append(20)\n    elif(b[i]=='V'):\n        x.append(21)\n    elif(b[i]=='W'):\n        x.append(22)\n    elif(b[i]=='X'):\n        x.append(23)\n    elif(b[i]=='Y'):\n        x.append(24)\n    elif(b[i]=='Z'):\n        x.append(25)\n    elif(b[i]=='0'):\n        x.append(26)\n    elif(b[i]=='1'):\n        x.append(27)\n    elif(b[i]=='2'):\n        x.append(28)\n    elif(b[i]=='3'):\n        x.append(29)\n    elif(b[i]=='4'):\n        x.append(30)\n    elif(b[i]=='5'):\n        x.append(31)\n    elif(b[i]=='6'):\n        x.append(32)\n    elif(b[i]=='7'):\n        x.append(33)\n    elif(b[i]=='8'):\n        x.append(34)\n    elif(b[i]=='9'):\n        x.append(35)\n    elif(b[i]=='A'):\n        x.append(36)\n    elif(b[i]=='B'):\n        x.append(37)\n    elif(b[i]=='C'):\n        x.append(38)\n    elif(b[i]=='D'):\n        x.append(39)\n    elif(b[i]=='E'):\n        x.append(40)\n    elif(b[i]=='F'):\n        x.append(41)\n    elif(b[i]=='G'):\n        x.append(42)\n    elif(b[i]=='H'):\n        x.append(43)\n    elif(b[i]=='I'):\n        x.append(44)\n    elif(b[i]=='J'):\n        x.append(45)\n    elif(b[i]=='K'):\n        x.append(46)\n    elif(b[i]=='L'):\n        x.append(47)\n    elif(b[i]=='M'):\n        x.append(48)\n    elif(b[i]=='N'):\n        x.append(49)\n    elif(b[i]=='O'):\n        x.append(50)\n    elif(b[i]=='P'):\n        x.append(51)\n    elif(b[i]=='Q'):\n        x.append(52)\n    elif(b[i]=='R'):\n        x.append(53)\n    elif(b[i]=='S'):\n        x.append(54)\n    elif(b[i]=='T'):\n        x.append(55)\n    elif(b[i]=='U'):\n        x.append(56)\n    elif(b[i]=='V'):\n        x.append(57)\n    elif(b[i]=='W'):\n        x.append(58)\n    elif(b[i]=='X'):\n        x.append(59)\n    elif(b[i]=='Y'):\n        x.append(60)\n    elif(b[i]=='Z'):\n        x.append(61)\n    elif(b[i]=='1'):\n        x.append(62)\n    elif(b[i]=='2'):\n        x.append(63)\n    elif(b[i]=='3'):\n        x.append(64)\n    elif(b[i]=='4'):\n        x.append(65)\n    elif(b[i]=='5'):\n        x.append(66)\n    elif(b[",
        "num_ids_2": 35,
        "num_ids_4": 72
    },
    {
        "number": 4901,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('EWPGAJRB') == 'ABCD'\nassert solution('ZRKB') == 'BKSC'\nassert solution('AJRB') == 'BKSC'\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 43
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"a\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abc') == 'ab'\nassert solution('abcdd') == 'abcd'\nassert solution('ddd') == 'dd'\nassert solution('abab') == 'ab'\nassert solution('abcd') == 'abcd'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 2\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abc') == 'b'\nassert solution('cba') == 'b'\nassert solution('abba') == 'a'",
        "num_ids_2": 21,
        "num_ids_4": 31
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('abcd') == 'c'\nassert solution('a') == 'a'\nassert solution('abc') == 'c'\nassert solution('abcd') == 'c'\nassert solution('aabc') == 'c'\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('abc') == '2'\nassert solution('bbbbbbbb') == '1'\nassert solution('abc') == '2'\nassert solution('bbbbbbbb') == '1'\nassert solution('abbbbbbbb') == '1'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abc') == 'b'\nassert solution('aa') == 'a'\nassert solution('ab') == 'a'\nassert solution('abcab') == 'b'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abc') == 'a'\nassert solution('aab') == 'a'\n\n'''",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('abc') == 'ac'\nassert solution('def') == 'ef'\nassert solution('abcba') == 'ab'\nassert solution('efghijk') == 'egk'\nassert solution('acdcb') == 'ad'\n",
        "num_ids_2": 20,
        "num_ids_4": 44
    },
    {
        "number": 4902,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\") == \"\", \"Empty string\"\nassert solution(\"a\") == \"a\", \"Single char\"\nassert solution(\"aa\") == \"aa\", \"2 chars\"\nassert solution(\"ab\") == \"ab\", \"2 chars\"\nassert solution(\"abc\") == \"c\", \"3 chars\"\n",
        "num_ids_2": 26,
        "num_ids_4": 54
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('aaah') == 'no'\nassert solution('aaaaah') == 'no'\nassert solution('h') == 'go'\n",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"aaah\") == \"go\", \"Should output go\"\nassert solution(\"aaaaah\") == \"no\", \"Should output no\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"go\"\nassert solution(input()) == \"no\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\nprint(solution(input()))",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'go'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'go'\nassert solution('a') == 'no'\nassert solution('a') == 'no'\nassert solution('') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"aaah\") == \"go\"\nassert solution(\"aaaaah\") == \"no\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('aaah') == 'go', 'Sample tests: fail'\nassert solution('aaaaah') == 'go', 'Sample tests: fail'\nassert solution('h') == 'go', 'Sample tests: fail'\nassert solution('aaaaa') == 'no', 'Sample tests: fail'\nassert solution('h') == 'no', 'Sample tests: fail'\n",
        "num_ids_2": 34,
        "num_ids_4": 67
    },
    {
        "number": 4903,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('aaah') == 'go'\nassert solution('aaaaah') == 'no'\nassert solution('aaaaaaah') == 'no'\nassert solution('h') == 'no'\nassert solution('ha') == 'no'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('') == 'A'\nassert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution
        "num_ids_2": 35,
        "num_ids_4": 1657
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A2B2A1A2A2A2A1A2A2A2A2') == 'A'\nassert solution
        "num_ids_2": 56,
        "num_ids_4": 1657
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == \"A\"\nassert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"ABBABAABA\") == \"A\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"A2B1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A1B2A2B2A2A2B2A1\") == \"B\"\nassert solution(\"A2A1A2B2A1A2A2A2\") == \"A\"\nassert solution(\"A1A1A2A1A2A1A1A2A1A1A2A1A1A2\") == \"A\"\nassert solution
        "num_ids_2": 50,
        "num_ids_4": 112
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('AA1A1') == 'A'\n\"\"\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('A1B2A3B3A1A1A2A2A1A3A1B2A1') == 'B'",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4904,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('A2B1A2B2A1A2A2A2') == 'A'\nassert solution('B1B2B1A2A1A2A2A2A1A2') == 'A'\nassert solution('B2A1A2A2A2B1A1A2A2A2') == 'A'\nassert solution('A2B1A2A2A2B1A1A2A2A1A2') == 'B'",
        "num_ids_2": 54,
        "num_ids_4": 114
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 2\") == \"6\"\nassert solution(\"6 5\") == \"7\"\nassert solution(\"1 2\") == \"0\"\nassert solution(\"5 3 2\") == \"5\"\nassert solution(\"1 2 2\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\n\"\"\"\n--- Day 11: Seating System ---\n\nYour plane lands with plenty of time to spare. The final leg of your journey is a ferry that goes directly to the tropical island where you can finally start your vacation. As you get to the waiting area to board the ferry, you realize you're so early, nobody else has even got a seat.\n\nBy modeling the process people use to choose (or abandon) their seat in this area, you can roughly predict what the wait will be. You just need to simulate enough people to make the average wait estimates correct.\n\nTo simulate enough people in the waiting area, you'll need a sample of all of the available seats in the waiting area. Write a function that generates this data (the distribution of people in the waiting area as a histogram):\n\n    Sample Distribution (see list)\n    The distribution is plotted as a list of tuples, where each tuple represents the number of occupied seats at a given height.\n\nThe result is a list of tuples, where each tuple represents the number of occupied seats at a given height;\neach tuple's first element is the height (an integer), and its second element is the number of occupied seats at that height.\n\nYour list of tuples should look something like this:\n\nsample = [(10, 10), (11, 0), (12, 0), (13, 0), (14, 5), (15, 0)]\nFor example, sample[0] = (10, 10) because 10 seats are occupied in the 10th position of the waiting area (i.e., the seat immediately in front of the person who just got in). The second tuple, 14 in the list, shows that 14 seats are occupied in the 14th position, and so on.\n\nYour goal is to calculate the probability that at least one of the people in your group can see the seat in the exact position they're standing. So, given the above distribution, if we were to consider just one of the people in the group, what would their probability of seeing the seat be?\n\nLet's say the person standing next to them is in seat 14, and the person to their left is in seat 10. If we were to consider just one of the people in the group, we can calculate their probability of seeing the seat by dividing the number of occupied seats in the 14th position by the number of occupied seats in the 10th position, i.e.,\n\n14 / 10 = 1.2\n\nThe seat will be seen if the probability of seeing the seat is greater than or equal to 1.2. So, the answer is 1.2, or 50%.\n\nFunction Description\n\nComplete the function in the editor below. It must return an integer representing the probability that at least one of the people in your group can see the seat in the exact position they're standing.\n\nseatSeating has the following parameter(s):\n\nx: an integer representing the number of people in your group\ny: an integer representing the height of seats\nInput Format\n\nThe first line contains a single integer,, denoting the number of people in your group.\nThe second line contains an integer, the number of seats in the waiting area.\nThe third line contains  space-separated integers.\n\nConstraints\n\nOutput Format\n\nReturn the probability that at least one of the people in your group can see the seat in the exact position they're standing.\n\nSample Input\n\n3\n12\n12\n5 4 3\nSample Output\n\n1.2\nExplanation\n\nThe seat in the 1st row, 7th seat, and 4th row are all occupied, so the first person in your group can see the seat. The second person in your group can see the seat. The third person in your group can see the seat. So, we return 1.2, or 50% chance that at least one of the people in your group can see the seat.\n\n\"\"\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\nassert solution('''\n6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '50'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"21\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 4 5 5') == '7'\nassert solution('2 3 1') == '2'\nassert solution('2 5 1') == '2'\nassert solution('3 5 2') == '1'\nassert solution('5 6 4') == '2'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n2 2\n1 2 2\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 4\n2 1 1\n1 2 1\n2 3 1\n\"\"\") == \"3\"\nassert solution(\"\"\"\n2\n1 2\n2 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 6 20 4') == '21'\nassert solution('7 6 20 4') == '14'\nassert solution('8 5 1 1') == '36'\n\n'''\n\nimport math\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '18'\n\"\"\"\n\nimport sys\nfrom collections import defaultdict\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''6 5\n1 6 20 4\n5 3 2 4\n1 2 2\n2 3 8\n2 4 3\n3 6 10\n3 5 15\n''') == '21'\nassert solution('''4 3\n1 2 3\n2 4 2\n3 4 1\n''') == '6'\nassert solution('''5 3\n1 2 3\n2 4 2\n3 4 1\n''') == '5'\nassert solution('''4 2\n1 2\n2 3\n3 4\n''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4905,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3 3\\n2 2\\n2 3\\n2 4\") == \"1\"\nassert solution(\"5 5\\n1 2 2 4\\n3 5 3\\n3 4 3\\n3 5 1\\n2 5 3\\n2 5 1\\n3 5 4\\n3 4 2\\n4 4 4\\n1 1 2\\n2 1 2\\n1 1 2\\n2 2 2\\n2 2 2\\n2 2 2\") == \"4\"\n",
        "num_ids_2": 110,
        "num_ids_4": 110
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution(\"D H3e2l3o1W1o3r4l2d1!2\") == \"HHHeellloWooorrrrlld!!\"\n\"\"\"",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!\"\n\nSample Input:\nD 8GQH5VVOWR8AJ\nSample Output:\nGQH5VVOWR8AJ\n\n\"\"\"\n\n\"\"\"---SOLUTION---\"\"\"\nimport math",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == \"H3e2l3o1W1o3r4l2d1!\"\n\"\"\"\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D DDaAaAaAbB!') == 'DDaAaAaAbB!'\n",
        "num_ids_2": 67,
        "num_ids_4": 67
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('E H2E3l1l2o4r3rrrrrlld!!') == 'H2e2l1l2o4r3rrrrrlld1!'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld1!'\n",
        "num_ids_2": 86,
        "num_ids_4": 86
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!'\nassert solution('D H3e2l3o1W1o3r4l2d1!2') == 'HHHeellloWooorrrrlld!!'\n",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nE\nHHHeellloWooorrrrlld!!\n''') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('''\nD\nH3e2l3o1W1o3r4l2d1!2\n''') == 'HHHeellloWooorrrrlld!!'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!2\"\nassert solution
        "num_ids_2": 1537,
        "num_ids_4": 1537
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('E HHHeellloWooorrrrlld!!') == 'H3e2l3o1W1o3r4l2d1!2'\nassert solution('D A'*100) == 'A'*100\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4906,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"E HHHeellloWooorrrrlld!!\") == \"H3e2l3o1W1o3r4l2d1!\"",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == 'Alice'\nassert solution('1') == 'Bob'\n'''\n\n'''\nThe game is as follows:\n\nAlice and Bob break up a single integer branch of length $n$ into two parts. They alternate.\n\nIf the two parts are of different lengths, then Bob wins. If the two parts are of the same length, then Alice wins.\n\nAlice then goes.\n\nFor example, if Alice and Bob are playing the game with $n=5$, then Alice can break off two integers of length $1$ and $2$ from a single integer of length $4$.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nBob then breaks off $2$ (i.e. 2nd integer) and then Bob goes.\n\nBob breaks off $1$ (i.e. 1st integer) and then Bob goes.\n\nBob breaks off $1$ (i.e. 1st integer) and then Bob goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $1$ (i.e. 1st integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $2$ (i.e. 2nd integer) and then Alice goes.\n\nAlice breaks off $1$ (i.",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"Alice\"\nassert solution(\"7\") == \"Bob\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == 'Alice'\nassert solution('5') == 'Bob'\n\n---Input---\n - A line containing a single integer $2\\leq n\\leq 10^9$, the length of the branch.\n\nSample Output:\nAlice\n1",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\\n2\") == \"Alice\"\nassert solution(\"3\\n4\") == \"Bob\"\nassert solution(\"5\\n6\") == \"Alice\"\nassert solution(\"7\\n8\") == \"Bob\"\nassert solution(\"10\\n11\") == \"Alice\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n''') == 'Alice'\nassert solution('''\n5\n''') == 'Bob'\nassert solution('''\n6\n''') == 'Alice'\nassert solution('''\n10\n''') == 'Bob'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\nassert solution('3') == 'Alice'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n2\\n') == 'Alice'\nassert solution('2\\n5\\n') == 'Bob'\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2') == 'Bob'\nassert solution('4') == 'Bob'\nassert solution('7') == 'Alice'\nassert solution('10') == 'Alice'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == 'Alice'\nassert solution('3') == 'Bob'\nassert solution('4') == 'Bob'\n\"\"\"\n\n\nimport math\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4907,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == 'Alice'\nassert solution('2') == 'Bob'\n\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"1 2 3\") == \"1+2=3\"\nassert solution(\"7 8 9\") == \"7+8=9\"\nassert solution(\"4 5 6\") == \"4+5=6\"\nassert solution(\"5 5 5\") == \"5+5=5\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"8 5 3\") == \"8+5=13\"\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == '5+3=8'\nassert solution(input('5 3 8')) == '5+3=8'\nprint(solution())\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"4 2 4\") == \"4+2=6\"\nassert solution(\"1 1 1\") == \"1+1=2\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 8\") == \"5+3=8\"\nassert solution(\"8 3 5\") == \"8+3=11\"\nassert solution(\"5 5 5\") == \"10\"\nassert solution(\"5 5 8\") == \"10\"\nassert solution(\"5 8 5\") == \"10\"\n",
        "num_ids_2": 32,
        "num_ids_4": 56
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('3 4 10') == '3+4=7+10=13'\nassert solution('3 4 7') == '3+4=7+7=14'\n\"\"\"",
        "num_ids_2": 36,
        "num_ids_4": 56
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('4 8 4 +') == '4+8=13'\nassert solution('3 3 5 +') == '3+5=8'\nassert solution('2 2 3 +') == '2+2=5'\nassert solution('1 1 2 +') == '1+2=3'\n",
        "num_ids_2": 33,
        "num_ids_4": 67
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('5 3 4') == '5+3=7'\n\nSample Input:\n3 8 -1\nSample Output:\n3-8=1\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('4 4 5') == '7-4=5'\n\nINPUT:\n4 6 9\nOUTPUT:\n9 9 9\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4908,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3 8') == '5+3=8'\nassert solution('4 4 1') == '4-1=3'\nassert solution('6 5 8') == '5+3=8'\nassert solution('9 9 9') == '9+9=18'\nassert solution('15 8 5') == '8+5=15'",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n') == 'NO'\nassert solution('2\\n') == 'YES'\nassert solution('3\\n') == 'YES'\nassert solution('4\\n') == 'YES'\nassert solution('5\\n') == 'YES'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5\n3 2 2 1 1 3 1 1''') == 'NO'\nassert solution('''5\n3 2 2 1 1 2 1 1''') == 'YES'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"8 2 2 1 1 3 1 1\") == \"YES\"",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2\n2 2 1 1 3 1 1\n''') == 'NO'\nassert solution('''\n8\n3 2 2 1 1 3 1 1\n''') == 'YES'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('8\\n3 2 2 1 1 3 1 1\\n') == 'YES'\nassert solution('12\\n10 7 4 1 1 2 4 1\\n') == 'YES'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'YES'\nassert solution('2') == 'NO'\nassert solution('3') == 'YES'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"8\") == \"YES\"\nassert solution(\"20\") == \"NO\"\nassert solution(\"4\") == \"YES\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n'''\n8\n3 2 2 1 1 3 1 1\n'''\n    ) == 'YES'\n\nassert solution(\n'''\n1\n0 1\n'''\n    ) == 'YES'\n\nassert solution(\n'''\n5\n5\n1 1 1 1 1\n'''\n    ) == 'NO'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"YES\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4909,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"YES\"\nassert solution([8, 3, 2, 2, 1, 1, 1, 3, 1, 1]) == \"YES\"\nassert solution([8, 3, 2, 2, 1, 1, 1, 3, 1, 1, 1]) == \"NO\"\n",
        "num_ids_2": 36,
        "num_ids_4": 66
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"mummy\"\nassert solution(\"20\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\") == \"witch\"\n",
        "num_ids_2": 81,
        "num_ids_4": 81
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10\\ngolden\\nhalloween') == 'demon'\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"1\\ngolden\\nmummy\\nwitch\\ndemon\\nghost\\nghost\\ndemon\\nghost\\nghost\\nghost\\nghost\\nghost\\ngolden\\nmummy\\nwitch\\ndemon\\nghost\\nghost\\ngolden\\ngolden\\ngolden\\n\"\n) == \"mummy\"\n\nassert solution(\n    \"1\\ngolden\\nghost\\nghost\\nghost\\nghost\\nghost\\nghost\\nghost\\nghost\\nghost\\nghost\\ngolden\\nmummy\\ndemon\\ndemon\\ndemon\\nwitch\\nwitch\\nwitch\\n\"\n) == \"mummy\"\n\nassert solution(\n    \"1\\nmummy\\nmummy\\nghost\\nghost\\nghost\\nghost\\nghost\\nghost\\ngolden\\ngolden\\ngolden\\n\"\n) == \"mummy\"\n\nassert solution(\n    \"2\\nwitch\\ndemon\\ndemon\\ngolden\\ngolden\\ngolden\\n\"\n) == \"witch\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') =='mummy'\nassert solution('10') =='mummy'\nassert solution('10') =='mummy'\nassert solution('10') =='mummy'\nassert solution('10') =='mummy'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"mummy\"\nassert solution(\"3\") == \"mummy\"\nassert solution(\"4\") == \"mummy\"\nassert solution(\"5\") == \"mummy\"\nassert solution(\"6\") == \"mummy\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\ndemon\\n') =='mummy'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n1\nghost\nmummy\nwitch\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\ndemon\n''') == 'demon'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\nhello\\nhi\\n') == 'hi'\nassert solution('10\\ngo\\nche\\n') == 'che'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution([3, 'ghost','mummy', 'witch', 'ghost','mummy', 'witch', 'witch', 'demon', 'demon']) == 'witch'\nassert solution([4,'mummy','mummy','mummy','mummy','mummy','mummy','mummy','mummy', 'witch', 'witch']) =='mummy'\nassert solution([1, 'ghost','mummy', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', 'witch', '",
        "num_ids_2": 80,
        "num_ids_4": 1671
    },
    {
        "number": 4910,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\ngolden\\nhouse\\nchimney\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon') == 'ghost'\nassert solution('10\\ngolden\\nhouse\\nchimney\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon') =='mummy'\nassert solution('10\\ngolden\\nhouse\\nchimney\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon') == 'witch'\nassert solution('10\\ngolden\\nhouse\\nchimney\\nghost\\nmummy\\nwitch\\ndemon\\ndemon\\ndemon\\ndemon') == 'demon'\n",
        "num_ids_2": 87,
        "num_ids_4": 173
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n    Artist Album Song_Title Length_seconds\n    Tchaikovsky Piano_Favorites November 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n    3\n    Artist\n    Album\n    Song_Title\n    Sample Output:\n    Artist Album Song_Title Length_seconds\n    George_Winston Summer Lullaby 215\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n''') == '''\n    Artist Album Song_Title Length_seconds\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    George_Winston Summer Lullaby 215\n'''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n3\\nArtist\\nAlbum\\nSong_Title\\nLength_seconds\") == \"George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nGeorge_Winston Summer Lullaby 215\\n\"\n",
        "num_ids_2": 231,
        "num_ids_4": 231
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\nArtist Album Song_Title Length_seconds\n5\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nGeorge_Winston Summer Lullaby 215\n3\nArtist\nAlbum\nSong_Title\nSample Output:\nArtist Album Song_Title Length_seconds\nGeorge_Winston Summer Lullaby 215\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\nTchaikovsky Piano_Favorites November 163\n\nArtist Album Song_Title Length_seconds\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\nJames_Taylor Dad_Loves_His_Work London_Town 236\nGeorge_Winston Summer Lullaby 215\nTchaikovsky Piano_Favorites November 163\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\n5\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\n",
        "num_ids_2": 169,
        "num_ids_4": 169
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n2\") == \"1 2\"\nassert solution(\"4\\n3\\n5\\n2\\n6\") == \"2 5 6 3 4\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\"",
        "num_ids_2": 164,
        "num_ids_4": 164
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\") == \"George_Winston Summer Lullaby 215\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\n\"\n\nassert solution(\"6\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nTchaikovsky Piano_Favorites November 163\\nGeorge_Winston Summer Lullaby 215\\n\"\n\nassert solution(\"3\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n\nassert solution(\"4\") == \"James_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\n\"\n",
        "num_ids_2": 168,
        "num_ids_4": 288
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n",
        "num_ids_2": 1220,
        "num_ids_4": 1220
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(s) == \"Artist Album Song_Title Length_seconds\\nTchaikovsky Piano_Favorites November 163\\nJames_Taylor Dad_Loves_His_Work Hard_Times 192\\nJames_Taylor Dad_Loves_His_Work London_Town 236\\nJames_Taylor Dad_Loves_His_Work Summers_Here 163\\nGeorge_Winston Summer Lullaby 215\\n\"\n\n----SOLUTION----\n",
        "num_ids_2": 94,
        "num_ids_4": 94
    },
    {
        "number": 4911,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n    Artist Album Song_Title Length_seconds\n    Tchaikovsky Piano_Favorites November 163\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    George_Winston Summer Lullaby 215\n    3\n    Artist\n    Album\n    Song_Title\n    ''') == '''\n    Artist Album Song_Title Length_seconds\n    George_Winston Summer Lullaby 215\n    James_Taylor Dad_Loves_His_Work Hard_Times 192\n    James_Taylor Dad_Loves_His_Work London_Town 236\n    James_Taylor Dad_Loves_His_Work Summers_Here 163\n    Tchaikovsky Piano_Favorites November 163\n    '''",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2 10 7\\n5 5 5 5 5 5 5\") == \"YES\"\nassert solution(\"5 5 5 5 5 5 5\\n2 3 4 5 6 7\") == \"NO\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 10 7') == \"YES\"\nassert solution('5 5 5 5 5 5') == \"NO\"\nassert solution('3 5 7') == \"NO\"\nassert solution('1 1 1 1 1 1') == \"NO\"",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 10 7') == 'YES', \"But why doesn't the test case fail?\"\n\"\"\"\nfrom typing import List",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 10 7') == 'YES'\nassert solution('2 10 5') == 'NO'\nassert solution('3 3 5') == 'YES'\n'''\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3 2 7\n5 5 5 5 5 5\n''') == 'YES'\nassert solution('''\n3 2 7\n10 10 10 10 10 10\n''') == 'NO'\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 10 7') == 'YES'\nassert solution('2 20 4 4 5 7') == 'YES'\nassert solution('10 2 4 6 5 4 5 4 6') == 'NO'\n",
        "num_ids_2": 27,
        "num_ids_4": 45
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 5') == 'NO'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3\\n') == 'YES'\nassert solution('1 10 3\\n') == 'NO'\nassert solution('1 50 7\\n') == 'YES'\nassert solution('1 100 7\\n') == 'NO'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 10 7\") == \"YES\"\nassert solution(\"100 10 5\") == \"NO\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4912,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == 'YES'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10') == \"Not Effective\"\nassert solution('30') == \"Not Effective\"\nassert solution('20') == \"50.000000\"\n",
        "num_ids_2": 22,
        "num_ids_4": 34
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"10\") == \"Not Effective\"\nassert solution(\"1\") == \"Not Effective\"\nassert solution(\"12\") == \"Not Effective\"\nassert solution(\"12\") == \"Not Effective\"\nassert solution(\"12\") == \"Not Effective\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('2') == '66.666667'\nassert solution('1000') == 'Not Effective'",
        "num_ids_2": 24,
        "num_ids_4": 35
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10') == 'Not Effective'\nassert solution('2') == '66.666'\nassert solution('20') == '50.0'\nassert solution('10') == 'Not Effective'\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n') == 'Not Effective'\nassert solution('100\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n') == '50.0'\nassert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYYN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY\\n') == 'Not Effective'\n",
        "num_ids_2": 107,
        "num_ids_4": 160
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\nprint('Solution: ', solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '''\n10\nNYNY\nNNNY\nYYNN\nNNNY\nNYYY\nYYYY\nYYYY\nYYYY\nYYYY\nYYYY\n'''\n) == \"50.000000\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nNYNY\nNNYY\nNYYY\nNYYN\nNNNY\nYYNN\nYYYN\nYYNY\nYYNN\nYYNY\nSample Output:\nNot Effective\n66.666667\n50.000000\n''') == '50.000000'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"Not Effective\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4913,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\nNYNY\\nNNYY\\nNYYY\\nNYNN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYNY') == 'Not Effective'\nassert solution('10\\nNYNY\\nNNNY\\nNYYY\\nNYNN\\nNNNY\\nYYNN\\nYYYN\\nYYNY\\nYYNN\\nYYYY') == '66.666667'\n",
        "num_ids_2": 104,
        "num_ids_4": 104
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5\nBAACC\n''') == 'Bruno'\n''')\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\nBAACC') == 'Bruno'\nassert solution('2\\nABABC') == 'Adrian'\nassert solution('4\\nBABAA') == 'Bruno'\nassert solution('8\\nAABAAABBAABAABABAA') == 'Bruno'\nassert solution('10\\nABABAAABAABBAABBAA') == 'Adrian'",
        "num_ids_2": 32,
        "num_ids_4": 74
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'Goran'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\nABC\\n') == 'Goran'\nassert solution('3\\nABABC\\n') == 'Bruno'",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '2'\n\"\"\"\n\nN = int(input())\ncorrect_answers = input()\n\nanswers = []\n\nfor i in range(N):\n    answers.append(correct_answers[i])\n\ncount = 1\n\nfor i in range(len(answers) - 1):\n    if answers[i] == answers[i+1]:\n        count += 1\n\nprint(count)\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\nABACA\") == \"Bruno\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\nABC\\n\") == \"Bruno\"\nassert solution(\"5\\nBAACC\\n\") == \"3\"\nassert solution(\"5\\nAAAA\\n\") == \"Goran\"\n",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4') == \"1\"\nassert solution('6') == \"1\"\n\n'''\n\nimport collections\nimport sys\n\nstdin = sys.stdin.read()\nN = int(stdin)\nquestions = stdin.split()\n\npairs = collections.defaultdict(int)\nfor question in questions:\n    if question[0] == question[2]:\n        pairs[question[0]] += 1\n    if question[1] == question[2]:\n        pairs[question[1]] += 1\n\nprint(max(pairs, key=pairs.get))\nprint(' '.join(sorted(pairs.keys())))\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5\") == \"3\"\nassert solution(\"6\") == \"2\"\nassert solution(\"7\") == \"2\"\nassert solution(\"8\") == \"3\"\nassert solution(\"9\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4914,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\\\n5\nBAACC\n''') == \"Bruno\"\n\nassert solution('''\\\n5\nBAACC\n''') == \"3\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '3 543'\nassert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n500 E wrong\n-1''') == '3 543'\n\"\"\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\") == \"3 543\"",
        "num_ids_2": 53,
        "num_ids_4": 53
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10 C wrong\n20 C wrong\n30 D wrong\n50 C wrong\n100 D wrong\n200 D wrong\n200 E wrong\n300 E wrong\n300 D wrong\n200 D wrong\n200 A wrong\n200 B wrong\n''') == '300 543'\nassert solution('''\n20 E wrong\n30 E wrong\n30 E wrong\n10 A wrong\n20 A wrong\n20 B wrong\n20 C wrong\n10 D wrong\n''') == '200 543'\n\n\"\"\"\nimport itertools\n\nwith open('test.txt') as f:\n    raw_input = f.read().splitlines()\n    # print(raw_input)\n    input = []\n    for i in range(len(raw_input)):\n        input.append([int(j) for j in raw_input[i].split()])\n    # print(input)\n\nall_problem_names = set()\nall_submission_time = set()\nall_submission_problems = set()\nall_submission_penalty = set()\nall_submission_count = 0\n\nfor item in input:\n    all_submission_count += 1\n    # print(item)\n    problem_name = item[1].upper()\n    if problem_name in all_problem_names:\n        continue\n    all_problem_names.add(problem_name)\n    all_submission_time.add(item[0])\n    all_submission_problems.add(problem_name)\n    all_submission_penalty.add(item[2])\n\nall_problem_time = list(all_submission_time)\nall_problem_time.sort()\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D wrong\n\"\"\") == \"543\"",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"\"\"\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n\"\"\"\n) == \"3 543\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(r\"\"\"\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n\"\"\") == \"543\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '543'\nassert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '583'\nassert solution('''5 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '583'\nassert solution('''3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '583'\nassert solution('''1 E wrong\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1''') == '583'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 E right\n10 A wrong\n30 C wrong\n50 B wrong\n100 A wrong\n200 A right\n250 C wrong\n300 D right\n-1\n\"\"\") == \"3 543\"\nassert solution(\"\"\"\n5 H right\n1 H wrong\n5 H wrong\n3 E right\n5 H right\n5 H wrong\n\"\"\") == \"3 456\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 E right\\n10 A wrong\\n30 C wrong\\n50 B wrong\\n100 A wrong\\n200 A right\\n250 C wrong\\n300 D right\\n-1\\n') == '543'\n'''\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4915,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 E right') == '1 543'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('10 5') == '5'\nassert solution('1 1 1 1') == '-1'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\nassert solution('''13 5\n4 1 2 2 2 1 2 5 4 1 2\n1 5 1 2 3 2 2 4 3 2\n2 3 1 4 5 4 1 2 5 2\n2 5 1 2 5 2 4 1 1 3\n2 3 1 4 5 4 1 2 3 2\n1 2 5 2 4 1 2 3 1 5\n3 3 2 5 4 3 2 2 4 3\n3 2 5 2 2 5 5 5 2 2\n2 5 3 2 2 1 3 3 2 1\n2 4 3 4 1 2 5 1 1 4\n2 3 2 5 4 4 2 1 2 3\n1 3 1 3 1 5 4 2 4 2\n5 4 4 2 4 5 2 4 5 5\n3 4 2 1 4 3 3 2 3 4\n5 4 3 2 5 3 2 2 3 2\n4 2 1 4 2 5 4 4 2 1\n2 4 4 4 1 4 1 4 2 2\n''') == '-1'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 1 3 4 2 4 2 1 2 1\") == \"5\"\nassert solution(\"4 5 3 4 1 5 3 1 1 4\") == \"3\"\nassert solution(\"4 2 4 1 5 4 5 2 4 1\") == \"-1\"\nassert solution(\"5 2 1 5 5 3 5 2 3 2\") == \"7\"\n",
        "num_ids_2": 38,
        "num_ids_4": 76
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('10 5') == '5'\nassert solution('10 10') == '-1'\nassert solution('4 10') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == '5'",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10 5') == '5'\nassert solution('20 10') == '-1'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n') == \"5\"\n",
        "num_ids_2": 133,
        "num_ids_4": 133
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"5\"\nassert solution(\"10 5\\n5 1 3 4 2 4 2 1 2 1\\n4 5 3 4 1 5 3 1 1 4\\n4 2 4 1 5 4 5 2 4 1\\n5 2 1 5 5 3 5 2 3 2\\n5 5 2 3 2 3 1 5 5 5\\n3 4 2 4 2 2 4 4 2 3\\n1 5 1 1 2 5 4 1 5 3\\n2 2 4 1 2 5 1 4 3 5\\n5 3 2 1 4 3 5 2 3 1\\n3 4 2 5 2 5 3 4 4 2\\n\") == \"5\"\n",
        "num_ids_2": 141,
        "num_ids_4": 141
    },
    {
        "number": 4916,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n\nassert solution('''5 4\n2 2 2 1 4 4\n4 1 2 3 3 3\n4 2 1 4 4 2\n5 2 5 4 3 3\n3 2 4 1 4 3\n4 4 4 2 4 4\n3 5 2 2 4 4\n4 4 2 4 3 4\n3 4 4 2 4 5\n''') == '5'\n\nassert solution('''5 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n\nassert solution('''10 5\n5 1 3 4 2 4 2 1 2 1\n4 5 3 4 1 5 3 1 1 4\n4 2 4 1 5 4 5 2 4 1\n5 2 1 5 5 3 5 2 3 2\n5 5 2 3 2 3 1 5 5 5\n3 4 2 4 2 2 4 4 2 3\n1 5 1 1 2 5 4 1 5 3\n2 2 4 1 2 5 1 4 3 5\n5 3 2 1 4 3 5 2 3 1\n3 4 2 5 2 5 3 4 4 2\n''') == '5'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"gunilla has a point\"\n\"\"\"\nimport sys\nimport re",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 7\n5 5\n''') == 'gunilla has a point'\nassert solution('''\n2 2\n5 5\n''') == 'edward is right'\nassert solution('''\n3 3\n1 2\n5 5\n''') == 'gunilla has a point'\nassert solution('''\n4 7\n1 5\n10 20\n''') == 'edward is right'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n1 7\\n5 5') == 'gunilla has a point'\nassert solution('2\\n2 7\\n5 5') == 'edward is right'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('2') == 'edward has a point'\n\n---Input: https://www.hackerrank.com/challenges/s10-interquartile-range/problem?h_l=interview&playlist_slugs%5B%5D=interview-preparation-kit&playlist_slugs%5B%5D=sorting&h_r=next-challenge&h_v=zen\n---Output: This is a sample test case. Your solution will be tested against this template. Your solution will be allowed to have a maximum of 100 ms / 1000 ms for each input.\n\"\"\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''1 7\n5 5\n''') == 'gunilla has a point'\nassert solution('''1 10\n5 5\n''') == 'edward is right'\nassert solution('''1 2\n5 1\n''') == 'gunilla has a point'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2') == 'gunilla has a point'\nassert solution('1') == 'edward is right'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5\n2 7\n5 5''') == 'gunilla has a point'\nassert solution('''5\n5 7\n5 5''') == 'gunilla has a point'\n''')\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == 'gunilla has a point'\nassert solution('2') == 'edward is right'\nassert solution('3') == 'gunilla has a point'\nassert solution('4') == 'edward is right'\nassert solution('5') == 'edward is right'\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n7\\n5 5') == 'gunilla has a point'\nassert solution('1\\n10\\n10 10\\n10\\n5 5\\n10') == 'gunilla has a point'\n",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4917,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1 7\n5 5''') == 'gunilla has a point'\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    '''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n'\n                '10 11\\n1 1\\n1 2\\n1 3\\n2 1\\n2 2\\n2 3\\n3 1\\n3 2\\n3 3\\n4 1\\n4 2\\n4 3\\n5 6\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n2\\n3\\n3\\n3\\n'\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"\"\"\n3\nt 1 2\nt 2 3\ns 1\n\"\"\") == \"2\"\n\nassert solution(\n    \"\"\"\n4\nt 1 2\nt 2 3\ns 1\ns 2\n\"\"\") == \"3\"\n\nassert solution(\n    \"\"\"\n10\nt 1 10\nt 1 2\nt 1 3\nt 2 3\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\ns 9\ns 10\n\"\"\") == \"5\"\n\nassert solution(\n    \"\"\"\n10\nt 1 2\nt 2 3\nt 4 3\nt 5 4\nt 6 5\ns 1\ns 2\ns 3\ns 4\ns 5\ns 6\ns 7\ns 8\ns 9\ns 10\n\"\"\") == \"10\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 2\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n\") == \"4\\n4\\n4\\n1\\n2\\n2\\n4\"\nprint(\"PASS\")\n",
        "num_ids_2": 55,
        "num_ids_4": 55
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"4\\n4\\n4\\n1\\n2\\n2\\n4\\n\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\nassert solution('''\n10 11\nt 1 10\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\nt 5 6\ns 5\ns 6\ns 10\n''') == '4'\n\nassert solution('''\n1 1\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\n''') == '1'\nassert solution('''\n1 1\nt 1 2\nt 1 3\ns 1\ns 2\ns 3\ns 4\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\n') == '4'\nassert solution('10 11\\n s 1\\n s 2\\n s 3\\n') == '4'\nassert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\n') == '4'\n",
        "num_ids_2": 50,
        "num_ids_4": 75
    },
    {
        "number": 4918,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10 11\\nt 1 10\\nt 1 2\\nt 1 3\\ns 1\\ns 2\\ns 3\\ns 4\\n') == '4\\n4\\n4\\n1\\n2\\n2\\n4\\n'\nprint('solution = ok')\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"1983\"\nassert solution(\"10\") == \"1983\"\nassert solution(\"1\") == \"1985\"\nassert solution(\"2\") == \"1987\"\nassert solution(\"4\") == \"1983\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '2015'\nassert solution('6') == '1982'\nassert solution('7') == '2016'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nassert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 2\nIceland 1\n''') == '1982'\nassert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\nIceland 3\n''') == '1983'\n''')\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2015'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n4\nIceland 2016\nSweden 2015\nIceland 1982\nNorway 1999\n3\nSweden 1\nIceland 1\nIceland 2\n''') == '2015'\nassert solution('''\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n1\n''') == '1'\nassert solution('''\n1\n1\n1\n1\n1\n''') == '1'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5') == '2018'\nassert solution('5') == '2018'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999\\n3\\nSweden 1\\nIceland 1\\nIceland 2') == '2015'\nassert solution('1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n1\\n",
        "num_ids_2": 1504,
        "num_ids_4": 1504
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''3\nIceland 2016\nSweden 2015\nIceland 1982\n''') == '2015'\nassert solution('''5\nIceland 2016\nSweden 2015\nIceland 1982\nIceland 1987\nIceland 1988\n''') == '1982'",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4919,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\nIceland 2016\\nSweden 2015\\nIceland 1982\\nNorway 1999') == '2015'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abcdefghi') == '15'\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('aabbcccddddeeeee') == '1'\nassert solution('ababacddddeeeef') == '1'\nassert solution('ababcddddeeeef') == '1'\n",
        "num_ids_2": 33,
        "num_ids_4": 66
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('bbbcccddddeeeee') == '9'\nassert solution('a') == '1'\nassert solution('aab') == '1'\nassert solution('aabababababab') == '10'\n",
        "num_ids_2": 33,
        "num_ids_4": 54
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('aaaa') == '0'\nassert solution('ab') == '1'\nassert solution('a') == '0'\nassert solution('ac') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 46
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('') == '0'\nassert solution('abbcccddddeeeee') == '10'\nassert solution('a'*100) == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(solution.__doc__) == '10'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('abbcccddddeeeeffgh') == '10'\nassert solution('abbcccddddeeeeeeeee') == '11'\nassert solution('abbcccddddeeeeeefgh') == '11'\nassert solution('abbcccddddeeeeffffffgh') == '12'\n",
        "num_ids_2": 33,
        "num_ids_4": 68
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('abbcccddddeeeee') == '10'\nassert solution('a') == '1'\nassert solution('a$') == '0'\nassert solution('bbcccddddeeeee') == '20'\nassert solution('b$') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 53
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"10\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4920,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('abbcccddddeeeee') == '10'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nEngineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == '''\nEngineering will save the world from inefficiency\n. is a blight on.. and its\nhumanity\n'''\nassert solution(' ') ==''\nassert solution('''\n''') ==''\n",
        "num_ids_2": 14,
        "num_ids_4": 20
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering will save the world from.. and its... and its humanity\"\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its\\nhumanity') == 'Engineering will save the world from inefficiency... and its. humanity'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering will save the world from inefficiency\\n... and its humanity\\n', solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n')\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering will save the world from inefficiency\\nI... and its humanity\\n', solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n')\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering will save the world from inefficiency\\nI.... and its humanity\\n', solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n')\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering will save the world from inefficiency\\nI..... and its humanity\\n', solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n')\nassert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n') == 'Engineering will save the world from inefficiency\\nI...... and its humanity\\n', solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n')\n",
        "num_ids_2": 157,
        "num_ids_4": 315
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its humanity.'\n'''\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\") == \"Engineering,will save the world,from inefficiency,Inefficiency is,a blight on the world and its,humanity\"\nassert solution(\"Inefficiency is a blight on the world and its humanity\") == \"Inefficiency is a blight on the world and its humanity\"",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity''') == 'Engineering will save the world from inefficiency... and its humanity'''",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity\\n\") == \"Engineering\\n. is a\\nbLIGHT\\n. on.. and its\\nhumanity\\n\"\n",
        "num_ids_2": 57,
        "num_ids_4": 57
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''Engineering will save the world from inefficiency\nInefficiency is a blight on the world and its\nhumanity\n''') == 'Engineering will save the world from inefficiency... and its humanity'",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4921,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('Engineering will save the world from inefficiency\\nInefficiency is a blight on the world and its humanity') == 'Engineering. will save the world from inefficiency.. is a blight on.. and its humanity'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\nassert solution('''5 3\n-1 -2 3\n-1 2 3\n-1 -2 -3\n1 -2 -3\n1 2 -3''') =='satisfactory'\nassert solution('''3 2\n-1 2 3\n-1 2 -3\n-1 -2 3\n-1 -2 -3\n-1 -2 -3''') == 'unsatisfactory'\nassert solution('''3 2\n-1 2 3\n-1 2 -3\n1 -2 3\n1 -2 -3\n1 -2 -3''') =='satisfactory'''\nassert solution('''5 3\n-1 -2 3\n-1 -2 -3\n1 2 -3\n1 2 -3\n1 -2 -3''') =='satisfactory'''",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3''') == 'unsatisfactory'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3\") == \"unsatisfactory\"\n\n\"\"\"",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 3') =='satisfactory'\nassert solution('2 2') == 'unsatisfactory'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == 'unsatisfactory'\nassert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') =='satisfactory'\nassert solution('''\n5 1\n2\n''') == 'unsatisfactory'\nassert solution('''\n5 2\n1 2\n''') =='satisfactory'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5 3\n-1 2 3\n-1 -2 3\n1 -2 3\n1 -2 -3\n1 2 -3\n''') == \"unsatisfactory\"\nassert solution('''\n5 4\n-1 2 4\n-1 -2 4\n1 -2 4\n1 -2 -4\n1 2 -4\n''') == \"unsatisfactory\"\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 3\\n-1 2 3') =='satisfactory'\nassert solution('5 3\\n-1 2 3') =='satisfactory'\nassert solution('5 3\\n-1 -2 3') =='satisfactory'\nassert solution('5 3\\n1 -2 3') =='satisfactory'\nassert solution('5 3\\n1 2 -3') =='satisfactory'\n",
        "num_ids_2": 38,
        "num_ids_4": 77
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3') =='satisfactory'\nassert solution('1 -2 3') =='satisfactory'\nassert solution('1 2 -3') == 'unsatisfactory'\nassert solution('1 -2 -3') == 'unsatisfactory'\nassert solution('1 -2 2') == 'unsatisfactory'\n",
        "num_ids_2": 29,
        "num_ids_4": 60
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') =='satisfactory'\nassert solution('3 3\\n-1 2 3\\n-1 -2 3\\n1 -2 3\\n1 -2 -3\\n1 2 -3') == 'unsatisfactory'\n",
        "num_ids_2": 85,
        "num_ids_4": 85
    },
    {
        "number": 4922,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"satisfactory\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n8\n1 1 1 5 3 4 6 6\n\"\"\") == \"4\"\n\nassert solution(\"\"\"\n7\n1 1 1 1 5 1 3\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n10\n1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n11\n1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"\n\nassert solution(\"\"\"\n12\n1 1 1 1 1 1 1 1 1 1 1 1\n\"\"\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6\\n') == '4'\nassert solution('16\\n1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\\n') == '2'\nassert solution('5\\n1 1 1 1 1 1\\n') == 'none'\nassert solution('3\\n1 1 1\\n') == '1'\n",
        "num_ids_2": 65,
        "num_ids_4": 102
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n3 5 1 2\") == \"2\"\nassert solution(\"5\\n1 2 3 5 4\") == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''8\n1 1 1 5 3 4 6 6''') == '4'\nassert solution('''6\n1 1 1 5 3 4 6''') == '3'\nassert solution('''5\n1 1 1 5 3 4''') == '3'\nassert solution('''6\n1 1 1 5 3 4''') == 'none'\nassert solution('''6\n1 1 1 5 3 4''') == 'none'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"\n8\n1 1 1 5 3 4 6 6\n\"\"\") == \"4\"\nassert solution(\"\"\"\n10\n1 1 1 5 3 4 6 6 6 6 6\n\"\"\") == \"None\"\nassert solution(\"\"\"\n3\n3 3 3\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8') == '4'\nassert solution('8 1 1 5 3 4 6 6') == '4'",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1 1 5 3 4 6 6') == '4'",
        "num_ids_2": 17,
        "num_ids_4": 17
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n1 1 1 5 3 4 6 6\n''') == '4'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4923,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('8\\n1 1 1 5 3 4 6 6') == '4'\nassert solution('3\\n1 2 3') == '1'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10:45:35\") == \"15:35:15\"\nassert solution(\"12:30:00\") == \"14:30:00\"\nassert solution(\"00:00:00\") == \"00:00:00\"\nassert solution(\"06:45:35\") == \"08:35:15\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\n\n\"\"\"\n\nimport sys\n\nfor line in sys.stdin:\n    time = line.split()\n    hours, minutes, seconds = int(time[0]), int(time[1]), int(time[2])\n    if hours <= 23 and minutes <= 59 and seconds <= 59:\n        time = hours * 3600 + minutes * 60 + seconds\n    else:\n        time = -1\n    print(time)\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'\nassert solution('08:00:00\\n20:00:00') == '20:00:00'\n",
        "num_ids_2": 50,
        "num_ids_4": 50
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('04:00:00') == '08:00:00'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('20:00:00\\n04:00:00') == '08:00:00'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('20:00:00','04:00:00') == '08:00:00'\nassert solution('23:45:00','08:00:00') == '23:45:00'\n",
        "num_ids_2": 48,
        "num_ids_4": 48
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('20:00:00','04:00:00') == '08:00:00'\nprint(solution('20:00:00','04:00:00'))\n\n'''",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('20:00:00') == '08:00:00'\nassert solution('05:00:00') == '19:30:00'\nassert solution('09:00:00') == '09:00:00'\nassert solution('23:59:00') == '00:00:00'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4924,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"20:00:00\") == \"08:00:00\"\nassert solution(\"04:00:00\") == \"08:00:00\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == '4'\nassert solution_test() == '4'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"1 3 5 7 9\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 36
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"31 6\") == \"4\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"1\"\nassert solution(\"1 10\") == \"1\"\nassert solution(\"10 2\") == \"2\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"5 1000000000\") == \"5\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1\\n6') == '4'\nassert solution('2\\n6') == '5'\nassert solution('3\\n6') == '5'\nassert solution('4\\n6') == '6'\nassert solution('5\\n6') == '6'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"6 4\") == \"1\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '4'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 1\") == \"4\"\nassert solution(\"1 2\") == \"3\"\nassert solution(\"1 3\") == \"2\"\nassert solution(\"2 4\") == \"1\"\nassert solution(\"2 3\") == \"0\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\\\n31 6\n''') == '4'\nassert solution('''\\\n31 7\n''') == '3'\nassert solution('''\\\n32 4\n''') == '4'\nassert solution('''\\\n3 5\n''') == '6'\nassert solution('''\\\n1 0\n''') == '0'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4925,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"4\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1.0\"\nassert solution(\"2\") == \"2.0\"\nassert solution(\"3\") == \"2.82842712475\"\nassert solution(\"4\") == \"3.141592653589793\"\nassert solution(\"5\") == \"3.141592653589793\"\n",
        "num_ids_2": 24,
        "num_ids_4": 57
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '2.999999999999999'\nassert solution('1') == '1.000000000000001'\n\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2') == '2.0'\nassert solution('10') == '2.16666667'\nassert solution('100') == '2.25'\nassert solution('1000') == '2.3'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3') == '2.6'\nassert solution('0') == '1.0'\nassert solution('1') == '1.0'\nassert solution('10000') == '7.8'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '2.718281828459045'\nassert solution('10') == '2.718281828459045'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('3') == '2.6666666666666665'\nassert solution('4') == '3.333333333333333'\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '2.718281828459045'\nassert solution('10') == '20.08553692318737'\nassert solution('100') == '250.0'\nassert solution('1000') == '3.413181640625'",
        "num_ids_2": 35,
        "num_ids_4": 63
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '2.0'\nassert solution('100') == '200.0'\nassert solution('1000') == '2000.0'\nassert solution('10000') == '20000.0'\nassert solution('100000') == '2000000.0'\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == \"2.718281828459045\"\nassert solution('10') == \"2.718281828459045\"\nassert solution('15') == \"2.718281828459045\"\nassert solution('20') == \"2.718281828459045\"\nassert solution('25') == \"2.718281828459045\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4926,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3') == '2.6666666666666665'\nassert solution('4') == '2.8'\nassert solution('10') == '2.884429'\nassert solution('100') == '3.202858'\nassert solution('1000') == '3.153792'\n",
        "num_ids_2": 27,
        "num_ids_4": 55
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 3 7''') == 'paul', 'First'\nassert solution('''1 1 1 1 1''') == 'opponent', 'Second'\nassert solution('''10 8 7''') == 'opponent', 'Third'\nassert solution('''15 16 8''') == 'paul', 'Fourth'\nassert solution('''1 1 1 1 1''') == 'opponent', 'Fifth'\n",
        "num_ids_2": 40,
        "num_ids_4": 78
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input) == 'paul'\n\"\"\"\nn, p, q = list(map(int, stdin.split()))",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == 'paul'\nassert solution('6 7 8') == 'opponent'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(samples) == 'paul'\nassert solution_2(samples) == 'opponent'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input()) == \"opponent\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 7') == 'paul', 'First'\nassert solution('1 2 3') == 'paul', 'Second'\nassert solution('4 5 7') == 'opponent', 'Third'\nassert solution('10 9 8') == 'opponent', 'Fourth'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 3 7\") == \"paul\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20\") == \"opponent\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\") == \"paul\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22\") == \"paul\"\nassert solution(\"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23\") == \"paul\"\n\"\"\"",
        "num_ids_2": 43,
        "num_ids_4": 106
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 3 7') == 'paul'\nassert solution('2 3 7') == 'opponent'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 3 7') == 'paul'\nassert solution('5 3 7') == 'opponent'\nassert solution('10 20 30 40 50 60 70 80 90 100') == 'opponent'\nassert solution('1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000 1000') == 'paul'",
        "num_ids_2": 26,
        "num_ids_4": 93
    },
    {
        "number": 4927,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n5 3 7\npaul''') == 'paul'\nassert solution('''\n4 3 8\npaul''') == 'opponent'\nassert solution('''\n3 5 6\nopponent''') == 'paul'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '2'\nassert solution('2') == '3'\nassert solution('3') == '4'\nassert solution('4') == '5'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__(\"sys\").stdin.read()) == \"2\"\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n10\n''') == '5'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n3\n''') == '2'\nassert solution('''\n4\n''') == '3'\nassert solution('''\n15\n''') == '8'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"2\"\nassert solution(\"2\") == \"3\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"5\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n') == '1'\nassert solution('10\\n') == '2'\nassert solution('20\\n') == '4'\nassert solution('50\\n') == '12'\nassert solution('100\\n') == '21'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3') == '2'\nassert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('7') == '4'\nassert solution('13') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3') == '1'\nassert solution('4') == '3'\nassert solution('5') == '3'\nassert solution('10') == '2'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"2\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4928,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n') == '2'\nassert solution('2\\n') == '3'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\nabc\\nabc') == 'Yes'\nassert solution('1234\\n1234a\\n1234') == 'No'\nassert solution('123\\n123a\\n1234') == 'No'\nassert solution('123\\n1234a\\n1234') == 'No'\nassert solution('123\\n123\\n1234') == 'No'\n",
        "num_ids_2": 36,
        "num_ids_4": 73
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"a123\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''S: 1233\nP: 1233a''') == 'No'\nassert solution('''S: 1233\nP: 1233a''') == 'Yes'\nassert solution('''S: 1233\nP: 1233aa''') == 'No'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''123\n123a''') == 'No'\nassert solution('''123456789\n123456789a''') == 'Yes'\nassert solution('''abc123\nABC123''') == 'Yes'\nassert solution('''a1b2c3d4e5f6g7h8i9j0''') == 'Yes'\nassert solution('''z-y-x-w-v-u-t-s-r-q-p-o-n-m-l-k-j-i-h-g-f-e-d-c-b-a-''') == 'Yes'\n",
        "num_ids_2": 17,
        "num_ids_4": 57
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"123\") == \"Yes\"\nassert solution(\"123a\") == \"No\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\nassert solution(\"aaa\") == \"Yes\"\nassert solution(\"Aaaa\") == \"No\"\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 42
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('123') == 'No'\nassert solution('123a') == 'Yes'\nassert solution('2A2') == 'Yes'\nassert solution('a2A') == 'No'\nassert solution('a5a') == 'Yes'\n",
        "num_ids_2": 21,
        "num_ids_4": 45
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1234\") == \"No\", \"Wrong answer\"\nassert solution(\"1233\") == \"Yes\", \"Wrong answer\"\nassert solution(\"123aa\") == \"No\", \"Wrong answer\"\nassert solution(\"12aa34\") == \"Yes\", \"Wrong answer\"\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"123\") == \"No\"\nassert solution(\"123a\") == \"No\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4929,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n2\n1\n''') == 'No'\nassert solution('''\n12\n2\n1\n''') == 'No'\nassert solution('''\n123\n2\n1\n''') == 'No'\nassert solution('''\n1\n1\n1\n''') == 'Yes'\nassert solution('''\n1\n2\n1\n''') == 'No'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(stdin) == \"zelena paprika\"\nassert solution(stdin + \"\\n\") == \"zelena paprika\"\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input()) == 'zelena paprika'",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('papapripikapa') == 'zepelepenapa'\nassert solution('papapripikapa') == 'zelena paprika'\n'''\n\n'''\nCode Explanation\nThe puzzle mentioned above is written as a mathematical problem. It is a problem where we need to find the answers to a series of operations based on a few formulas. To solve the problem, we need to write a program that takes as input a series of mathematical formulas and outputs the answer.\n\nThe equations are as follows:\n\np :=  p' := p + 1\ne :=  e' := e + e\ni :=  i' := i + i\no :=  o' := o + o\nu :=  u' := u + u\np, e, i, o and u are letters of the English alphabet. The sum of letters of each is 1.\n\nLet the list be\n\n[p, e, i, o, u].\n\nWe will write equations as:\n\n[p + 1, e + e, i + i, o + o, u + u]\n\nThen we need to write formulas that will transform equations by replacing letters p, e, i, o and u with letters of the English alphabet (i.e., p' = p, e' = e, i' = i, o' = o and u' = u).\n\nLet the list be\n\n[p', e', i', o', u']\n\nAfter transformation we will write equations as\n\n[p' + 1, e' + e, i' + i, o' + o, u' + u]\n\nHowever, we need to write formulas that will transform equations by replacing letters p, e, i, o and u with letters of the English alphabet (i.e., p' = p, e' = e, i' = i, o' = o and u' = u).\n\nSo we need to write the following formulas for the equations:\n\np' + 1, e' + e, i' + i, o' + o and u' + u.\n\nNow we can easily write our code to decode the equations, as we are writing code in an infinite loop.\n\nInput Format:\n\nInput contains a series of equations. Each equation is separated by a single space.\n\nOutput Format:\n\nOutput is a decoded sentence.\n\nConstraints:\n\nThe input and output formats are as follows:\n\nEach equation will contain one letter of the English alphabet.\nThe input will contain equations in a series of letters of the English alphabet.\nThere will be at least one equation in the input.\nThe output will contain a single sentence.\nThe sentence will contain exactly one space.\nThe sentence will contain only letters of the English alphabet.\nSample Input:\n\npapapripikapa\nSample Output:\n\nzelena paprika\n'''",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\nassert solution('xaxbaxxxyaxb') == 'xaxbyaxby'\nassert solution('nena nana') == 'na'\nassert solution('nana') == 'na'\nassert solution('xaxbaxxxyaxb') == 'xaxbyaxby'\n",
        "num_ids_2": 43,
        "num_ids_4": 67
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('zepelepenapa papapripikapa') == 'zelena paprika'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"\") == \"\"\nassert solution(\"abcdefghijklmnopqrstuvwxyz\") == \"abcdefghijklmnopqrstuvwxyz\"",
        "num_ids_2": 29,
        "num_ids_4": 65
    },
    {
        "number": 4930,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"zepelepenapa papapripikapa\") == \"zelena paprika\"\nassert solution(\"abcd\") == \"\"\n\"\"\"",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3 10\") == \"10\"\nassert solution(\"4 10\") == \"11\"\nassert solution(\"5 10\") == \"12\"\nassert solution(\"5 20\") == \"IMPOSSIBLE\"\n\nstdin = \"\"\"20 10\n20 20\"\"\"\nassert solution(stdin) == \"20\"\n\nstdin = \"\"\"20 20\n1\n20 20\n20 20\n1\n1\n1\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 47
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == 'ALL GOOD'\nassert solution('-32 2') == '-32'\nassert solution('32 2') == '-32'\nassert solution('-32 -6') == 'IMPOSSIBLE'\nassert solution('-32 -6.01') == 'IMPOSSIBLE'\n",
        "num_ids_2": 22,
        "num_ids_4": 50
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('32 2') == '-32'\nassert solution('70 10') == '10'\nassert solution('50 50') == '10'\n",
        "num_ids_2": 23,
        "num_ids_4": 34
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('32 2') == 'IMPOSSIBLE'\n\nassert solution('-32 2') == '-32'\n\nassert solution('32 -2') == '32'\n\nassert solution('-32 -2') == '-32'\n\nassert solution('-32 2') == '-32'",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('32 2') == \"-32\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('32 2') == '-32'\nassert solution('20 3') == '20.000000'\nassert solution('-42 -3') == '-42'\nprint('YOUR CODE IS CORRECT!')\n",
        "num_ids_2": 25,
        "num_ids_4": 39
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"32 2\") == \"-32\"\nassert solution(\"0 0\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"ALL GOOD\"\nassert solution(\"0 1\") == \"IMPOSSIBLE\"\nassert solution(\"1 1\") == \"ALL GOOD\"\n",
        "num_ids_2": 25,
        "num_ids_4": 51
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('32 2') == '-32'\nassert solution('1 2') == '1'\nassert solution('4 4') == '4'\nassert solution('-5 6') == '-5'\nassert solution('5 5') == 'IMPOSSIBLE'\n\"\"\"\nx, y = input().split()\nx = float(x)\ny = float(y)\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3') == 'IMPOSSIBLE'\n\nassert solution('1 5') == '-5.0'\n\nassert solution('1 0') == '-5.0'\n\nassert solution('0 1') == '-5.0'\n\nassert solution('2 2') == '5.0'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4931,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n2') == 'IMPOSSIBLE'\nassert solution('32 2') == 'IMPOSSIBLE'\nassert solution('32 -4') == '32.04'\nassert solution('32 -4.1') == '32.04'\nassert solution('32 -4.1 -.1') == '31.95'\n",
        "num_ids_2": 30,
        "num_ids_4": 60
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 2 3 3\\n1 3 4\\n') == 'both'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('1 3 2') == 'none'\nassert solution('3 2 2') == 'both'\nassert solution('4 3 1') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 49
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"2 2 3 3\n1 3 4\"\"\") == \"both\"\nassert solution(\"\"\"2 2 2 3\n1 3 1\"\"\") == \"both\"\nassert solution(\"\"\"2 2 1 3\n1 3 2\"\"\") == \"both\"\nassert solution(\"\"\"2 2 2 3\n1 3 1\"\"\") == \"one\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\n",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('2 3 4') == 'none'",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''2 2 3 3\n1 3 4''') == 'both'\nassert solution('''2 2 3 3\n1 3 4\n5 7 8''') == 'one'\nassert solution('''2 2 3 3\n1 3 4\n7 8 9''') == 'none'\n'''\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('8 4 6') == 'none'\n",
        "num_ids_2": 25,
        "num_ids_4": 37
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"2 2 3 3\"\n) == \"both\"\nassert solution(\n    \"1 3 4\"\n) == \"one\"\nassert solution(\n    \"1 2 4\"\n) == \"none\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4932,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 2 3 3') == 'both'\nassert solution('1 3 4') == 'one'\nassert solution('2 2 2 2') == 'none'",
        "num_ids_2": 25,
        "num_ids_4": 38
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"3 -1 -8\") == \"3\"\nassert solution(\"-6 -7 -8\") == \"0\"\nassert solution(\"3 -4 -5\") == \"0\"\n",
        "num_ids_2": 26,
        "num_ids_4": 55
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 5 2') == '10'\nassert solution('-1 2 5') == '10'\nassert solution('-1 1 -1') == '0'\nassert solution('1 2 3 4') == '4'\n",
        "num_ids_2": 25,
        "num_ids_4": 52
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('4 6 8') == '10'\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, finds the product of the sum of its elements, which is the sum of all elements of the input sequence minus its largest element. If the input sequence is empty, the function should return $1$.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n10\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n10\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the decreasing order.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[-1, 1, 2, 5]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[1]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[-1, 1, 2, 5]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[1]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the decreasing order, but not the last one, which is a duplicate of the last element.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[-1, 1, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[1]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the first and last elements, which are duplicates of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[2, 5]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the decreasing order, but not the last element, which is a duplicate of the first element.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[5]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the first and last elements, which are duplicates of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[2, 5]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[5]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the decreasing order, but not the last element, which is a duplicate of the last element.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[1, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[1]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the first and last elements, which are duplicates of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[2, 5]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[5]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the decreasing order, but not the last element, which is a duplicate of the first element.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[1, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the decreasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[1, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[2, 5]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n\nOutput:\n\n[5, 2]\n\nSample Input:\n\n1\n10\n\nSample Output:\n\n[2]\n\n-----------------------------------------------------------------------------------------------------------------------\n\nWrite a function that, given a sequence of integers, returns a list with the elements of the input sequence in the increasing order, but not the last element, which is a duplicate of each other.\n\nInput:\n\n5\n10 5 2 1 -1\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"4 6 8\") == \"10\"\nassert solution(\"4 2 8\") == \"10\"\nassert solution(\"5 10 3\") == \"7\"\nassert solution(\"5 -10 3\") == \"-7\"\nassert solution(\"-5 -10 3\") == \"7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 2 3') == 2\nassert solution('2 1 3') == 1\nassert solution('3 2 1') == 0\nassert solution('4 5 6') == 0\nassert solution('8 9 2 5') == 10\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n6\n8\n''') == '10'\nassert solution('''8\n4\n6\n''') == '10'\nassert solution('''8\n8\n4\n''') == '10'\nassert solution('''4\n6\n8\n''') == '10'\nassert solution('''4\n4\n6\n8''') == '10'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4 6 8') == '10'\nassert solution('1 2 5') == '3'\nassert solution('2 4 1') == '2'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 2 3 4\") == \"10\", \"Not the same\"\nassert solution(\"2 3 4 1\") == \"10\", \"Not the same\"\nassert solution(\"3 4 1 2\") == \"10\", \"Not the same\"\nassert solution(\"4 5 1 2\") == \"10\", \"Not the same\"\nassert solution(\"5 6 1 2\") == \"10\", \"Not the same\"\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 6 8\") == \"10\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4933,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 4 7\") == \"10\"\nassert solution(\"1 2 3\") == \"10\"\nassert solution(\"3 5 4\") == \"10\"\nassert solution(\"2 2 2\") == \"5\"\nassert solution(\"3 4 5\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"250 200\") == \"275\"",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(__import__('sys').stdin.read()) == '533'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"500 70\") == \"533\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('500 70') == '533'\nassert solution('400 50') == '44'\nassert solution('30 70') == '30'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(input) == '533'",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('500 70') == '533'\nassert solution('1000 90') == '1033'\nassert solution('1000 90') == '1033'\nassert solution('1000 90') == '1033'\nassert solution('500 90') == '533'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '533'\nassert solution('5 100') == '533'\nassert solution('10 50') == '10'\n\n\"\"\"\n",
        "num_ids_2": 19,
        "num_ids_4": 30
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"1000 50\") == \"1005\"\nassert solution(\"100 50\") == \"1015\"\n",
        "num_ids_2": 23,
        "num_ids_4": 35
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"500 70\") == \"533\"\nassert solution(\"1000 50\") == \"1009\"\nassert solution(\"1000 70\") == \"1009\"\nassert solution(\"500 50\") == \"500\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 46
    },
    {
        "number": 4934,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('500 70') == '533'\nassert solution('1000 60') == '452'\nassert solution('10 60') == '5'\nassert solution('50 60') == '51'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('5 8') == '30.0'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '0.10000000149011612'\nassert solution('2') == '0.099999999994478475'\nassert solution('3') == '1.1550000055533597'\nassert solution('4') == '0.19999999999999908'\n",
        "num_ids_2": 36,
        "num_ids_4": 69
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n2 1\n9 8\n7 6\n''') == '39.0'\nassert solution('''\n1\n1\n10\n''') == '10.0'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 9\n69 60\n100 60\n''') == '39.0'\n\nassert solution('''\n5 3\n5 9\n1 5\n3 4\n7 9\n''') == '37.4'\n\nassert solution('''\n2 1\n0 1\n''') == '0.0'\n\nassert solution('''\n6 8\n1 2\n2 3\n3 4\n4 5\n5 6\n6 7\n7 8\n''') == '6.8'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2 9') == '39.0'\n\nassert solution('6 1') == '36.0'\n\nassert solution('4 1') == '4.0'",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 9\n69 60\n100 60''') == '39.0'\n\nassert solution('''4 10\n23 0\n10 23\n0 10\n3 9''') == '31.8'\n\nassert solution('''6\n13 0\n25 0\n40 0\n8 2\n4 0\n0 0''') == '42.0'\n",
        "num_ids_2": 16,
        "num_ids_4": 23
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('20 2') == '27.0'\nassert solution('50 100') == '27.0'\n\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 9') == '39.0'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1\\n10 1\\n20\\n') == '39.0'\nprint(solution('1\\n10 1\\n20\\n'))\n\"\"\"\n\n\"\"\"\nSample input:\n3 4\n69 60\n100 60\n100 60\n\nSample output:\n39.0\n30.0\n-0.15654565456545656\n\"\"\"",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4935,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 9') == '39.0'\nassert solution('1 100') == '30.0'\nprint(solution(input()))",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(solution.__doc__) == '2 28'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n\"\"\"\n2\n30 25\n\"\"\") == \"2 28\"\nassert solution(\n\"\"\"\n1\n15\n\"\"\") == \"1 15\"\nassert solution(\n\"\"\"\n10\n31 36 35 25 30 27 36 27 30\n\"\"\") == \"1 16\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('2 3 5\\n30 26 -1\\n0\\n') == '2 28'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n5\n23 27 31 28 30\n''') == \"2 28\"\nassert solution('''\n10\n36 36 35 30 30 30 36 36 36\n''') == \"4 36\"\nassert solution('''\n10\n36 36 35 30 30 30 36 36 36\n''') == \"4 36\"\nassert solution('''\n10\n38 37 34 36 30 32 30 36 36 37\n''') == \"3 37\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '2 28'\nassert solution('4') == '1 28'\nassert solution('3') == '2 27'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5\\n23 27 31 28 30\") == \"2 28\"\nassert solution(\"3\\n-20 -10 10\") == \"1 -10\"\nassert solution(\"2\\n-20 -10 10\") == \"1 -10\"\nassert solution(\"2\\n-20 -10 10\") == \"1 -10\"\n\n'''\n\n'''\nclass Solution:\n    def solution(self, stdin):\n        pass\n    def run(self, *params):\n        if not len(params):\n            raise TypeError('run() missing 1 required positional argument')\n        stdin = params[0]\n        print(self.solution(stdin))",
        "num_ids_2": 37,
        "num_ids_4": 75
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\\n23 27 31 28 30\") == \"2 28\"\nassert solution(\"4\\n24 26 26 26 27\") == \"1 27\"",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5\n23 27 31 28 30\n''') == \"2 28\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n5\n23 27 31 28 30\n''') == '2 28'\nassert solution('''\n5\n100\n''') == '3 100'\nassert solution('''\n5\n-20 -40 -60 -30 -20\n''') == '4 30'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4936,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n8\n-10 -20 -20 -20 -20 -20 -20 -20 -20\n-20 -10 -10 -10 -10 -10 -10 -10 -10\n-20 -10 -10 -10 -10 -10 -10 -10 -10\n-20 -10 -10 -10 -10 -10 -10 -10 -10\n-20 -10 -10 -10 -10 -10 -10 -10 -10\n-20 -10 -10 -10 -10 -10 -10 -10 -10\n-20 -10 -10 -10 -10 -10 -10 -10 -10\n-20 -10 -10 -10 -10 -10 -10 -10 -10\n''') == '2 28'\nassert solution('''\n10\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n''') == '2 28'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 6') == '2'\nassert solution('7 4') == '1'\nassert solution('2 2') == '1'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n5 7\n0 1 2 3 4\n\"\"\") == \"0\"\nassert solution(\"\"\"\n6 7\n1 2 3 4 5 6\n\"\"\") == \"5\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('3 6\\n1 2 3') == '2'\nassert solution('3 6\\n4 6 5\\n8 6 3') == '1'\nassert solution('3 6\\n1 2 3\\n8 3 4 5\\n6 6 7 8') == '2'\nassert solution('3 6\\n1 2 3\\n4 6 5\\n6 6 7 8') == '1'\nassert solution('3 6\\n1 2 3\\n8 3 4 5\\n6 6 7 8') == '0'\n",
        "num_ids_2": 37,
        "num_ids_4": 92
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2 3\n\"\"\") == \"2\", \"Atli should win because of the larger fleet.\"\nassert solution(\"\"\"\n10 10 10\n1 2 3 4 5 6 7 8 9 10\"\"\") == \"1\", \"finni should win because of the larger fleet.\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 6\\n1 2 3\\n\") == \"2\"\nassert solution(\"10 10\\n1 1 1 2 3 5 5\\n\") == \"1\"\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n1 2 3') == '2'\nassert solution('5\\n1 2 3 4') == '3'\nassert solution('3\\n1 2 3') == '1'\nassert solution('2\\n1 2 3') == '0'\n\n'''\n",
        "num_ids_2": 31,
        "num_ids_4": 61
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"\"\"\n3 6\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 5\n1 2 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 10\n1 2 3 4 5 6 7 8 9 10\n\"\"\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\\n2\") == \"1\"\nassert solution(\"1 1\\n3\") == \"1\"\nassert solution(\"3 3\\n2 2 3\") == \"3\"\nassert solution(\"2 1\\n2 3\") == \"1\"\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 59
    },
    {
        "number": 4937,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\nprint(solution(open(0).read()))",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '0'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(input()) == '9'\nassert solution(input()) == '8'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == '9'\nassert solution('10') == '10'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"2\") == \"3\"\nassert solution(\"-1\") == \"0\"",
        "num_ids_2": 20,
        "num_ids_4": 31
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\") == \"9\"\nassert solution(\"3\") == \"3\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '9'\nassert solution('1') == '9'\nassert solution('0') == '0'\nassert solution('1') == '9'\nassert solution('2') == '7'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\nMWWM') == '9'\nassert solution('9\\nMMWMMW') == '1'\n\n'''\n\nimport math",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '9'\nassert solution('2') == '8'\nassert solution('3') == '7'\nassert solution('4') == '6'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\nMWWWMWMMWM\\n\") == \"9\"\nassert solution(\"2\\nMWWWMMWM\\n\") == \"3\"\nassert solution(\"3\\nMMWMWM\\n\") == \"4\"\nassert solution(\"4\\nMMWMW\\n\") == \"5\"\nassert solution(\"5\\nMMWMM\\n\") == \"6\"\n",
        "num_ids_2": 37,
        "num_ids_4": 72
    },
    {
        "number": 4938,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '9'\nassert solution(\"2\") == '2'\nassert solution(\"3\") == '3'\nassert solution(\"1\") == '1'\nassert solution(\"6\") == '6'\n",
        "num_ids_2": 18,
        "num_ids_4": 38
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n    \"5 4\\n8 -2 3 undo 2\"\n    ) == \"3\"\n\nassert solution(\n    \"5 4\\n3 1 2 -1\"\n    ) == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"15 10\\n0 4 -6 undo 2\") == \"2\"\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''8 -2 3 undo 2\n2 -1 2 undo 1''') == '1'\nassert solution('''5 4\n8 -2 3 undo 2\n2 -1 2 undo 1''') == '4'\nassert solution('''6 4\n8 -1 2 undo 1\n1 2 3 undo 2\n2 1 4 undo 4\n2 -2 2 undo 1\n3 1 -4 undo 2''') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 28
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('10 12\\n100 4 10 undo 2') == '5'\nprint('Challenge 01:', 'Success.')\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 4\\n8 -2 3 undo 2\") == \"3\"\nassert solution(\"10 10\\n-20 -15 2 3\\n-15 -10 1 2\\n-20 10 8 2\\n-15 20 15 3\\n-10 -15 4 -15 2\\n-20 -10 10 5\\n-15 -20 5 -1 5\\n-10 10 10 2\\n-15 10 -10 4\\n-20 10 -10 10\\n-15 -20 10\\n-10 -15 -10\\n-20 -10 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -10 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -10\\n-15 -20 -10\\n-10 -15 -10\\n-20 -15 -",
        "num_ids_2": 1424,
        "num_ids_4": 1424
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 4\n8 -2 3 undo 2''') == '3'\nassert solution('''5 4\n4 3 undo 1\n''') == '4'",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('10 5\\n0 3 2 4 1 -1') == '1'\n",
        "num_ids_2": 39,
        "num_ids_4": 39
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 4\\n8 -2 3 undo 2') == '3'\nassert solution('1 2 3 4 5 6 7 8') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4939,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 4\n8 -2 3 undo 2''') == '3'\nassert solution('''5 4\n8 -2 3 undo 2\nundo 2 undo 3\nundo 2 undo 3\nundo 2 undo 3''') == '3'\nassert solution('''5 4\n8 -2 3 undo 2\nundo 2 undo 3\nundo 2 undo 3\nundo 2 undo 3''') == '3'\nassert solution('''5 4\n8 -2 3 undo 2\nundo 2 undo 3\nundo 2 undo 3\nundo 2 undo 3\nundo 2 undo 3''') == '3'\nassert solution('''5 4\n8 -2 3 undo 2\nundo 2 undo 3\nundo 2 undo 3\nundo 2 undo 3\nundo 2 undo 3\nundo 2 undo 3''') == '3'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\n\"\"\"\n1 1 1\n1 2 1\n1 3 1\n1 4 1\n1 5 1\n1 6 1\n1 7 1\n2 3 1\n2 4 1\n2 5 1\n2 6 1\n2 7 1\n3 2 1\n3 4 1\n3 5 1\n3 6 1\n3 7 1\n4 2 1\n4 4 1\n4 5 1\n4 6 1\n4 7 1\n5 2 1\n5 4 1\n5 5 1\n5 6 1\n5 7 1\n6 2 1\n6 4 1\n6 5 1\n6 6 1\n6 7 1\n7 2 1\n7 4 1\n7 5 1\n7 6 1\n7 7 1\n\"\"\"\n) == \"6 7\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\nassert solution('''\n2 4\n3 4 5\n1 5 3\n5 2 1\n''') == '8 9'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3') == '6 7'\nassert solution('2 2 1') == '3'",
        "num_ids_2": 25,
        "num_ids_4": 25
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2 3\\n3 2 1') == \"6 7\"\nassert solution('2 3\\n3 2 1') == \"7 6\"\n'''\n\nimport heapq\n\nn, m = map(int, input().split())\n\na = []\nfor i in range(n):\n    a.append(int(input()))\n\npq = []\n\nfor i in range(n):\n    if i == 0:\n        heapq.heappush(pq, (a[i],i))\n    else:\n        if a[i] >= pq[0][0]:\n            heapq.heappush(pq, (a[i],i))\n        else:\n            heapq.heappush(pq, (pq[0][0],pq[0][1]))\n            heapq.heappop(pq)\n            heapq.heappush(pq, (a[i],i))\n\nT = []\nfor i in range(n):\n    T.append(pq[0][0] + heapq.heappop(pq)[0])\n\nprint(\" \".join(map(str, T)))\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\"\"\n1 2 3\n3 2 1\n\"\"\") == \"6 7\"\n",
        "num_ids_2": 5,
        "num_ids_4": 5
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == \"6 7\"\nassert solution_two() == \"7 6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\nprint(solution('''\n3 4\n2 1\n3 2 2\n'''))",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3 2\n1 2 3\n3 2 1\n''') == '6 7'\nassert solution('''\n2 3\n1 2 3\n3 2 1\n''') == '6 7'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '6 7'\nassert solution('2 1') == '6'\nassert solution('2 2') == '8'\nassert solution('2 2') == '0'\n",
        "num_ids_2": 23,
        "num_ids_4": 45
    },
    {
        "number": 4940,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3\\n3 2 1\\n') == '6 7'\nassert solution('5 5\\n1 2 4 2 2\\n') == '7 9'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\nmoles correct\\n') == '64 correct\\n665 incorrect'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmoles correct\\nmoles destroy correct\\nmoles mills incorrect\\n') == '64 incorrect\\n665 correct\\n'\n\nSample Input:\n8\ncocacola\nmiles\nghazel\negypt\nfruits\ngrapes\n5\ncocacola\nmiles\nghazel\nfruits\ngrapes\nmiles\ncocacola\nghazel\nfruits\ngrapes\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2\\nals mollen mollen mollen mollen mollen mollen\\n3\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"\n\"\"\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"7\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"\n",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\\nals mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"65 correct\\n665 incorrect\"\n\n\"\"\"",
        "num_ids_2": 56,
        "num_ids_4": 56
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"8\\nals mollen mollen mollen mollen mollen mollen mollen\\n4\\nals when correct\\nmollen moles correct\\nmollen destroy correct\\nmollen mills incorrect\\n\") == \"64 correct\\n665 incorrect\"\n\"\"\"\n",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''als mollen mollen mollen mollen mollen mollen mollen\nmollen moles correct\nmollen destroy correct\nmollen mills incorrect''') == '64 correct\\n665 incorrect'\n\n-- python --\nfrom typing import List",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2\") == \"correct\\ncorrect\"\nassert solution(\"3\") == \"correct\\ncorrect\\nincorrect\"\nassert solution(\"4\") == \"correct\\n6 incorrect\"\n",
        "num_ids_2": 30,
        "num_ids_4": 44
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"6\") == \"6 correct\\n6 incorrect\\n6 correct\\n6 incorrect\\n6 correct\\n6 incorrect\"\nassert solution(\"2\") == \"2 correct\\n2 incorrect\\n2 correct\\n2 incorrect\\n2 correct\\n2 incorrect\"\nassert solution(\"10\") == \"10 correct\\n10 incorrect\\n10 correct\\n10 incorrect\\n10 correct\\n10 incorrect\"\nassert solution(\"18\") == \"18 correct\\n18 correct\\n18 correct\\n18 correct\\n18 correct\\n18 correct\"\nassert solution(\"100\") == \"100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect\\n100 correct\\n100 incorrect",
        "num_ids_2": 62,
        "num_ids_4": 124
    },
    {
        "number": 4941,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n3\n*\n**\n***\n\"\"\"\n) == \"3 correct\\n\"\nassert solution(\n    \"\"\"\n7\n*\n**\n***\n*\n**\n**\n***\n\"\"\"\n) == \"7 correct\\n\"\nassert solution(\n    \"\"\"\n4\n*\n***\n*\n***\n\"\"\"\n) == \"2 correct\\n\"\nassert solution(\n    \"\"\"\n10\n*\n**\n*\n***\n*\n***\n***\n**\n*\n*\n***\n*\n*\n***\n*\n*\n***\n\"\"\"\n) == \"18 correct\\n\"\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n2 3 4 3') == '7'\n\n'''\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"4\\n2 3 4 3\") == \"7\"",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n3\n2 3 4\n''') == '6'\nassert solution('''\n5\n2 3 4 2 3\n''') == '9'\nassert solution('''\n8\n2 2 4 4 4 4 2 2\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\nassert solution('5\\n1 1 1 1 1') == '1'\nassert solution('10\\n10 1 1 1 1 1 1 1 1') == '3'\nassert solution('30\\n10 1 1 1 1 1 1 1 1 1') == '5'\nassert solution('1000\\n9 1 1 1 1 1 1 1 1 1') == '100'\n",
        "num_ids_2": 33,
        "num_ids_4": 76
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''4\n2 3 4 3\n''') == '7'\nassert solution('''4\n5 1 4 4\n''') == '2'\nassert solution('''4\n1 2 3 4\n''') == '2'\nassert solution('''4\n1 2 3 4\n5 1 3 2\n''') == '1'\nassert solution('''4\n1 2 3 4\n5 1 4 3\n''') == '1'\n",
        "num_ids_2": 14,
        "num_ids_4": 28
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('4\\n2 3 4 3') == '7'\nassert solution('3\\n1 1 1') == '3'\nprint('Congratulations, have a nice day!')\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '7'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n4\n2 3 4 3\n''') == '7'\nassert solution('''\n3\n1 2 3\n''') == '3'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4942,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''3\n2 3 4\n''') == '7', 'First'\nassert solution('''4\n3 2 4 3\n''') == '7', 'Second'\nassert solution('''6\n2 3 4 3\n''') == '6', 'Third'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"\n1\n0 0\n1 1\n2 2\n\"\"\") == \"0.0 0.0\"\nassert solution(\"\"\"\n5\n1 0\n2 2\n3 3\n4 4\n5 5\n6 6\n\"\"\") == \"1.0 2.0\"\nassert solution(\"\"\"\n20\n1 1\n2 2\n3 3\n4 4\n5 5\n6 6\n7 7\n8 8\n9 9\n10 10\n11 11\n12 12\n13 13\n14 14\n15 15\n16 16\n17 17\n18 18\n19 19\n20 20\n21 21\n22 22\n23 23\n24 24\n25 25\n26 26\n27 27\n28 28\n29 29\n30 30\n31 31\n32 32\n33 33\n34 34\n35 35\n36 36\n37 37\n38 38\n39 39\n40 40\n41 41\n42 42\n43 43\n44 44\n45 45\n46 46\n47 47\n48 48\n49 49\n50 50\n51 51\n52 52\n53 53\n54 54\n55 55\n56 56\n57 57\n58 58\n59 59\n60 60\n61 61\n62 62\n63 63\n64 64\n65 65\n66 66\n67 67\n68 68\n69 69\n70 70\n71 71\n72 72\n73 73\n74 74\n75 75\n76 76\n77 77\n78 78\n79 79\n80 80\n81 81\n82 82\n83 83\n84 84\n85 85\n86 86\n87 87\n88 88\n89 89\n90 90\n91 91\n92 92\n93 93\n94 94\n95 95\n96 96\n97 97\n98 98\n99 99\n100 100\n101 101\n102 102\n103 103\n104 104\n105 105\n106 106\n107 107\n108 108\n109 109\n110 110\n111 111\n112 112\n113 113\n114 114\n115 115\n116 116\n117 117\n118 118\n119 119\n120 120\n121 121\n122 122\n123 123\n124 124\n125 125\n126 126\n127 127\n128 128\n129 129\n130 130\n131 131\n132 132\n133 133\n134 134\n135 135\n136 136\n137 137\n138 138\n139 139\n140 140\n141 141\n142 142\n143 143\n144 144\n145 145\n146 146\n147 147\n148 148\n149 149\n150 150\n151 151\n152 152\n153 153\n154 154\n155 155\n156 156\n157 157\n158 158\n159 159\n160 160\n161 161\n162 162\n163 163\n164 164\n165 165\n166 166\n167 167\n168 168\n169 169\n170 170\n171 171\n172 172\n173 173\n174 174\n175 175\n176 176\n177 177\n178 178\n179 179\n180 180\n181 181\n182 182\n183 183\n184 184\n185 185\n186 186\n187 187\n188 188\n189 189\n190 190\n191 191\n192 192\n193 193\n194 194\n195 195\n196 196\n197 197\n198 198\n199 199\n200 200\n201 201\n202 202\n203 203\n204 204\n205 205\n206 206\n207 207\n208 208\n209 209\n210 210\n211 211\n212 212\n213 213\n214 214\n215 215\n216 216\n217 217\n218 218\n219 219\n220 220\n221 221\n222 222\n223 223\n224 224\n225 225\n226 226\n227 227\n228 228\n229 229\n230 230\n231 231\n232 232\n233 233\n234 234\n235 235\n236 236\n237 237\n238 238\n239 239\n240 240\n241 241\n242 242\n243 243\n244 244\n245 245\n246 246\n247 247\n248 248\n249 249\n250 250\n251 251\n252 252\n253 253\n254 254\n255 255\n256 256\n257 257\n258 258\n259 259\n260 260\n261 261\n262 262\n263 263\n264 264\n265 265\n266 266\n267 267\n268 268\n269 269\n270 270\n271 271\n272 272\n273 273\n274 274\n275 275\n276 276\n277 277\n278 278\n279 279\n280 280\n281 281\n282 282\n283 283\n284 284\n285 285\n286 286\n287 287\n288 288\n289 289\n290 290\n291 291\n292 292\n293 293\n294 294\n295 295\n296 296\n297 297\n298 298\n299 299\n300 300\n301 301\n302 302\n303 303\n304 304\n305 305\n306 306\n307 307\n308 308\n309 309\n310 310\n311 311\n312 312\n313 313\n314 314\n315 315\n316 316\n317 317\n318 318\n319 319\n320 320\n321 321\n322 322\n323 323\n324 324\n325 325\n326 326\n327 327\n328 328\n329 329\n330 330\n331 331\n332 332\n333 333\n334 334\n335 335\n336 336\n337 337\n338 338\n339 339\n340 340\n341 341\n342 342\n343 343\n344 344\n345 345\n346 346\n347 347\n348 348\n349 349\n350 350\n351 351\n352 352\n353 353\n354 354\n355 355\n356 356\n357 357\n358 358\n359 359\n360 360\n361 361\n362 362\n363 363\n364 364\n365 365\n366 366\n367 367\n368 368\n369 369\n370 370\n371 371\n372 372\n373 373\n374 374\n375 375\n376 376\n377 377\n378 378\n379 379\n380 380\n381 381\n382 382\n383 383\n384 384\n385 385\n386 386\n387 387\n388 388\n389 389\n390 390\n391 391\n392 392\n393 393\n394 394\n395 395\n396 396\n397 397\n398 398\n399 399\n400 400\n401 401\n402 402\n403 403\n404 404\n405 405\n406 406\n407 407\n408 408\n409 409\n410 410\n411 411\n412 412\n413 413\n414 414\n415 415\n416 416\n417 417\n418 418\n419 419\n420 420\n421 421\n422 422\n423 423\n424 424\n425 425\n426 426\n427 427\n428 428\n429 429\n430 430\n431 431\n432 432\n433 433\n434 434\n435 435\n436 436\n437 437\n438 438\n439 439\n440 440\n441 441\n442 442\n443 443\n444 444\n445 445\n446 446\n447 447\n448",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2\\n0 0\\n1 1') == '0.0 0.0'\nassert solution('3\\n0 0\\n1 1\\n0 2') == '2.0 2.0'\nassert solution('4\\n0 0\\n1 1\\n0 2\\n5 6') == '4.0 5.0'\n",
        "num_ids_2": 50,
        "num_ids_4": 81
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n0 0\\n1 1\\n0 2') == '2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 35,
        "num_ids_4": 35
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3\n0 0\n1 1\n0 2\n4\n''') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\nassert solution('''2\n0 0\n1 2\n''') == '0.0 0.0\\n0.5 1.0'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2\\n0.0 0.0\\n1.0 1.0\\n0.0 2.0\\n4\\n') == '2.0 4.0'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2\\n1.0 1.0\\n0 2\\n3') == '2.0 2.0\\n0.0 4.0'\nassert solution('1\\n1.0 1.0\\n0 2') == '0.0 2.0'\n",
        "num_ids_2": 65,
        "num_ids_4": 65
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '''0.0 0.0\n2.0 2.0\n0.0 4.0\n'''\nassert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '''1.0 0.0\n0.5 2.0\n0.0 4.0\n'''\nassert solution('''\n2\n-2 -1\n3 1\n3 2\n''') == '''-2.0 -1.0\n3.0 2.0\n3.0 2.0\n'''\nassert solution('''\n3\n0 0\n1 1\n0 2\n4\n''') == '''0.0 0.0\n2.0 2.0\n0.0 4.0\n'''\nassert solution('''\n2\n-2 -1\n3 1\n3 2\n''') == '''-2.0 -1.0\n3.0 2.0\n3.0 2.0\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4943,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('4\\n0 0\\n1 1\\n0 2\\n4') == '0.0 0.0\\n2.0 2.0\\n0.0 4.0'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '3'\nassert solution('4') == '4'\nassert solution('5') == '5'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1\") == \"1\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"10\") == \"10\"\nassert solution(\"1000\") == \"2\"\nassert solution(\"10000\") == \"2\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1\n''') == '1'\nassert solution('''\n5\n''') == '3'\nassert solution('''\n9\n''') == '7'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1'\nassert solution('10') == '10'\nassert solution('12') == '2'\nassert solution('10000000000') == '23'\nprint('Done!')\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n''') == '1'\nassert solution('''\n1\n''') == '1'\nassert solution('''\n3\n''') == '3'\nassert solution('''\n30\n''') == '3'\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"1\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '1'\nassert solution('5') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1') == '1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4944,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2') == '1'\nassert solution('5') == '3'\nassert solution('100') == '97'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''4 2\n1 5\n3 4''') == '8'\nassert solution('''8 5\n8 5\n4 4\n4 4\n4 4\n4 4\n4 4''') == '16'\nassert solution('''10 1\n2 2\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1\n1 1''') == '7'\nassert solution('''15 10\n16 16\n2 2\n2 2\n4 4\n2 2\n6 6\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4\n4 4''') == '83'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 4\\n2 2\\n1 2\\n') == '4'\nassert solution('4 1\\n1 1\\n1 1\\n') == '4'\nassert solution('4 1\\n2 1\\n1 1\\n') == '2'\n\"\"\"\n\nfrom math import floor",
        "num_ids_2": 42,
        "num_ids_4": 63
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''3 1\n12 16''') == '34'\nassert solution('''4 5\n6 8\nSample Input:\n1 1\n2 3\nSample Output:\n-1''') == '-1'\nassert solution('''1 1\n1 2\nSample Input:\n3 5\n1 1\nSample Output:\n0''') == '0'",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2\") == \"2\"\nassert solution(\"3 1\") == \"4\"\nassert solution(\"3 2\") == \"3\"\nassert solution(\"3 3\") == \"6\"\nassert solution(\"3 4\") == \"8\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution() == '34'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1 1\n7 12\n''') == '34', 'First'\nassert solution('''3 1\n15 16\n''') == '34', 'Second'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1') == '34'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 1') == '1'\nassert solution('12 16') == '34'\nassert solution('12 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n20 8\n2 1\n4\n''') == \"34\"\n\nassert solution('''\n17 6\n3 2\n4\n''') == \"21\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4945,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 1') == '0', \"You cheated!\"\nassert solution('5 5') == '26', \"You cheated!\"\nassert solution('3 3') == '12', \"You cheated!\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n4\n1 2 3 1\n''') == '3'\nassert solution('''\n3\n1 2\n''') == '2'\nassert solution('''\n3\n1 2\n''') == '1'\nassert solution('''\n4\n1 2 3 1\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2 3 1') == '2'\nassert solution('5\\n1 2 3 1 4 2') == '1'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    \"4\\n1 2 3 1\\n\") == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1 2 3 1\\n\") == \"3\"\nassert solution(\"5 4 2 3 1\\n\") == \"3\"\nassert solution(\"7 8 1 3 2 1\\n\") == \"1\"\n",
        "num_ids_2": 31,
        "num_ids_4": 48
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3\\n1 2 3 1') == '3'\nassert solution('5\\n1 1 2 1 1\\n') == '4'\nassert solution('6\\n0 0 0 0 1 1\\n') == '5'\nassert solution('7\\n1 2 1 1 1 1\\n') == '6'\nassert solution('8\\n1 2 1 1 1 1 1\\n') == '7'",
        "num_ids_2": 35,
        "num_ids_4": 75
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n    4\n    1 2 3 1\n    ''') == '3'\n\nassert solution('''\n    10\n    1 1 1 1 1 1 1 1 1 1\n    ''') == '1'\n\nassert solution('''\n    3\n    1 2\n    ''') == '2'\n\nassert solution('''\n    4\n    1 2 3\n    ''') == '1'\n\nassert solution('''\n    5\n    1 2 3 1 1\n    ''') == '1'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2 3 1') == '3'\nassert solution('4 5 6 7 8') == '8'\nassert solution('5 10 9 8 7 6') == '6'\nassert solution('3 8 9 2 7') == '5'\nassert solution('5 2 4 3 1') == '2'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 1') == \"3\", \"Should be 3\"\nassert solution('5 5 5 5') == \"5\", \"Should be 5\"\n\nprint(solution(input()))",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\\n1 2 3 1\\n\") == \"3\"\nassert solution(\"4\\n1 2 3 1\\n\") == \"4\"\n\n\"\"\"\nimport sys\n\nn = int(input())\n\nguests = []\n\nfor i in range(n):\n    guests.append(int(input()))\n\nprint(guests)",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4946,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n2 1 3\n''') == '3'\nassert solution('''\n3\n1 2 3\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.01') == '1128'\nassert solution('1.001') == '1128'\nassert solution('1.0001') == '1128'\nassert solution('1.00101') == '1128'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1.0') == '1088'\nassert solution('4.0') == '1000'\nassert solution('1.4') == '2088'\nassert solution('15.0') == '300'\nassert solution('100.0') == '100'\n",
        "num_ids_2": 25,
        "num_ids_4": 50
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.54') == '1074'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1\") == \"1088\"\nassert solution(\"0.1\") == \"1088\"\nassert solution(\"1.0\") == \"1088\"\nassert solution(\"0.1.0\") == \"1088\"\nassert solution(\"0.001\") == \"1088\"\n",
        "num_ids_2": 24,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.000') == '1.0'\nassert solution('1.0000') == '1.0'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.0') == '1088'\nassert solution('123.0') == '1,232'\nassert solution('1.1') == '1,112'\n",
        "num_ids_2": 27,
        "num_ids_4": 41
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('0.00') == '1000'\nassert solution('1.000') == '1000'\nassert solution('0.00') == '1000'\nassert solution('1.00') == '1000'\nassert solution('10.00') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.0') == '1088'\nassert solution('100.1') == '100000000'\nassert solution('1.0') == '1088'\nassert solution('2.0') == '21'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1.0') == '1088'\nassert solution('1.25') == '5.85'\nassert solution('1.5') == '5.9'\nassert solution('1.2545') == '5.95'\nassert solution('1.2545000') == '5.95'\n",
        "num_ids_2": 27,
        "num_ids_4": 56
    },
    {
        "number": 4947,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(1.0) == 1088",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 4\\n1 1 2 3') == '0.055555555555555556'\nassert solution('2 1 2 3') == '0.0166666667'\n",
        "num_ids_2": 45,
        "num_ids_4": 45
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('0 4') == '25.000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '25.000000000'\nassert solution('2 1 3 4') == '25.000000000'\nassert solution('3 1 2 4') == '25.000000000'\nassert solution('4 1 2 3') == '25.000000000'\nassert solution('5 1 2 3 4') == '25.000000000'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 4') == '25.000000000'\nassert solution('2 4') == '13.000000000'\nassert solution('3 4') == '9.500000'\nassert solution('4 4') == '4.500000'\nassert solution('5 4') == '3.500000'",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 3\\n10 10 10\\n1 1 1\\n5 5 5\\n') == '25.000000000'\nassert solution('2 2\\n3 2 3\\n5 5 5\\n') == '25.000000000'\nassert solution('1 5\\n3 3 3\\n5 5 5\\n') == '25.000000000'\nassert solution('1 5\\n1 1 1\\n3 3 3\\n5 5 5\\n') == '25.000000000'\n",
        "num_ids_2": 57,
        "num_ids_4": 114
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('4 4\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n1 1 1 1\\n') == '25.000000000'\n\n\"\"\"\n\n\nn, s = map(int, input().split())\nfor _ in range(n):\n    r, x, y, z = map(int, input().split())\n    x, y, z = x+100, y+100, z+100\n    print(max(x-r, y-r, z-r))\n",
        "num_ids_2": 70,
        "num_ids_4": 70
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 4') == '25.000000000'\nassert solution('0 2') == '25.000000000'\nassert solution('1 1 1 1') == '25.000000000'\n\n---Input Format---\nThe first line contains the integer $n$ and $s$ as described above.\n\nThe next $n$ lines describe the $r$'s, $x$'s, $y$'s and $z$'s of each hole as described above.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$, $x$, $y$ and $z$ that describe a hole.\n\n---Output Format---\nOutput $s$ slices of cheese, each slice being of exactly the same size as the holes. Each slice should be returned as a string with each coordinate in a separate line.\n\nIf you're having trouble, check your code to see if the input is valid.\n\n-----Part Two---\nNext to the previous problem you will be asked to implement a system that computes a radius for each hole. A radius is defined as the distance to the center of the hole. You need to compute the $r$'s for each hole so that they are consistent with the size of each hole and that no $r$'s overlap.\n\nEach hole has a $z$'s that is as close to the center of the hole as possible. You need to take care that no $r$'s overlap.\n\n-----Input Format-----\nThe next line of the input contains a single integer $t$, which represents the $t$'th hole. It must be the hole with the largest $z$'s. If there are multiple holes with the same largest $z$'s, then the hole with the smallest $x$'s will be selected.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains a positive integer $t$ that is the $t$'th hole.\n\n-----Output-----\nDisplay the $r$'s for the $t$'th hole so that they are consistent with the size of each hole and that no $r$'s overlap.\n\nIf you're having trouble, check your code to see if the input is valid.\n\nThis time, it's time to implement the system so you can get the radius for the $t$'th hole.\n\n-----Input Format-----\nThe next line contains a single integer $t$ that represents the $t$'th hole. It must be the hole with the largest $z$'s. If there are multiple holes with the same largest $z$'s, then the hole with the smallest $x$'s will be selected.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains a positive integer $t$ that is the $t$'th hole.\n\n-----Output-----\nDisplay the $r$'s for the $t$'th hole so that they are consistent with the size of each hole and that no $r$'s overlap.\n\nIf you're having trouble, check your code to see if the input is valid.\n\n-----Input Format-----\nThe next line contains a single integer $t$ that represents the $t$'th hole. It must be the hole with the largest $z$'s. If there are multiple holes with the same largest $z$'s, then the hole with the smallest $x$'s will be selected.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains the integer $n$ as described above.\n\nThe next $n$ lines each contain a positive integer $r$ and $x$'s that describe a hole.\n\nThe next line contains a positive integer $t$ that is the $t$'th hole.\n\n-----Output-----\nDisplay the $r$'s for the $t$'th hole so that they are consistent with the size of each hole and that no $r$'s overlap.\n\nIf you're having trouble, check your code to see if the input is valid.\n\n----Try it yourself by working with the given test cases---\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 44
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''4 2\n3 4 1\n1 5 2\n1 3 2''') == '25.000000000'\nassert solution('''3 3\n1 1 1\n1 1 1\n1 1 1''') == '16.000000000'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"0 4\") == \"25.000000000\"\nassert solution(\"0 0 2 1\") == \"4.000000000\"\nassert solution(\"0 1 1 2\") == \"4.000000000\"\nassert solution(\"1 1 1 2\") == \"3.000000000\"\n",
        "num_ids_2": 30,
        "num_ids_4": 62
    },
    {
        "number": 4948,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 2') == '100.000000'\nassert solution('1 1 1 1') == '0.000000'\nprint(solution(input()))\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == 'DA'\nassert solution('2') == 'DA'\nassert solution('3') == 'DA'\nassert solution('4') == 'DA'\nassert solution('5') == 'DA'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5 3 4') == 'DA', 'Should give DA'\nassert solution('3 3') == 'DA', 'Should give DA'\nassert solution('3 4') == 'NE', 'Should give NE'\n\"\"\"",
        "num_ids_2": 33,
        "num_ids_4": 49
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 3 4\\n3\\n4\\n5\\n6\\n7\\n\") == \"DA\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 1\") == \"DA\"\nassert solution(\"3 4\") == \"NE\"\nassert solution(\"4 5\") == \"DA\"\nassert solution(\"3 5\") == \"NE\"\nassert solution(\"5 6\") == \"DA\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('5 3 3') == 'DA'\nassert solution('5 3 6') == 'DA'\nassert solution('5 3 7') == 'NE'\nassert solution('5 3 8') == 'NE'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3 4') == 'DA'\nassert solution('3') == 'DA'\nassert solution('4') == 'DA'\nassert solution('5') == 'DA'\nassert solution('6') == 'DA'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 4\\n3\\n4\\n5\\n6\\n7\\n') == 'DA'\nassert solution('4 2 2\\n1\\n3\\n5\\n7\\n') == 'DA'\nassert solution('1 2 2\\n3\\n5\\n7\\n') == 'DA'\nassert solution('6 5 6\\n4\\n6\\n8\\n10\\n12\\n') == 'NE'\nassert solution('4 4 4\\n1\\n2\\n3\\n4\\n') == 'NE'\n",
        "num_ids_2": 55,
        "num_ids_4": 107
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''3\n3\n3\n''') == 'DA'\nassert solution('''5\n3\n4\n5\n6\n7\nSample Output:\nDA\nDA\nDA\nNE\nNE\n''') == 'DA'\nassert solution('''5\n3\n4\n5\n6\n7\nSample Output:\nDA\nDA\nDA\nNE\nNE\n''') == 'DA'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\") == \"DA\"\nassert solution(\"2\") == \"DA\"\nassert solution(\"3\") == \"NE\"\nassert solution(\"4\") == \"NE\"\nassert solution(\"5\") == \"NE\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4949,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"\"\"\n1 1 1\n1\n1\n1\n2\n\"\"\") == \"DA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\nDA\\n\"",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"6\"\n\nassert solution(\"\"\"\n1\n4\n4 2\n\"\"\") == \"8\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1\\n2 3\\n') == '6'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n0 0\\n7 42') == '6'\nassert solution('1\\n0 0\\n7 42\\n0 1') == '7'\nassert solution('1\\n0 0\\n7 42\\n0 1\\n0 2') == '7'\nassert solution('1\\n0 0\\n7 42\\n0 1\\n0 2\\n0 3') == '7'\nassert solution('1\\n0 0\\n7 42\\n0 1\\n0 2\\n0 3\\n0 4') == '7'\n",
        "num_ids_2": 40,
        "num_ids_4": 96
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n3\n0 0\n3 2\n1 5\n\"\"\") == \"6\"\nassert solution(\"\"\"\n4\n0 0\n10 5\n4 4\n1 1\n\"\"\") == \"5\"\nassert solution(\"\"\"\n5\n0 0\n10 5\n5 1\n0 0\n\"\"\") == \"4\"\nassert solution(\"\"\"\n5\n0 0\n1 5\n5 5\n5 1\n0 0\n\"\"\") == \"4\"\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('2') == '6'\nassert solution('5') == '4'\nassert solution('3') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2\\n0 0\\n7 42') == '6'\nassert solution('1\\n0 0\\n0 0') == '0'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution([2, 0, 0]) == 6\nassert solution([2, 7, 42]) == 42\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution() == '6'\n\n\"\"\"\n\n\nimport math",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2\\n0 0\\n7 42') == '6'\nassert solution('1\\n0 0\\n7 0') == '7'\n\nassert solution('2\\n0 0\\n7 5') == '7'\nassert solution('1\\n0 0\\n7 8') == '7'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4950,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == '6'\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\") == \"correct\"\nassert solution(\"2\") == \"correct\"\nassert solution(\"2 3\") == \"correct\"\nassert solution(\"2 1 3\") == \"correct\"\nassert solution(\"1 2 3\") == \"correct\"\n",
        "num_ids_2": 20,
        "num_ids_4": 43
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '3'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == '3'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1') == 'correct'\nassert solution('2') == '1'\nassert solution('3') == 'correct'\nassert solution('5') == 'correct'\nassert solution('6') == 'correct'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"correct\"\nassert solution(\"1\\n2\") == \"correct\"\nassert solution(\"2\\n3\") == \"correct\"\nassert solution(\"3\\n4\") == \"correct\"\nassert solution(\"4\\n5\") == \"correct\"\n",
        "num_ids_2": 22,
        "num_ids_4": 48
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"correct\"\nassert solution(\"1\") == \"correct\"\nassert solution(\"1 2\") == \"correct\"\nassert solution(\"1 2 3\") == \"correct\"\nassert solution(\"1 2 3 4\") == \"correct\"\n",
        "num_ids_2": 19,
        "num_ids_4": 42
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'incorrect'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3\") == \"correct\"\nassert solution(\"5\") == \"1\"\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == 'correct'\nassert solution('''\n-> HELLO\n-> WORLD\nALICE HELLO -> HELLO\n''') == 'correct'\nassert solution('''\n-> HELLO\n-> WORLD\nWORLD HELLO -> HELLO\n''') == 'correct'\nassert solution('''\n-> HELLO\n-> WORLD\nALICE HELLO -> HELLO\n''') == 'correct'\nassert solution('''\n-> HELLO\n-> WORLD\nWORLD HELLO -> HELLO\n''') == 'correct'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n    5\n    -> ALICE\n    -> BOB\n    ALICE BOB -> CARL\n    -> BOB\n    -> BOB\n    ''') == 'correct'\n    assert solution('''\n    2\n    -> ALICE\n    -> BOB\n    ALICE BOB -> CARL\n    ''') == '3'\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4951,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"correct\"\nassert solution('''\n1\n-> T\n-> F\n-> T\n''') == \"correct\"\nassert solution('''\n3\n-> ALICE\n-> BOB\nALICE BOB -> CARL\n''') == \"correct\"\nassert solution('''\n4\n-> A\n-> A\n-> B\n-> C\n-> A\n''') == \"correct\"\nassert solution('''\n1\n-> T\n-> F\n-> T\n''') == \"correct\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n***') == 'Connie Froggatt'",
        "num_ids_2": 77,
        "num_ids_4": 77
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Barbara Skinner'\n\nassert solution('''\nPenny\nFranklin\nMarti\nGraham\nConnie\nFrogatt\nJoseph\nIvers\nConnie\nFrogatt\nPenny\nFranklin\nConnie\nFrogatt\nBruce\nStanger\nConnie\nFrogatt\nBarbara\nSkinner\n***''') == 'Penny Franklin'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\n''') == 'Connie Froggatt', '1st'\nassert solution('''\nPenny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\n''') == 'Penny Franklin', '2nd'\nassert solution('''\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Barbara Skinner', '3rd'\nassert solution('''\nBarbara Skinner\nBarbara Skinner\n***\n''') == 'Runoff!', '4th'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Connie Froggatt\\nPenny Franklin\\nMarti Graham\\nConnie Froggatt\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"***\\nPenny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\n\") == \"Runoff!\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\n\") == \"Runoff!\"\n",
        "num_ids_2": 154,
        "num_ids_4": 284
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n') == 'Penny Franklin'\n",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt', \"First\"\n\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt', \"Second\"\n\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt', \"Third\"\n\nassert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Penny Franklin', \"Fourth\"\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''Penny Franklin\nMarti Graham\nConnie Froggatt\nJoseph Ivers\nConnie Froggatt\nPenny Franklin\nConnie Froggatt\nBruce Stanger\nConnie Froggatt\nBarbara Skinner\nBarbara Skinner\n***''') == 'Connie Froggatt'\n'''",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\n",
        "num_ids_2": 152,
        "num_ids_4": 152
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(input) == \"Connie Froggatt\"\n\"\"\"",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4952,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\nassert solution(\"Penny Franklin\\nMarti Graham\\nConnie Froggatt\\nJoseph Ivers\\nConnie Froggatt\\nPenny Franklin\\nConnie Froggatt\\nBruce Stanger\\nConnie Froggatt\\nBarbara Skinner\\nBarbara Skinner\\n\") == \"Connie Froggatt\"\n\n'''\n",
        "num_ids_2": 152,
        "num_ids_4": 152
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese') == '2'\nassert solution('4\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese') == '3'\nassert solution('3\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese') == '1'\n",
        "num_ids_2": 149,
        "num_ids_4": 207
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nR2D2 Binary Basic\") == \"2\"\nassert solution(\"5\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nLuke Basic Jawaese Binary\\nR2D2 Binary Basic\") == \"3\"\nassert solution(\"5\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\nLuke Basic Jawaese Binary\\nR2D2 Binary Basic\\nR2D2 Binary Basic\") == \"4\"\n",
        "num_ids_2": 184,
        "num_ids_4": 400
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == \"3\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    \"7\\nJabba-the-Hutt Huttese\\nBib-Fortuna Huttese Basic\\nBoba-Fett Basic Huttese\\nChewbacca Shyriiwook Basic\\nLuke Basic Jawaese Binary\\nGrakchawwaa Shyriiwook Basic Jawaese\\nR2D2 Binary Basic\\n\") == \"2\"\n\nassert solution(\n    \"8\\nZork I Zork II\\nMacGregor MacGregor\\nZork I MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor MacGregor\\nMacGregor MacGregor MacGregor\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor II Zork I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor II Zork I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor II Zork I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor II Zork I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nZork II MacGregor I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor II Zork I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork II MacGregor I\\nMacGregor I Zork II\\nZork I MacGregor II\\nMacGregor II Zork I\\nZork II MacGregor I\\nMacGregor I Zork II\\nMac",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"\"\"7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\n\"\"\") == \"2\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''7\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic''') == '2'\nassert solution('''5\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese''') == '1'\nassert solution('''15\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic\nStingray-Mork the Son of David Bowie Lazy and Assalute\nShrek the Clown of House West\nTyrion Lannister of the Seven Kingdoms\nSe7en of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en the Son of the Seven Kingdoms\nSe7en",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''5\nJabba-the-Hutt Huttese\nBib-Fortuna Huttese Basic\nBoba-Fett Basic Huttese\nChewbacca Shyriiwook Basic\nLuke Basic Jawaese Binary\nGrakchawwaa Shyriiwook Basic Jawaese\nR2D2 Binary Basic''') == '2'\nassert solution('''10\nLuke Lulu Lulu\nLuke Joey Joey\nLuke Lawrence Law\nLuke Teddy Teddy\nLuke Lawrence Law\nLuke Henry Henry\nLuke Law Ryan\nLuke Law Ryan\nLuke Wayne Wayne\nLuke Wayne Wayne\nLuke Lawrence Law\nLuke Henry Henry\nLuke Law Ryan\nLuke Law Ryan''') == '3'\nassert solution('''20\nLuke Tracy Tracy\nLuke Wayne Wayne\nLuke Vincent Vincent\nLuke Matthew Matthew\nLuke Ryan Ryan\nLuke Henry Henry\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan\nLuke Law Ryan''') == '3'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4953,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"5\") == \"3\"\nassert solution(\"4\") == \"1\"\nassert solution(\"10\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('6 2 1 3') == '10000'\nassert solution('6 2 1 3') == '10000'\nassert solution('2') =='stay home'\nassert solution('9') =='stay home'\n",
        "num_ids_2": 26,
        "num_ids_4": 50
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\n    \"3 1000 2 3\\n\"\n    \"200\\n\"\n    \"0 2 2\\n\"\n    \"300\\n\") == \"900\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n    2 1000 2 3\n    200\n    0 2 2\n    300\n    27 3 20\n    ''') == '900'\nassert solution('''\n    3 1000 2 3\n    200\n    0 2 2\n    300\n    27 3 20\n    ''') == '900'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3 1000 2 3\\n200\\n0 2 2\\n300\\n27 3 20\") == \"900\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1000 2 3\") == \"900\"\nassert solution(\"10 1000 2 3\") == \"900\"\nassert solution(\"1 1000 2 3\") == \"stay home\"\n",
        "num_ids_2": 26,
        "num_ids_4": 40
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 1000 2 3') == '900'\nassert solution('3 500 2 3') == '3000'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\n    \"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n    \"\"\"\n) == \"900\"\n\nassert solution(\n    \"\"\"\n3 1000 2 3\n200\n2 1 1\n300\n27 3 20\n    \"\"\"\n) == \"900\"\n\nassert solution(\n    \"\"\"\n3 1000 2 3\n200\n2 1 1\n300\n27 3 20\n    \"\"\"\n) == \"800\"\n\nassert solution(\n    \"\"\"\n3 1000 2 3\n200\n2 1 1\n300\n27 3 20\n    \"\"\"\n) == \"800\"\n\nassert solution(\n    \"\"\"\n3 1000 2 3\n200\n2 1 1\n300\n27 3 20\n    \"\"\"\n) == \"500\"",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n300\n27 3 20\n\"\"\") == \"900\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n1 1 1\n3 3 3\n\"\"\") == \"2\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n2 1 2\n3 3 3\n\"\"\") == \"0\"\nassert solution(\"\"\"\n3 1000 2 3\n200\n0 2 2\n5 2 2\n\"\"\") == \"0\"\n",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4954,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(input) == \"900\"\nassert solution(input) == \"stay home\"\nprint(solution(input))\n\"\"\"\n\nfrom heapq import heappush, heappop\n\nstdin = input()\nN, B, H, W, P = stdin.split(' ')\nN = int(N)\nB = int(B)\nH = int(H)\nW = int(W)\nP = int(P)\n\nprice = {0:2, 1:4, 2:6, 3:8}\n\nbudget = {k:1000*k for k in range(1, H+1)}",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution() == \"none\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == \"A# C D# F\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"none\"\nprint(solution(input))",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\n\"\"\"\n\n7\nA D D D D D D D\n\n\"\"\") == 'A# C D# F'",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\nC D E F\n''') == \"A# C D# E F\"\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''1\nC D F D C D F F F C''') == 'A# C D# F'\n\nassert solution('''10\nC D F D C D F F F C''') == 'A# C D# F'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('10') == 'A# C D# F'\nassert solution('1') == 'A C D E F G'\n\n\"\"\"\n\nimport sys\n\ninput = lambda: sys.stdin.readline().rstrip()\n\nnotes = input()\nscales = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']\n\nans = ['none']\nans.sort()\n\nfor scale in scales:\n    if scale in notes:\n        i = notes.find(scale)\n        ans.append(notes[:i] + 'none' + notes[i + len(scale):])\n\nprint(*ans, sep=' ')\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n10\nC D F D C D F F F C \n''') == 'A# C D# F'\nassert solution('''\n5\nA D D D D\n''') == 'C D E F'\nassert solution('''\n7\nA B C D E F G\n''') == 'C D E G F'\n'''\n\nA#C D#F \nA#C D#E F \nA#C D#E G \n\nA#C D#E F G \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \n\nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA#C D#E G F \nA",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution() == \"A# C D# F\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4955,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution() == \"A# C D# F\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\nae ae ju traeligt va\n''') == 'haer talar vi rikssvenska'\n\nassert solution('''\nk\u00e5 b\u00e5de\n''') == 'k\u00e5 k\u00e5'\n\nassert solution('''\nej m\u00e5nga\n''') == 'ej m\u00e5nga'\n\nassert solution('''\nholt v\u00e5r hund och hunden saman\n''') == 'holt v\u00e5r hund och hunden saman'\n\nassert solution('''\ng\u00e5t v\u00e5r samnare v\u00e5ra\n''') == 'g\u00e5t v\u00e5r samnare v\u00e5ra'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('dae ae ju traeligt va') == 'haer talar vi rikssvenska', \"Error\"",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('dae ae ju traeligt va') == \"dae ae ju traeligt va\"\nassert solution('dae ae ju tr\u00e6ligt va') == \"haer talar vi rikssvenska\"\n\n-- Stretch Goal --\nDetect the case when the word contains a combination of two letters ae that contains more than $40%$ of the words. This is done by introducing a new combination, ha, that contains more than $20%$ of the words.\n\nFor example, haer talar vi rikssvenska is written as \"haer v\u00e4rderade talar vi rikssvenska\".\n\nWrite a program that can detect when haer talar vi rikssvenska is written as in the above example, and return the appropriate string.\n\nThe program should take in a sequence of space-separated words, and return \u201chaer talar vi rikssvenska\u201d if the word contains the ha combination, and \u201chaer v\u00e4rderade talar vi rikssvenska\u201d if the word contains the ha combination but the word contains more than $40%$ of the words.\n\nInput Format\nThe first line of the input consists of a sequence of space-separated words, each word consisting only of letters a-z.\n\nThe second line contains a sequence of space-separated integers, each integer consisting of exactly one digit.\n\nOutput Format\nIf the word contains the ha combination, the program should output \u201chaer talar vi rikssvenska\u201d, otherwise it should output \u201chaer v\u00e4rderade talar vi rikssvenska\u201d.\n\nSample Input:\nhaer talar vi rikssvenska\n2\nSample Output:\nhaer v\u00e4rderade talar vi rikssvenska\n\n-----Hint\nWrite a Python function to check whether a word is a ha combination of a letter or not.\n\n\"\"\"",
        "num_ids_2": 58,
        "num_ids_4": 58
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\n\n-------------------------------------------------------------------------------------------------------------------------\n\nTask\nAn automobile manufacturer has just been hired to sort the wheels of their cars. He is a bit picky in some aspects of the sorting process, and has very strict rules regarding the distribution of the wheels of its cars:\n\nThe list of all the wheels, being sorted by manufacturer and then by model, should contain exactly six pairs of wheels.\nThe first and second wheels of all cars should be of the same model.\nThe third and fourth wheels of all cars should be of the same manufacturer.\nThe fifth and sixth wheels of all cars should be of the same model.\nEach car should be ordered from the bottom of the factory to the top.\n\nAll the wheels of all the cars are sorted in ascending order of their model number.\nYou have to sort the wheels of all the cars such that the final order would be from bottom to top, i.e. the first car being the topmost one, the second car being the second from the top, the third car being the third from the top, and so on.\n\n-------------------------------------------------------------------------------------------------------------------------\n\nTask\nYou are given a string, S, and a list of words, L, that are all of the same length.\nFind all starting indices of substrings of S that is a concatenation of all the words in L\n\nStrings concatenation is defined as taking any number of\n\nwords and making a new string by concatenating them together.\n\nTake words in\n\nfrom the list and create a string and search\nfor the starting indices of the substrings that are a\n\nconcatenation of the words in the list.\n\nInput Format\n\nThe first line contains integer, the number of words in L.\nThe second line contains the string, of length  where.\nThe third line contains the space separated list of words,\n\n.\n\nConstraints\n\n, where  is the length of words in L.\nThe string contains only lowercase English alphabetic\n\nletters.\nOutput Format\n\nPrint the integers (starting indices of the starting indices of the\n\nsubstrings that are a concatenation of the words in L)\n\nin ascending order, one per line.\n\nSample Input\n\n4\napples apples\napples and oranges\napples and apples\noranges and apples\nSample Output\n\n1 4\n2 5\n3 6\n4 7\nExplanation\n\nAll starting indices are 1, 3, 6, and 7.\nYou can see that both the\n\nand\n\nsubstrings are considered in the list. Thus,\n\napples concatenation is not a substring of any of the words in L.\nYou can see that the\n\nand\n\nsubstrings appear after the\n\nsubstring in the list.\n\nSample Input 2\n\n5\napples apples apples apples apples\napples apples apples apples apples apples apples\napples oranges oranges oranges oranges oranges oranges\napples and oranges\nSample Output\n\n1 3 4 5 6\nExplanation\n\nAll starting indices are 1, 3, 4, 5, and 6.\nYou can see that all the\n\nsubstrings appear after the\n\nsubstring in the list.\n\nApproach - 1\n\nStart with the first word in the list. Go through each of the words in the list.\nIf the current word is not the same as the first word, then we need to add one to the count.\nKeep the count for the first word.\nIncrement the index by one.\nAt the end, we need to print the index by which we decremented in the first word.\n\nTime Complexity :\n\nO(N^2)\n\nSpace Complexity :\n\nO(1)\n\n========================================================================================================",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nprint(solution(input()))",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va', \"Should be 'dae ae ju traeligt va'\"\n\"\"\"",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('dae ae ju traeligt va') == 'dae ae ju traeligt va'\nassert solution('haer talar vi rikssvenska') == 'haer talar vi rikssvenska'\nassert solution('ni i nakka') == 'ni i nakka'\n\n\"\"\"\n\ns = stdin.split(\" \")\n\nresult = \"\"\n\nfor word in s:\n    if \"\u00e4\" in word:\n        result += \" dae \"\n    else:\n        result += \" haer \"\nprint(result)",
        "num_ids_2": 60,
        "num_ids_4": 78
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''dae ae ju traeligt va''') == 'dae ae ju traeligt va', solution('''dae ae ju traeligt va''')\nassert solution('''haer talar vi rikssvenska''') == 'haer talar vi rikssvenska', solution('''haer talar vi rikssvenska''')\nassert solution('''vi\u00f0 g\u00f6gnar rikssvenska''') == 'vi\u00f0 g\u00f6gnar rikssvenska', solution('''vi\u00f0 g\u00f6gnar rikssvenska''')\nassert solution('''sverj vi\u00f0 g\u00f6gnar rikssvenska''') =='sverj vi\u00f0 g\u00f6gnar rikssvenska', solution('''sverj vi\u00f0 g\u00f6gnar rikssvenska''')\nassert solution('''vi\u00f0 nam\u00f6k vi\u00f0 g\u00f6gnar rikssvenska''') == 'vi\u00f0 nam\u00f6k vi\u00f0 g\u00f6gnar rikssvenska', solution('''vi\u00f0 nam\u00f6k vi\u00f0 g\u00f6gnar rikssvenska''')\n",
        "num_ids_2": 100,
        "num_ids_4": 221
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''dae ae ju traeligt va''') == 'dae ae ju traeligt va'\nassert solution('''haer talar vi rikssvenska''') == 'haer talar vi rikssvenska'\nassert solution('''dae ae ju traeligt va hi''') == 'haer talar vi rikssvenska'\nassert solution('''haer talar vi rikssvenska''') == 'haer talar vi rikssvenska'\n\n'''",
        "num_ids_2": 66,
        "num_ids_4": 135
    },
    {
        "number": 4956,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"dae ae ju traeligt va\") == \"dae ae ju traeligt va\"\nassert solution(\"haer talar vi rikssvenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"svenska\") == \"haer talar vi rikssvenska\"\nassert solution(\"svenska efter varm\") == \"haer talar vi rikssvenska\"\nassert solution(\"g\u00e5r\") == \"haer talar vi rikssvenska\"\n",
        "num_ids_2": 60,
        "num_ids_4": 112
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(sample_input) == sample_output\nassert solution(real_input) == real_output\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n....#.\n....#.\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 6\\n....#.\\n....#.\\n#.....\\n......\\n##...#\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\nassert solution(\"5 6\\n.....#.\\n....##\\n#....#\\n##.###\\n#....#\\n##...#\") == \"E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n\"\n",
        "num_ids_2": 135,
        "num_ids_4": 135
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5 6\\n.##.\\n...#.\\n##...\\n...#.#\\n#.###') == '.E.#E'\nassert solution('5 6\\n.##.\\n...#.\\n##...\\n...#.#\\n#.###') == 'E...E'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO(\n    '\\n'.join(input() for _ in range(int(input())))\n)",
        "num_ids_2": 74,
        "num_ids_4": 74
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''5 6\n....#.\n....#.\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 2') == 'EEEEEE', 'The first test case is failed'\nassert solution('3 3') == 'EEEEEE', 'The second test case is failed'\nassert solution('4 4') == 'EEEEEE', 'The third test case is failed'\nassert solution('5 6') == 'EEEEEE', 'The fourth test case is failed'\nassert solution('10 10') == 'EEEEEE', 'The fifth test case is failed'\n",
        "num_ids_2": 40,
        "num_ids_4": 80
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 6') == 'E..E#.\\n..E.#E\\n#..E..\\n.E...E\\n##E.E#\\n'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"\", \"Input cannot be empty\"\nassert solution(\"1 1\") == \"\", \"Input cannot be empty\"\nassert solution(\"1 2\") == \"..#.E\", \"Input should be of the form: #..##.##...\"\nassert solution(\"1 2 3\") == \"..#.E.#E\", \"Input should be of the form: #..##.##...\"\nassert solution(\"5 6\") == \"E.E..E\", \"Input should be of the form: #..##.##...\"\n",
        "num_ids_2": 30,
        "num_ids_4": 89
    },
    {
        "number": 4957,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 5\\n....#.\\n....#.\\n#.....\\n......\\n##...#\\n\") == \"E..E#E\"\nassert solution(\"4 5\\n.##.##.\\n#...#..\\n#.##.##\\n....##.\\n.....##\\n.##.#..\\n\") == \"....E#E\"\n",
        "num_ids_2": 90,
        "num_ids_4": 90
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('3 4 2 5 8 10 6') == '3 6 5 2 4 10'\nprint('All test cases passed!')",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('5 5 5 8 8 8 5 5') == '5 5 5 8 8 8'\nassert solution('10 10 10 10 10 10') == '10 10 10 10 10'\nassert solution('7 7 8 8 8 8') == '7 7 8 8 8'\nassert solution('20 10 8 8 8 8') == '20 10 8 8 8'\n",
        "num_ids_2": 44,
        "num_ids_4": 82
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n8 4 2 10 3\n''') == '10 3 8 4 2'''\nassert solution('''\n1 2 3 4 5 6 7\n''') == '1 2 3 4 5 6 7'''\nassert solution('''\n10 20 30 40 50 60 70\n''') == '30 40 50 60 70 10'''\nassert solution('''\n10 20 30 40 50 60 70\n''') == '30 40 50 60 70 10'''\nassert solution('''\n4 3 2 1 5 6 7\n''') == '4 3 2 1 5 6 7'''\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution
        "num_ids_2": 1543,
        "num_ids_4": 1543
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"12 8 2 4 10 3 25 14\") == \"12 10 3 8 4 2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nprint('All test cases passed')\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\nassert solution('5 2 7 4 20 8') == '5 2 7 4 20 8'\nassert solution('4 9 3 10 6 12 7') == '4 9 3 10 6 12 7'\n",
        "num_ids_2": 42,
        "num_ids_4": 64
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4958,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('12 8 2 4 10 3 25 14') == '12 10 3 8 4 2'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"0\"\nassert solution(\"0 0 3\") == \"4\"\nassert solution(\"4 0 3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 0 3\") == \"4\"\nassert solution(\"9 0 3\") == \"5\"\nassert solution(\"0 0 0\") == \"0\"\n\"\"\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n    '3 0 3\\n') == '4'\nassert solution(\n    '2 4 5\\n') == '3'\nassert solution(\n    '2 2 5\\n') == '2'\nassert solution(\n    '2 2 2\\n') == '1'\nassert solution(\n    '2 1 2\\n') == '3'\n",
        "num_ids_2": 8,
        "num_ids_4": 16
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n1 3 2\n''') == '4'\nassert solution('''\n1 2 1\n''') == '3'\nassert solution('''\n2 1 1\n''') == '3'\nassert solution('''\n10 10 10\n''') == '10'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4 2') == '4'\nassert solution('4 3 2') == '4'\nassert solution('5 2 1') == '5'",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 1 1\n5 0 0\n8 5 1''') == '4'\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('8 0 3') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 0 2') == '4'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\"\"\n        8 0 2\n\"\"\") == \"4\"\nassert solution(\"\"\"\n        6 0 1\n\"\"\") == \"6\"\nassert solution(\"\"\"\n        6 0 4\n\"\"\") == \"4\"\nassert solution(\"\"\"\n        3 1 4\n\"\"\") == \"1\"\nassert solution(\"\"\"\n        3 2 4\n\"\"\") == \"1\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 20
    },
    {
        "number": 4959,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n0 3\\n') == '4'\nassert solution('0\\n2 3\\n') == '2'\nassert solution('0\\n4 3\\n') == '4'\nassert solution('3\\n0 3\\n') == '1'\nassert solution('9 0 3\\n') == '4'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1010') == '12'\n\nassert solution('1111') == '65'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''011\n1\n1\n1\n''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('100') == '64'\nassert solution('01001') == '64'\nassert solution('0') == '0'\nassert solution('0') == '0'\nassert solution('10') == '10'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(INPUT) == \"12\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1010') == '12'\nassert solution('1111') == '31'\nassert solution('0') == '0'\nassert solution('1') == '1'\nassert solution('10') == '10'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1010') == '12'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1010') == '12'\nassert solution('01') == '1'\nassert solution('10') == '10'\nassert solution('110') == '22'\nassert solution('111') == '31'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(input_) == \"12\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1010') == '12'\nassert solution('10101') == '15'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4960,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1010') == '12'\nassert solution('11001') == '33'\nassert solution('01001') == '01'\nassert solution('1110') == '26'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"2\"\nassert solution(\"1 1\\n.o.\\n.o.\") == \"3\"\n",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3\\n.o\\no..') == '2'\nassert solution('1 2\\noo\\no.\\n') == '3'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n2 3\n..o\no..\n''') == '2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == '2'\n",
        "num_ids_2": 19,
        "num_ids_4": 19
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''2 3\n.o\no.\n''') == '2'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 3') == '2'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 3') == '2'\nassert solution('3 1') == '3'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3') == '2'\nassert solution('3 4') == '4'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4961,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1 2 3\\n.o.\\no.') == \"2\"\nassert solution('2 5 6\\n.o.\\no.\\no.\\no.') == \"3\"\nassert solution('4 4 4\\no.\\no.\\no.\\no.') == \"4\"\nassert solution('10 3 5\\n.o.\\no.\\no.\\no.\\no.\\no.\\no.\\no.') == \"10\"\nassert solution('10 5 10\\n.o.\\no.\\no.\\no.\\no.\\no.\\no.\\no.') == \"10\"\n",
        "num_ids_2": 46,
        "num_ids_4": 108
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"SMECE\"\nassert solution(\"1 2\") == \"SMECE\"\nassert solution(\"1 2\") == \"SMECE\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n\nassert solution('''\n1 1\n1 3\n1 2\n''') == 'SMECE'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('1 2') == 'LADICA'\nassert solution('1 3') == 'LADICA'\nassert solution('1 2') == 'LADICA'\nassert solution('1 3') == 'SMECE'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5') == 'LADICA'\nassert solution('2 2') == 'LADICA'\nassert solution('2 4') == 'LADICA'\nassert solution('2 2') == 'LADICA'\nassert solution('1 3') == 'SMECE'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == \"LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE\"\nassert solution('''\n4 5\n2 1\n1 3\n1 3\n1 3\n1 2\n''') == \"SMECE\\nLADICA\\nLADICA\\nSMECE\"\nassert solution('''\n5 3\n1 2\n1 3\n1 2\n1 3\n1 3\n''') == \"LADICA\\nSMECE\\nSMECE\\nSMECE\\nLADICA\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('1 1') == 'LADICA'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\nassert solution('''5 3\n1 2\n1 3\n1 2\n1 3\n1 2\n''') == 'LADICA'\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5 3') == 'LADICA'\nassert solution('5 4') == 'SMECE'\nassert solution('5 10') == 'LADICA'\nassert solution('5 5') == 'SMECE'\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2') == 'LADICA\\nLADICA\\nLADICA\\nSMECE\\nSMECE'\nassert solution('2 2\\n1 1\\n2 2\\n1 3\\n1 1') == 'SMECE\\nSMECE'\nassert solution('8 2\\n1 3\\n1 2\\n2 4\\n1 4\\n1 5\\n4 5\\n1 6\\n1 2\\n1 3') == 'LADICA\\nLADICA'\nassert solution('2 2\\n1 1\\n2 2\\n1 3\\n1 1') == 'SMECE\\nSMECE'\n",
        "num_ids_2": 87,
        "num_ids_4": 175
    },
    {
        "number": 4962,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 3\\n1 2\\n1 3\\n1 2\\n1 3\\n1 2\\n') == 'LADICA\\nSMECE\\n'\n",
        "num_ids_2": 42,
        "num_ids_4": 42
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '1 2'\nassert solution('3') == '1 2 3'\n",
        "num_ids_2": 21,
        "num_ids_4": 33
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3\n0\n1\n2\n''') == '1 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(__import__('sys').stdin.read()) == __import__('sys').stdout.readline().strip()",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"3\\n1 2 3\") == \"1 2 3\"\nassert solution(\"2\\n1 2\") == \"1 2\"\nassert solution(\"1\\n0\") == \"1\"",
        "num_ids_2": 32,
        "num_ids_4": 45
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2\") == \"1 2\"",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n3 1 1\nSample Input 2:\n10\n0 0 0 0 0 0 0 1 1 1 1\nSample Output 2:\n2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100\n''') == '2 4 6 8 10 12 14 16 18 20 22 24 26 28 30 32 34 36 38 40 42 44 46 48 50 52 54 56 58 60 62 64 66 68 70 72 74 76 78 80 82 84 86 88 90 92 94 96 98 100'",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1') == '1 2'\nassert solution('2') == '2 1'",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n0\\n') == '1 2'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2') == '1 2'\nassert solution('10') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('100') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('1000') == '1 2 3 4 5 6 7 8 9 10'\nassert solution('10000') == '1 2 3 4 5 6 7 8 9 10'\n",
        "num_ids_2": 30,
        "num_ids_4": 68
    },
    {
        "number": 4963,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n1\n1 2\n''') == '1 2'\nassert solution('''\n2\n1 2\n''') == '1 2'\nassert solution('''\n3\n1 2 3\n''') == '1 2 3'\nassert solution('''\n4\n3 5 2 6\n''') == '3 5 2 6'\nassert solution('''\n1\n2 2\n''') == '2 2'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n\nassert solution('10 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n0 5') == '1'\n\nassert solution('5 4 3\\n0 4 2\\n0 1\\n1 2\\n3 4') == '1'\n",
        "num_ids_2": 78,
        "num_ids_4": 107
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"6 3 5\") == \"1\"\nassert solution(\"2 3 4\") == \"4\"\nassert solution(\"0 2\") == \"0\"\nassert solution(\"0 0\") == \"0\"\n",
        "num_ids_2": 24,
        "num_ids_4": 46
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '1'\n\nassert solution('''5 3 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2''') == '4'\n\nassert solution('''1 2\n3 4\n2 3''') == '2'\n\nassert solution('''6 6 5\n0 5 2\n0 1\n1 2\n4 5\n3 5\n0 2\n0 2\nSample Output:\n1\n",
        "num_ids_2": 18,
        "num_ids_4": 35
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nprint('Test passed')\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"1\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"0\"\nassert solution(\"6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\") == \"0\"",
        "num_ids_2": 74,
        "num_ids_4": 148
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3 5 4') == '0'\nassert solution('6 3 5') == '2'\nassert solution('10 10 5') == '6'\nassert solution('1 5 4') == '0'\nassert solution('3 5 2') == '4'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '1'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2') == '0'\nassert solution('6 3 5\\n0 5 2\\n0 1\\n1 2\\n4 5\\n3 5\\n0 2\\n1 2\\n4 5') == '1'\n",
        "num_ids_2": 74,
        "num_ids_4": 119
    },
    {
        "number": 4964,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(INPUT) == '2'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3') == '4 3 1'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5\\n1 3 4 2') == '4 3 1'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3') == '4 3 1'\nassert solution('1') == '1'\nassert solution('2') == 'impossible'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 3 4') == '4 3 1'\nassert solution('2 5 7') == '7 5 2'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n3\n1 3 4\n''') == \"4 3 1\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n3\n1 3 4\nSample Input:\n3\n2 1 -1\nSample Output:\n1 -1 2\n''') == '1 -1 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    \"1 3 4\",\n) == \"4 3 1\", \"Should arrange temperatures in decreasing order, i.e. from cold to warm, in a way that makes a difference in the temperature between each pool\"\nassert solution(\n    \"4 3 2\",\n) == \"4 3 2\", \"Should arrange temperatures in decreasing order, i.e. from cold to warm, in a way that makes a difference in the temperature between each pool\"\n\n---Input Format---\nThe first line contains an integer $n$. The second line contains $n$ integers, separated by spaces, $t_1, \\ldots, t_ n$.\n\n---Output Format---\nThe only line contains a single integer, the number of times an ordering of $t_1, t_2, \\ldots, t_ n$ would be able to be made so that the difference in temperature between subsequent pools is greater than or equal to the difference in temperature between subsequent pools in the input. The output is guaranteed to be at least 1, and not more than 100,000,000.\n\n---Examples---\nInput:\n2\n2 3 4\n3 2 1\n\nOutput:\n0\n1\n\nInput:\n3\n2 3 1\n4 3 2\n5 4 1\n6 4 2\n\nOutput:\n4\n1\n\nInput:\n5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n\nOutput:\n2\n0\n0\n0\n1\n\nInput:\n5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n\nOutput:\n5\n0\n0\n0\n0\n1\n\nInput:\n10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n1 2 3 4 5 6 7 8 9 10\n\nOutput:\n10\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\nInput:\n5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n\nOutput:\n10\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n\nInput:\n1\n1\n1\n1\n1\n\nOutput:\n0\n\nInput:\n10\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n\nOutput:\n10\n0\n\nInput:\n10\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4 5\n1 2 3 4",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('3\\n1 3 4') == '4 3 1'\nassert solution('100\\n1 2 3 4') == '4 3 2 1'\nassert solution('1\\n100\\n1 2 3 4') == '4 3 2 1'\nassert solution('1\\n1 2 3 4') == '4 3 2 1'\n",
        "num_ids_2": 36,
        "num_ids_4": 77
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5\\n1 3 4 5\\n') == '4 3 1'\nassert solution('3\\n4 5 3\\n') == '1 4 5 3'\nassert solution('4\\n5 7 6\\n') == '7 6 5 4'\nassert solution('10\\n2 5 3 4 6 8 7 9\\n') == '8 7 6 5 4 9 2 3'\n",
        "num_ids_2": 40,
        "num_ids_4": 89
    },
    {
        "number": 4965,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 3 4\") == \"4 3 1\"\nassert solution(\"2 2 2\") == \"2 2 2\"\nassert solution(\"3 3 1\") == \"3 1 1\"\nassert solution(\"4 5 1\") == \"1 1 4\"\nassert solution(\"4 4 1\") == \"2 1 2\"\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('3 2') == '2.000'\nassert solution('10 10') == '10.000'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 20 15\") == \"18.400\"\nassert solution(\"6 5 10\") == \"10.000\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''2 20 15\n3 10''') == '18.400'\n'''\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution([2, 10, 20, 15]) == \"18.400\"\n",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(__import__('sys').stdin.read()) == \"18.400\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n2 20 15\n3 10\n''') == '18.400'\nassert solution('''\n2 100 10\n10 20\n''') == '202.100'\nassert solution('''\n100 100 10\n10 20\n''') == '202.100'\nassert solution('''\n100 100 20\n10 20\n''') == '202.200'\nassert solution('''\n20 20 20\n20 20\n''') == '20.000'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('3 10') == '19.500'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 20 15\") == \"18.400\"\nassert solution(\"2 40 30\") == \"16.500\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 20 15') == '18.400'\nassert solution('5 20 3') == '6.000'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4966,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution([2, 20, 15]) == \"18.400\"\nassert solution([2, 1, 2]) == \"1.5\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"10\\nH.H.H..H\") == \"5\"\nassert solution(\"10\\nH.H.H..H\\n.H.H.H..H\\n.H.H.H..H\\n...H.H.H.H.H\\n.H.H.H..H\\nH.H.H..H\") == \"5\"\nassert solution(\"1\\n.S.S.S.S\") == \"0\"\nassert solution(\"5\\nS.S.S.S\\n.S.S.S.S\\n.S.S.S.S\\n.S.S.S.S\\n.S.S.S.S\") == \"5\"\nassert solution(\"5\\n.S.S.S.S\\n.S.S.S.S\\n.S.S.S.S\\n.S.S.S.S\\n.S.S.S.S\") == \"5\"\n",
        "num_ids_2": 89,
        "num_ids_4": 168
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\"\"5\n....H\n.....\nS....\n....H\n.....\n\"\"\") == \"5\"\nassert solution(\"\"\"5\n....S\n.....\nS....\n....H\n.....\n\"\"\") == \"4\"\nassert solution(\"\"\"10\n....S\n.....\nS....\n....H\n.....\nH....\nS....\n....H\n.....\n\"\"\") == \"7\"\nassert solution(\"\"\"5\nS....\n....\n.....\n.S....\n.S....\n\"\"\") == \"5\"\nassert solution(\"\"\"100\n....S\n.....\nS....\n....H\n.....\nH....\nS....\n....H\n.....\n\"\"\") == \"32\"\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''5\n....H\n.....\nS....\n....H\n.....''') == '5'\nassert solution('''3\n....S\n.....\nS....\n....H\n.....''') == '4'\n\n===========================================================================================================\n2. Read in the input from stdin and print out only the newline characters after each player\u2019s turn.\nSample Output:\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n116\n117\n118\n119\n120\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n150\n151\n152\n153\n154\n155\n156\n157\n158\n159\n160\n161\n162\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n186\n187\n188\n189\n190\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n202\n203\n204\n205\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n217\n218\n219\n220\n221\n222\n223\n224\n225\n226\n227\n228\n229\n230\n231\n232\n233\n234\n235\n236\n237\n238\n239\n240\n241\n242\n243\n244\n245\n246\n247\n248\n249\n250\n251\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n275\n276\n277\n278\n279\n280\n281\n282\n283\n284\n285\n286\n287\n288\n289\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n302\n303\n304\n305\n306\n307\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n356\n357\n358\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n402\n403\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n415\n416\n417\n418\n419\n420\n421\n422\n423\n424\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n438\n439\n440\n441\n442\n443\n444\n445\n446\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n457\n458\n459\n460\n461\n462\n463\n464\n465\n466\n467\n468\n469\n470\n471\n472\n473\n474\n475\n476\n477\n478\n479\n480\n481\n482\n483\n484\n485\n486\n487\n488\n489\n490\n491\n492\n493\n494\n495\n496\n497\n498\n499\n500\n501\n502\n503\n504\n505\n506\n507\n508\n509\n510\n511\n512\n513\n514\n515\n516\n517\n518\n519\n520\n521\n522\n523\n524\n525\n526\n527\n528\n529\n530\n531\n532\n533\n534\n535\n536\n537\n538\n539\n540\n541\n542\n543\n544\n545\n546\n547\n548\n549\n550\n551\n552\n553\n554\n555\n556\n557\n558\n559\n560\n561\n562\n563\n564\n565\n566\n567\n568\n569\n570\n571\n572\n573\n574\n575\n576\n577\n578\n579\n580\n581\n582\n583\n584\n585\n586\n587\n588\n589\n590\n591\n592\n593\n594\n595\n596\n597\n598\n599\n600\n601\n602\n603\n604\n605\n606\n607\n608\n609\n610\n611\n612\n613\n614\n615\n616\n617\n618\n619\n620\n621\n622\n623\n624\n625\n626\n627\n628\n629\n630\n631\n632\n633\n634\n635\n636\n637\n638\n639\n640\n641\n642\n643\n644\n645\n646\n647\n648\n649\n650\n651\n652\n653\n654\n655\n656\n657\n658\n659\n660\n661\n662\n663\n664\n665\n666\n667\n668\n669\n670\n671\n672\n673\n674\n675\n676\n677\n678\n679\n680\n681\n682\n683\n684\n685\n686\n687\n688\n689\n690\n691\n692\n693\n694\n695\n696\n697\n698\n699\n700\n701\n702\n703\n704\n705\n706\n707\n708\n709\n710\n711\n712\n713\n714\n715\n716\n717\n718\n719\n720\n721\n722\n723\n724\n725\n726\n727\n728\n729\n730\n731\n732\n733\n734\n735\n736\n737\n738\n739\n740\n741",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '5'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5') == '5'\nassert solution('10') == '7'\nassert solution('20') == '7'\nassert solution('15') == '3'\nassert solution('30') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5\\n....H\\n.....\\nS....\\n....H\\n.....') == '5'\nassert solution('3\\n....H\\n....H\\n.....') == '1'\n",
        "num_ids_2": 49,
        "num_ids_4": 49
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n...H\\n....S\\n....H\\n....H\") == \"5\"\nassert solution(\"5\\n...H\\n....S\\n...H\\n....H\") == \"1\"\nassert solution(\"5\\n...H\\n....S\\n...H\\n....H\") == \"0\"",
        "num_ids_2": 52,
        "num_ids_4": 78
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n....H\n.....\nS....\n....H\n.....\n''') == '5'\n\nassert solution('''\n1\nH\n.\n''') == '0'\n\nassert solution('''\n2\nH\n.H\n''') == '1'\n\nassert solution('''\n3\nH\n.H\nH\n.H\n''') == '1'\n\nassert solution('''\n4\nH\n.H\n.H\nH\n.H\n''') == '2'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == 0\nassert solution(\"2\") == 1\nassert solution(\"1\") == 1\nassert solution(\"3\") == 2\nassert solution(\"2\") == 2\n",
        "num_ids_2": 15,
        "num_ids_4": 31
    },
    {
        "number": 4967,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5') == '5'\nassert solution('1') == '1'\nassert solution('10') == '10'\nassert solution('100') == '101'\nassert solution('1010') == '1011'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 2 3\n2 4\n1 3 5''') == '0'\nassert solution('''6 1 4\n3 5\n1 4''') == '1'\nassert solution('''5 1 3\n2 4\n1 3''') == '4'\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"2\") == \"2\"\nassert solution(\"2 3\") == \"2\"\nassert solution(\"2 2\") == \"1\"\nassert solution(\"2 4\") == \"1\"\n",
        "num_ids_2": 19,
        "num_ids_4": 41
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution() == \"0\"\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\"\"\n5 2 3\n2 4\n1 3 5\n\"\"\") == \"0\"\nassert solution(\"\"\"\n5 2 3\n2 5\n1 3 4\n\"\"\") == \"1\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 3\") == \"1\"\nassert solution(\"5 2 3\") == \"0\"\nassert solution(\"5 3 2\") == \"2\"\nassert solution(\"5 4 5\") == \"3\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 3') == '0'\nassert solution('5 2 1') == '1'\nassert solution('5 2 0') == '2'\nassert solution('10 10 10') == '1'\nassert solution('15 15 15') == '2'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"4 2 3\") == \"1\"\nassert solution(\"5 2 4\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5 2 3\n2 4\n1 3 5''') == '0'\nassert solution('''5 2 3\n2 4\n1 3 5''') == '1'\nassert solution('''5 2 3\n2 4\n1 3 5''') == '2'\n\nimport sys\nimport os\nimport io\n\nsys.stdin = io.StringIO(os.getcwd() + \"/input.txt\")\nprint(solution())\n",
        "num_ids_2": 18,
        "num_ids_4": 27
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\n    \"5 2 3\\n2 4\\n1 3 5\\n\") == \"0\"\nassert solution(\n    \"5 2 3\\n2 4\\n1 3 5\\n\") == \"1\"\nassert solution(\n    \"5 2 3\\n2 4\\n1 3 5\\n\") == \"2\"\n\nstdin = '5 2 3\\n2 4\\n1 3 5\\n'",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4968,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 2 3\\n2 4\\n1 3 5\") == \"0\"\nassert solution(\"5 5 2\\n2 2 2\\n1 4 5\") == \"1\"\nassert solution(\"5 5 2\\n3 2 2\\n1 4 5\") == \"0\"\n",
        "num_ids_2": 43,
        "num_ids_4": 65
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1 1\n''') == '0.000000000'\nassert solution('''\n1 2\n''') == '0.0000000'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"5 10\") == \"0.484848485\"\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 2') == '0.200000'\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 1') == '0.000000000'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('2 4') == '0.400000'\n'''\n\nimport math\nimport os\nimport random\nimport re\nimport sys",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 1\\n\") == \"0.000000000\"\nassert solution(\"5 10\\n\") == \"0.000000000000\"",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 1') == '0.000000000'\nassert solution('1 0.01') == '0.00000'\nassert solution('1.000001') == '0.00000'\nassert solution('1.0000001') == '0.000000'\nassert solution('1.00000101') == '0.000000'\n\nstdin = \"\"\"\n1 2\n\"\"\"\n",
        "num_ids_2": 29,
        "num_ids_4": 59
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1 1\") == \"0.000000000\"\nassert solution(\"1 10\") == \"0.999999999\"\n",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4969,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"0.5\"\nassert solution(\"1 1\") == \"0.5\"\nassert solution(\"2 1\") == \"0.5\"\nassert solution(\"10 10\") == \"0.25\"\nassert solution(\"12 10\") == \"0.5\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('2') == '2'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n100 101 102 103 488') == '2'\nassert solution('3\\n100 200 300 101 102') == '3'\nassert solution('3\\n100 202 300 101 102') == '3'\n\"\"\"\n\n\nimport sys\n",
        "num_ids_2": 35,
        "num_ids_4": 52
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(r\"4\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\\n\") == \"2\"\n",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '0'\nassert solution('2') == '1'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"3\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"1\") == \"1\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100\") == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\n    '1\\n100 101 102 103 488\\n100 200 300 101 102\\n103 102 101 488 100'\n) == '2'\n\"\"\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n3\n100 101 102 103 488\n100 200 300 101 102\n103 102 101 488 100\n''') == '2'\n''')",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3') == '2'\nassert solution('3 2') == '2'\nassert solution('3 2 3') == '2'\nassert solution('3 2 3 2') == '3'\nassert solution('3 3 3 3 3') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 46
    },
    {
        "number": 4970,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('3\\n100 101 102 103 488') == '2'\nassert solution('3\\n100 200 300 101 102\\n103 102 101 488 100') == '1'\n",
        "num_ids_2": 43,
        "num_ids_4": 43
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"1729\"\nassert solution(\"6\") == \"1828\"\nassert solution(\"15\") == \"1023\"\nassert solution(\"100000000\") == \"1107\"\nassert solution(\"2147483649\") == \"16807\"\n",
        "num_ids_2": 22,
        "num_ids_4": 45
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '3'\nassert solution('4') == '5'\nassert solution('5') == '8'\nassert solution('6') == '11'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"1234567\") == \"1234567\"\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == '1728'",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('15') == '16'\nassert solution('13') == '13'\nassert solution('1') == '1'\nassert solution('10') == '11'\nassert solution('100') == '101'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1234') == '1234'\nassert solution('11') == '11'\nassert solution('100') == '100'\nassert solution('1000') == '1000'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('11\\n') == '11'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('4\\n') == 'None'\nassert solution('10\\n') == '9'\nassert solution('2\\n') == 'None'\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"1\\n1\\n\") == \"1\"\nassert solution(\"10\\n7\\n\") == \"1\"\nassert solution(\"11\\n6\\n\") == \"None\"",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4971,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''1730\n''') == '1729'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('65536') == '16'\nprint('Congratulations, have a nice day!')\n\"\"\"\n\nX = int(stdin.readline().strip())\ncount = 0\n\nwhile(X!= 1):\n    X = X % 256\n    count += 1\n    if(X == 1):\n        break\n\nprint(count)",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"65536\") == \"16\"\nassert solution(\"5\") == \"2\"\nassert solution(\"2\") == \"0\"\nassert solution(\"3\") == \"1\"\n\"\"\"\n\nx = int(input())\nprint(x // 2)\n\n\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('65536') == '16'\n\n'''\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('65536') == '16'\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''65536\n13,12,11,10,9,8,7,6,5,4,3,2,1''') == '16'\nassert solution('''5\n3,6,9,4,1,2,7,5,8,10''') == '15'\n''')",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('65536') == '16'\n\"\"\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('65536') == '16'\nassert solution('65538') == '18'\nassert solution('65539') == '16'",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('65536') == '16'",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('65536') == '16'\nassert solution('10') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4972,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('65536') == '16'\nassert solution('1234') == '4'\nassert solution('1377') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(r\"\"\"\n3\n....\n....\n....\n...K\n\"\"\") == \"1\"\n\nassert solution(r\"\"\"\n5\n.K\n...\n...\n.K\n...\n\"\"\") == \"4\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4\\n....\\n....\\n....\\n...K\") == \"-1\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '3'\nassert solution('10') == '-1'\nassert solution('6') == '2'\nassert solution('8') == '5'\nassert solution('9') == '1'\n",
        "num_ids_2": 21,
        "num_ids_4": 41
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '-1'\nassert solution('2') == '-1'\nassert solution('3') == '3'\nassert solution('4') == '2'\nassert solution('5') == '4'\n",
        "num_ids_2": 22,
        "num_ids_4": 42
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\".#.#..........#.#..........#.#..........#.#..........#.#..........#.#..........#.#..........#.##.#..........#.#..........#.#..........#.#..........#.#..........#.#..........#.#..........#.###..##.#######...\") == \"3\"\nassert solution(\".....#....#...###...#.....#....#...###...#.....#....#...###...#.....#....#...###...#.....#....#...###...#.....#....#...###...#....#...###...#.....#....#...#..###.......\") == \"5\"\nassert solution(\".......#...#.#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...#...\") == \"5\"\nassert solution(\"....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...#....#...\") == \"8\"\nassert solution(\"#.#...#...#.#.#...#...#.#.#...#...#.#.#...#...#.#.#...#...#.#.#...#...#.#.#...#...#.#.#...#...#.#.#...#...#.#.#...#...#.#.#...\") == \"1\"\n\n\"\"\"\n",
        "num_ids_2": 150,
        "num_ids_4": 299
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '-1'\nassert solution('4') == '2'\nassert solution('5') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 41
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1\\n4\\n...\\n...\\n...\\n.....') == '2'\nassert solution('4\\n...\\n...\\n...\\n.....') == '-1'\nassert solution('4\\n....\\n....\\n....\\n.....') == '4'\n",
        "num_ids_2": 48,
        "num_ids_4": 70
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"4\") == '2'\nassert solution(\"\") == '-1'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '2'\nassert solution('5\\n....\\n....\\n....\\n...K') == '-1'",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4973,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5\n....\n....\n....\n...#\n''') == '-1'\nassert solution('''5\n.....\n.....\n.....\n....K\n''') == '2'\nassert solution('''5\n....\n....\n....\n....\n''') == '4'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(['100 5', '42', '3', '2', '99', '1']) == '23'\nassert solution(['9', '10', '11']) == '10'\n",
        "num_ids_2": 46,
        "num_ids_4": 46
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == \"23\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n10\\n1\\n10\\n') == '23'\nassert solution('100 5\\n42\\n3\\n2\\n99\\n1\\n') == '23'\nassert solution('100 6\\n10\\n2\\n1\\n99\\n10\\n1\\n') == 'too late'\nassert solution('1\\n10\\n1\\n10\\n') == 'too late'",
        "num_ids_2": 49,
        "num_ids_4": 103
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\nassert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == 'too late'\nassert solution('''\n100 5\n5\n1\n2\n99\n1\n''') == 'too late'\nassert solution('''\n100 5\n1\n1\n2\n99\n1\n''') == 'too late'\nassert solution('''\n100 5\n1\n1\n2\n99\n1\n''') == 'too late'\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n2\n2\n99\n1\n''') == '23'\n\nassert solution('''\n3\n2\n99\n1\n''') == 'too late'\n\nassert solution('''\n100\n99\n1\n''') == 'too late'\n\nassert solution('''\n100\n0\n3\n99\n1\n''') == '23'\n\nassert solution('''\n100\n99\n1\n''') == 'too late'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('\\n'.join(['100', '5', '42', '2', '99', '1'])) == '23'\nassert solution('\\n'.join(['10', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'])) == '10'\n",
        "num_ids_2": 79,
        "num_ids_4": 79
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"too late\"\n\nSample Input:\n100 3\n2\n99\n7\nSample Output:\n7\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\\n2\") == \"too late\"\nassert solution(\"3\\n5\") == \"42\"\nassert solution(\"4\\n1\") == \"too late\"\nassert solution(\"6\\n100\") == \"99\"\nassert solution(\"100\\n1\") == \"too late\"\n",
        "num_ids_2": 27,
        "num_ids_4": 54
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n100 5\n42\n3\n2\n99\n1\n''') == '23'\n\nassert solution('''\n100 20\n3\n3\n3\n5\n2\n3\n1\n3\n9\n3\n99\n''') == '3'\n\nassert solution('''\n1\n4\n1\n3\n5\n''') == 'too late'\n\nassert solution('''\n1\n''') == 'too late'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4974,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('10\\n20\\n7\\n3\\n') == '23'\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\na b\nc d\ne f\n''') == 'cefbdgkmloqxuznhs'\nassert solution('''\nb c\na d\ne f\n''') == 'aecfdbgkmlozxsuh'\nassert solution('''\nc b\na d\ne f\n''') == 'cefbdgkmloqxuznhs'\nassert solution('''\nx a\nb c\nd e\nf g\n''') == 'xbcdegfjkmlpxuxnzs'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('hieeelalaooo') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"playfair example\") == \"PYMZAQJBCLXVNBKBMNUFXKL\"\nassert solution(\"ABCDEFG\") == \"BDHDCTBNFSRBEGR\"\nassert solution(\"ABC\") == \"BC\"\n\"\"\"\n",
        "num_ids_2": 48,
        "num_ids_4": 58
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"playfair example\") == \"MQKPGNZJZGTVWEVRBXRWD\"\nassert solution(\"hide the gold in the tree stump\") == \"PWGXJZCKAWGLSRYBNMBZKJKD\"\n",
        "num_ids_2": 59,
        "num_ids_4": 59
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\nassert solution('hide the gold in the tree stump') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('playfair example') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nplayfair example\nhide the gold in the tree stump\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('playfair example') == 'HMIDRTBQOIGRHLRZBNPFVXWUS'\nassert solution('hide the gold in the tree stump') == 'TCVRJZBXCKLPNZODXIHSAKMSG'\nassert solution('hide the gold in the tree stump2') == 'TCVRJZBXCKLPNZODXIHSAKMSG'\n",
        "num_ids_2": 62,
        "num_ids_4": 97
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('playfair example') == 'GXZTLXJVVETLWLRTMRYI'\n\n'''\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4975,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n\n''') == ''\n\nassert solution('''\n\nplayfair\nhide\nthe\ngold\nin\nthe\ntree\nstump\n''') == 'BMNDZBXDKYBEJVDMUIXMMNUVIF'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$1$).'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\\n1.500 1.500\") == \"The gopher cannot escape.\\n\"\nassert solution(\"1.000 1.000 1.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\\n\"\nassert solution(\"1.000 1.000 -1.000 2.000\\n1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\\n\"\nassert solution(\"1.000 1.000 -1.000 1.000\\n1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\\n\"\n",
        "num_ids_2": 82,
        "num_ids_4": 176
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1.000 1.000 2.000 2.000\n1.500 1.500\n''') == 'The gopher can escape through the hole at ($1$, $1$).'\nassert solution('''\n0.000 -100.000 100.000 100.000\n-100.000 100.000\n''') == 'The gopher can escape through the hole at ($0$, $100$).'\n\n'''\n\nimport math\nimport sys\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\"\nassert solution(\"1.500 1.500\") == \"The gopher can escape through the hole at ($1$,$1$).\"\n",
        "num_ids_2": 54,
        "num_ids_4": 54
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher cannot escape.\\n'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at (1, 1).\\n'\nassert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at (1, 1).\\n'\n",
        "num_ids_2": 64,
        "num_ids_4": 100
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1.000 1.000 2.000 2.000') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('1.000 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 2.000 1.500') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.500 1.000') == 'The gopher can escape through the hole at ($1$,$1$).'\nassert solution('1.000 1.000 1.000') == 'The gopher cannot escape.'",
        "num_ids_2": 66,
        "num_ids_4": 132
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher can escape through the hole at ($1$,$1$).\"\nassert solution(\"1.000 1.000 2.000 2.000\") == \"The gopher cannot escape.\"\n",
        "num_ids_2": 60,
        "num_ids_4": 60
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''0.000 0.000 1.000 1.000\n1.000 0.000''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''0.000 0.000 1.000 1.000\n1.000 0.000''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''0.000 0.000 1.000 1.000\n1.000 0.000''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''0.000 0.000 1.000 1.000\n1.000 0.000''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''0.000 0.000 1.000 1.000\n1.000 0.000''') == 'The gopher can escape through the hole at ($1$,$2$).'\n",
        "num_ids_2": 36,
        "num_ids_4": 72
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n2.000 2.000 2.000\n-2.000 1.000\n''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''\n2.000 2.000 1.000\n1.000 2.000\n''') == 'The gopher can escape through the hole at ($1$,$2$).'\nassert solution('''\n2.000 1.000 2.000\n1.000 2.000\n''') == 'The gopher cannot escape.'\nassert solution('''\n2.000 1.000 -1.000\n1.000 1.000\n''') == 'The gopher cannot escape.'\nassert solution('''\n2.000 1.000 2.000\n-1.000 -1.000\n''') == 'The gopher cannot escape.'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4976,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"\"\"\n1.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\") == \"The gopher can escape through the hole at ($x$,$y$).\"\nassert solution(\"\"\"\n1.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\") == \"The gopher can escape through the hole at ($x$,$y$).\"\nassert solution(\"\"\"\n1.000 1.000 2.000 2.000\n1.500 1.500\n\"\"\") == \"The gopher cannot escape.\"\n",
        "num_ids_2": 10,
        "num_ids_4": 15
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n3 4\n3 3\n3\nY''') == 'Y'\nassert solution('''\n4 4\n3 3\n3\nN''') == 'N'\nassert solution('''\n5 4\n2 3\n4\nY''') == 'Y'\nassert solution('''\n5 4\n3 3\n4\nY''') == 'Y'\nassert solution('''\n5 4\n3 4\n1\nY''') == 'Y'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 3\\n2 3') == 'Y'\nassert solution('2 1\\n2 3') == 'N'",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"2 3\") == \"Y\"\nassert solution(\"2 2\") == \"N\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3\n3 3\n2''') == 'Y'\nassert solution('''5 4\n6 3\n5''') == 'N'\nassert solution('''4 5\n3 4\n4''') == 'Y'\nassert solution('''1 100\n100 1\n1''') == 'Y'\nassert solution('''1 1\n2 1\n1''') == 'N'\n",
        "num_ids_2": 16,
        "num_ids_4": 32
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3 4\\n3 3\\n3') == 'Y'\nassert solution('5 2\\n3 1\\n4') == 'N'\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 4') == 'Y'\nassert solution('3 4') == 'Y'\nassert solution('3 3') == 'Y'\nassert solution('3 3') == 'Y'\nassert solution('3 4') == 'N'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 4\n3 3\n1\n''') == 'Y'\nassert solution('''\n3 4\n2 2\n3\n''') == 'N'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 2\") == \"Y\"\nassert solution(\"1 2\") == \"N\"\nassert solution(\"2 1\") == \"Y\"\nassert solution(\"2 1\") == \"Y\"\nassert solution(\"5 7\") == \"Y\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n3 3\\n7') == 'Y'\nassert solution('3 4\\n3 3\\n7') == 'N'",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4977,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5\\n3 3\\n1\") == \"Y\"\nassert solution(\"-1 5\\n3 3\\n1\") == \"N\"\n\ninput = sys.stdin.read()\nn, m, t = list(map(int, input.split()))\n\ngrid = []\nfor i in range(n):\n    grid.append(list(map(int, input().split())))\n\nintersections = []\nfor i in range(n):\n    for j in range(m):\n        if grid[i][j] == 1:\n            intersections.append((i, j))\n\nprint(\"Y\") if t < len(intersections) else print(\"N\")",
        "num_ids_2": 37,
        "num_ids_4": 37
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''5 7\n...V...\n.......\n.......\n...#...\n..###..''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.'''\nassert solution('''10 10\n...##..\n.##...#\n..#..#.\n.###..#\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n5 7\n..V..\n.V###\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 5\n...V...\n.......\n.......\n...#...\n..###..''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.'''\n\nassert solution('''6 5\n......\n...#..\n..###.\n..###.\n.####.\n.....#''') == '''.....#'''",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.\\n'\n\nassert solution('''\n5 7\n...#..\n...#..\n.......\n...#..\n..###..\n''') == '...#..\\n...#..\\n...#..\\n...#..\\n..VVV..\\n.V#VV.\\n.V###V.'''\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"5 7\") == \"\"\"\n..VVV..\n.VV#VV.\n.V###V.\n..VVV..\n...V...\n\"\"\"\n",
        "num_ids_2": 9,
        "num_ids_4": 9
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n5 7\n...V...\n.......\n.......\n...#...\n..###..\n''') == '''...V...\n...V...\n..VVV..\n.VV#VV.\n.V###V.'''.strip()\nprint(solution('''\n2 2\n.....\n.#...\n'''))\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4978,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('5 7') == '...V...\\n...V...\\n..VVV..\\n.VV#VV.\\n.V###V.'\n",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(11) == '11'\nassert solution(1101) == '1011'\nassert solution(12) == '12'",
        "num_ids_2": 22,
        "num_ids_4": 32
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"123\") == \"321\"\nassert solution(\"0\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"10\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('13') == '11'\nassert solution('0') == '0'\nassert solution('1') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"13\") == \"11\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('13') == '11'\nassert solution('100') == '00'\nassert solution('1') == '1'\nassert solution('0') == '0'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('13') == '11'\n\n\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u0432\u0430\u043c \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043a \u0443\u0434\u043e\u0431\u043d\u043e\u043c\u0443 \u0432\u0438\u0434\u0443\n\"\"\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"11\") == \"1\"\nassert solution(\"00\") == \"00\"\nassert solution(\"01\") == \"0\"\nassert solution(\"10\") == \"1\"\nassert solution(\"11101110\") == \"11111111\"",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('13') == '11'\nassert solution('0') == '0'\nassert solution('0001011010') == '0001011010'\n'''",
        "num_ids_2": 20,
        "num_ids_4": 36
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('10') == '1'\nassert solution('01010101') == '11001010'\nassert solution('111111111') == '01110101111'\n",
        "num_ids_2": 25,
        "num_ids_4": 41
    },
    {
        "number": 4979,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"13\") == \"11\"\nassert solution(\"11\") == \"13\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"9\"\n\"\"\"",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('12') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"12\") == \"9\", \"Testing 1st case\"\nassert solution(\"12\") == \"9\", \"Testing 2nd case\"\nassert solution(\"12\") == \"9\", \"Testing 3rd case\"\n",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"3\") == \"I must watch Star Wars with my daughter\"\nassert solution(\"4\") == \"I must watch Star Wars with my daughter\"\n\"\"\"\n\nfrom collections import Counter",
        "num_ids_2": 27,
        "num_ids_4": 44
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('12') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('12') == '9', \"test 1 failed\"\nassert solution('13') == '0', \"test 2 failed\"\nassert solution('24') == '0', \"test 3 failed\"\n\"\"\"\n\nn = int(input())\n\ncolors = {}\n\nfor i in range(n):\n    colors[input().lower()] = 0\n\nfor i in range(n):\n    colors[input().lower()] += 1\n\nprint(colors.get(\"pink\", 0))\nprint(colors.get(\"rose\", 0))\n",
        "num_ids_2": 30,
        "num_ids_4": 45
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"1\") == \"1\"\nassert solution(\"4\") == \"1\"\nassert solution(\"20\") == \"3\"\nassert solution(\"4\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"1\"\nassert solution(\"5\") == \"5\"\nassert solution(\"12\") == \"7\"\nassert solution(\"15\") == \"9\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('12') == '9'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4980,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"12\") == \"9\"\nassert solution(\"10\") == \"10\"\nassert solution(\"30\") == \"0\"\nassert solution(\"15\") == \"0\"\nassert solution(\"16\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('ABBA') == 'BABA'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n1 5 3\nABC\n''') == '1 3 5 AB'\nassert solution('''\n1 5 2\nABC\n''') == '1 5 2 AC'\n\n\"\"\"\n\nimport re\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5 3') == '1 3 5'\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1 5 3') == '1 3 5'\n\"\"\"\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 5 3') == '1 3 5'\nassert solution('1 2 3') == '1 3 2'\nassert solution('1 4 2') == '1 2 4'\nassert solution('1 6 4') == '1 4 6'\nassert solution('1 5 3 4') == '1 4 3 5'\n",
        "num_ids_2": 28,
        "num_ids_4": 56
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''1 5 3\nABC''') == '1 3 5 ABC'\nassert solution('''2 3 4\nDEF''') == '2 3 4 DEF'\nassert solution('''1 2 3\nBCD''') == '1 3 2 BCD'\nassert solution('''1 3 5\nBCD''') == '1 3 5 BCD'\nassert solution('''1 3 5\nCDAB''') == '1 3 5 CDBA'\n''')\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"1 2 3\") == \"1 2 3\"\nassert solution(\"1 2 3 4\") == \"1 2 3 4\"\nassert solution(\"1 2 3 4 5\") == \"1 2 3 4 5\"\nassert solution(\"1 2 3 4 5 6\") == \"1 2 3 4 5 6\"\n",
        "num_ids_2": 28,
        "num_ids_4": 62
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''1 5 3\nA B C''') == '1 3 5'\nassert solution('''1 5 3\nA C B''') == '3 1 5'\nassert solution('''1 5 3\nC B A''') == '3 1 5'\nassert solution('''1 5 3\nA C D\nB C D\nC A D''') == '1 3 5 D 1 4 5 2 4 3 D'\nassert solution('''1 5 3\nA C D\nB C D\nC A D''') == '1 3 5 D 1 4 5 2 4 3 D'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4981,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 5 3\") == \"1 3 5\"\nassert solution(\"ABC\") == \"ABC\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('buy 1 2\\nsell 3\\nsplit 5\\ndie 4\\n') == '8.00000000'\n\"\"\"\n\nimport math",
        "num_ids_2": 29,
        "num_ids_4": 29
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"buy 1 15\\nsell 1 5\\ndie 4\\n\") == \"8.00000000\"\nassert solution(\"buy 1 10\\nbuy 2 5\\nsell 1 5\\nsell 1 10\\nbuy 2 5\\nsplit 3\\nsell 1 5\\nbuy 1 5\\n\") == \"5.00000000\"\nassert solution(\"buy 1 10\\nbuy 2 5\\nsell 1 5\\nsell 1 10\\nbuy 2 5\\nsplit 3\\nsell 1 5\\nbuy 1 5\\n\") == \"7.500000000\"\nassert solution(\"buy 1 10\\nbuy 2 5\\nsell 1 5\\nsell 1 10\\nbuy 2 5\\nsplit 3\\nsell 1 5\\nbuy 1 5\\n\") == \"7.500000000\"\nassert solution(\"buy 1 10\\nbuy 2 5\\nsell 1 5\\nsell 1 10\\nbuy 2 5\\nsplit 3\\nsell 1 5\\nbuy 1 5\\n\") == \"7.500000000\"\n",
        "num_ids_2": 76,
        "num_ids_4": 180
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('\\n'.join(['buy 1 15','split 3','sell 1 5', 'die 4'])) == '8.00000000'\nprint(solution(input()))\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''\nbuy 1 15\nsplit 3\nsell 1 5\ndie 4\n''') == '8.00000000'\n\nassert solution('''\nbuy 1 2\nbuy 3 2\nsell 2 3\nsell 4 3\n''') == '3.5000000000000003'\n\nassert solution('''\nbuy 1 2\nbuy 4 5\nbuy 6 7\nbuy 8 9\nsell 10 11\nsell 12 13\nsell 14 15\nsell 16 17\nbuy 18 19\nbuy 20 21\nbuy 22 23\nbuy 24 25\nsell 26 27\nsell 28 29\nsell 30 31\n''') == '39.500000000000003'\n\nassert solution('''\nbuy 100 100\nbuy 101 101\nbuy 102 102\nsell 103 103\nsell 104 104\nbuy 105 105\nbuy 106 106\nsell 107 107\nsell 108 108\nbuy 109 109\nsell 110 110\nsell 111 111\nbuy 112 112\nsell 113 113\nsell 114 114\nbuy 115 115\nsell 116 116\nsell 117 117\nsell 118 118\nsell 119 119\nsell 120 120\nsell 121 121\nsell 122 122\nsell 123 123\nsell 124 124\nsell 125 125\nsell 126 126\nsell 127 127\nsell 128 128\nsell 129 129\nsell 130 130\nsell 131 131\nsell 132 132\nbuy 133 133\nbuy 134 134\nbuy 135 135\nsell 136 136\nsell 137 137\nsell 138 138\nsell 139 139\nsell 140 140\nsell 141 141\nsell 142 142\nsell 143 143\nsell 144 144\nsell 145 145\nsell 146 146\nsell 147 147\nsell 148 148\nsell 149 149\nsell 150 150\nsell 151 151\nsell 152 152\nsell 153 153\nsell 154 154\nsell 155 155\nsell 156 156\nsell 157 157\nsell 158 158\nsell 159 159\nsell 160 160\nsell 161 161\nsell 162 162\nsell 163 163\nsell 164 164\nsell 165 165\nsell 166 166\nsell 167 167\nsell 168 168\nsell 169 169\nsell 170 170\nsell 171 171\nsell 172 172\nsell 173 173\nsell 174 174\nsell 175 175\nsell 176 176\nsell 177 177\nsell 178 178\nsell 179 179\nsell 180 180\nsell 181 181\nsell 182 182\nsell 183 183\nsell 184 184\nsell 185 185\nsell 186 186\nsell 187 187\nsell 188 188\nsell 189 189\nsell 190 190\nsell 191 191\nsell 192 192\nsell 193 193\nsell 194 194\nsell 195 195\nsell 196 196\nsell 197 197\nsell 198 198\nsell 199 199\nsell 200 200\nsell 201 201\nsell 202 202\nsell 203 203\nsell 204 204\nsell 205 205\nsell 206 206\nsell 207 207\nsell 208 208\nsell 209 209\nsell 210 210\nsell 211 211\nsell 212 212\nsell 213 213\nsell 214 214\nsell 215 215\nsell 216 216\nsell 217 217\nsell 218 218\nsell 219 219\nsell 220 220\nsell 221 221\nsell 222 222\nsell 223 223\nsell 224 224\nsell 225 225\nsell 226 226\nsell 227 227\nsell 228 228\nsell 229 229\nsell 230 230\nsell 231 231\nsell 232 232\nsell 233 233\nsell 234 234\nsell 235 235\nsell 236 236\nsell 237 237\nsell 238 238\nsell 239 239\nsell 240 240\nsell 241 241\nsell 242 242\nsell 243 243\nsell 244 244\nsell 245 245\nsell 246 246\nsell 247 247\nsell 248 248\nsell 249 249\nsell 250 250\nsell 251 251\nsell 252 252\nsell 253 253\nsell 254 254\nsell 255 255\nsell 256 256\nsell 257 257\nsell 258 258\nsell 259 259\nsell 260 260\nsell 261 261\nsell 262 262\nsell 263 263\nsell 264 264\nsell 265 265\nsell 266 266\nsell 267 267\nsell 268 268\nsell 269 269\nsell 270 270\nsell 271 271\nsell 272 272\nsell 273 273\nsell 274 274\nsell 275 275\nsell 276 276\nsell 277 277\nsell 278 278\nsell 279 279\nsell 280 280\nsell 281 281\nsell 282 282\nsell 283 283\nsell 284 284\nsell 285 285\nsell 286 286\nsell 287 287\nsell 288 288\nsell 289 289\nsell 290 290\nsell 291 291\nsell 292 292\nsell 293 293\nsell 294 294\nsell 295 295\nsell 296 296\nsell 297 297\nsell 298 298\nsell 299 299\nsell 300 300\nsell 301 301\nsell 302 302\nsell 303 303\nsell 304 304\nsell 305 305\nsell 306 306\nsell 307 307\nsell 308 308\nsell 309 309\nsell 310 310\nsell 311 311\nsell 312 312",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('buy 1 5\\nbuy 3\\ndie 4\\nsell 1 5\\n') == '8.00000000'\nassert solution('buy 1 15\\nbuy 3\\ndie 4\\nsell 1 5\\n') == '7.00000000'\nassert solution('buy 1 5\\nbuy 3\\ndie 4\\nsell 1 5\\n') == '6.00000000'\nassert solution('buy 1 5\\nbuy 3\\ndie 4\\nsell 1 5\\n') == '5.00000000'\n\nimport sys\nimport io\n\nsys.stdin = io.StringIO('''\nbuy 1 15\nbuy 3\nsell 1 5\ndie 4\n'''.strip())",
        "num_ids_2": 58,
        "num_ids_4": 116
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"buy 1 15\\nsplit 3\\nsell 1 5\\n\") == \"8.00000000\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\nbuy 2 9\nsell 1 5\nsplit 3\n''') == '6.00000000'\n\nassert solution('''\nbuy 5 2\nbuy 4 7\nbuy 5 6\nsell 1 3\nmerge 3 8\nbuy 3 1\nbuy 5 3\nsplit 2\nsell 2 2\ndie 8\nmerge 4 3\n''') == '26.00000000'\n\nassert solution('''\nbuy 10 2\nsell 3 5\nsplit 8\nbuy 4 5\nsell 1 5\nmerge 5 6\nsell 2 4\nsell 3 1\nmerge 4 2\nbuy 1 7\nmerge 4 3\nmerge 5 2\nsell 3 4\nsplit 8\nsell 1 5\nsell 3 3\nbuy 4 7\nsell 2 2\nbuy 3 2\n''') == '10.00000000'\n\nassert solution('''\nbuy 11 7\nbuy 12 1\nbuy 1 9\nbuy 11 1\nbuy 5 7\nbuy 12 5\nsell 1 3\nmerge 3 4\nmerge 8 9\nsell 4 4\nbuy 2 1\nsell 6 6\nsell 5 5\nmerge 4 3\nmerge 4 3\nbuy 6 6\nsell 1 4\nsell 3 4\nsell 2 1\nbuy 1 5\nbuy 6 7\nbuy 12 7\nsell 2 5\nsell 1 3\nsell 2 4\nbuy 11 5\nbuy 2 7\nbuy 3 1\n''') == '14.00000000'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('buy 1 15\\nsplit 3\\nsell 1 5\\ndie 4\\n') == '8.00000000'\nassert solution('buy 1 15\\nbuy 1 17\\nsell 1 5\\nsell 1 17\\ndie 4\\n') == '5.00000000'\nassert solution('buy 1 15\\nbuy 1 17\\nsell 1 5\\nsell 1 17\\nbuy 1 17\\nsell 1 17\\nsell 1 17\\ndie 4\\n') == '5.00000000'\nassert solution('buy 1 15\\nbuy 1 17\\nsell 1 5\\nsell 1 17\\nbuy 1 17\\nsell 1 17\\nsell 1 17\\nsell 1 17\\nsell 1 17\\nbuy 1 17\\nsell 1 17\\n') == '7.00000000'\nassert solution('buy 1 15\\nbuy 1 17\\nsell 1 5\\nsell 1 17\\nbuy 1 17\\nsell 1 17\\nsell 1 17\\nbuy 1 17\\nsell 1 17\\n') == '7.00000000'\n",
        "num_ids_2": 65,
        "num_ids_4": 181
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(__import__('sys').stdin.read()) == '8.00000000'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4982,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1\\n3\\n1\\n4\\n') == '8.00000000'",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5\") == \"5\"\nassert solution(\"1000\") == \"9\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\n809\n''') == '8'\nassert solution('''\n3\n''') == '3'\nassert solution('''\n-1\n''') == '0'\nassert solution('''\n-1\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('808') == '8'\nassert solution('1') == '1'\nassert solution('2') == '2'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('2') == '2'\nassert solution('808') == '8'\nassert solution('7') == '7'",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"808\") == \"8\"\nassert solution(\"2\") == \"2\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('808') == '8'\nassert solution('1234') == '3'\nassert solution('12345') == '5'",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4983,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('808') == '8'\nassert solution('1234') == '4'",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(input()) == \"2\"\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n') == \"2\"\n",
        "num_ids_2": 33,
        "num_ids_4": 33
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"CCCCCC\") == \"1\"\nassert solution(\"CCCCCCCC\") == \"1\"\nassert solution(\"CCCCCCCCCCCCCCCCCCCCCCCCC\") == \"11\"\nassert solution(\"CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\") == \"8\"\n",
        "num_ids_2": 21,
        "num_ids_4": 55
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"4 5\\nCCCCC\\nCCCCC\\nCCCCC\\nCCCCC\") == \"2\"\nassert solution(\"5 5\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\\nCCCCCCCCCCCC\") == \"1\"\nassert solution(\"10 10\\nLCCCCCLLCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC\\nCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC",
        "num_ids_2": 118,
        "num_ids_4": 1695
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '0'\nassert solution('CCCCC\\nCCCCC\\nCCCCC\\nCCCCC') == '1'",
        "num_ids_2": 31,
        "num_ids_4": 31
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n4 5\nLCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == '0'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''5\nLCCCC\nCCCCC\nCCCCC\nCCCCC\nLCCCC''') == \"4\"\nassert solution('''3\nCC\nCC\nCC\nSample Output:\n3\n",
        "num_ids_2": 14,
        "num_ids_4": 14
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"CCCCCC\") == \"1\"\nassert solution
        "num_ids_2": 21,
        "num_ids_4": 1696
    },
    {
        "number": 4984,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n4 5\nCCCCC\nCCCCC\nCCCCC\nCCCCC\n''') == \"0\"\nassert solution('''\n10 20\nCPCPC\nCCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCC\nCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCC\nCCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCCCCC\nCC",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('5 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == \"60\"\nassert solution('5 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == \"63\"",
        "num_ids_2": 80,
        "num_ids_4": 80
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"9C\") == \"36\"\nassert solution(\"KS\") == \"29\"\nassert solution(\"QS\") == \"26\"\nassert solution(\"JS\") == \"24\"\n",
        "num_ids_2": 22,
        "num_ids_4": 43
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"S\\nTH\\n9C\\n\") == \"60\"\n\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 S\\nTH\\n9C') == '60'",
        "num_ids_2": 18,
        "num_ids_4": 18
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH''') == '60'\nassert solution('''2 S\n9S\n8C\n7C\n5D\n4H\n3D\n2S''') == '62'\nassert solution('''10 T\n3C\n7S\nKH\n6S\n7H\n4C\n3S\n2H\n8D\n9S\n5C\n4D\n4S\n8C\n3S''') == '55'\n\nstdin = '''2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n'''\n\nstdin = \"\"\"2 S\nTH\n9C\nKS\nQS\nJS\nTD\nAD\nJH\n\"\"\"\n\nstdin = \"\"\"2 S\n9C\n8C\n7C\n5D\n4H\n3D\n2S\n\"\"\"\n\nstdin = \"\"\"10 T\n3C\n7S\nKH\n6S\n7H\n4C\n3S\n2H\n8D\n9S\n5C\n4D\n4S\n8C\n3S\"\"\"\n\n\nprint(solution(stdin))\n",
        "num_ids_2": 16,
        "num_ids_4": 24
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''3 S\nTH\n9C\nKS\nQS\n''') == '60'\n",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == \"60\"",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('2 S\\nTH\\n9C\\nKS\\nQS\\nJS\\nTD\\nAD\\nJH\\n') == '60'\nassert solution('10\\nS\\nT\\nC\\nH\\nD\\nK\\nQ\\nJ\\n9\\n8\\n7\\n') == '77'\nassert solution('4\\nS\\nT\\nC\\nH\\nD\\nK\\nQ\\nJ\\n9\\n8\\n7\\n') == '41'\n",
        "num_ids_2": 85,
        "num_ids_4": 130
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"2 S\") == \"60\"\nassert solution(\"TH\") == \"21\"\nassert solution(\"9C\") == \"36\"\n",
        "num_ids_2": 21,
        "num_ids_4": 32
    },
    {
        "number": 4985,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"2 S\") == '60'\nassert solution(\"3 H\") == '35'\n\n----\n\n7.\n\nTask.\nYou are given an array of N non-negative integers, A1, A2,\u2026, AN. Return the maximum value of f(i, j) for all 1 \u2264 i, j \u2264 N. f(i, j) is defined as follows:\n\nIf A[i] > A[j], f(i, j) = f(i - 1, j \u2212 1) + 1\nIf A[i] < A[j], f(i, j) = f(i - 1, j)\nIf A[i] = A[j], f(i, j) = f(i - 1, j \u2212 1)\nIf A[i] = A[j] and i < j, f(i, j) = 0.\n\nInput Format.\nThe first and the only argument is an array A of N integers.\nOutput Format.\nReturn a single integer, the maximum value of f(i, j).\n\nNote. If A[i] > A[j] and i < j, then f(i, j) is equal to f(i + 1, j).\n\nFor example, given array A such that:\n  A[0] = 4\n  A[1] = 3\n  A[2] = 2\n  A[3] = 6\n  A[4] = 5\n  A[5] = 1\nWe should return f(0, 5) = 5 as follows:\n\nf(0, 5) = max(f(1, 4), f(1, 3), f(1, 2), f(1, 6), f(1, 5)) = max(1, 1, 0, 0, 0) = 1\n\nConstraints.\n1 \u2264 N \u2264 50, where N = A.length\n1 \u2264 A[i] \u2264 20000\nSample Input 1\n\n4 3 2 1\nSample Output 1\n\n4\nSample Input 2\n\n2 3 2 1\nSample Output 2\n\n3\n'''",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n'''",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\nassert solution(\"thiss iss veery annoying\") == \"se\"\n\"\"\"",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying''') =='se'\n\nassert solution('thiss iss veery annoying') =='se'\n\nassert solution('this is very annoying') == 't'\n\nassert solution('thiss iss veery annoying') =='s'",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying''') =='se'\n\nassert solution('''this is very annoying\nthiss is very annoying''') =='se'\n\nassert solution('''this is very annoying\nthiss is very annoying''') =='se'\n\nassert solution('''this is very annoying\nthiss is very annoying''') =='se'\n\nassert solution('''this is very annoying\nthiss is very annoying''') =='se'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''this is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''this is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''this is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''this is very annoying\nthiss iss veery annoying\n''') =='se'\n\nassert solution('''this is very annoying\nthiss iss veery annoying\n''') =='se'",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('not a word') ==''",
        "num_ids_2": 28,
        "num_ids_4": 38
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"this is very annoying\") == \"se\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4986,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('this is very annoying') =='se'\nassert solution('thiss iss veery annoying') =='se'\nassert solution('hello') == ''\nassert solution('hello world') == ''\n\nimport collections\nimport itertools",
        "num_ids_2": 28,
        "num_ids_4": 45
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 3 0\n0 0 1 1 2\n''') == '3'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n3 3 0\n0 0 1 1 2\n''') == '3'\nassert solution('''\n4 4 0\n0 0 1 1 2\n''') == '3'\nassert solution('''\n5 1 1 0\n0 0 1 1 2\n''') == '2'\n'''\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1 3 0\\n0 0 1 1 2\") == \"3\"\nassert solution(\"2 2 1\\n0 1 1\\n0 0 2\\n1 2 3\\n1 3 2\\n1 0 2\\n0 1 2\\n1 0 2\\n1 2 1\") == \"4\"\n",
        "num_ids_2": 71,
        "num_ids_4": 71
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('2 4 5 0 0 0 0 0 0 0 0 0 0 0 1 1 2 2 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 2 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "num_ids_2": 1681,
        "num_ids_4": 1681
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"5 3 0\") == \"3\"\nassert solution(\"10 5 0\") == \"5\"\nassert solution(\"5 10 0\") == \"1\"\nassert solution(\"10 5 5\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 0 1 1 2') == '3'\nassert solution('5 3 0') == '3'\nassert solution('5 3 2') == '1'\n",
        "num_ids_2": 26,
        "num_ids_4": 38
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('5 3 0') == '3', \"Should be '3'\"\nassert solution('1 1 0') == '0', \"Should be '0'\"\n",
        "num_ids_2": 36,
        "num_ids_4": 36
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 1 3 1') == '3'\nassert solution('10 0 0 0 0') == '1'\nassert solution('1 4 5 6 2 3 3 4 5') == '2'",
        "num_ids_2": 28,
        "num_ids_4": 46
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('1 2\\n2 1') == '1'\nassert solution('5 3 0\\n0 0 1 1 2') == '3'\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4987,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\n    \"1 1 1 1 1\\n\"\n    \"0 1 0 0 1\\n\"\n    \"1 1 2 3 3\\n\"\n    \"1 1 1 1 2\"\n    ) == \"3\"\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"3\\n2\\n3\\n\") == \"2\"\nassert solution(\"2\\n4\\n\") == \"4\"\nassert solution(\"1\\n\") == \"1\"\nassert solution(\"3\\n\") == \"6\"",
        "num_ids_2": 33,
        "num_ids_4": 57
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"3\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"3\") == \"6\"\nassert solution(\"2\") == \"1\"\nassert solution(\"3\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"6\"",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('3') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n\"\"\"",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1\\n2\\n3') == '1'\nassert solution('1\\n2\\n3') == '2'\nassert solution('1\\n2\\n3') == '6'",
        "num_ids_2": 32,
        "num_ids_4": 48
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5\\n3\\n\") == \"1\"\nassert solution(\"5\\n2\\n\") == \"2\"\nassert solution(\"5\\n3\\n\") == \"6\"\nassert solution(\"2\\n\") == \"1\"\n",
        "num_ids_2": 30,
        "num_ids_4": 57
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1\\n2\\n3') == '1\\n2\\n6'\nassert solution('1\\n2\\n3') == '1\\n2\\n6'\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\n3\n1\n2\n3\n''') == '1'\n\nassert solution('''\n2\n1\n2\n3\n''') == '6'\n\nassert solution('''\n4\n1\n2\n3\n''') == '1'\n\n\"\"\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4988,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1'\nassert solution('2') == '2'\nassert solution('3') == '6'\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1') == '1'\nassert solution('3') == '4'\nassert solution('4') == '6'\nassert solution('2 1 2') == '3'\nassert solution('2 4') == '4'\n",
        "num_ids_2": 20,
        "num_ids_4": 42
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3\\n1 2\\n') == '4 2'\nassert solution('10\\n2 2 8 1 1 4 6 1 5\\n') == '14 1'\nassert solution('100\\n100 100 100 100\\n') == '1 1'\n",
        "num_ids_2": 41,
        "num_ids_4": 60
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n3 1 2') == '4 2'\nassert solution('3\\n3 1 1') == '3 1'\n",
        "num_ids_2": 32,
        "num_ids_4": 32
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"2 3 1 2\") == \"4 2\"\nassert solution(\"2 1 1 1\") == \"4\"\nassert solution(\"3 1 2 3\") == \"7\"\nassert solution(\"3 1 3 2\") == \"7\"\nassert solution(\"3 3 1 1\") == \"6\"\n",
        "num_ids_2": 27,
        "num_ids_4": 53
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"\") == \"0\"\nassert solution(\"1\") == \"1\"\nassert solution(\"2\") == \"2\"\nassert solution(\"3\") == \"4\"\nassert solution(\"4\") == \"7\"\n",
        "num_ids_2": 19,
        "num_ids_4": 39
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"3 1 2\") == \"4 2\"\nassert solution(\"2 2\") == \"2\"\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('1 1 1') == '3 2'\nassert solution('4 4 2') == '4 4'\nassert solution('4 5 4 2') == '4 5 4'\n",
        "num_ids_2": 26,
        "num_ids_4": 41
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"3\") == \"3 2 1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"3\") == \"4 2\"\nassert solution(\"3 4\") == \"5 7\"\n",
        "num_ids_2": 23,
        "num_ids_4": 23
    },
    {
        "number": 4989,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''\n3\n3 1 2\n''') == '4 2'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n5 2 1\n''') == '2'\nassert solution('''\n7 2 1\n''') == '3'\nassert solution('''\n11 1 2\n''') == '10'\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution() == '2'",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"5 2 1\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('4 1 2') == '1'\nassert solution('5 1 2') == '2'\nassert solution('1 1 2') == '2'\nassert solution('1 1 1') == '1'\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(INPUT) == OUTPUT\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('5 2 1') == '2'\nassert solution('1 1 1') == '1'\nassert solution('5 5 1') == '7'\nassert solution('10 10 10') == '999'\nassert solution('1 1 1') == '1'\n\"\"\"",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"3 1 1\") == \"2\"\nassert solution(\"5 3 2\") == \"2\"\nassert solution(\"100 4 2\") == \"8\"\nassert solution(\"1000 1000 1\") == \"8\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 2 1\") == \"2\"",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"5 2 1\") == \"2\"\nassert solution(\"1\") == \"1\"\nassert solution(\"5 1 0\") == \"1\"\nassert solution(\"1 2 0\") == \"1\"\nassert solution(\"2 5 2\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 46
    },
    {
        "number": 4990,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('''5 2 1\n''') == '2'\nassert solution('''5 2 3\n''') == '4'\nassert solution('''10 2 5\n''') == '6'\nassert solution('''10 2 4\n''') == '2'\nassert solution('''100 2 3\n''') == '11'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"1\"\nassert solution(\"5\") == \"36\"\nassert solution(\"7\") == \"288\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('5') == '36'\nassert solution('7') == '288'\nassert solution('10') == '40'\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('5') == '36'\nassert solution('7') == '288'\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('5') == '36'\nassert solution('0') == '0'\n\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('''5\n1\n2\n3\n4\n5''') == '36', 'First'\n\nassert solution('''7\n1\n2\n3\n4\n5\n6\n7''') == '288', 'Second'\n\nassert solution('''3\n1\n2\n3''') == '6', 'Third'\n",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('''\n5\n''') == '36', '5'\n",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(input) == \"36\"\nassert solution(input) == sum(i for i in h(n))",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('5') == '36'\n\n'''",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5') == '36'\nassert solution('50000000') == '86842144'\n",
        "num_ids_2": 24,
        "num_ids_4": 24
    },
    {
        "number": 4991,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5\") == \"36\"\nassert solution(\"10\") == \"55\"\nassert solution(\"1\") == \"1\"\n",
        "num_ids_2": 20,
        "num_ids_4": 30
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"4\\n2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"4\\n2 1 1 1\") == \"1 1 2 3\"\nassert solution(\"3\\n2 1 1\") == \"1 1 2\"\nassert solution(\"3\\n2 1\") == \"1 2\"\nassert solution(\"4\\n2 1 2 3\") == \"1 2 3 4\"\n",
        "num_ids_2": 38,
        "num_ids_4": 70
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('2 3 3 1') == '2 3 4 1'\nassert solution('4 4 3 1') == '3 4 2 1'\nassert solution('4 4 2 1') == '2 4 3 1'\nassert solution('4 4 4 1') == '4 1 4 3'\nassert solution('30 3 3 1') == '3 1 4 3 5 8'\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('3\\n2 3 3 1') == '2 3 4 1'\nassert solution('4\\n2 3 3 1') == '2 3 4 1'\nassert solution('3\\n1 3 2 2') == '3 1 4 2'\nassert solution('2\\n2 2') == '2 2'\nassert solution('6\\n1 1 2 1 1 2') == '1 1 2 1 2'\n",
        "num_ids_2": 38,
        "num_ids_4": 72
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''2 3 3 1\n2 3 3 1\n''') == '2 3 4 1'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('1') == '1'\nassert solution('4') == '2 3 4 1'\nassert solution('3') == '1 2 3'\nassert solution('12') == '12 1 2'\nassert solution('6') == '1 2 3 4 5 6'\n",
        "num_ids_2": 23,
        "num_ids_4": 47
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1') == 'impossible'\nassert solution('2') == '1 2 3'\nassert solution('3') == '1 2 3 4'\nassert solution('4') == '1 3 4 2'\n",
        "num_ids_2": 23,
        "num_ids_4": 49
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n2\n2 3 3 1\n''') == '2 3 4 1'\nassert solution('''\n3\n2 3 3 1\n''') == '2 3 4 1'\nassert solution('''\n4\n2 3 3 1\n''') == '2 3 4 1'\nassert solution('''\n5\n2 3 3 1 2\n''') == '1 2 3 4 5'\nassert solution('''\n10\n1 1 1 1 1 1 1 1 1 1\n''') == '1 1 2 3 4 5 6 7 8 9 10'",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"2 3 3 1\") == \"2 3 4 1\"\nassert solution(\"10\") == \"impossible\"",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('2 3 3 1\\n') == '2 3 4 1'\nassert solution('4\\n2 3 3 1\\n') == '2 3 4 1'\nassert solution('5\\n1 2 3 4 5\\n') == '2 3 4 1 5'\n",
        "num_ids_2": 39,
        "num_ids_4": 62
    },
    {
        "number": 4992,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('2 3 3 1') == \"2 3 4 1\"\nassert solution('4 5 3 3') == \"3 4 5 1\"\nassert solution('2 2 2 2') == \"2 2 2 2\"\nassert solution('1 1 1 1') == \"1 1 1 1\"\n",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"1\") == \"boat\"\nassert solution(\"2\") == \"boat\"\nassert solution(\"3\") == \"boat\"\nassert solution(\"4\") == \"boat\"\nassert solution(\"5\") == \"boat\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\n\"\"\"\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\n\"\"\"\n7\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\nleft_oar\n\"\"\") == \"4\"\n\nassert solution(\n\"\"\"\n7\nright_oar\nleft_oar\nleft_oar\nhull\nright_oar\nleft_oar\n\"\"\") == \"3\"\n\nassert solution(\n\"\"\"\n4\nright_oar\nleft_oar\nleft_oar\nhull\nright_oar\nleft_oar\n\"\"\") == \"4\"\n\n\"\"\"\nSample Output:\n\nIn the following example, In the first two days, The boat was not able to replace all the parts. In the fourth day, The boat replaced all the parts.\n\"\"\"\n",
        "num_ids_2": 8,
        "num_ids_4": 12
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar') == '4'\nassert solution('2 4\\nleft_oar\\nleft_oar\\nleft_oar\\nleft_oar\\nhull\\nleft_oar') == '3'\nassert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\nleft_oar') == '1'\nassert solution('3 6\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\nleft_oar\\nleft_oar\\nleft_oar') == '5'\nassert solution('3 5\\nleft_oar\\nleft_oar\\nleft_oar\\nleft_oar\\nhull\\nleft_oar') == '6'\n\"\"\"\n",
        "num_ids_2": 84,
        "num_ids_4": 186
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\n    '1\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\n",
        "num_ids_2": 4,
        "num_ids_4": 4
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\nassert solution('3 10\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '7'\nassert solution('1 1\\nleft_oar\\n') == '1'\nassert solution('2 1\\nleft_oar\\n') == '1'",
        "num_ids_2": 82,
        "num_ids_4": 120
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('''\n3 5\nleft_oar\nright_oar\nleft_oar\nhull\nright_oar\n''') == \"4\"",
        "num_ids_2": 6,
        "num_ids_4": 6
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2') == '3'\nassert solution('3 2') == '3'\nassert solution('1 2') == '2'\nassert solution('1 2') == '1'\nassert solution('1 2') == '3'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('3 5\\nleft_oar\\nright_oar\\nleft_oar\\nhull\\nright_oar\\n') == '4'\n",
        "num_ids_2": 41,
        "num_ids_4": 41
    },
    {
        "number": 4993,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2\") == \"1\"\nassert solution(\"2 2\") == \"3\"\nassert solution(\"1 3\") == \"1\"\nassert solution(\"3 5\") == \"4\"\nassert solution(\"2 3\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"5 5\") == \"7 7\"\nassert solution(\"5 7\") == \"7 5\"\nassert solution(\"7 5\") == \"5 7\"\nassert solution(\"5 5 7\") == \"7 7\"\nassert solution(\"5 7 5 7\") == \"7 7\"",
        "num_ids_2": 24,
        "num_ids_4": 49
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"4 4\") == \"7 7\"\nassert solution(\"5 5\") == \"7 7\"\nassert solution(\"5 7\") == \"7 7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 36
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1\\n5 7\\n7 5\\n') == '7 7'\nassert solution('2\\n2 2\\n3 3\\n') == '2 3'\nassert solution('3\\n5 7\\n7 5\\n') == '7 7'\nassert solution('4\\n5 6\\n6 5\\n') == '6 6'\n\"\"\"\n",
        "num_ids_2": 42,
        "num_ids_4": 84
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(\"5 5\") == \"7 7\"\nassert solution(\"5 7\") == \"7 7\"\nassert solution(\"7 5\") == \"7 7\"\nassert solution(\"7 7\") == \"7 7\"\nassert solution(\"5 5 4\") == \"7 7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('5 5\\n5 7\\n7 5\\n') == '7 7'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"2 2\\n2 3\") == \"4 4\"\nassert solution(\"2 2\\n3 2\") == \"4 4\"\nassert solution(\"2 3\\n3 4\") == \"6 6\"\nassert solution(\"3 4\\n4 6\") == \"6 6\"",
        "num_ids_2": 32,
        "num_ids_4": 64
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"5 5\") == \"7 7\"\nassert solution(\"5 7\") == \"7 7\"\nassert solution(\"7 5\") == \"7 7\"\nassert solution(\"7 7\") == \"7 7\"\nassert solution(\"5 7 7\") == \"7 7 7\"\n",
        "num_ids_2": 24,
        "num_ids_4": 48
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"5 5\") == \"7 7\"\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('5 5\\n5 7\\n7 5') == '7 7'\nassert solution('5 5\\n5 7\\n7 5\\n7 7\\n9 5\\n9 7') == '9 7'",
        "num_ids_2": 52,
        "num_ids_4": 52
    },
    {
        "number": 4994,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"5 5\\n5 7\\n7 5\") == \"7 7\"\nassert solution(\"1 2\\n3 4\\n4 5\\n5 6\") == \"4 5\"\n",
        "num_ids_2": 44,
        "num_ids_4": 44
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1\\n1 61') == '1.016666667'\nassert solution('2\\n1 1\\n2 1') == '1.0'\n",
        "num_ids_2": 38,
        "num_ids_4": 38
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('''\n1\n1 60\n''') == '1.016666667', \"First\"\nassert solution('''\n2\n2 60\n''') == '2.00', \"Second\"\nassert solution('''\n3\n3 60\n''') == '3.00', \"Third\"\nassert solution('''\n4\n4 60\n''') == '3.00', \"Fourth\"\n''')\n\nSample Input:\n3\n1 30\n2 30\n3 30\nSample Output:\n1.667333333\n''')",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"1\\n1 11\") == \"1.05\"\n",
        "num_ids_2": 34,
        "num_ids_4": 34
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('1') == '1.016666667'\nassert solution('2') =='measurement error'\n",
        "num_ids_2": 27,
        "num_ids_4": 27
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"1\\n1 61\") == \"1.016666667\"\nassert solution(\"2\\n1 5\") == \"1.0\"\nassert solution(\"3\\n1 0.5\") == \"1.0\"\nassert solution(\"4\\n1 0.25\") == \"1.0\"\nassert solution(\"5\\n1 0.125\") == \"1.125\"\n",
        "num_ids_2": 34,
        "num_ids_4": 70
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '1.016666667'",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution() == '1.016666667'\nprint(solution())\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''\n1\n1 60\n''') == '1.016666667', \"First Test Case\"\nassert solution('''\n5\n1 60\n1 60\n1 60\n1 60\n1 60\n''') == '2.000000000000004', \"Second Test Case\"\nassert solution('''\n2\n1 60\n1 60\n''') == '1.500000000000003', \"Third Test Case\"\n''') == '1.500000000000003', \"Third Test Case\"\n",
        "num_ids_2": 12,
        "num_ids_4": 18
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('\\n'.join([\n    '1',\n    '1 61',\n])) == '1.016666667'\nassert solution('\\n'.join([\n    '2',\n    '3 2',\n])) == '1.033333333'\nassert solution('\\n'.join([\n    '3',\n    '1 2',\n])) == '0.5'\nassert solution('\\n'.join([\n    '2',\n    '2 3',\n])) =='measurement error'\nassert solution('\\n'.join([\n    '3',\n    '1 4',\n])) =='measurement error'\n",
        "num_ids_2": 18,
        "num_ids_4": 36
    },
    {
        "number": 4995,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('1') == '1.01'\nassert solution('2') =='measurement error'\n\nassert solution('1 1') == '1.01'\nassert solution('1 1.01') == '1.01'\nassert solution('1 1.1') == '1.01'\n",
        "num_ids_2": 25,
        "num_ids_4": 53
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"\n\"\"\"\n",
        "num_ids_2": 20,
        "num_ids_4": 20
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"\nassert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"\n\n'''",
        "num_ids_2": 40,
        "num_ids_4": 40
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('CPMCRYY') == 'ALBERTA'\nassert solution('ALBERTA') == 'CPMCRYY'\n\nSample Input:\nABCDEFG\nOPQRST\nSample Output:\nABCDEFG\nOPQRST'''\n",
        "num_ids_2": 30,
        "num_ids_4": 30
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution(input()) == \"CLMKRKY\"\n\"\"\"",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"CPMCRYY\",\"ALBERTA\") == \"CALGARY\"\nassert solution(\"KXSXLGQYZQ\",\"ALBERTA\") == \"BZSXKZXGSQ\"\nassert solution(\"TDBXQCVQ\",\"ALBERTA\") == \"CQDTPVQX\"\nassert solution(\"SVFDQXSVD\",\"ALBERTA\") == \"CVHBCPSS\"\nassert solution(\"SYMVTAU\",\"ALBERTA\") == \"TRMVSEUU\"\n",
        "num_ids_2": 49,
        "num_ids_4": 98
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution(\"ALBERTA\") == \"CALGARY\"",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('CPMCRYY\\nALBERTA') == 'CALGARY'\n\n---Input---\n3\nABDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\n---Output---\nABDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\nABCDEFGHIJKLMNOPQRSTUVWXYZ\n\"\"\"\n",
        "num_ids_2": 21,
        "num_ids_4": 21
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('CPMCRYY') == 'ALBERTA'\n\"\"\"\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('CPMCRYY') == 'ALBERTA'\n",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4996,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('CPMCRYY') == 'CALGARY'\n",
        "num_ids_2": 16,
        "num_ids_4": 16
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution(\"AB\") == \"3\"\nassert solution(\"BA\") == \"2\"\nassert solution(\"CB\") == \"1\"\nassert solution(\"CC\") == \"0\"\nprint(\"all tests passed\")\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('AB') == '3'\nassert solution('CC') == '1'\nassert solution('DC') == '2'\nassert solution('BB') == '2'\nassert solution('BA') == '1'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('''\nAB\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nAB\n''') == '2'\n\nassert solution('''\nBA\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nA\nB\nC\nD\nAB\n''') == '2'\n\n'''",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''A\nAB\nCC\nCD\nBC''') == '1'\nassert solution('''B\nAC\nBC\nCD''') == '2'\nassert solution('''C\nAB\nBC\nCD''') == '3'",
        "num_ids_2": 14,
        "num_ids_4": 21
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"ABCABCAB\") == \"3\"\nassert solution(\"ABABAABABAB\") == \"1\"\n",
        "num_ids_2": 28,
        "num_ids_4": 28
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution() == '3'\n\n'''",
        "num_ids_2": 8,
        "num_ids_4": 8
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('') == '3'\nassert solution('A') == '1'\nassert solution('B') == '2'\nassert solution('C') == '3'\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('''AB\nCD\nEF''') == '3'\n",
        "num_ids_2": 7,
        "num_ids_4": 7
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('''\nA\nB\nC\n''') == '3'\nassert solution('''\nAB\nBA\nC\n''') == '1'\nassert solution('''\nABC\nBABC\nC\n''') == '1'\nassert solution('''\nA\nAB\nB\n''') == '2'\nassert solution('''\nA\nABA\nAB\n''') == '3'\n",
        "num_ids_2": 12,
        "num_ids_4": 24
    },
    {
        "number": 4997,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(stdin) == \"3\"\n",
        "num_ids_2": 11,
        "num_ids_4": 11
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('1 2 3 4') == \"3\"\n",
        "num_ids_2": 13,
        "num_ids_4": 13
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 1 1 1') == '0'\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('1 2 3 4 1 1 1') == '3'\nassert solution('1 2 3 4 1 1 2') == '4'\nassert solution('1 2 3 4 1 1 1 2 1 2 1 2') == '5'\nassert solution('1 2 3 4 1 1 1 2 2 1 2 2 1 2 2') == '5'\n",
        "num_ids_2": 29,
        "num_ids_4": 66
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution('''1 2 3 4''') == '3'\nassert solution('''1 2 5 4''') == '7'\nassert solution('''7 5 4 8''') == '9'\nassert solution('''3 4 7 8 5''') == '9'\n",
        "num_ids_2": 32,
        "num_ids_4": 65
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution(\"2 2 2 3\") == \"3\"\nassert solution(\"1 1 1 2\") == \"2\"\nassert solution(\"2 3 4 2\") == \"4\"\nassert solution(\"2 4 5 2\") == \"5\"\nassert solution(\"1 1 2 1\") == \"1\"\n",
        "num_ids_2": 26,
        "num_ids_4": 52
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('5 5 5 5') == '5'\n\"\"\"\n",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution('3 2 4 1') == '4'\nassert solution('3 2 3 2') == '3'\nassert solution('10 1 10 2') == '1'\nprint('All tests passed.')",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution('1 2 3 4') == '3'\nassert solution('7 5 2 1') == '7'",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution(\"4 3 2 1\") == \"3\"\nassert solution(\"4 3 2 0\") == \"4\"\nassert solution(\"1 2 3 4\") == \"3\"\n",
        "num_ids_2": 26,
        "num_ids_4": 39
    },
    {
        "number": 4998,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution(\"1 2 3 4\") == \"3\"\nassert solution(\"4 2 1 1\") == \"2\"",
        "num_ids_2": 26,
        "num_ids_4": 26
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 0,
        "answer": "assert solution('''\n1 2\n''') == '4'\n\nassert solution('''\n0\n''') == '0'\n",
        "num_ids_2": 12,
        "num_ids_4": 12
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 1,
        "answer": "assert solution(\"5\") == \"1\"\nassert solution(\"10\") == \"2\"\nassert solution(\"100\") == \"3\"\nassert solution(\"1000\") == \"4\"\nassert solution(\"10000\") == \"5\"\n",
        "num_ids_2": 20,
        "num_ids_4": 40
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 2,
        "answer": "assert solution(input) == '4'\n",
        "num_ids_2": 10,
        "num_ids_4": 10
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 3,
        "answer": "assert solution() == 4\nassert solution(\"10 3\") == 4",
        "num_ids_2": 15,
        "num_ids_4": 15
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 4,
        "answer": "assert solution('100 110') == '4'\nassert solution('50 200') == '5'\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 5,
        "answer": "assert solution('100 10') == '4'\nassert solution('17 90') == '3'\nassert solution('1 1') == '1'\nassert solution('2 2') == '2'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 6,
        "answer": "assert solution(\"103 27\") == \"4\"\nassert solution(\"13 25\") == \"2\"\nassert solution(\"56 77\") == \"2\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 7,
        "answer": "assert solution(\"10 3\") == \"5\"\nassert solution(\"1 2\") == \"1\"\n",
        "num_ids_2": 22,
        "num_ids_4": 22
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 8,
        "answer": "assert solution('103 27') == '4'\nassert solution('101 1') == '101'\nassert solution('1 1') == '2'\nassert solution('100 1') == '1'\nassert solution('10 10') == '10'\n",
        "num_ids_2": 22,
        "num_ids_4": 44
    },
    {
        "number": 4999,
        "checkpoint": "2B",
        "pass": 9,
        "answer": "assert solution('25 10') == '5'\nassert solution('125 100') == '12'\nassert solution('153 100') == '15'\n\"\"\"\n",
        "num_ids_2": 22,
        "num_ids_4": 33
    }
]